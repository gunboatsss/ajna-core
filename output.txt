‚ö†Ô∏è  There is a new version of Cannon (2.10.7-alpha.0)
Upgrade with npm install -g @usecannon/cli

Building the foundry project...
forge build succeeded

2024-01-08T15:25:40.300Z cannon:cli do build called with toml/10_OPMainnet.toml [] Promise {
  {
    port: '8545',
    rateLimit: true,
    storageCaching: true,
    cors: true,
    mining: true,
    writeScriptFormat: 'ethers',
    chainId: '10',
    providerUrl: 'https://mainnet.optimism.io',
    dryRun: true,
    Vvvv: true,
    registryProviderUrl: undefined,
    publishIpfsUrl: undefined,
    ipfsUrl: undefined
  }
}
2024-01-08T15:25:40.306Z cannon:cli:settings got settings Promise {
  {
    providerUrl: 'https://mainnet.optimism.io',
    ipfsUrl: 'http://localhost:5001',
    publishIpfsUrl: 'http://localhost:5001',
    registryProviderUrl: 'https://rpc.eth.gateway.fm',
    registryChainId: '1',
    registryAddress: '0x8E5C7EFC9636A6A0408A46BB7F617094B81e5dba',
    registryPriority: 'onchain',
    etherscanApiUrl: '',
    quiet: false,
    port: '8545',
    rateLimit: true,
    storageCaching: true,
    cors: true,
    mining: true,
    writeScriptFormat: 'ethers',
    chainId: '10',
    dryRun: true,
    Vvvv: true
  }
}
2024-01-08T15:25:40.307Z cannon:cli:provider resolving provider [ 'https://mainnet.optimism.io' ] 10
2024-01-08T15:25:40.311Z cannon:cli:provider use explicit provider url [ 'https://mainnet.optimism.io' ]
2024-01-08T15:25:40.314Z cannon:cli:provider no signer supplied for provider
2024-01-08T15:25:40.314Z cannon:cli:provider returning 0 signers
2024-01-08T15:25:40.441Z cannon:cli:rpc starting anvil instance with options:  {
  chainId: '10',
  port: 0,
  accounts: 1,
  forkUrl: 'http://127.0.0.1:34877'
}
2024-01-08T15:25:44.114Z cannon:cli:rpc 
[32m
                             _   _
                            (_) | |
      __ _   _ __   __   __  _  | |
     / _` | | '_ \  \ \ / / | | | |
    | (_| | | | | |  \ V /  | | | |
     \__,_| |_| |_|   \_/   |_| |_|
[0m
    0.2.0 (8343e7d 2024-01-07T00:18:12.399489419Z)
    [32mhttps://github.com/foundry-rs/foundry[0m

Available Accounts
==================

(0) "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266" (10000.000000000000000000 ETH)

Private Keys
==================

(0) 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80

Wallet
==================
Mnemonic:          test test test test test test test test test test test junk
Derivation path:   m/44'/60'/0'/0/


Fork
==================
Endpoint:       http://127.0.0.1:34877
Block number:   114564382
Block hash:     0xc2487dcdd0e06828a8b0568846f37d0f1ddd79991b17b68abf7e8664f53e01ff
Chain ID:       10

Base Fee
==================
[32m
4756092[0m

Gas Limit
==================
[32m
30000000[0m

Genesis Timestamp
==================
[32m
1704727544[0m

Listening on 127.0.0.1:34609

2024-01-08T15:25:44.134Z cannon:cli:rpc eth_chainId
eth_chainId
eth_chainId

2024-01-08T15:25:44.153Z cannon:builder:definition begin chain def init
2024-01-08T15:25:44.155Z cannon:builder:definition deps: contract.BorrowerActions provides contracts.BorrowerActions
2024-01-08T15:25:44.156Z cannon:builder:definition deps: contract.KickerActions provides contracts.KickerActions
2024-01-08T15:25:44.156Z cannon:builder:definition deps: contract.LenderActions provides contracts.LenderActions
2024-01-08T15:25:44.156Z cannon:builder:definition deps: contract.LPActions provides contracts.LPActions
2024-01-08T15:25:44.156Z cannon:builder:definition deps: contract.PoolCommons provides contracts.PoolCommons
2024-01-08T15:25:44.156Z cannon:builder:definition deps: contract.PositionNFTSVG provides contracts.PositionNFTSVG
2024-01-08T15:25:44.157Z cannon:builder:definition deps: contract.SettlerActions provides contracts.SettlerActions
2024-01-08T15:25:44.157Z cannon:builder:definition deps: contract.TakerActions provides contracts.TakerActions
2024-01-08T15:25:44.157Z cannon:builder:definition deps: contract.ERC20PoolFactory provides contracts.ERC20PoolFactory
2024-01-08T15:25:44.157Z cannon:builder:definition deps: contract.ERC721PoolFactory provides contracts.ERC721PoolFactory
2024-01-08T15:25:44.157Z cannon:builder:definition deps: contract.PoolInfoUtils provides contracts.PoolInfoUtils
2024-01-08T15:25:44.157Z cannon:builder:definition deps: contract.PoolInfoUtilsMulticall provides contracts.PoolInfoUtilsMulticall
2024-01-08T15:25:44.158Z cannon:builder:definition deps: contract.PositionManager provides contracts.PositionManager
2024-01-08T15:25:44.159Z cannon:builder:definition start check cycles
2024-01-08T15:25:44.167Z cannon:builder:definition deps: contract.BorrowerActions consumes settings.salt
2024-01-08T15:25:44.168Z cannon:builder:definition resolved dependencies for contract.BorrowerActions: 
2024-01-08T15:25:44.180Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes settings.salt
2024-01-08T15:25:44.181Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes settings.bwAJNA_ADDRESS
2024-01-08T15:25:44.181Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.BorrowerActions
2024-01-08T15:25:44.181Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.LenderActions
2024-01-08T15:25:44.181Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.LPActions
2024-01-08T15:25:44.181Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.KickerActions
2024-01-08T15:25:44.181Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.SettlerActions
2024-01-08T15:25:44.181Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.TakerActions
2024-01-08T15:25:44.181Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.PoolCommons
2024-01-08T15:25:44.181Z cannon:builder:definition resolved dependencies for contract.ERC20PoolFactory: contract.BorrowerActions,contract.LenderActions,contract.LPActions,contract.KickerActions,contract.SettlerActions,contract.TakerActions,contract.PoolCommons
2024-01-08T15:25:44.191Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes settings.salt
2024-01-08T15:25:44.192Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes settings.bwAJNA_ADDRESS
2024-01-08T15:25:44.192Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.BorrowerActions
2024-01-08T15:25:44.192Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.LenderActions
2024-01-08T15:25:44.192Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.LPActions
2024-01-08T15:25:44.192Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.KickerActions
2024-01-08T15:25:44.192Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.SettlerActions
2024-01-08T15:25:44.192Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.TakerActions
2024-01-08T15:25:44.192Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.PoolCommons
2024-01-08T15:25:44.192Z cannon:builder:definition resolved dependencies for contract.ERC721PoolFactory: contract.BorrowerActions,contract.LenderActions,contract.LPActions,contract.KickerActions,contract.SettlerActions,contract.TakerActions,contract.PoolCommons
2024-01-08T15:25:44.195Z cannon:builder:definition deps: contract.KickerActions consumes settings.salt
2024-01-08T15:25:44.196Z cannon:builder:definition resolved dependencies for contract.KickerActions: 
2024-01-08T15:25:44.198Z cannon:builder:definition deps: contract.LPActions consumes settings.salt
2024-01-08T15:25:44.198Z cannon:builder:definition resolved dependencies for contract.LPActions: 
2024-01-08T15:25:44.201Z cannon:builder:definition deps: contract.LenderActions consumes settings.salt
2024-01-08T15:25:44.201Z cannon:builder:definition resolved dependencies for contract.LenderActions: 
2024-01-08T15:25:44.203Z cannon:builder:definition deps: contract.PoolCommons consumes settings.salt
2024-01-08T15:25:44.204Z cannon:builder:definition resolved dependencies for contract.PoolCommons: 
2024-01-08T15:25:44.207Z cannon:builder:definition deps: contract.PoolInfoUtils consumes settings.salt
2024-01-08T15:25:44.208Z cannon:builder:definition deps: contract.PoolInfoUtils consumes contracts.PoolCommons
2024-01-08T15:25:44.208Z cannon:builder:definition resolved dependencies for contract.PoolInfoUtils: contract.PoolCommons
2024-01-08T15:25:44.211Z cannon:builder:definition deps: contract.PoolInfoUtilsMulticall consumes settings.salt
2024-01-08T15:25:44.211Z cannon:builder:definition deps: contract.PoolInfoUtilsMulticall consumes contracts.PoolInfoUtils
2024-01-08T15:25:44.212Z cannon:builder:definition resolved dependencies for contract.PoolInfoUtilsMulticall: contract.PoolInfoUtils
2024-01-08T15:25:44.217Z cannon:builder:definition deps: contract.PositionManager consumes settings.salt
2024-01-08T15:25:44.217Z cannon:builder:definition deps: contract.PositionManager consumes contracts.ERC20PoolFactory
2024-01-08T15:25:44.217Z cannon:builder:definition deps: contract.PositionManager consumes contracts.ERC721PoolFactory
2024-01-08T15:25:44.217Z cannon:builder:definition deps: contract.PositionManager consumes contracts.PositionNFTSVG
2024-01-08T15:25:44.217Z cannon:builder:definition resolved dependencies for contract.PositionManager: contract.ERC20PoolFactory,contract.ERC721PoolFactory,contract.PositionNFTSVG
2024-01-08T15:25:44.220Z cannon:builder:definition deps: contract.PositionNFTSVG consumes settings.salt
2024-01-08T15:25:44.220Z cannon:builder:definition resolved dependencies for contract.PositionNFTSVG: 
2024-01-08T15:25:44.222Z cannon:builder:definition deps: contract.SettlerActions consumes settings.salt
2024-01-08T15:25:44.222Z cannon:builder:definition resolved dependencies for contract.SettlerActions: 
2024-01-08T15:25:44.225Z cannon:builder:definition deps: contract.TakerActions consumes settings.salt
2024-01-08T15:25:44.225Z cannon:builder:definition resolved dependencies for contract.TakerActions: 
2024-01-08T15:25:44.225Z cannon:builder:definition no cycles found
2024-01-08T15:25:44.225Z cannon:builder:definition compute dependencies for contract.BorrowerActions
2024-01-08T15:25:44.227Z cannon:builder:definition deps: contract.BorrowerActions consumes settings.salt
2024-01-08T15:25:44.227Z cannon:builder:definition resolved dependencies for contract.BorrowerActions: 
2024-01-08T15:25:44.227Z cannon:builder:definition compute dependencies for contract.ERC20PoolFactory
2024-01-08T15:25:44.237Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes settings.salt
2024-01-08T15:25:44.237Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes settings.bwAJNA_ADDRESS
2024-01-08T15:25:44.237Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.BorrowerActions
2024-01-08T15:25:44.237Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.LenderActions
2024-01-08T15:25:44.237Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.LPActions
2024-01-08T15:25:44.237Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.KickerActions
2024-01-08T15:25:44.237Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.SettlerActions
2024-01-08T15:25:44.237Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.TakerActions
2024-01-08T15:25:44.238Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.PoolCommons
2024-01-08T15:25:44.238Z cannon:builder:definition resolved dependencies for contract.ERC20PoolFactory: contract.BorrowerActions,contract.LenderActions,contract.LPActions,contract.KickerActions,contract.SettlerActions,contract.TakerActions,contract.PoolCommons
2024-01-08T15:25:44.238Z cannon:builder:definition compute dependencies for contract.ERC721PoolFactory
2024-01-08T15:25:44.247Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes settings.salt
2024-01-08T15:25:44.247Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes settings.bwAJNA_ADDRESS
2024-01-08T15:25:44.247Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.BorrowerActions
2024-01-08T15:25:44.247Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.LenderActions
2024-01-08T15:25:44.247Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.LPActions
2024-01-08T15:25:44.247Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.KickerActions
2024-01-08T15:25:44.247Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.SettlerActions
2024-01-08T15:25:44.247Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.TakerActions
2024-01-08T15:25:44.247Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.PoolCommons
2024-01-08T15:25:44.247Z cannon:builder:definition resolved dependencies for contract.ERC721PoolFactory: contract.BorrowerActions,contract.LenderActions,contract.LPActions,contract.KickerActions,contract.SettlerActions,contract.TakerActions,contract.PoolCommons
2024-01-08T15:25:44.247Z cannon:builder:definition compute dependencies for contract.KickerActions
2024-01-08T15:25:44.249Z cannon:builder:definition deps: contract.KickerActions consumes settings.salt
2024-01-08T15:25:44.249Z cannon:builder:definition resolved dependencies for contract.KickerActions: 
2024-01-08T15:25:44.249Z cannon:builder:definition compute dependencies for contract.LPActions
2024-01-08T15:25:44.251Z cannon:builder:definition deps: contract.LPActions consumes settings.salt
2024-01-08T15:25:44.251Z cannon:builder:definition resolved dependencies for contract.LPActions: 
2024-01-08T15:25:44.252Z cannon:builder:definition compute dependencies for contract.LenderActions
2024-01-08T15:25:44.254Z cannon:builder:definition deps: contract.LenderActions consumes settings.salt
2024-01-08T15:25:44.254Z cannon:builder:definition resolved dependencies for contract.LenderActions: 
2024-01-08T15:25:44.254Z cannon:builder:definition compute dependencies for contract.PoolCommons
2024-01-08T15:25:44.256Z cannon:builder:definition deps: contract.PoolCommons consumes settings.salt
2024-01-08T15:25:44.256Z cannon:builder:definition resolved dependencies for contract.PoolCommons: 
2024-01-08T15:25:44.256Z cannon:builder:definition compute dependencies for contract.PoolInfoUtils
2024-01-08T15:25:44.259Z cannon:builder:definition deps: contract.PoolInfoUtils consumes settings.salt
2024-01-08T15:25:44.259Z cannon:builder:definition deps: contract.PoolInfoUtils consumes contracts.PoolCommons
2024-01-08T15:25:44.259Z cannon:builder:definition resolved dependencies for contract.PoolInfoUtils: contract.PoolCommons
2024-01-08T15:25:44.259Z cannon:builder:definition compute dependencies for contract.PoolInfoUtilsMulticall
2024-01-08T15:25:44.262Z cannon:builder:definition deps: contract.PoolInfoUtilsMulticall consumes settings.salt
2024-01-08T15:25:44.262Z cannon:builder:definition deps: contract.PoolInfoUtilsMulticall consumes contracts.PoolInfoUtils
2024-01-08T15:25:44.262Z cannon:builder:definition resolved dependencies for contract.PoolInfoUtilsMulticall: contract.PoolInfoUtils
2024-01-08T15:25:44.262Z cannon:builder:definition compute dependencies for contract.PositionManager
2024-01-08T15:25:44.280Z cannon:builder:definition deps: contract.PositionManager consumes settings.salt
2024-01-08T15:25:44.281Z cannon:builder:definition deps: contract.PositionManager consumes contracts.ERC20PoolFactory
2024-01-08T15:25:44.281Z cannon:builder:definition deps: contract.PositionManager consumes contracts.ERC721PoolFactory
2024-01-08T15:25:44.281Z cannon:builder:definition deps: contract.PositionManager consumes contracts.PositionNFTSVG
2024-01-08T15:25:44.281Z cannon:builder:definition resolved dependencies for contract.PositionManager: contract.ERC20PoolFactory,contract.ERC721PoolFactory,contract.PositionNFTSVG
2024-01-08T15:25:44.281Z cannon:builder:definition compute dependencies for contract.PositionNFTSVG
2024-01-08T15:25:44.285Z cannon:builder:definition deps: contract.PositionNFTSVG consumes settings.salt
2024-01-08T15:25:44.285Z cannon:builder:definition resolved dependencies for contract.PositionNFTSVG: 
2024-01-08T15:25:44.286Z cannon:builder:definition compute dependencies for contract.SettlerActions
2024-01-08T15:25:44.289Z cannon:builder:definition deps: contract.SettlerActions consumes settings.salt
2024-01-08T15:25:44.290Z cannon:builder:definition resolved dependencies for contract.SettlerActions: 
2024-01-08T15:25:44.290Z cannon:builder:definition compute dependencies for contract.TakerActions
2024-01-08T15:25:44.293Z cannon:builder:definition deps: contract.TakerActions consumes settings.salt
2024-01-08T15:25:44.293Z cannon:builder:definition resolved dependencies for contract.TakerActions: 
2024-01-08T15:25:44.293Z cannon:builder:definition finished resolving dependencies
2024-01-08T15:25:44.294Z cannon:builder:definition computed roots: contract.BorrowerActions, contract.KickerActions, contract.LPActions, contract.LenderActions, contract.PoolCommons, contract.PositionNFTSVG, contract.SettlerActions, contract.TakerActions
2024-01-08T15:25:44.297Z cannon:builder:definition start check all
2024-01-08T15:25:44.325Z cannon:builder:definition deps: contract.BorrowerActions consumes settings.salt
2024-01-08T15:25:44.325Z cannon:builder:definition resolved dependencies for contract.BorrowerActions: 
2024-01-08T15:25:44.338Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes settings.salt
2024-01-08T15:25:44.339Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes settings.bwAJNA_ADDRESS
2024-01-08T15:25:44.339Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.BorrowerActions
2024-01-08T15:25:44.339Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.LenderActions
2024-01-08T15:25:44.339Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.LPActions
2024-01-08T15:25:44.339Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.KickerActions
2024-01-08T15:25:44.339Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.SettlerActions
2024-01-08T15:25:44.339Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.TakerActions
2024-01-08T15:25:44.340Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.PoolCommons
2024-01-08T15:25:44.340Z cannon:builder:definition resolved dependencies for contract.ERC20PoolFactory: contract.BorrowerActions,contract.LenderActions,contract.LPActions,contract.KickerActions,contract.SettlerActions,contract.TakerActions,contract.PoolCommons
2024-01-08T15:25:44.354Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes settings.salt
2024-01-08T15:25:44.354Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes settings.bwAJNA_ADDRESS
2024-01-08T15:25:44.354Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.BorrowerActions
2024-01-08T15:25:44.355Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.LenderActions
2024-01-08T15:25:44.355Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.LPActions
2024-01-08T15:25:44.355Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.KickerActions
2024-01-08T15:25:44.355Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.SettlerActions
2024-01-08T15:25:44.355Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.TakerActions
2024-01-08T15:25:44.355Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.PoolCommons
2024-01-08T15:25:44.355Z cannon:builder:definition resolved dependencies for contract.ERC721PoolFactory: contract.BorrowerActions,contract.LenderActions,contract.LPActions,contract.KickerActions,contract.SettlerActions,contract.TakerActions,contract.PoolCommons
2024-01-08T15:25:44.365Z cannon:builder:definition deps: contract.KickerActions consumes settings.salt
2024-01-08T15:25:44.365Z cannon:builder:definition resolved dependencies for contract.KickerActions: 
2024-01-08T15:25:44.370Z cannon:builder:definition deps: contract.LPActions consumes settings.salt
2024-01-08T15:25:44.370Z cannon:builder:definition resolved dependencies for contract.LPActions: 
2024-01-08T15:25:44.375Z cannon:builder:definition deps: contract.LenderActions consumes settings.salt
2024-01-08T15:25:44.375Z cannon:builder:definition resolved dependencies for contract.LenderActions: 
2024-01-08T15:25:44.379Z cannon:builder:definition deps: contract.PoolCommons consumes settings.salt
2024-01-08T15:25:44.379Z cannon:builder:definition resolved dependencies for contract.PoolCommons: 
2024-01-08T15:25:44.382Z cannon:builder:definition deps: contract.PoolInfoUtils consumes settings.salt
2024-01-08T15:25:44.383Z cannon:builder:definition deps: contract.PoolInfoUtils consumes contracts.PoolCommons
2024-01-08T15:25:44.383Z cannon:builder:definition resolved dependencies for contract.PoolInfoUtils: contract.PoolCommons
2024-01-08T15:25:44.386Z cannon:builder:definition deps: contract.PoolInfoUtilsMulticall consumes settings.salt
2024-01-08T15:25:44.386Z cannon:builder:definition deps: contract.PoolInfoUtilsMulticall consumes contracts.PoolInfoUtils
2024-01-08T15:25:44.386Z cannon:builder:definition resolved dependencies for contract.PoolInfoUtilsMulticall: contract.PoolInfoUtils
2024-01-08T15:25:44.393Z cannon:builder:definition deps: contract.PositionManager consumes settings.salt
2024-01-08T15:25:44.394Z cannon:builder:definition deps: contract.PositionManager consumes contracts.ERC20PoolFactory
2024-01-08T15:25:44.394Z cannon:builder:definition deps: contract.PositionManager consumes contracts.ERC721PoolFactory
2024-01-08T15:25:44.394Z cannon:builder:definition deps: contract.PositionManager consumes contracts.PositionNFTSVG
2024-01-08T15:25:44.394Z cannon:builder:definition resolved dependencies for contract.PositionManager: contract.ERC20PoolFactory,contract.ERC721PoolFactory,contract.PositionNFTSVG
2024-01-08T15:25:44.398Z cannon:builder:definition deps: contract.PositionNFTSVG consumes settings.salt
2024-01-08T15:25:44.399Z cannon:builder:definition resolved dependencies for contract.PositionNFTSVG: 
2024-01-08T15:25:44.403Z cannon:builder:definition deps: contract.SettlerActions consumes settings.salt
2024-01-08T15:25:44.403Z cannon:builder:definition resolved dependencies for contract.SettlerActions: 
2024-01-08T15:25:44.407Z cannon:builder:definition deps: contract.TakerActions consumes settings.salt
2024-01-08T15:25:44.407Z cannon:builder:definition resolved dependencies for contract.TakerActions: 
2024-01-08T15:25:44.407Z cannon:builder:definition end check all
2024-01-08T15:25:44.411Z cannon:builder:definition found extraneous deps []
2024-01-08T15:25:44.412Z cannon:builder:definition final depends dump
2024-01-08T15:25:44.413Z cannon:builder:definition contract.BorrowerActions has depends []
2024-01-08T15:25:44.413Z cannon:builder:definition contract.KickerActions has depends []
2024-01-08T15:25:44.413Z cannon:builder:definition contract.LPActions has depends []
2024-01-08T15:25:44.413Z cannon:builder:definition contract.LenderActions has depends []
2024-01-08T15:25:44.413Z cannon:builder:definition contract.PoolCommons has depends []
2024-01-08T15:25:44.414Z cannon:builder:definition contract.PositionNFTSVG has depends []
2024-01-08T15:25:44.414Z cannon:builder:definition contract.SettlerActions has depends []
2024-01-08T15:25:44.414Z cannon:builder:definition contract.TakerActions has depends []
2024-01-08T15:25:44.414Z cannon:builder:definition contract.ERC20PoolFactory has depends [
  'contract.BorrowerActions',
  'contract.LenderActions',
  'contract.LPActions',
  'contract.KickerActions',
  'contract.SettlerActions',
  'contract.TakerActions',
  'contract.PoolCommons'
]
2024-01-08T15:25:44.416Z cannon:builder:definition contract.ERC721PoolFactory has depends [
  'contract.BorrowerActions',
  'contract.LenderActions',
  'contract.LPActions',
  'contract.KickerActions',
  'contract.SettlerActions',
  'contract.TakerActions',
  'contract.PoolCommons'
]
2024-01-08T15:25:44.417Z cannon:builder:definition contract.PoolInfoUtils has depends [ 'contract.PoolCommons' ]
2024-01-08T15:25:44.417Z cannon:builder:definition contract.PoolInfoUtilsMulticall has depends [ 'contract.PoolInfoUtils' ]
2024-01-08T15:25:44.417Z cannon:builder:definition contract.PositionManager has depends [
  'contract.ERC20PoolFactory',
  'contract.ERC721PoolFactory',
  'contract.PositionNFTSVG'
]
2024-01-08T15:25:44.417Z cannon:builder:definition finished chain def init
2024-01-08T15:25:44.424Z cannon:cli:provider resolving provider [ 'https://rpc.eth.gateway.fm' ] 1
2024-01-08T15:25:44.425Z cannon:cli:provider use explicit provider url [ 'https://rpc.eth.gateway.fm' ]
2024-01-08T15:25:44.426Z cannon:cli:provider no signer supplied for provider
2024-01-08T15:25:44.426Z cannon:cli:provider returning 0 signers
2024-01-08T15:25:44.447Z cannon:builder:registry created registry on address "0x8E5C7EFC9636A6A0408A46BB7F617094B81e5dba"
2024-01-08T15:25:44.479Z cannon:cli:registry on-chain registry is the priority, using on-chain registry first
‚ö†Ô∏è  This is a simulation. No changes will be made to the chain. No package data will be saved.

2024-01-08T15:25:44.486Z cannon:cli:settings got settings Promise {
  {
    providerUrl: 'frame,direct',
    ipfsUrl: 'http://localhost:5001',
    publishIpfsUrl: 'http://localhost:5001',
    registryProviderUrl: 'https://rpc.eth.gateway.fm',
    registryChainId: '1',
    registryAddress: '0x8E5C7EFC9636A6A0408A46BB7F617094B81e5dba',
    registryPriority: 'onchain',
    etherscanApiUrl: '',
    quiet: false
  }
}
2024-01-08T15:25:44.492Z cannon:cli:rpc eth_chainId

2024-01-08T15:25:44.555Z cannon:cli:constants timezone for repo resolve is Asia/Bangkok
2024-01-08T15:25:44.556Z cannon:cli:constants cannon repo region is  sg
Checking for existing package...
  Resolving ajna-finance:0.10.0@main (Chain ID: 10) via memory, 0x8E5C7EFC9636A6A0408A46BB7F617094B81e5dba, local...
2024-01-08T15:25:44.560Z cannon:builder:registry resolving ajna-finance:0.10.0@main 10
2024-01-08T15:25:44.560Z cannon:builder:registry trying registry memory
2024-01-08T15:25:44.561Z cannon:builder:registry trying registry memory
2024-01-08T15:25:44.562Z cannon:builder:registry trying registry 0x8E5C7EFC9636A6A0408A46BB7F617094B81e5dba
2024-01-08T15:25:45.613Z cannon:builder:registry trying registry local
2024-01-08T15:25:45.613Z cannon:cli:registry load local package link ajna-finance:0.10.0@main at file /.local/share/cannon/tags/ajna-finance_0.10.0_10-main.txt
2024-01-08T15:25:45.614Z cannon:cli:registry could not load: [Error: ENOENT: no such file or directory, open '/home/gunboats/.local/share/cannon/tags/ajna-finance_0.10.0_10-main.txt'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/home/gunboats/.local/share/cannon/tags/ajna-finance_0.10.0_10-main.txt'
}
ajna-finance:0.10.0@main (Chain ID: 10) not found

Initializing new package...
Name: ajna-finance
Version: 0.10.0
Preset: 
Chain ID: 10
Source code will be included in the package

Building the chain (ID 10) via https://mainnet.optimism.io...
2024-01-08T15:25:45.621Z cannon:cli:rpc anvil_impersonateAccount

2024-01-08T15:25:45.624Z cannon:cli:rpc anvil_setBalance

Using 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266

2024-01-08T15:25:45.628Z cannon:builder preflight
2024-01-08T15:25:45.633Z cannon:builder:definition deps: contract.BorrowerActions consumes settings.salt
2024-01-08T15:25:45.633Z cannon:builder:definition resolved dependencies for contract.BorrowerActions: 
2024-01-08T15:25:45.644Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes settings.salt
2024-01-08T15:25:45.644Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes settings.bwAJNA_ADDRESS
2024-01-08T15:25:45.644Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.BorrowerActions
2024-01-08T15:25:45.644Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.LenderActions
2024-01-08T15:25:45.644Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.LPActions
2024-01-08T15:25:45.644Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.KickerActions
2024-01-08T15:25:45.644Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.SettlerActions
2024-01-08T15:25:45.644Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.TakerActions
2024-01-08T15:25:45.644Z cannon:builder:definition deps: contract.ERC20PoolFactory consumes contracts.PoolCommons
2024-01-08T15:25:45.644Z cannon:builder:definition resolved dependencies for contract.ERC20PoolFactory: contract.BorrowerActions,contract.LenderActions,contract.LPActions,contract.KickerActions,contract.SettlerActions,contract.TakerActions,contract.PoolCommons
2024-01-08T15:25:45.650Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes settings.salt
2024-01-08T15:25:45.650Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes settings.bwAJNA_ADDRESS
2024-01-08T15:25:45.650Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.BorrowerActions
2024-01-08T15:25:45.650Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.LenderActions
2024-01-08T15:25:45.650Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.LPActions
2024-01-08T15:25:45.650Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.KickerActions
2024-01-08T15:25:45.650Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.SettlerActions
2024-01-08T15:25:45.650Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.TakerActions
2024-01-08T15:25:45.650Z cannon:builder:definition deps: contract.ERC721PoolFactory consumes contracts.PoolCommons
2024-01-08T15:25:45.650Z cannon:builder:definition resolved dependencies for contract.ERC721PoolFactory: contract.BorrowerActions,contract.LenderActions,contract.LPActions,contract.KickerActions,contract.SettlerActions,contract.TakerActions,contract.PoolCommons
2024-01-08T15:25:45.652Z cannon:builder:definition deps: contract.KickerActions consumes settings.salt
2024-01-08T15:25:45.652Z cannon:builder:definition resolved dependencies for contract.KickerActions: 
2024-01-08T15:25:45.653Z cannon:builder:definition deps: contract.LPActions consumes settings.salt
2024-01-08T15:25:45.653Z cannon:builder:definition resolved dependencies for contract.LPActions: 
2024-01-08T15:25:45.655Z cannon:builder:definition deps: contract.LenderActions consumes settings.salt
2024-01-08T15:25:45.655Z cannon:builder:definition resolved dependencies for contract.LenderActions: 
2024-01-08T15:25:45.656Z cannon:builder:definition deps: contract.PoolCommons consumes settings.salt
2024-01-08T15:25:45.656Z cannon:builder:definition resolved dependencies for contract.PoolCommons: 
2024-01-08T15:25:45.658Z cannon:builder:definition deps: contract.PoolInfoUtils consumes settings.salt
2024-01-08T15:25:45.658Z cannon:builder:definition deps: contract.PoolInfoUtils consumes contracts.PoolCommons
2024-01-08T15:25:45.658Z cannon:builder:definition resolved dependencies for contract.PoolInfoUtils: contract.PoolCommons
2024-01-08T15:25:45.660Z cannon:builder:definition deps: contract.PoolInfoUtilsMulticall consumes settings.salt
2024-01-08T15:25:45.660Z cannon:builder:definition deps: contract.PoolInfoUtilsMulticall consumes contracts.PoolInfoUtils
2024-01-08T15:25:45.660Z cannon:builder:definition resolved dependencies for contract.PoolInfoUtilsMulticall: contract.PoolInfoUtils
2024-01-08T15:25:45.663Z cannon:builder:definition deps: contract.PositionManager consumes settings.salt
2024-01-08T15:25:45.664Z cannon:builder:definition deps: contract.PositionManager consumes contracts.ERC20PoolFactory
2024-01-08T15:25:45.664Z cannon:builder:definition deps: contract.PositionManager consumes contracts.ERC721PoolFactory
2024-01-08T15:25:45.664Z cannon:builder:definition deps: contract.PositionManager consumes contracts.PositionNFTSVG
2024-01-08T15:25:45.664Z cannon:builder:definition resolved dependencies for contract.PositionManager: contract.ERC20PoolFactory,contract.ERC721PoolFactory,contract.PositionNFTSVG
2024-01-08T15:25:45.665Z cannon:builder:definition deps: contract.PositionNFTSVG consumes settings.salt
2024-01-08T15:25:45.665Z cannon:builder:definition resolved dependencies for contract.PositionNFTSVG: 
2024-01-08T15:25:45.669Z cannon:builder:definition deps: contract.SettlerActions consumes settings.salt
2024-01-08T15:25:45.669Z cannon:builder:definition resolved dependencies for contract.SettlerActions: 
2024-01-08T15:25:45.671Z cannon:builder:definition deps: contract.TakerActions consumes settings.salt
2024-01-08T15:25:45.671Z cannon:builder:definition resolved dependencies for contract.TakerActions: 
2024-01-08T15:25:45.673Z cannon:builder:definition start compute state layers [
  'contract.BorrowerActions',
  'contract.KickerActions',
  'contract.LPActions',
  'contract.LenderActions',
  'contract.PoolCommons',
  'contract.PositionNFTSVG',
  'contract.SettlerActions',
  'contract.TakerActions',
  'contract.ERC20PoolFactory',
  'contract.ERC721PoolFactory',
  'contract.PoolInfoUtils',
  'contract.PoolInfoUtilsMulticall',
  'contract.PositionManager'
]
2024-01-08T15:25:45.673Z cannon:builder:definition layer up contract.BorrowerActions
2024-01-08T15:25:45.673Z cannon:builder:definition layer dependencies before []
2024-01-08T15:25:45.673Z cannon:builder:definition layer dependencies after []
2024-01-08T15:25:45.673Z cannon:builder:definition layer up contract.KickerActions
2024-01-08T15:25:45.673Z cannon:builder:definition layer dependencies before []
2024-01-08T15:25:45.673Z cannon:builder:definition layer dependencies after []
2024-01-08T15:25:45.674Z cannon:builder:definition layer up contract.LPActions
2024-01-08T15:25:45.674Z cannon:builder:definition layer dependencies before []
2024-01-08T15:25:45.674Z cannon:builder:definition layer dependencies after []
2024-01-08T15:25:45.674Z cannon:builder:definition layer up contract.LenderActions
2024-01-08T15:25:45.674Z cannon:builder:definition layer dependencies before []
2024-01-08T15:25:45.674Z cannon:builder:definition layer dependencies after []
2024-01-08T15:25:45.674Z cannon:builder:definition layer up contract.PoolCommons
2024-01-08T15:25:45.674Z cannon:builder:definition layer dependencies before []
2024-01-08T15:25:45.674Z cannon:builder:definition layer dependencies after []
2024-01-08T15:25:45.674Z cannon:builder:definition layer up contract.PositionNFTSVG
2024-01-08T15:25:45.674Z cannon:builder:definition layer dependencies before []
2024-01-08T15:25:45.674Z cannon:builder:definition layer dependencies after []
2024-01-08T15:25:45.674Z cannon:builder:definition layer up contract.SettlerActions
2024-01-08T15:25:45.674Z cannon:builder:definition layer dependencies before []
2024-01-08T15:25:45.674Z cannon:builder:definition layer dependencies after []
2024-01-08T15:25:45.674Z cannon:builder:definition layer up contract.TakerActions
2024-01-08T15:25:45.674Z cannon:builder:definition layer dependencies before []
2024-01-08T15:25:45.675Z cannon:builder:definition layer dependencies after []
2024-01-08T15:25:45.675Z cannon:builder:definition layer up contract.ERC20PoolFactory
2024-01-08T15:25:45.675Z cannon:builder:definition layer dependencies before [
  'contract.BorrowerActions',
  'contract.LenderActions',
  'contract.LPActions',
  'contract.KickerActions',
  'contract.SettlerActions',
  'contract.TakerActions',
  'contract.PoolCommons'
]
2024-01-08T15:25:45.675Z cannon:builder:definition layer dependencies after [
  'contract.BorrowerActions',
  'contract.LenderActions',
  'contract.LPActions',
  'contract.KickerActions',
  'contract.SettlerActions',
  'contract.TakerActions',
  'contract.PoolCommons'
]
2024-01-08T15:25:45.676Z cannon:builder:definition extend the layer contract.ERC20PoolFactory with dep contract.BorrowerActions
2024-01-08T15:25:45.676Z cannon:builder:definition extend the layer contract.ERC20PoolFactory with dep contract.LenderActions
2024-01-08T15:25:45.676Z cannon:builder:definition extend the layer contract.ERC20PoolFactory with dep contract.LPActions
2024-01-08T15:25:45.676Z cannon:builder:definition extend the layer contract.ERC20PoolFactory with dep contract.KickerActions
2024-01-08T15:25:45.676Z cannon:builder:definition extend the layer contract.ERC20PoolFactory with dep contract.SettlerActions
2024-01-08T15:25:45.676Z cannon:builder:definition extend the layer contract.ERC20PoolFactory with dep contract.TakerActions
2024-01-08T15:25:45.676Z cannon:builder:definition extend the layer contract.ERC20PoolFactory with dep contract.PoolCommons
2024-01-08T15:25:45.676Z cannon:builder:definition layer up contract.ERC721PoolFactory
2024-01-08T15:25:45.676Z cannon:builder:definition layer dependencies before [
  'contract.BorrowerActions',
  'contract.LenderActions',
  'contract.LPActions',
  'contract.KickerActions',
  'contract.SettlerActions',
  'contract.TakerActions',
  'contract.PoolCommons'
]
2024-01-08T15:25:45.676Z cannon:builder:definition layer dependencies after [
  'contract.BorrowerActions',
  'contract.LenderActions',
  'contract.LPActions',
  'contract.KickerActions',
  'contract.SettlerActions',
  'contract.TakerActions',
  'contract.PoolCommons'
]
2024-01-08T15:25:45.676Z cannon:builder:definition merge from contract.ERC721PoolFactory into layer contract.ERC20PoolFactory
2024-01-08T15:25:45.677Z cannon:builder:definition layer up contract.PoolInfoUtils
2024-01-08T15:25:45.677Z cannon:builder:definition layer dependencies before [ 'contract.PoolCommons' ]
2024-01-08T15:25:45.677Z cannon:builder:definition layer dependencies after [ 'contract.PoolCommons' ]
2024-01-08T15:25:45.677Z cannon:builder:definition merge from contract.PoolInfoUtils into layer contract.ERC20PoolFactory
2024-01-08T15:25:45.677Z cannon:builder:definition layer up contract.PoolInfoUtilsMulticall
2024-01-08T15:25:45.677Z cannon:builder:definition layer dependencies before [ 'contract.PoolInfoUtils' ]
2024-01-08T15:25:45.677Z cannon:builder:definition layer dependencies after [ 'contract.PoolInfoUtils' ]
2024-01-08T15:25:45.677Z cannon:builder:definition extend the layer contract.PoolInfoUtilsMulticall with dep contract.ERC20PoolFactory
2024-01-08T15:25:45.677Z cannon:builder:definition layer up contract.PositionManager
2024-01-08T15:25:45.677Z cannon:builder:definition layer dependencies before [
  'contract.ERC20PoolFactory',
  'contract.ERC721PoolFactory',
  'contract.PositionNFTSVG'
]
2024-01-08T15:25:45.677Z cannon:builder:definition layer dependencies after [
  'contract.ERC20PoolFactory',
  'contract.ERC721PoolFactory',
  'contract.PositionNFTSVG'
]
2024-01-08T15:25:45.677Z cannon:builder:definition merge from contract.PositionManager into layer contract.PoolInfoUtilsMulticall
2024-01-08T15:25:45.677Z cannon:builder:definition extend the layer contract.PoolInfoUtilsMulticall with dep contract.PositionNFTSVG
2024-01-08T15:25:45.678Z cannon:builder:definition end compute state layer [
  'contract.BorrowerActions',
  'contract.KickerActions',
  'contract.LPActions',
  'contract.LenderActions',
  'contract.PoolCommons',
  'contract.PositionNFTSVG',
  'contract.SettlerActions',
  'contract.TakerActions',
  'contract.ERC20PoolFactory',
  'contract.ERC721PoolFactory',
  'contract.PoolInfoUtils',
  'contract.PoolInfoUtilsMulticall',
  'contract.PositionManager'
]
2024-01-08T15:25:45.678Z cannon:builder:definition begin print topology [ 'contract.PoolInfoUtilsMulticall' ]
2024-01-08T15:25:45.679Z cannon:builder:definition end print topology [ 'contract.PoolInfoUtilsMulticall' ]
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ contract.PoolInfoUtilsMulticall ‚îÇ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÇ contract.ERC20PoolFactory  ‚îÇ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÇ contract.BorrowerActions ‚îÇ
‚îÇ contract.PositionManager        ‚îÇ  ‚îÇ  ‚îÇ contract.ERC721PoolFactory ‚îÇ  ‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îÇ  ‚îÇ contract.PoolInfoUtils     ‚îÇ  ‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                                     ‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îú‚îÄ‚îÄ‚îÇ contract.KickerActions ‚îÇ
                                     ‚îÇ                                  ‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                                     ‚îÇ                                  ‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                                     ‚îÇ                                  ‚îú‚îÄ‚îÄ‚îÇ contract.LPActions ‚îÇ
                                     ‚îÇ                                  ‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                                     ‚îÇ                                  ‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                                     ‚îÇ                                  ‚îú‚îÄ‚îÄ‚îÇ contract.LenderActions ‚îÇ
                                     ‚îÇ                                  ‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                                     ‚îÇ                                  ‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                                     ‚îÇ                                  ‚îú‚îÄ‚îÄ‚îÇ contract.PoolCommons ‚îÇ
                                     ‚îÇ                                  ‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                                     ‚îÇ                                  ‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                                     ‚îÇ                                  ‚îú‚îÄ‚îÄ‚îÇ contract.SettlerActions ‚îÇ
                                     ‚îÇ                                  ‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                                     ‚îÇ                                  ‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                                     ‚îÇ                                  ‚îî‚îÄ‚îÄ‚îÇ contract.TakerActions ‚îÇ
                                     ‚îÇ                                     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                                     ‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                                     ‚îî‚îÄ‚îÄ‚îÇ contract.PositionNFTSVG ‚îÇ
                                        ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
2024-01-08T15:25:45.680Z cannon:builder build {
  bwAJNA_ADDRESS: '0x6c518f9D1a163379235816c543E62922a79863Fa',
  salt: 'AJNA'
}
2024-01-08T15:25:45.689Z cannon:cli:rpc eth_chainId

2024-01-08T15:25:45.691Z cannon:builder building individual
2024-01-08T15:25:45.696Z cannon:builder:runtime resolve artifact BorrowerActions
2024-01-08T15:25:45.696Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:25:56.425Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/BorrowerActions.sol': 'BorrowerActions' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/BorrowerActions.sol': {
      keccak256: '0xecf8ce41a4034aa174c72bab7e558d788c1cc052ee77b2151f4acee4691be839',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/SettlerActions.sol': {
      keccak256: '0x05edfe3f72323b7212fbb5134f76211f397138c2ed30ddf0f3683772213c831d',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/RevertsHelper.sol': {
      keccak256: '0xcaff095290172f1b5726d4e887ab9be5f524d9321e94ca0095f99b666381a6f4',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:25:56.428Z cannon:cli:foundry evm version paris
2024-01-08T15:25:56.446Z cannon:builder:runtime reported contract artifact BorrowerActions {
  contractName: 'BorrowerActions',
  sourceName: 'src/libraries/external/BorrowerActions.sol',
  abi: [
    {
      type: 'event',
      name: 'LoanStamped',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'AmountLTMinDebt', inputs: [] },
    { type: 'error', name: 'AuctionActive', inputs: [] },
    { type: 'error', name: 'BorrowerNotSender', inputs: [] },
    { type: 'error', name: 'BorrowerUnderCollateralized', inputs: [] },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'DustAmountNotExceeded', inputs: [] },
    { type: 'error', name: 'InsufficientCollateral', inputs: [] },
    { type: 'error', name: 'InsufficientLiquidity', inputs: [] },
    { type: 'error', name: 'InvalidAmount', inputs: [] },
    { type: 'error', name: 'LimitIndexExceeded', inputs: [] },
    { type: 'error', name: 'LimitIndexExceeded', inputs: [] },
    { type: 'error', name: 'NoDebt', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__SqrtNegativeInput',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__SqrtOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'ZeroDebtToCollateral', inputs: [] }
  ],
  bytecode: '0x6124fa61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80634700688d1461005057806382c9345114610083578063ea067a571461011c575b600080fd5b81801561005c57600080fd5b5061007061006b366004612266565b6101a9565b6040519081526020015b60405180910390f35b81801561008f57600080fd5b506100a361009e3660046122be565b6102b1565b60405161007a9190600061014082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151818401525092915050565b81801561012857600080fd5b5061013c61013736600461232e565b610666565b60405161007a9190600061012082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525092915050565b60006101b585336109c9565b156101d3576040516359bfb80360e11b815260040160405180910390fd5b3360009081526002808501602090815260409283902083516060808201865282548252600183015493820193909352920154928201929092529061021b9086908501356109f9565b915061024c61023282600001518560a00135610a14565b602080840151908590610247908801886123aa565b610a48565b610269576040516374de9aa760e11b815260040160405180910390fd5b61027d8482338660e0013560006001610abf565b60405133907f8d6660b4a409414ebe386e9dd200a5c4e75591f0fc98e1272d7ba207d06d4c3490600090a250949350505050565b610307604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040805160a0810182526000808252606082018190526080820152851580159282018390528515156020830152909161034257508060200151155b156103605760405163162908e360e11b815260040160405180910390fd5b61036a8a876109c9565b15610388576040516359bfb80360e11b815260040160405180910390fd5b6001600160a01b03861660009081526002808a0160209081526040928390208351606081018552815480825260018301549382019390935292015492820192909252906103d99060a08a0135610a14565b8252805160c084015260208082018051610100860152898201356080808701919091526060808c0135604080890191909152918c01359387019390935290519185019190915282015115610547578051600003610449576040516308d1fde360e11b815260040160405180910390fd5b600019860361045e578051608083015261047d565b8051610477906104728860a08c0135610bdc565b610bf1565b60808301525b61048f82608001518960a00135610c08565b60a084018190526000036104b65760405163162908e360e11b815260040160405180910390fd5b8160800151836080018181516104cc91906123e3565b90525060808301516104e29060a08a0135610a14565b604084015260808201518151610505916104fb916123e3565b8960a00135610a14565b808352604084015161051f918b91906101008c0135610c34565b61052d8a84604001516109f9565b83526080820151815182906105439083906123e3565b9052505b816020015115610625576001600160a01b038716331461057a5760405163cad4de1160e01b815260040160405180910390fd5b8160400151610594576105918a84604001516109f9565b83525b80602001518511156105b957604051633a23d82560e01b815260040160405180910390fd5b84816020018181516105cb91906123e3565b905250815160208083015185516105e99392610247908d018d6123aa565b61060657604051633a23d82560e01b815260040160405180910390fd5b600160608301526020830180518691906106219083906123e3565b9052505b82516106319085610ca2565b6106488982898b60e0013560008760600151610abf565b805160e0840152602001516101208301525098975050505050505050565b6106b56040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b858411156106d65760405163bb55fd2760e01b815260040160405180910390fd5b6106e08a866109c9565b156106fe576040516359bfb80360e11b815260040160405180910390fd5b6040805160c0810182526000602082018190529181018290526060810182905260a08101919091528215801560808301819052861515835261073f57508051155b1561075d5760405163162908e360e11b815260040160405180910390fd5b6001600160a01b03861660009081526002808b0160209081526040928390208351606081018552815480825260018301549382019390935292015492820192909252906107ae9060a08b0135610a14565b602080840191909152815160a0850152818101805160e08601528a8201356080808701919091526060808d01356040880152818d0135938701939093529051918501919091528201511561085257838160200181815161080e91906123f6565b9052506060830180518591906108259083906123f6565b9052506040830151610838908c906109f9565b835260208301805185919061084e9083906123f6565b9052505b815115610993576001600160a01b03871633146108825760405163cad4de1160e01b815260040160405180910390fd5b610890868a60a00135610ccf565b604083018190526108c090670de0b6b3a76400006108b160e08d0135610ce7565b6108bb91906123f6565b610a14565b60608301819052815182906108d69083906123f6565b90525080516108e99060a08b0135610a14565b602083018190526040840151610907918c91906101008d0135610c34565b81606001518360800181815161091d91906123f6565b90525060808301516109339060a08b0135610a14565b60408401819052610945908c906109f9565b8084526109529086610ca2565b60208083015182820151855161096e93610247908e018e6123aa565b61098b576040516374de9aa760e11b815260040160405180910390fd5b600160a08301525b6109aa8a82898c60e0013560008760a00151610abf565b805160c084015260200151610100830152509998505050505050505050565b6001600160a01b03811660009081526003830160205260409020600101546001600160601b031615155b92915050565b6000610a0d610a088484610d0c565b610d22565b9392505050565b6000670de0b6b3a7640000610a2a60028261241f565b610a348486612441565b610a3e91906123f6565b610a0d919061241f565b600064173eb4c80a83148015610a5d57508415155b15610a6a57506000610ab7565b60001960ff831601610a9657670de0b6b3a7640000610a89818661241f565b610a939190612441565b93505b610aa8670e6ed27d6668000086610a14565b610ab28585610a14565b101590505b949350505050565b845160009015801590610ad55750602086015115155b9050600081610ae5576000610af7565b610af787600001518860200151610d8d565b905083610b6c576001600160a01b03861660009081526001890160205260409020548215610b595781600003610b4057604051639f7e164b60e01b815260040160405180910390fd5b610b54898883610b4f86610dad565b610e1e565b610b6a565b8015610b6a57610b6a898883610ef3565b505b8215610b9f576002610b7d86611037565b610b87919061241f565b610b9990670de0b6b3a76400006123f6565b60408801525b505050506001600160a01b039190911660009081526002938401602090815260409182902084518155908401516001820155920151919092015550565b600081610a3e670de0b6b3a764000085612441565b600081831115610c015781610a0d565b5090919050565b6000670de0b6b3a7640000600181610c208587612441565b610c2a91906123f6565b610a3e91906123e3565b8115610c9c5780821015610c5b576040516345b3f65d60e01b815260040160405180910390fd5b6000610c66856110ad565b9050600a8110610c9a57610c7a84826110be565b831015610c9a57604051635b85919f60e11b815260040160405180910390fd5b505b50505050565b610cab81610d22565b821015610ccb57604051638be4f6eb60e01b815260040160405180910390fd5b5050565b600081600181610c20670de0b6b3a764000087612441565b60006109f3610cff836802d1a51c7e00500000610d8d565b6601c6bf526340006110e9565b6000610d1883836110f9565b5090949350505050565b600080610d318361103c612458565b9050610c9f19811280610d45575061103c81135b15610d6357604051637edf443b60e11b815260040160405180910390fd5b610a0d610d88610d72836111e9565b610d83670df27a2cdf448000611274565b611358565b61141d565b600081610d9b60028261241f565b610a34670de0b6b3a764000086612441565b60006001600160601b03821115610e1a5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b60648201526084015b60405180910390fd5b5090565b8115610ec1576000846000018381548110610e3b57610e3b61247f565b6000918252602091829020604080518082019091529101546001600160a01b03811682526001600160601b03600160a01b909104811692820183905290925083161015610ea1576001600160601b0382166020820152610e9c8582856114b9565b610ebb565b6001600160601b0382166020820152610ebb858285611644565b50610c9c565b604080518082019091526001600160a01b03841681526001600160601b03821660208201528454610c9c918691611644565b6001600160a01b03821660009081526001808501602052604082208290558454610f1d91906123e3565b9050808203610f54578354849080610f3757610f37612495565b600082815260208120820160001990810191909155019055610c9c565b6000846000018281548110610f6b57610f6b61247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091528554909150859080610fba57610fba612495565b600082815260208120820160001990810191909155019055610fdd858285611644565b610c9a85866000018581548110610ff657610ff661247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152856114b9565b60008082121561105d5760405163608c83ff60e11b815260048101839052602401610e11565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f9082131561109a57604051632c482c3960e01b815260048101839052602401610e11565b6109f3670de0b6b3a76400008302611721565b80546000906109f3906001906123e3565b600081156109f357610a0d6110db846110d68561188f565b610d8d565b678ac7230489e80000610d8d565b600081831015610c015781610a0d565b60008080611000670de0b6b3a764000082808080805b86156111db5761111f878b6123f6565b93508b8461200181106111345761113461247f565b015492508b6120010184612001811061114f5761114f61247f565b015491508160000361116a576111658684610a14565b61118c565b61118c6111778388612441565b846a0c097ce7bc90715b34b9f160241b6118a3565b61119690866123f6565b90508a8110156111b557611cdc84116111b0578399508094505b6111cf565b81156111c8576111c58683611951565b95505b8098508597505b600187901c965061110f565b505050505050509250925092565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156112295760405163e608e18b60e01b815260048101839052602401610e11565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315611266576040516371f72a3160e01b815260048101839052602401610e11565b50670de0b6b3a76400000290565b60008082136112995760405163309fa7dd60e11b815260048101839052602401610e11565b6000670de0b6b3a764000083126112b2575060016112cb565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b60006112e0670de0b6b3a76400008505611966565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff19810161130a57505002919050565b6706f05b59d3b200005b600081131561134f57670de0b6b3a7640000828002059150671bc16d674ec800008212611347579384019360019190911d905b60011d6113'... 9050 more characters,
  deployedBytecode: '0x730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80634700688d1461005057806382c9345114610083578063ea067a571461011c575b600080fd5b81801561005c57600080fd5b5061007061006b366004612266565b6101a9565b6040519081526020015b60405180910390f35b81801561008f57600080fd5b506100a361009e3660046122be565b6102b1565b60405161007a9190600061014082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151818401525092915050565b81801561012857600080fd5b5061013c61013736600461232e565b610666565b60405161007a9190600061012082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525092915050565b60006101b585336109c9565b156101d3576040516359bfb80360e11b815260040160405180910390fd5b3360009081526002808501602090815260409283902083516060808201865282548252600183015493820193909352920154928201929092529061021b9086908501356109f9565b915061024c61023282600001518560a00135610a14565b602080840151908590610247908801886123aa565b610a48565b610269576040516374de9aa760e11b815260040160405180910390fd5b61027d8482338660e0013560006001610abf565b60405133907f8d6660b4a409414ebe386e9dd200a5c4e75591f0fc98e1272d7ba207d06d4c3490600090a250949350505050565b610307604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040805160a0810182526000808252606082018190526080820152851580159282018390528515156020830152909161034257508060200151155b156103605760405163162908e360e11b815260040160405180910390fd5b61036a8a876109c9565b15610388576040516359bfb80360e11b815260040160405180910390fd5b6001600160a01b03861660009081526002808a0160209081526040928390208351606081018552815480825260018301549382019390935292015492820192909252906103d99060a08a0135610a14565b8252805160c084015260208082018051610100860152898201356080808701919091526060808c0135604080890191909152918c01359387019390935290519185019190915282015115610547578051600003610449576040516308d1fde360e11b815260040160405180910390fd5b600019860361045e578051608083015261047d565b8051610477906104728860a08c0135610bdc565b610bf1565b60808301525b61048f82608001518960a00135610c08565b60a084018190526000036104b65760405163162908e360e11b815260040160405180910390fd5b8160800151836080018181516104cc91906123e3565b90525060808301516104e29060a08a0135610a14565b604084015260808201518151610505916104fb916123e3565b8960a00135610a14565b808352604084015161051f918b91906101008c0135610c34565b61052d8a84604001516109f9565b83526080820151815182906105439083906123e3565b9052505b816020015115610625576001600160a01b038716331461057a5760405163cad4de1160e01b815260040160405180910390fd5b8160400151610594576105918a84604001516109f9565b83525b80602001518511156105b957604051633a23d82560e01b815260040160405180910390fd5b84816020018181516105cb91906123e3565b905250815160208083015185516105e99392610247908d018d6123aa565b61060657604051633a23d82560e01b815260040160405180910390fd5b600160608301526020830180518691906106219083906123e3565b9052505b82516106319085610ca2565b6106488982898b60e0013560008760600151610abf565b805160e0840152602001516101208301525098975050505050505050565b6106b56040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b858411156106d65760405163bb55fd2760e01b815260040160405180910390fd5b6106e08a866109c9565b156106fe576040516359bfb80360e11b815260040160405180910390fd5b6040805160c0810182526000602082018190529181018290526060810182905260a08101919091528215801560808301819052861515835261073f57508051155b1561075d5760405163162908e360e11b815260040160405180910390fd5b6001600160a01b03861660009081526002808b0160209081526040928390208351606081018552815480825260018301549382019390935292015492820192909252906107ae9060a08b0135610a14565b602080840191909152815160a0850152818101805160e08601528a8201356080808701919091526060808d01356040880152818d0135938701939093529051918501919091528201511561085257838160200181815161080e91906123f6565b9052506060830180518591906108259083906123f6565b9052506040830151610838908c906109f9565b835260208301805185919061084e9083906123f6565b9052505b815115610993576001600160a01b03871633146108825760405163cad4de1160e01b815260040160405180910390fd5b610890868a60a00135610ccf565b604083018190526108c090670de0b6b3a76400006108b160e08d0135610ce7565b6108bb91906123f6565b610a14565b60608301819052815182906108d69083906123f6565b90525080516108e99060a08b0135610a14565b602083018190526040840151610907918c91906101008d0135610c34565b81606001518360800181815161091d91906123f6565b90525060808301516109339060a08b0135610a14565b60408401819052610945908c906109f9565b8084526109529086610ca2565b60208083015182820151855161096e93610247908e018e6123aa565b61098b576040516374de9aa760e11b815260040160405180910390fd5b600160a08301525b6109aa8a82898c60e0013560008760a00151610abf565b805160c084015260200151610100830152509998505050505050505050565b6001600160a01b03811660009081526003830160205260409020600101546001600160601b031615155b92915050565b6000610a0d610a088484610d0c565b610d22565b9392505050565b6000670de0b6b3a7640000610a2a60028261241f565b610a348486612441565b610a3e91906123f6565b610a0d919061241f565b600064173eb4c80a83148015610a5d57508415155b15610a6a57506000610ab7565b60001960ff831601610a9657670de0b6b3a7640000610a89818661241f565b610a939190612441565b93505b610aa8670e6ed27d6668000086610a14565b610ab28585610a14565b101590505b949350505050565b845160009015801590610ad55750602086015115155b9050600081610ae5576000610af7565b610af787600001518860200151610d8d565b905083610b6c576001600160a01b03861660009081526001890160205260409020548215610b595781600003610b4057604051639f7e164b60e01b815260040160405180910390fd5b610b54898883610b4f86610dad565b610e1e565b610b6a565b8015610b6a57610b6a898883610ef3565b505b8215610b9f576002610b7d86611037565b610b87919061241f565b610b9990670de0b6b3a76400006123f6565b60408801525b505050506001600160a01b039190911660009081526002938401602090815260409182902084518155908401516001820155920151919092015550565b600081610a3e670de0b6b3a764000085612441565b600081831115610c015781610a0d565b5090919050565b6000670de0b6b3a7640000600181610c208587612441565b610c2a91906123f6565b610a3e91906123e3565b8115610c9c5780821015610c5b576040516345b3f65d60e01b815260040160405180910390fd5b6000610c66856110ad565b9050600a8110610c9a57610c7a84826110be565b831015610c9a57604051635b85919f60e11b815260040160405180910390fd5b505b50505050565b610cab81610d22565b821015610ccb57604051638be4f6eb60e01b815260040160405180910390fd5b5050565b600081600181610c20670de0b6b3a764000087612441565b60006109f3610cff836802d1a51c7e00500000610d8d565b6601c6bf526340006110e9565b6000610d1883836110f9565b5090949350505050565b600080610d318361103c612458565b9050610c9f19811280610d45575061103c81135b15610d6357604051637edf443b60e11b815260040160405180910390fd5b610a0d610d88610d72836111e9565b610d83670df27a2cdf448000611274565b611358565b61141d565b600081610d9b60028261241f565b610a34670de0b6b3a764000086612441565b60006001600160601b03821115610e1a5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b60648201526084015b60405180910390fd5b5090565b8115610ec1576000846000018381548110610e3b57610e3b61247f565b6000918252602091829020604080518082019091529101546001600160a01b03811682526001600160601b03600160a01b909104811692820183905290925083161015610ea1576001600160601b0382166020820152610e9c8582856114b9565b610ebb565b6001600160601b0382166020820152610ebb858285611644565b50610c9c565b604080518082019091526001600160a01b03841681526001600160601b03821660208201528454610c9c918691611644565b6001600160a01b03821660009081526001808501602052604082208290558454610f1d91906123e3565b9050808203610f54578354849080610f3757610f37612495565b600082815260208120820160001990810191909155019055610c9c565b6000846000018281548110610f6b57610f6b61247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091528554909150859080610fba57610fba612495565b600082815260208120820160001990810191909155019055610fdd858285611644565b610c9a85866000018581548110610ff657610ff661247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152856114b9565b60008082121561105d5760405163608c83ff60e11b815260048101839052602401610e11565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f9082131561109a57604051632c482c3960e01b815260048101839052602401610e11565b6109f3670de0b6b3a76400008302611721565b80546000906109f3906001906123e3565b600081156109f357610a0d6110db846110d68561188f565b610d8d565b678ac7230489e80000610d8d565b600081831015610c015781610a0d565b60008080611000670de0b6b3a764000082808080805b86156111db5761111f878b6123f6565b93508b8461200181106111345761113461247f565b015492508b6120010184612001811061114f5761114f61247f565b015491508160000361116a576111658684610a14565b61118c565b61118c6111778388612441565b846a0c097ce7bc90715b34b9f160241b6118a3565b61119690866123f6565b90508a8110156111b557611cdc84116111b0578399508094505b6111cf565b81156111c8576111c58683611951565b95505b8098508597505b600187901c965061110f565b505050505050509250925092565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156112295760405163e608e18b60e01b815260048101839052602401610e11565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315611266576040516371f72a3160e01b815260048101839052602401610e11565b50670de0b6b3a76400000290565b60008082136112995760405163309fa7dd60e11b815260048101839052602401610e11565b6000670de0b6b3a764000083126112b2575060016112cb565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b60006112e0670de0b6b3a76400008505611966565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff19810161130a57505002919050565b6706f05b59d3b200005b600081131561134f57670de0b6b3a7640000828002059150671bc16d674ec800008212611347579384019360019190911d905b60011d611314565b50505002919050565b6000600160ff1b83148061136f5750600160ff1b82145b1561138d57604051630d01a11b60e21b81526004016040'... 8934 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel\'s lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don\'t need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.\'s \\"Hacker\'s Delight\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\"msb\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // ‚Üí `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // ‚Üí `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton\'s method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result'... 274321 more characters
  }
}
2024-01-08T15:25:56.452Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x6124fa61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80634700688d1461005057806382c9345114610083578063ea067a571461011c575b600080fd5b81801561005c57600080fd5b5061007061006b366004612266565b6101a9565b6040519081526020015b60405180910390f35b81801561008f57600080fd5b506100a361009e3660046122be565b6102b1565b60405161007a9190600061014082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151818401525092915050565b81801561012857600080fd5b5061013c61013736600461232e565b610666565b60405161007a9190600061012082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525092915050565b60006101b585336109c9565b156101d3576040516359bfb80360e11b815260040160405180910390fd5b3360009081526002808501602090815260409283902083516060808201865282548252600183015493820193909352920154928201929092529061021b9086908501356109f9565b915061024c61023282600001518560a00135610a14565b602080840151908590610247908801886123aa565b610a48565b610269576040516374de9aa760e11b815260040160405180910390fd5b61027d8482338660e0013560006001610abf565b60405133907f8d6660b4a409414ebe386e9dd200a5c4e75591f0fc98e1272d7ba207d06d4c3490600090a250949350505050565b610307604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040805160a0810182526000808252606082018190526080820152851580159282018390528515156020830152909161034257508060200151155b156103605760405163162908e360e11b815260040160405180910390fd5b61036a8a876109c9565b15610388576040516359bfb80360e11b815260040160405180910390fd5b6001600160a01b03861660009081526002808a0160209081526040928390208351606081018552815480825260018301549382019390935292015492820192909252906103d99060a08a0135610a14565b8252805160c084015260208082018051610100860152898201356080808701919091526060808c0135604080890191909152918c01359387019390935290519185019190915282015115610547578051600003610449576040516308d1fde360e11b815260040160405180910390fd5b600019860361045e578051608083015261047d565b8051610477906104728860a08c0135610bdc565b610bf1565b60808301525b61048f82608001518960a00135610c08565b60a084018190526000036104b65760405163162908e360e11b815260040160405180910390fd5b8160800151836080018181516104cc91906123e3565b90525060808301516104e29060a08a0135610a14565b604084015260808201518151610505916104fb916123e3565b8960a00135610a14565b808352604084015161051f918b91906101008c0135610c34565b61052d8a84604001516109f9565b83526080820151815182906105439083906123e3565b9052505b816020015115610625576001600160a01b038716331461057a5760405163cad4de1160e01b815260040160405180910390fd5b8160400151610594576105918a84604001516109f9565b83525b80602001518511156105b957604051633a23d82560e01b815260040160405180910390fd5b84816020018181516105cb91906123e3565b905250815160208083015185516105e99392610247908d018d6123aa565b61060657604051633a23d82560e01b815260040160405180910390fd5b600160608301526020830180518691906106219083906123e3565b9052505b82516106319085610ca2565b6106488982898b60e0013560008760600151610abf565b805160e0840152602001516101208301525098975050505050505050565b6106b56040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b858411156106d65760405163bb55fd2760e01b815260040160405180910390fd5b6106e08a866109c9565b156106fe576040516359bfb80360e11b815260040160405180910390fd5b6040805160c0810182526000602082018190529181018290526060810182905260a08101919091528215801560808301819052861515835261073f57508051155b1561075d5760405163162908e360e11b815260040160405180910390fd5b6001600160a01b03861660009081526002808b0160209081526040928390208351606081018552815480825260018301549382019390935292015492820192909252906107ae9060a08b0135610a14565b602080840191909152815160a0850152818101805160e08601528a8201356080808701919091526060808d01356040880152818d0135938701939093529051918501919091528201511561085257838160200181815161080e91906123f6565b9052506060830180518591906108259083906123f6565b9052506040830151610838908c906109f9565b835260208301805185919061084e9083906123f6565b9052505b815115610993576001600160a01b03871633146108825760405163cad4de1160e01b815260040160405180910390fd5b610890868a60a00135610ccf565b604083018190526108c090670de0b6b3a76400006108b160e08d0135610ce7565b6108bb91906123f6565b610a14565b60608301819052815182906108d69083906123f6565b90525080516108e99060a08b0135610a14565b602083018190526040840151610907918c91906101008d0135610c34565b81606001518360800181815161091d91906123f6565b90525060808301516109339060a08b0135610a14565b60408401819052610945908c906109f9565b8084526109529086610ca2565b60208083015182820151855161096e93610247908e018e6123aa565b61098b576040516374de9aa760e11b815260040160405180910390fd5b600160a08301525b6109aa8a82898c60e0013560008760a00151610abf565b805160c084015260200151610100830152509998505050505050505050565b6001600160a01b03811660009081526003830160205260409020600101546001600160601b031615155b92915050565b6000610a0d610a088484610d0c565b610d22565b9392505050565b6000670de0b6b3a7640000610a2a60028261241f565b610a348486612441565b610a3e91906123f6565b610a0d919061241f565b600064173eb4c80a83148015610a5d57508415155b15610a6a57506000610ab7565b60001960ff831601610a9657670de0b6b3a7640000610a89818661241f565b610a939190612441565b93505b610aa8670e6ed27d6668000086610a14565b610ab28585610a14565b101590505b949350505050565b845160009015801590610ad55750602086015115155b9050600081610ae5576000610af7565b610af787600001518860200151610d8d565b905083610b6c576001600160a01b03861660009081526001890160205260409020548215610b595781600003610b4057604051639f7e164b60e01b815260040160405180910390fd5b610b54898883610b4f86610dad565b610e1e565b610b6a565b8015610b6a57610b6a898883610ef3565b505b8215610b9f576002610b7d86611037565b610b87919061241f565b610b9990670de0b6b3a76400006123f6565b60408801525b505050506001600160a01b039190911660009081526002938401602090815260409182902084518155908401516001820155920151919092015550565b600081610a3e670de0b6b3a764000085612441565b600081831115610c015781610a0d565b5090919050565b6000670de0b6b3a7640000600181610c208587612441565b610c2a91906123f6565b610a3e91906123e3565b8115610c9c5780821015610c5b576040516345b3f65d60e01b815260040160405180910390fd5b6000610c66856110ad565b9050600a8110610c9a57610c7a84826110be565b831015610c9a57604051635b85919f60e11b815260040160405180910390fd5b505b50505050565b610cab81610d22565b821015610ccb57604051638be4f6eb60e01b815260040160405180910390fd5b5050565b600081600181610c20670de0b6b3a764000087612441565b60006109f3610cff836802d1a51c7e00500000610d8d565b6601c6bf526340006110e9565b6000610d1883836110f9565b5090949350505050565b600080610d318361103c612458565b9050610c9f19811280610d45575061103c81135b15610d6357604051637edf443b60e11b815260040160405180910390fd5b610a0d610d88610d72836111e9565b610d83670df27a2cdf448000611274565b611358565b61141d565b600081610d9b60028261241f565b610a34670de0b6b3a764000086612441565b60006001600160601b03821115610e1a5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b60648201526084015b60405180910390fd5b5090565b8115610ec1576000846000018381548110610e3b57610e3b61247f565b6000918252602091829020604080518082019091529101546001600160a01b03811682526001600160601b03600160a01b909104811692820183905290925083161015610ea1576001600160601b0382166020820152610e9c8582856114b9565b610ebb565b6001600160601b0382166020820152610ebb858285611644565b50610c9c565b604080518082019091526001600160a01b03841681526001600160601b03821660208201528454610c9c918691611644565b6001600160a01b03821660009081526001808501602052604082208290558454610f1d91906123e3565b9050808203610f54578354849080610f3757610f37612495565b600082815260208120820160001990810191909155019055610c9c565b6000846000018281548110610f6b57610f6b61247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091528554909150859080610fba57610fba612495565b600082815260208120820160001990810191909155019055610fdd858285611644565b610c9a85866000018581548110610ff657610ff661247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152856114b9565b60008082121561105d5760405163608c83ff60e11b815260048101839052602401610e11565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f9082131561109a57604051632c482c3960e01b815260048101839052602401610e11565b6109f3670de0b6b3a76400008302611721565b80546000906109f3906001906123e3565b600081156109f357610a0d6110db846110d68561188f565b610d8d565b678ac7230489e80000610d8d565b600081831015610c015781610a0d565b60008080611000670de0b6b3a764000082808080805b86156111db5761111f878b6123f6565b93508b8461200181106111345761113461247f565b015492508b6120010184612001811061114f5761114f61247f565b015491508160000361116a576111658684610a14565b61118c565b61118c6111778388612441565b846a0c097ce7bc90715b34b9f160241b6118a3565b61119690866123f6565b90508a8110156111b557611cdc84116111b0578399508094505b6111cf565b81156111c8576111c58683611951565b95505b8098508597505b600187901c965061110f565b505050505050509250925092565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156112295760405163e608e18b60e01b815260048101839052602401610e11565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315611266576040516371f72a3160e01b815260048101839052602401610e11565b50670de0b6b3a76400000290565b60008082136112995760405163309fa7dd60e11b815260048101839052602401610e11565b6000670de0b6b3a764000083126112b2575060016112cb565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b60006112e0670de0b6b3a76400008505611966565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff19810161130a57505002919050565b6706f05b59d3b200005b600081131561134f57670de0b6b3a7640000828002059150671bc16d674ec800008212611347579384019360019190911d905b60011d611314565b50505002919050565b6000600160ff1b83148061136f5750600160ff1b82145b1561138d57604051630d01a11b60e21b815260040160405180910390fd5b6000806000851261139e57846113a3565b846000035b9150600084126113b357836113b8565b836000035b905060006113c68383611a44565b90506001600160ff1b038111156113f35760405163bf79e8d960e01b815260048101829052602401610e11565b60001980871390861380821860011461140c5782611411565b826000035b98975050505050505050565b6000808212156114705768033dd1780914b971141982121561144157506000919050565b61144d8260000361141d565b6a0c097ce7bc90715b34b9f160241b8161146957611469612409565b0592915050565b680a688906bd8b000000821261149c5760405163e69458f960e01b815260048101839052602401610e11565b670de0b6b3a7640000604083901b04610a0d81611b0a565b919050565b60006114c6826002612441565b84549091508181116114e3576114de8585858461219c565b610c9a565b60008560000183815481106114fa576114fa61247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b03169181019190915290506115428360016123f6565b82118015611593575060208101516001600160601b0316866115658560016123f6565b815481106115755761157561247f565b600091825260209091200154600160a01b90046001600160601b0316115b156115f357856115a2846124ab565b935083815481106115b5576115b561247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b03169181019190915290505b84602001516001600160601b031681602001516001600160601b031611611625576116208686868561219c565b61163c565b6116318682868561219c565b61163c8686856114b9565b505050505050565b8254600182148061169457508361165c60028461241f565b8154811061166c5761166c61247f565b60009182526020918290200154908401516001600160601b03600160a01b9092048216911611155b156116aa576116a58484848461219c565b610c9c565b61170c84806116ba60028661241f565b815481106116ca576116ca61247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152848461219c565b610c9c848461171c60028661241f565b611644565b60008160000361173357506000919050565b50600181600160801b811061174d5760409190911b9060801c5b600160401b81106117635760209190911b9060401c5b600160201b81106117795760109190911b9060201c5b62010000811061178e5760089190911b9060101c5b61010081106117a25760049190911b9060081c5b601081106117b55760029190911b9060041c5b600881106117c557600182901b91505b60018284816117d6576117d6612409565b048301901c915060018284816117ee576117ee612409565b048301901c9150600182848161180657611806612409565b048301901c9150600182848161181e5761181e612409565b048301901c9150600182848161183657611836612409565b048301901c9150600182848161184e5761184e612409565b048301901c9150600182848161186657611866612409565b048301901c9150600082848161187e5761187e612409565b04905080831015610a0d5782610ab7565b60006109f3670de0b6b3a764000083612441565b60008080600019858709858702925082811083820303915050806000036118dd578382816118d3576118d3612409565b0492505050610a0d565b8084116118e957600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000670de0b6b3a7640000610a3e8385612441565b6000600160801b821061198657608091821c9161198390826123f6565b90505b600160401b82106119a457604091821c916119a190826123f6565b90505b600160201b82106119c257602091821c916119bf90826123f6565b90505b6201000082106119df57601091821c916119dc90826123f6565b90505b61010082106119fb57600891821c916119f890826123f6565b90505b60108210611a1657600491821c91611a1390826123f6565b90505b60048210611a3157600291821c91611a2e90826123f6565b90505b600282106114b4576109f36001826123f6565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110611a885760405163698d9a0160e11b815260048101829052602401610e11565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff8211905082600003611ac65780670de0b6b3a76400008504019450505050506109f3565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615611b2a5768016a09e667f3bcc9090260401c5b6001603e1b821615611b45576801306fe0a31b7152df0260401c5b6001603d1b821615611b60576801172b83c7d517adce0260401c5b6001603c1b821615611b7b5768010b5586cf9890f62a0260401c5b6001603b1b821615611b96576801059b0d31585743ae0260401c5b6001603a1b821615611bb157680102c9a3e778060ee70260401c5b600160391b821615611bcc5768010163da9fb33356d80260401c5b600160381b821615611be757680100b1afa5abcbed610260401c5b600160371b821615611c025768010058c86da1c09ea20260401c5b600160361b821615611c1d576801002c605e2e8cec500260401c5b600160351b821615611c3857680100162f3904051fa10260401c5b600160341b821615611c53576801000b175effdc76ba0260401c5b600160331b821615611c6e57680100058ba01fb9f96d0260401c5b600160321b821615611c895768010002c5cc37da94920260401c5b600160311b821615611ca4576801000162e525ee05470260401c5b600160301b821615611cbf5768010000b17255775c040260401c5b6001602f1b821615611cda576801000058b91b5bc9ae0260401c5b6001602e1b821615611cf557680100002c5c89d5ec6d0260401c5b6001602d1b821615611d105768010000162e43f4f8310260401c5b6001602c1b821615611d2b57680100000b1721bcfc9a0260401c5b6001602b1b821615611d465768010000058b90cf1e6e0260401c5b6001602a1b821615611d61576801000002c5c863b73f0260401c5b600160291b821615611d7c57680100000162e430e5a20260401c5b600160281b821615611d97576801000000b1721835510260401c5b600160271b821615611db257680100000058b90c0b490260401c5b600160261b821615611dcd5768010000002c5c8601cc0260401c5b600160251b821615611de8576801000000162e42fff00260401c5b600160241b821615611e035768010000000b17217fbb0260401c5b600160231b821615611e1e576801000000058b90bfce0260401c5b600160221b821615611e3957680100000002c5c85fe30260401c5b600160211b821615611e545768010000000162e42ff10260401c5b600160201b821615611e6f57680100000000b17217f80260401c5b6380000000821615611e8a5768010000000058b90bfc0260401c5b6340000000821615611ea5576801000000002c5c85fe0260401c5b6320000000821615611ec057680100000000162e42ff0260401c5b6310000000821615611edb576801000000000b17217f0260401c5b6308000000821615611ef657680100000000058b90c00260401c5b6304000000821615611f115768010000000002c5c8600260401c5b6302000000821615611f2c576801000000000162e4300260401c5b6301000000821615611f475768010000000000b172180260401c5b62800000821615611f61576801000000000058b90c0260401c5b62400000821615611f7b57680100000000002c5c860260401c5b62200000821615611f955768010000000000162e430260401c5b62100000821615611faf57680100000000000b17210260401c5b62080000821615611fc95768010000000000058b910260401c5b62040000821615611fe3576801000000000002c5c80260401c5b62020000821615611ffd57680100000000000162e40260401c5b620100008216156120165761b172600160401b010260401c5b61800082161561202e576158b9600160401b010260401c5b61400082161561204657612c5d600160401b010260401c5b61200082161561205e5761162e600160401b010260401c5b61100082161561207657610b17600160401b010260401c5b61080082161561208e5761058c600160401b010260401c5b6104008216156120a6576102c6600160401b010260401c5b6102008216156120be57610163600160401b010260401c5b6101008216156120d55760b1600160401b010260401c5b60808216156120eb576059600160401b010260401c5b604082161561210157602c600160401b010260401c5b6020821615612117576016600160401b010260401c5b601082161561212d57600b600160401b010260401c5b6008821615612143576006600160401b010260401c5b6004821615612159576003600160401b010260401c5b600282161561216f576001600160401b010260401c5b6001821615612185576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b8082036121e257835460018101855560008581526020908190208551918601516001600160601b0316600160a01b026001600160a01b039092169190911791015561222c565b828460000183815481106121f8576121f861247f565b6000918252602091829020835193909201516001600160601b0316600160a01b026001600160a01b03909316929092179101555b5090516001600160a01b031660009081526001909201602052604090912055565b6000610120828403121561226057600080fd5b50919050565b600080600080610180858703121561227d57600080fd5b84359350602085013592506040850135915061229c866060870161224d565b905092959194509250565b80356001600160a01b03811681146114b457600080fd5b600080600080600080600080610200898b0312156122db57600080fd5b8835975060208901359650604089013595506122fa8a60608b0161224d565b94506123096101808a016122a7565b979a96995094979396956101a085013595506101c0850135946101e001359350915050565b60008060008060008060008060006102208a8c03121561234d57600080fd5b8935985060208a0135975060408a0135965061236c8b60608c0161224d565b95506101808a013594506123836101a08b016122a7565b93506101c08a013592506101e08a013591506102008a013590509295985092959850929598565b6000602082840312156123bc57600080fd5b813560ff81168114610a0d57600080fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156109f3576109f36123cd565b808201808211156109f3576109f36123cd565b634e487b7160e01b600052601260045260246000fd5b60008261243c57634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176109f3576109f36123cd565b8181036000831280158383131683831282161715612478576124786123cd565b5092915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6000600182016124bd576124bd6123cd565b506001019056fea2646970667358221220386f893dd500b9b7969516ec38646619509cd121873fbc70a7258d28c45476db64736f6c63430008120033","args":[],"salt":"AJNA","value":[]}
2024-01-08T15:25:56.454Z cannon:builder comparing states null 83bacc3d068dbbfd3bedbb586cb8f958
2024-01-08T15:25:56.454Z cannon:builder run isolated contract.BorrowerActions
Executing [contract.BorrowerActions]...
2024-01-08T15:25:56.461Z cannon:verbose:builder ctx for step contract.BorrowerActions {
  package: {},
  timestamp: '1704727545',
  chainId: 10,
  settings: {
    bwAJNA_ADDRESS: '0x6c518f9D1a163379235816c543E62922a79863Fa',
    salt: 'AJNA'
  },
  contracts: {},
  txns: {},
  imports: {},
  extras: {}
}
2024-01-08T15:25:56.463Z cannon:builder:contract exec {
  artifact: 'BorrowerActions',
  salt: 'AJNA',
  create2: true,
  from: '',
  nonce: '',
  value: '',
  abi: ''
}
2024-01-08T15:25:56.463Z cannon:builder:runtime resolve artifact BorrowerActions
2024-01-08T15:25:56.463Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:26:05.696Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/BorrowerActions.sol': 'BorrowerActions' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/BorrowerActions.sol': {
      keccak256: '0xecf8ce41a4034aa174c72bab7e558d788c1cc052ee77b2151f4acee4691be839',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/SettlerActions.sol': {
      keccak256: '0x05edfe3f72323b7212fbb5134f76211f397138c2ed30ddf0f3683772213c831d',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/RevertsHelper.sol': {
      keccak256: '0xcaff095290172f1b5726d4e887ab9be5f524d9321e94ca0095f99b666381a6f4',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:26:05.697Z cannon:cli:foundry evm version paris
2024-01-08T15:26:05.705Z cannon:builder:runtime reported contract artifact BorrowerActions {
  contractName: 'BorrowerActions',
  sourceName: 'src/libraries/external/BorrowerActions.sol',
  abi: [
    {
      type: 'event',
      name: 'LoanStamped',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'AmountLTMinDebt', inputs: [] },
    { type: 'error', name: 'AuctionActive', inputs: [] },
    { type: 'error', name: 'BorrowerNotSender', inputs: [] },
    { type: 'error', name: 'BorrowerUnderCollateralized', inputs: [] },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'DustAmountNotExceeded', inputs: [] },
    { type: 'error', name: 'InsufficientCollateral', inputs: [] },
    { type: 'error', name: 'InsufficientLiquidity', inputs: [] },
    { type: 'error', name: 'InvalidAmount', inputs: [] },
    { type: 'error', name: 'LimitIndexExceeded', inputs: [] },
    { type: 'error', name: 'LimitIndexExceeded', inputs: [] },
    { type: 'error', name: 'NoDebt', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__SqrtNegativeInput',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__SqrtOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'ZeroDebtToCollateral', inputs: [] }
  ],
  bytecode: '0x6124fa61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80634700688d1461005057806382c9345114610083578063ea067a571461011c575b600080fd5b81801561005c57600080fd5b5061007061006b366004612266565b6101a9565b6040519081526020015b60405180910390f35b81801561008f57600080fd5b506100a361009e3660046122be565b6102b1565b60405161007a9190600061014082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151818401525092915050565b81801561012857600080fd5b5061013c61013736600461232e565b610666565b60405161007a9190600061012082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525092915050565b60006101b585336109c9565b156101d3576040516359bfb80360e11b815260040160405180910390fd5b3360009081526002808501602090815260409283902083516060808201865282548252600183015493820193909352920154928201929092529061021b9086908501356109f9565b915061024c61023282600001518560a00135610a14565b602080840151908590610247908801886123aa565b610a48565b610269576040516374de9aa760e11b815260040160405180910390fd5b61027d8482338660e0013560006001610abf565b60405133907f8d6660b4a409414ebe386e9dd200a5c4e75591f0fc98e1272d7ba207d06d4c3490600090a250949350505050565b610307604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040805160a0810182526000808252606082018190526080820152851580159282018390528515156020830152909161034257508060200151155b156103605760405163162908e360e11b815260040160405180910390fd5b61036a8a876109c9565b15610388576040516359bfb80360e11b815260040160405180910390fd5b6001600160a01b03861660009081526002808a0160209081526040928390208351606081018552815480825260018301549382019390935292015492820192909252906103d99060a08a0135610a14565b8252805160c084015260208082018051610100860152898201356080808701919091526060808c0135604080890191909152918c01359387019390935290519185019190915282015115610547578051600003610449576040516308d1fde360e11b815260040160405180910390fd5b600019860361045e578051608083015261047d565b8051610477906104728860a08c0135610bdc565b610bf1565b60808301525b61048f82608001518960a00135610c08565b60a084018190526000036104b65760405163162908e360e11b815260040160405180910390fd5b8160800151836080018181516104cc91906123e3565b90525060808301516104e29060a08a0135610a14565b604084015260808201518151610505916104fb916123e3565b8960a00135610a14565b808352604084015161051f918b91906101008c0135610c34565b61052d8a84604001516109f9565b83526080820151815182906105439083906123e3565b9052505b816020015115610625576001600160a01b038716331461057a5760405163cad4de1160e01b815260040160405180910390fd5b8160400151610594576105918a84604001516109f9565b83525b80602001518511156105b957604051633a23d82560e01b815260040160405180910390fd5b84816020018181516105cb91906123e3565b905250815160208083015185516105e99392610247908d018d6123aa565b61060657604051633a23d82560e01b815260040160405180910390fd5b600160608301526020830180518691906106219083906123e3565b9052505b82516106319085610ca2565b6106488982898b60e0013560008760600151610abf565b805160e0840152602001516101208301525098975050505050505050565b6106b56040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b858411156106d65760405163bb55fd2760e01b815260040160405180910390fd5b6106e08a866109c9565b156106fe576040516359bfb80360e11b815260040160405180910390fd5b6040805160c0810182526000602082018190529181018290526060810182905260a08101919091528215801560808301819052861515835261073f57508051155b1561075d5760405163162908e360e11b815260040160405180910390fd5b6001600160a01b03861660009081526002808b0160209081526040928390208351606081018552815480825260018301549382019390935292015492820192909252906107ae9060a08b0135610a14565b602080840191909152815160a0850152818101805160e08601528a8201356080808701919091526060808d01356040880152818d0135938701939093529051918501919091528201511561085257838160200181815161080e91906123f6565b9052506060830180518591906108259083906123f6565b9052506040830151610838908c906109f9565b835260208301805185919061084e9083906123f6565b9052505b815115610993576001600160a01b03871633146108825760405163cad4de1160e01b815260040160405180910390fd5b610890868a60a00135610ccf565b604083018190526108c090670de0b6b3a76400006108b160e08d0135610ce7565b6108bb91906123f6565b610a14565b60608301819052815182906108d69083906123f6565b90525080516108e99060a08b0135610a14565b602083018190526040840151610907918c91906101008d0135610c34565b81606001518360800181815161091d91906123f6565b90525060808301516109339060a08b0135610a14565b60408401819052610945908c906109f9565b8084526109529086610ca2565b60208083015182820151855161096e93610247908e018e6123aa565b61098b576040516374de9aa760e11b815260040160405180910390fd5b600160a08301525b6109aa8a82898c60e0013560008760a00151610abf565b805160c084015260200151610100830152509998505050505050505050565b6001600160a01b03811660009081526003830160205260409020600101546001600160601b031615155b92915050565b6000610a0d610a088484610d0c565b610d22565b9392505050565b6000670de0b6b3a7640000610a2a60028261241f565b610a348486612441565b610a3e91906123f6565b610a0d919061241f565b600064173eb4c80a83148015610a5d57508415155b15610a6a57506000610ab7565b60001960ff831601610a9657670de0b6b3a7640000610a89818661241f565b610a939190612441565b93505b610aa8670e6ed27d6668000086610a14565b610ab28585610a14565b101590505b949350505050565b845160009015801590610ad55750602086015115155b9050600081610ae5576000610af7565b610af787600001518860200151610d8d565b905083610b6c576001600160a01b03861660009081526001890160205260409020548215610b595781600003610b4057604051639f7e164b60e01b815260040160405180910390fd5b610b54898883610b4f86610dad565b610e1e565b610b6a565b8015610b6a57610b6a898883610ef3565b505b8215610b9f576002610b7d86611037565b610b87919061241f565b610b9990670de0b6b3a76400006123f6565b60408801525b505050506001600160a01b039190911660009081526002938401602090815260409182902084518155908401516001820155920151919092015550565b600081610a3e670de0b6b3a764000085612441565b600081831115610c015781610a0d565b5090919050565b6000670de0b6b3a7640000600181610c208587612441565b610c2a91906123f6565b610a3e91906123e3565b8115610c9c5780821015610c5b576040516345b3f65d60e01b815260040160405180910390fd5b6000610c66856110ad565b9050600a8110610c9a57610c7a84826110be565b831015610c9a57604051635b85919f60e11b815260040160405180910390fd5b505b50505050565b610cab81610d22565b821015610ccb57604051638be4f6eb60e01b815260040160405180910390fd5b5050565b600081600181610c20670de0b6b3a764000087612441565b60006109f3610cff836802d1a51c7e00500000610d8d565b6601c6bf526340006110e9565b6000610d1883836110f9565b5090949350505050565b600080610d318361103c612458565b9050610c9f19811280610d45575061103c81135b15610d6357604051637edf443b60e11b815260040160405180910390fd5b610a0d610d88610d72836111e9565b610d83670df27a2cdf448000611274565b611358565b61141d565b600081610d9b60028261241f565b610a34670de0b6b3a764000086612441565b60006001600160601b03821115610e1a5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b60648201526084015b60405180910390fd5b5090565b8115610ec1576000846000018381548110610e3b57610e3b61247f565b6000918252602091829020604080518082019091529101546001600160a01b03811682526001600160601b03600160a01b909104811692820183905290925083161015610ea1576001600160601b0382166020820152610e9c8582856114b9565b610ebb565b6001600160601b0382166020820152610ebb858285611644565b50610c9c565b604080518082019091526001600160a01b03841681526001600160601b03821660208201528454610c9c918691611644565b6001600160a01b03821660009081526001808501602052604082208290558454610f1d91906123e3565b9050808203610f54578354849080610f3757610f37612495565b600082815260208120820160001990810191909155019055610c9c565b6000846000018281548110610f6b57610f6b61247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091528554909150859080610fba57610fba612495565b600082815260208120820160001990810191909155019055610fdd858285611644565b610c9a85866000018581548110610ff657610ff661247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152856114b9565b60008082121561105d5760405163608c83ff60e11b815260048101839052602401610e11565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f9082131561109a57604051632c482c3960e01b815260048101839052602401610e11565b6109f3670de0b6b3a76400008302611721565b80546000906109f3906001906123e3565b600081156109f357610a0d6110db846110d68561188f565b610d8d565b678ac7230489e80000610d8d565b600081831015610c015781610a0d565b60008080611000670de0b6b3a764000082808080805b86156111db5761111f878b6123f6565b93508b8461200181106111345761113461247f565b015492508b6120010184612001811061114f5761114f61247f565b015491508160000361116a576111658684610a14565b61118c565b61118c6111778388612441565b846a0c097ce7bc90715b34b9f160241b6118a3565b61119690866123f6565b90508a8110156111b557611cdc84116111b0578399508094505b6111cf565b81156111c8576111c58683611951565b95505b8098508597505b600187901c965061110f565b505050505050509250925092565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156112295760405163e608e18b60e01b815260048101839052602401610e11565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315611266576040516371f72a3160e01b815260048101839052602401610e11565b50670de0b6b3a76400000290565b60008082136112995760405163309fa7dd60e11b815260048101839052602401610e11565b6000670de0b6b3a764000083126112b2575060016112cb565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b60006112e0670de0b6b3a76400008505611966565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff19810161130a57505002919050565b6706f05b59d3b200005b600081131561134f57670de0b6b3a7640000828002059150671bc16d674ec800008212611347579384019360019190911d905b60011d6113'... 9050 more characters,
  deployedBytecode: '0x730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80634700688d1461005057806382c9345114610083578063ea067a571461011c575b600080fd5b81801561005c57600080fd5b5061007061006b366004612266565b6101a9565b6040519081526020015b60405180910390f35b81801561008f57600080fd5b506100a361009e3660046122be565b6102b1565b60405161007a9190600061014082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151818401525092915050565b81801561012857600080fd5b5061013c61013736600461232e565b610666565b60405161007a9190600061012082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525092915050565b60006101b585336109c9565b156101d3576040516359bfb80360e11b815260040160405180910390fd5b3360009081526002808501602090815260409283902083516060808201865282548252600183015493820193909352920154928201929092529061021b9086908501356109f9565b915061024c61023282600001518560a00135610a14565b602080840151908590610247908801886123aa565b610a48565b610269576040516374de9aa760e11b815260040160405180910390fd5b61027d8482338660e0013560006001610abf565b60405133907f8d6660b4a409414ebe386e9dd200a5c4e75591f0fc98e1272d7ba207d06d4c3490600090a250949350505050565b610307604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040805160a0810182526000808252606082018190526080820152851580159282018390528515156020830152909161034257508060200151155b156103605760405163162908e360e11b815260040160405180910390fd5b61036a8a876109c9565b15610388576040516359bfb80360e11b815260040160405180910390fd5b6001600160a01b03861660009081526002808a0160209081526040928390208351606081018552815480825260018301549382019390935292015492820192909252906103d99060a08a0135610a14565b8252805160c084015260208082018051610100860152898201356080808701919091526060808c0135604080890191909152918c01359387019390935290519185019190915282015115610547578051600003610449576040516308d1fde360e11b815260040160405180910390fd5b600019860361045e578051608083015261047d565b8051610477906104728860a08c0135610bdc565b610bf1565b60808301525b61048f82608001518960a00135610c08565b60a084018190526000036104b65760405163162908e360e11b815260040160405180910390fd5b8160800151836080018181516104cc91906123e3565b90525060808301516104e29060a08a0135610a14565b604084015260808201518151610505916104fb916123e3565b8960a00135610a14565b808352604084015161051f918b91906101008c0135610c34565b61052d8a84604001516109f9565b83526080820151815182906105439083906123e3565b9052505b816020015115610625576001600160a01b038716331461057a5760405163cad4de1160e01b815260040160405180910390fd5b8160400151610594576105918a84604001516109f9565b83525b80602001518511156105b957604051633a23d82560e01b815260040160405180910390fd5b84816020018181516105cb91906123e3565b905250815160208083015185516105e99392610247908d018d6123aa565b61060657604051633a23d82560e01b815260040160405180910390fd5b600160608301526020830180518691906106219083906123e3565b9052505b82516106319085610ca2565b6106488982898b60e0013560008760600151610abf565b805160e0840152602001516101208301525098975050505050505050565b6106b56040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b858411156106d65760405163bb55fd2760e01b815260040160405180910390fd5b6106e08a866109c9565b156106fe576040516359bfb80360e11b815260040160405180910390fd5b6040805160c0810182526000602082018190529181018290526060810182905260a08101919091528215801560808301819052861515835261073f57508051155b1561075d5760405163162908e360e11b815260040160405180910390fd5b6001600160a01b03861660009081526002808b0160209081526040928390208351606081018552815480825260018301549382019390935292015492820192909252906107ae9060a08b0135610a14565b602080840191909152815160a0850152818101805160e08601528a8201356080808701919091526060808d01356040880152818d0135938701939093529051918501919091528201511561085257838160200181815161080e91906123f6565b9052506060830180518591906108259083906123f6565b9052506040830151610838908c906109f9565b835260208301805185919061084e9083906123f6565b9052505b815115610993576001600160a01b03871633146108825760405163cad4de1160e01b815260040160405180910390fd5b610890868a60a00135610ccf565b604083018190526108c090670de0b6b3a76400006108b160e08d0135610ce7565b6108bb91906123f6565b610a14565b60608301819052815182906108d69083906123f6565b90525080516108e99060a08b0135610a14565b602083018190526040840151610907918c91906101008d0135610c34565b81606001518360800181815161091d91906123f6565b90525060808301516109339060a08b0135610a14565b60408401819052610945908c906109f9565b8084526109529086610ca2565b60208083015182820151855161096e93610247908e018e6123aa565b61098b576040516374de9aa760e11b815260040160405180910390fd5b600160a08301525b6109aa8a82898c60e0013560008760a00151610abf565b805160c084015260200151610100830152509998505050505050505050565b6001600160a01b03811660009081526003830160205260409020600101546001600160601b031615155b92915050565b6000610a0d610a088484610d0c565b610d22565b9392505050565b6000670de0b6b3a7640000610a2a60028261241f565b610a348486612441565b610a3e91906123f6565b610a0d919061241f565b600064173eb4c80a83148015610a5d57508415155b15610a6a57506000610ab7565b60001960ff831601610a9657670de0b6b3a7640000610a89818661241f565b610a939190612441565b93505b610aa8670e6ed27d6668000086610a14565b610ab28585610a14565b101590505b949350505050565b845160009015801590610ad55750602086015115155b9050600081610ae5576000610af7565b610af787600001518860200151610d8d565b905083610b6c576001600160a01b03861660009081526001890160205260409020548215610b595781600003610b4057604051639f7e164b60e01b815260040160405180910390fd5b610b54898883610b4f86610dad565b610e1e565b610b6a565b8015610b6a57610b6a898883610ef3565b505b8215610b9f576002610b7d86611037565b610b87919061241f565b610b9990670de0b6b3a76400006123f6565b60408801525b505050506001600160a01b039190911660009081526002938401602090815260409182902084518155908401516001820155920151919092015550565b600081610a3e670de0b6b3a764000085612441565b600081831115610c015781610a0d565b5090919050565b6000670de0b6b3a7640000600181610c208587612441565b610c2a91906123f6565b610a3e91906123e3565b8115610c9c5780821015610c5b576040516345b3f65d60e01b815260040160405180910390fd5b6000610c66856110ad565b9050600a8110610c9a57610c7a84826110be565b831015610c9a57604051635b85919f60e11b815260040160405180910390fd5b505b50505050565b610cab81610d22565b821015610ccb57604051638be4f6eb60e01b815260040160405180910390fd5b5050565b600081600181610c20670de0b6b3a764000087612441565b60006109f3610cff836802d1a51c7e00500000610d8d565b6601c6bf526340006110e9565b6000610d1883836110f9565b5090949350505050565b600080610d318361103c612458565b9050610c9f19811280610d45575061103c81135b15610d6357604051637edf443b60e11b815260040160405180910390fd5b610a0d610d88610d72836111e9565b610d83670df27a2cdf448000611274565b611358565b61141d565b600081610d9b60028261241f565b610a34670de0b6b3a764000086612441565b60006001600160601b03821115610e1a5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b60648201526084015b60405180910390fd5b5090565b8115610ec1576000846000018381548110610e3b57610e3b61247f565b6000918252602091829020604080518082019091529101546001600160a01b03811682526001600160601b03600160a01b909104811692820183905290925083161015610ea1576001600160601b0382166020820152610e9c8582856114b9565b610ebb565b6001600160601b0382166020820152610ebb858285611644565b50610c9c565b604080518082019091526001600160a01b03841681526001600160601b03821660208201528454610c9c918691611644565b6001600160a01b03821660009081526001808501602052604082208290558454610f1d91906123e3565b9050808203610f54578354849080610f3757610f37612495565b600082815260208120820160001990810191909155019055610c9c565b6000846000018281548110610f6b57610f6b61247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091528554909150859080610fba57610fba612495565b600082815260208120820160001990810191909155019055610fdd858285611644565b610c9a85866000018581548110610ff657610ff661247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152856114b9565b60008082121561105d5760405163608c83ff60e11b815260048101839052602401610e11565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f9082131561109a57604051632c482c3960e01b815260048101839052602401610e11565b6109f3670de0b6b3a76400008302611721565b80546000906109f3906001906123e3565b600081156109f357610a0d6110db846110d68561188f565b610d8d565b678ac7230489e80000610d8d565b600081831015610c015781610a0d565b60008080611000670de0b6b3a764000082808080805b86156111db5761111f878b6123f6565b93508b8461200181106111345761113461247f565b015492508b6120010184612001811061114f5761114f61247f565b015491508160000361116a576111658684610a14565b61118c565b61118c6111778388612441565b846a0c097ce7bc90715b34b9f160241b6118a3565b61119690866123f6565b90508a8110156111b557611cdc84116111b0578399508094505b6111cf565b81156111c8576111c58683611951565b95505b8098508597505b600187901c965061110f565b505050505050509250925092565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156112295760405163e608e18b60e01b815260048101839052602401610e11565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315611266576040516371f72a3160e01b815260048101839052602401610e11565b50670de0b6b3a76400000290565b60008082136112995760405163309fa7dd60e11b815260048101839052602401610e11565b6000670de0b6b3a764000083126112b2575060016112cb565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b60006112e0670de0b6b3a76400008505611966565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff19810161130a57505002919050565b6706f05b59d3b200005b600081131561134f57670de0b6b3a7640000828002059150671bc16d674ec800008212611347579384019360019190911d905b60011d611314565b50505002919050565b6000600160ff1b83148061136f5750600160ff1b82145b1561138d57604051630d01a11b60e21b81526004016040'... 8934 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel\'s lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don\'t need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.\'s \\"Hacker\'s Delight\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\"msb\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // ‚Üí `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // ‚Üí `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton\'s method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result'... 274321 more characters
  }
}
duplicate definition - LimitIndexExceeded()
2024-01-08T15:26:05.715Z cannon:cli:rpc eth_chainId

2024-01-08T15:26:05.718Z cannon:cli:rpc eth_getCode

2024-01-08T15:26:06.316Z cannon:builder:contract performing arachnid create2
2024-01-08T15:26:06.335Z cannon:builder:contract create2 address is 0x422d470fb02206733Bb770D2A27d6d98f493af64
2024-01-08T15:26:06.338Z cannon:cli:rpc eth_chainId

2024-01-08T15:26:06.342Z cannon:cli:rpc eth_getCode

2024-01-08T15:26:07.263Z cannon:cli:rpc anvil_impersonateAccount

2024-01-08T15:26:07.264Z cannon:cli:rpc anvil_setBalance

2024-01-08T15:26:07.270Z cannon:cli:rpc eth_blockNumber

2024-01-08T15:26:07.271Z cannon:cli:rpc eth_chainId

2024-01-08T15:26:07.274Z cannon:cli:rpc eth_chainId

2024-01-08T15:26:07.281Z cannon:cli:rpc eth_estimateGas

2024-01-08T15:26:07.686Z cannon:cli:rpc eth_sendTransaction

2024-01-08T15:26:07.688Z cannon:cli:rpc 
    Transaction: 0xd69579d47bd5c8723115bec074929864a19201645004e7bdbb5c2cb41f904e2f
    Gas used: 2100149

    Block Number: 114564383
    Block Hash: 0x0c4a00cc45050459246fce960cc23b622c99ad82ca9abebf5cabe2bd30c813e6
    Block Time: "Mon, 8 Jan 2024 15:26:05 +0000"


2024-01-08T15:26:07.691Z cannon:cli:rpc eth_chainId

2024-01-08T15:26:07.693Z cannon:cli:rpc eth_getTransactionByHash

2024-01-08T15:26:07.701Z cannon:cli:rpc eth_chainId

2024-01-08T15:26:07.703Z cannon:cli:rpc eth_getTransactionReceipt

2024-01-08T15:26:07.704Z cannon:builder:contract arachnid create2 complete {
  to: '0x4e59b44847b379578588920cA78FbF26c0B4956C',
  from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
  contractAddress: null,
  transactionIndex: 0,
  gasUsed: BigNumber { _hex: '0x200bb5', _isBigNumber: true },
  logsBloom: '0x
  blockHash: '0x0c4a00cc45050459246fce960cc23b622c99ad82ca9abebf5cabe2bd30c813e6',
  transactionHash: '0xd69579d47bd5c8723115bec074929864a19201645004e7bdbb5c2cb41f904e2f',
  logs: [],
  blockNumber: 114564383,
  confirmations: 1,
  cumulativeGasUsed: BigNumber { _hex: '0x200bb5', _isBigNumber: true },
  effectiveGasPrice: BigNumber { _hex: '0x413ef3', _isBigNumber: true },
  status: 1,
  type: 2,
  byzantium: true
}
2024-01-08T15:26:07.705Z cannon:builder:contract contract deployed to address 0x422d470fb02206733Bb770D2A27d6d98f493af64
  ‚úî Successfully deployed BorrowerActions using CREATE2
  Contract Address: 0x422d470fb02206733Bb770D2A27d6d98f493af64
  Transaction Hash: 0xd69579d47bd5c8723115bec074929864a19201645004e7bdbb5c2cb41f904e2f
  Transaction Cost: 0.000008980142617295 ETH (2,100,149 gas)

2024-01-08T15:26:07.712Z cannon:builder:runtime resolve artifact BorrowerActions
2024-01-08T15:26:07.712Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:26:16.067Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/BorrowerActions.sol': 'BorrowerActions' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/BorrowerActions.sol': {
      keccak256: '0xecf8ce41a4034aa174c72bab7e558d788c1cc052ee77b2151f4acee4691be839',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/SettlerActions.sol': {
      keccak256: '0x05edfe3f72323b7212fbb5134f76211f397138c2ed30ddf0f3683772213c831d',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/RevertsHelper.sol': {
      keccak256: '0xcaff095290172f1b5726d4e887ab9be5f524d9321e94ca0095f99b666381a6f4',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:26:16.068Z cannon:cli:foundry evm version paris
2024-01-08T15:26:16.073Z cannon:builder:runtime reported contract artifact BorrowerActions {
  contractName: 'BorrowerActions',
  sourceName: 'src/libraries/external/BorrowerActions.sol',
  abi: [
    {
      type: 'event',
      name: 'LoanStamped',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'AmountLTMinDebt', inputs: [] },
    { type: 'error', name: 'AuctionActive', inputs: [] },
    { type: 'error', name: 'BorrowerNotSender', inputs: [] },
    { type: 'error', name: 'BorrowerUnderCollateralized', inputs: [] },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'DustAmountNotExceeded', inputs: [] },
    { type: 'error', name: 'InsufficientCollateral', inputs: [] },
    { type: 'error', name: 'InsufficientLiquidity', inputs: [] },
    { type: 'error', name: 'InvalidAmount', inputs: [] },
    { type: 'error', name: 'LimitIndexExceeded', inputs: [] },
    { type: 'error', name: 'LimitIndexExceeded', inputs: [] },
    { type: 'error', name: 'NoDebt', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__SqrtNegativeInput',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__SqrtOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'ZeroDebtToCollateral', inputs: [] }
  ],
  bytecode: '0x6124fa61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80634700688d1461005057806382c9345114610083578063ea067a571461011c575b600080fd5b81801561005c57600080fd5b5061007061006b366004612266565b6101a9565b6040519081526020015b60405180910390f35b81801561008f57600080fd5b506100a361009e3660046122be565b6102b1565b60405161007a9190600061014082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151818401525092915050565b81801561012857600080fd5b5061013c61013736600461232e565b610666565b60405161007a9190600061012082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525092915050565b60006101b585336109c9565b156101d3576040516359bfb80360e11b815260040160405180910390fd5b3360009081526002808501602090815260409283902083516060808201865282548252600183015493820193909352920154928201929092529061021b9086908501356109f9565b915061024c61023282600001518560a00135610a14565b602080840151908590610247908801886123aa565b610a48565b610269576040516374de9aa760e11b815260040160405180910390fd5b61027d8482338660e0013560006001610abf565b60405133907f8d6660b4a409414ebe386e9dd200a5c4e75591f0fc98e1272d7ba207d06d4c3490600090a250949350505050565b610307604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040805160a0810182526000808252606082018190526080820152851580159282018390528515156020830152909161034257508060200151155b156103605760405163162908e360e11b815260040160405180910390fd5b61036a8a876109c9565b15610388576040516359bfb80360e11b815260040160405180910390fd5b6001600160a01b03861660009081526002808a0160209081526040928390208351606081018552815480825260018301549382019390935292015492820192909252906103d99060a08a0135610a14565b8252805160c084015260208082018051610100860152898201356080808701919091526060808c0135604080890191909152918c01359387019390935290519185019190915282015115610547578051600003610449576040516308d1fde360e11b815260040160405180910390fd5b600019860361045e578051608083015261047d565b8051610477906104728860a08c0135610bdc565b610bf1565b60808301525b61048f82608001518960a00135610c08565b60a084018190526000036104b65760405163162908e360e11b815260040160405180910390fd5b8160800151836080018181516104cc91906123e3565b90525060808301516104e29060a08a0135610a14565b604084015260808201518151610505916104fb916123e3565b8960a00135610a14565b808352604084015161051f918b91906101008c0135610c34565b61052d8a84604001516109f9565b83526080820151815182906105439083906123e3565b9052505b816020015115610625576001600160a01b038716331461057a5760405163cad4de1160e01b815260040160405180910390fd5b8160400151610594576105918a84604001516109f9565b83525b80602001518511156105b957604051633a23d82560e01b815260040160405180910390fd5b84816020018181516105cb91906123e3565b905250815160208083015185516105e99392610247908d018d6123aa565b61060657604051633a23d82560e01b815260040160405180910390fd5b600160608301526020830180518691906106219083906123e3565b9052505b82516106319085610ca2565b6106488982898b60e0013560008760600151610abf565b805160e0840152602001516101208301525098975050505050505050565b6106b56040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b858411156106d65760405163bb55fd2760e01b815260040160405180910390fd5b6106e08a866109c9565b156106fe576040516359bfb80360e11b815260040160405180910390fd5b6040805160c0810182526000602082018190529181018290526060810182905260a08101919091528215801560808301819052861515835261073f57508051155b1561075d5760405163162908e360e11b815260040160405180910390fd5b6001600160a01b03861660009081526002808b0160209081526040928390208351606081018552815480825260018301549382019390935292015492820192909252906107ae9060a08b0135610a14565b602080840191909152815160a0850152818101805160e08601528a8201356080808701919091526060808d01356040880152818d0135938701939093529051918501919091528201511561085257838160200181815161080e91906123f6565b9052506060830180518591906108259083906123f6565b9052506040830151610838908c906109f9565b835260208301805185919061084e9083906123f6565b9052505b815115610993576001600160a01b03871633146108825760405163cad4de1160e01b815260040160405180910390fd5b610890868a60a00135610ccf565b604083018190526108c090670de0b6b3a76400006108b160e08d0135610ce7565b6108bb91906123f6565b610a14565b60608301819052815182906108d69083906123f6565b90525080516108e99060a08b0135610a14565b602083018190526040840151610907918c91906101008d0135610c34565b81606001518360800181815161091d91906123f6565b90525060808301516109339060a08b0135610a14565b60408401819052610945908c906109f9565b8084526109529086610ca2565b60208083015182820151855161096e93610247908e018e6123aa565b61098b576040516374de9aa760e11b815260040160405180910390fd5b600160a08301525b6109aa8a82898c60e0013560008760a00151610abf565b805160c084015260200151610100830152509998505050505050505050565b6001600160a01b03811660009081526003830160205260409020600101546001600160601b031615155b92915050565b6000610a0d610a088484610d0c565b610d22565b9392505050565b6000670de0b6b3a7640000610a2a60028261241f565b610a348486612441565b610a3e91906123f6565b610a0d919061241f565b600064173eb4c80a83148015610a5d57508415155b15610a6a57506000610ab7565b60001960ff831601610a9657670de0b6b3a7640000610a89818661241f565b610a939190612441565b93505b610aa8670e6ed27d6668000086610a14565b610ab28585610a14565b101590505b949350505050565b845160009015801590610ad55750602086015115155b9050600081610ae5576000610af7565b610af787600001518860200151610d8d565b905083610b6c576001600160a01b03861660009081526001890160205260409020548215610b595781600003610b4057604051639f7e164b60e01b815260040160405180910390fd5b610b54898883610b4f86610dad565b610e1e565b610b6a565b8015610b6a57610b6a898883610ef3565b505b8215610b9f576002610b7d86611037565b610b87919061241f565b610b9990670de0b6b3a76400006123f6565b60408801525b505050506001600160a01b039190911660009081526002938401602090815260409182902084518155908401516001820155920151919092015550565b600081610a3e670de0b6b3a764000085612441565b600081831115610c015781610a0d565b5090919050565b6000670de0b6b3a7640000600181610c208587612441565b610c2a91906123f6565b610a3e91906123e3565b8115610c9c5780821015610c5b576040516345b3f65d60e01b815260040160405180910390fd5b6000610c66856110ad565b9050600a8110610c9a57610c7a84826110be565b831015610c9a57604051635b85919f60e11b815260040160405180910390fd5b505b50505050565b610cab81610d22565b821015610ccb57604051638be4f6eb60e01b815260040160405180910390fd5b5050565b600081600181610c20670de0b6b3a764000087612441565b60006109f3610cff836802d1a51c7e00500000610d8d565b6601c6bf526340006110e9565b6000610d1883836110f9565b5090949350505050565b600080610d318361103c612458565b9050610c9f19811280610d45575061103c81135b15610d6357604051637edf443b60e11b815260040160405180910390fd5b610a0d610d88610d72836111e9565b610d83670df27a2cdf448000611274565b611358565b61141d565b600081610d9b60028261241f565b610a34670de0b6b3a764000086612441565b60006001600160601b03821115610e1a5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b60648201526084015b60405180910390fd5b5090565b8115610ec1576000846000018381548110610e3b57610e3b61247f565b6000918252602091829020604080518082019091529101546001600160a01b03811682526001600160601b03600160a01b909104811692820183905290925083161015610ea1576001600160601b0382166020820152610e9c8582856114b9565b610ebb565b6001600160601b0382166020820152610ebb858285611644565b50610c9c565b604080518082019091526001600160a01b03841681526001600160601b03821660208201528454610c9c918691611644565b6001600160a01b03821660009081526001808501602052604082208290558454610f1d91906123e3565b9050808203610f54578354849080610f3757610f37612495565b600082815260208120820160001990810191909155019055610c9c565b6000846000018281548110610f6b57610f6b61247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091528554909150859080610fba57610fba612495565b600082815260208120820160001990810191909155019055610fdd858285611644565b610c9a85866000018581548110610ff657610ff661247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152856114b9565b60008082121561105d5760405163608c83ff60e11b815260048101839052602401610e11565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f9082131561109a57604051632c482c3960e01b815260048101839052602401610e11565b6109f3670de0b6b3a76400008302611721565b80546000906109f3906001906123e3565b600081156109f357610a0d6110db846110d68561188f565b610d8d565b678ac7230489e80000610d8d565b600081831015610c015781610a0d565b60008080611000670de0b6b3a764000082808080805b86156111db5761111f878b6123f6565b93508b8461200181106111345761113461247f565b015492508b6120010184612001811061114f5761114f61247f565b015491508160000361116a576111658684610a14565b61118c565b61118c6111778388612441565b846a0c097ce7bc90715b34b9f160241b6118a3565b61119690866123f6565b90508a8110156111b557611cdc84116111b0578399508094505b6111cf565b81156111c8576111c58683611951565b95505b8098508597505b600187901c965061110f565b505050505050509250925092565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156112295760405163e608e18b60e01b815260048101839052602401610e11565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315611266576040516371f72a3160e01b815260048101839052602401610e11565b50670de0b6b3a76400000290565b60008082136112995760405163309fa7dd60e11b815260048101839052602401610e11565b6000670de0b6b3a764000083126112b2575060016112cb565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b60006112e0670de0b6b3a76400008505611966565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff19810161130a57505002919050565b6706f05b59d3b200005b600081131561134f57670de0b6b3a7640000828002059150671bc16d674ec800008212611347579384019360019190911d905b60011d6113'... 9050 more characters,
  deployedBytecode: '0x730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80634700688d1461005057806382c9345114610083578063ea067a571461011c575b600080fd5b81801561005c57600080fd5b5061007061006b366004612266565b6101a9565b6040519081526020015b60405180910390f35b81801561008f57600080fd5b506100a361009e3660046122be565b6102b1565b60405161007a9190600061014082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151818401525092915050565b81801561012857600080fd5b5061013c61013736600461232e565b610666565b60405161007a9190600061012082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525092915050565b60006101b585336109c9565b156101d3576040516359bfb80360e11b815260040160405180910390fd5b3360009081526002808501602090815260409283902083516060808201865282548252600183015493820193909352920154928201929092529061021b9086908501356109f9565b915061024c61023282600001518560a00135610a14565b602080840151908590610247908801886123aa565b610a48565b610269576040516374de9aa760e11b815260040160405180910390fd5b61027d8482338660e0013560006001610abf565b60405133907f8d6660b4a409414ebe386e9dd200a5c4e75591f0fc98e1272d7ba207d06d4c3490600090a250949350505050565b610307604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040805160a0810182526000808252606082018190526080820152851580159282018390528515156020830152909161034257508060200151155b156103605760405163162908e360e11b815260040160405180910390fd5b61036a8a876109c9565b15610388576040516359bfb80360e11b815260040160405180910390fd5b6001600160a01b03861660009081526002808a0160209081526040928390208351606081018552815480825260018301549382019390935292015492820192909252906103d99060a08a0135610a14565b8252805160c084015260208082018051610100860152898201356080808701919091526060808c0135604080890191909152918c01359387019390935290519185019190915282015115610547578051600003610449576040516308d1fde360e11b815260040160405180910390fd5b600019860361045e578051608083015261047d565b8051610477906104728860a08c0135610bdc565b610bf1565b60808301525b61048f82608001518960a00135610c08565b60a084018190526000036104b65760405163162908e360e11b815260040160405180910390fd5b8160800151836080018181516104cc91906123e3565b90525060808301516104e29060a08a0135610a14565b604084015260808201518151610505916104fb916123e3565b8960a00135610a14565b808352604084015161051f918b91906101008c0135610c34565b61052d8a84604001516109f9565b83526080820151815182906105439083906123e3565b9052505b816020015115610625576001600160a01b038716331461057a5760405163cad4de1160e01b815260040160405180910390fd5b8160400151610594576105918a84604001516109f9565b83525b80602001518511156105b957604051633a23d82560e01b815260040160405180910390fd5b84816020018181516105cb91906123e3565b905250815160208083015185516105e99392610247908d018d6123aa565b61060657604051633a23d82560e01b815260040160405180910390fd5b600160608301526020830180518691906106219083906123e3565b9052505b82516106319085610ca2565b6106488982898b60e0013560008760600151610abf565b805160e0840152602001516101208301525098975050505050505050565b6106b56040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b858411156106d65760405163bb55fd2760e01b815260040160405180910390fd5b6106e08a866109c9565b156106fe576040516359bfb80360e11b815260040160405180910390fd5b6040805160c0810182526000602082018190529181018290526060810182905260a08101919091528215801560808301819052861515835261073f57508051155b1561075d5760405163162908e360e11b815260040160405180910390fd5b6001600160a01b03861660009081526002808b0160209081526040928390208351606081018552815480825260018301549382019390935292015492820192909252906107ae9060a08b0135610a14565b602080840191909152815160a0850152818101805160e08601528a8201356080808701919091526060808d01356040880152818d0135938701939093529051918501919091528201511561085257838160200181815161080e91906123f6565b9052506060830180518591906108259083906123f6565b9052506040830151610838908c906109f9565b835260208301805185919061084e9083906123f6565b9052505b815115610993576001600160a01b03871633146108825760405163cad4de1160e01b815260040160405180910390fd5b610890868a60a00135610ccf565b604083018190526108c090670de0b6b3a76400006108b160e08d0135610ce7565b6108bb91906123f6565b610a14565b60608301819052815182906108d69083906123f6565b90525080516108e99060a08b0135610a14565b602083018190526040840151610907918c91906101008d0135610c34565b81606001518360800181815161091d91906123f6565b90525060808301516109339060a08b0135610a14565b60408401819052610945908c906109f9565b8084526109529086610ca2565b60208083015182820151855161096e93610247908e018e6123aa565b61098b576040516374de9aa760e11b815260040160405180910390fd5b600160a08301525b6109aa8a82898c60e0013560008760a00151610abf565b805160c084015260200151610100830152509998505050505050505050565b6001600160a01b03811660009081526003830160205260409020600101546001600160601b031615155b92915050565b6000610a0d610a088484610d0c565b610d22565b9392505050565b6000670de0b6b3a7640000610a2a60028261241f565b610a348486612441565b610a3e91906123f6565b610a0d919061241f565b600064173eb4c80a83148015610a5d57508415155b15610a6a57506000610ab7565b60001960ff831601610a9657670de0b6b3a7640000610a89818661241f565b610a939190612441565b93505b610aa8670e6ed27d6668000086610a14565b610ab28585610a14565b101590505b949350505050565b845160009015801590610ad55750602086015115155b9050600081610ae5576000610af7565b610af787600001518860200151610d8d565b905083610b6c576001600160a01b03861660009081526001890160205260409020548215610b595781600003610b4057604051639f7e164b60e01b815260040160405180910390fd5b610b54898883610b4f86610dad565b610e1e565b610b6a565b8015610b6a57610b6a898883610ef3565b505b8215610b9f576002610b7d86611037565b610b87919061241f565b610b9990670de0b6b3a76400006123f6565b60408801525b505050506001600160a01b039190911660009081526002938401602090815260409182902084518155908401516001820155920151919092015550565b600081610a3e670de0b6b3a764000085612441565b600081831115610c015781610a0d565b5090919050565b6000670de0b6b3a7640000600181610c208587612441565b610c2a91906123f6565b610a3e91906123e3565b8115610c9c5780821015610c5b576040516345b3f65d60e01b815260040160405180910390fd5b6000610c66856110ad565b9050600a8110610c9a57610c7a84826110be565b831015610c9a57604051635b85919f60e11b815260040160405180910390fd5b505b50505050565b610cab81610d22565b821015610ccb57604051638be4f6eb60e01b815260040160405180910390fd5b5050565b600081600181610c20670de0b6b3a764000087612441565b60006109f3610cff836802d1a51c7e00500000610d8d565b6601c6bf526340006110e9565b6000610d1883836110f9565b5090949350505050565b600080610d318361103c612458565b9050610c9f19811280610d45575061103c81135b15610d6357604051637edf443b60e11b815260040160405180910390fd5b610a0d610d88610d72836111e9565b610d83670df27a2cdf448000611274565b611358565b61141d565b600081610d9b60028261241f565b610a34670de0b6b3a764000086612441565b60006001600160601b03821115610e1a5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b60648201526084015b60405180910390fd5b5090565b8115610ec1576000846000018381548110610e3b57610e3b61247f565b6000918252602091829020604080518082019091529101546001600160a01b03811682526001600160601b03600160a01b909104811692820183905290925083161015610ea1576001600160601b0382166020820152610e9c8582856114b9565b610ebb565b6001600160601b0382166020820152610ebb858285611644565b50610c9c565b604080518082019091526001600160a01b03841681526001600160601b03821660208201528454610c9c918691611644565b6001600160a01b03821660009081526001808501602052604082208290558454610f1d91906123e3565b9050808203610f54578354849080610f3757610f37612495565b600082815260208120820160001990810191909155019055610c9c565b6000846000018281548110610f6b57610f6b61247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091528554909150859080610fba57610fba612495565b600082815260208120820160001990810191909155019055610fdd858285611644565b610c9a85866000018581548110610ff657610ff661247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152856114b9565b60008082121561105d5760405163608c83ff60e11b815260048101839052602401610e11565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f9082131561109a57604051632c482c3960e01b815260048101839052602401610e11565b6109f3670de0b6b3a76400008302611721565b80546000906109f3906001906123e3565b600081156109f357610a0d6110db846110d68561188f565b610d8d565b678ac7230489e80000610d8d565b600081831015610c015781610a0d565b60008080611000670de0b6b3a764000082808080805b86156111db5761111f878b6123f6565b93508b8461200181106111345761113461247f565b015492508b6120010184612001811061114f5761114f61247f565b015491508160000361116a576111658684610a14565b61118c565b61118c6111778388612441565b846a0c097ce7bc90715b34b9f160241b6118a3565b61119690866123f6565b90508a8110156111b557611cdc84116111b0578399508094505b6111cf565b81156111c8576111c58683611951565b95505b8098508597505b600187901c965061110f565b505050505050509250925092565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156112295760405163e608e18b60e01b815260048101839052602401610e11565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315611266576040516371f72a3160e01b815260048101839052602401610e11565b50670de0b6b3a76400000290565b60008082136112995760405163309fa7dd60e11b815260048101839052602401610e11565b6000670de0b6b3a764000083126112b2575060016112cb565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b60006112e0670de0b6b3a76400008505611966565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff19810161130a57505002919050565b6706f05b59d3b200005b600081131561134f57670de0b6b3a7640000828002059150671bc16d674ec800008212611347579384019360019190911d905b60011d611314565b50505002919050565b6000600160ff1b83148061136f5750600160ff1b82145b1561138d57604051630d01a11b60e21b81526004016040'... 8934 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel\'s lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don\'t need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.\'s \\"Hacker\'s Delight\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\"msb\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // ‚Üí `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // ‚Üí `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton\'s method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result'... 274321 more characters
  }
}
2024-01-08T15:26:16.074Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x6124fa61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80634700688d1461005057806382c9345114610083578063ea067a571461011c575b600080fd5b81801561005c57600080fd5b5061007061006b366004612266565b6101a9565b6040519081526020015b60405180910390f35b81801561008f57600080fd5b506100a361009e3660046122be565b6102b1565b60405161007a9190600061014082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151818401525092915050565b81801561012857600080fd5b5061013c61013736600461232e565b610666565b60405161007a9190600061012082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525092915050565b60006101b585336109c9565b156101d3576040516359bfb80360e11b815260040160405180910390fd5b3360009081526002808501602090815260409283902083516060808201865282548252600183015493820193909352920154928201929092529061021b9086908501356109f9565b915061024c61023282600001518560a00135610a14565b602080840151908590610247908801886123aa565b610a48565b610269576040516374de9aa760e11b815260040160405180910390fd5b61027d8482338660e0013560006001610abf565b60405133907f8d6660b4a409414ebe386e9dd200a5c4e75591f0fc98e1272d7ba207d06d4c3490600090a250949350505050565b610307604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040805160a0810182526000808252606082018190526080820152851580159282018390528515156020830152909161034257508060200151155b156103605760405163162908e360e11b815260040160405180910390fd5b61036a8a876109c9565b15610388576040516359bfb80360e11b815260040160405180910390fd5b6001600160a01b03861660009081526002808a0160209081526040928390208351606081018552815480825260018301549382019390935292015492820192909252906103d99060a08a0135610a14565b8252805160c084015260208082018051610100860152898201356080808701919091526060808c0135604080890191909152918c01359387019390935290519185019190915282015115610547578051600003610449576040516308d1fde360e11b815260040160405180910390fd5b600019860361045e578051608083015261047d565b8051610477906104728860a08c0135610bdc565b610bf1565b60808301525b61048f82608001518960a00135610c08565b60a084018190526000036104b65760405163162908e360e11b815260040160405180910390fd5b8160800151836080018181516104cc91906123e3565b90525060808301516104e29060a08a0135610a14565b604084015260808201518151610505916104fb916123e3565b8960a00135610a14565b808352604084015161051f918b91906101008c0135610c34565b61052d8a84604001516109f9565b83526080820151815182906105439083906123e3565b9052505b816020015115610625576001600160a01b038716331461057a5760405163cad4de1160e01b815260040160405180910390fd5b8160400151610594576105918a84604001516109f9565b83525b80602001518511156105b957604051633a23d82560e01b815260040160405180910390fd5b84816020018181516105cb91906123e3565b905250815160208083015185516105e99392610247908d018d6123aa565b61060657604051633a23d82560e01b815260040160405180910390fd5b600160608301526020830180518691906106219083906123e3565b9052505b82516106319085610ca2565b6106488982898b60e0013560008760600151610abf565b805160e0840152602001516101208301525098975050505050505050565b6106b56040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b858411156106d65760405163bb55fd2760e01b815260040160405180910390fd5b6106e08a866109c9565b156106fe576040516359bfb80360e11b815260040160405180910390fd5b6040805160c0810182526000602082018190529181018290526060810182905260a08101919091528215801560808301819052861515835261073f57508051155b1561075d5760405163162908e360e11b815260040160405180910390fd5b6001600160a01b03861660009081526002808b0160209081526040928390208351606081018552815480825260018301549382019390935292015492820192909252906107ae9060a08b0135610a14565b602080840191909152815160a0850152818101805160e08601528a8201356080808701919091526060808d01356040880152818d0135938701939093529051918501919091528201511561085257838160200181815161080e91906123f6565b9052506060830180518591906108259083906123f6565b9052506040830151610838908c906109f9565b835260208301805185919061084e9083906123f6565b9052505b815115610993576001600160a01b03871633146108825760405163cad4de1160e01b815260040160405180910390fd5b610890868a60a00135610ccf565b604083018190526108c090670de0b6b3a76400006108b160e08d0135610ce7565b6108bb91906123f6565b610a14565b60608301819052815182906108d69083906123f6565b90525080516108e99060a08b0135610a14565b602083018190526040840151610907918c91906101008d0135610c34565b81606001518360800181815161091d91906123f6565b90525060808301516109339060a08b0135610a14565b60408401819052610945908c906109f9565b8084526109529086610ca2565b60208083015182820151855161096e93610247908e018e6123aa565b61098b576040516374de9aa760e11b815260040160405180910390fd5b600160a08301525b6109aa8a82898c60e0013560008760a00151610abf565b805160c084015260200151610100830152509998505050505050505050565b6001600160a01b03811660009081526003830160205260409020600101546001600160601b031615155b92915050565b6000610a0d610a088484610d0c565b610d22565b9392505050565b6000670de0b6b3a7640000610a2a60028261241f565b610a348486612441565b610a3e91906123f6565b610a0d919061241f565b600064173eb4c80a83148015610a5d57508415155b15610a6a57506000610ab7565b60001960ff831601610a9657670de0b6b3a7640000610a89818661241f565b610a939190612441565b93505b610aa8670e6ed27d6668000086610a14565b610ab28585610a14565b101590505b949350505050565b845160009015801590610ad55750602086015115155b9050600081610ae5576000610af7565b610af787600001518860200151610d8d565b905083610b6c576001600160a01b03861660009081526001890160205260409020548215610b595781600003610b4057604051639f7e164b60e01b815260040160405180910390fd5b610b54898883610b4f86610dad565b610e1e565b610b6a565b8015610b6a57610b6a898883610ef3565b505b8215610b9f576002610b7d86611037565b610b87919061241f565b610b9990670de0b6b3a76400006123f6565b60408801525b505050506001600160a01b039190911660009081526002938401602090815260409182902084518155908401516001820155920151919092015550565b600081610a3e670de0b6b3a764000085612441565b600081831115610c015781610a0d565b5090919050565b6000670de0b6b3a7640000600181610c208587612441565b610c2a91906123f6565b610a3e91906123e3565b8115610c9c5780821015610c5b576040516345b3f65d60e01b815260040160405180910390fd5b6000610c66856110ad565b9050600a8110610c9a57610c7a84826110be565b831015610c9a57604051635b85919f60e11b815260040160405180910390fd5b505b50505050565b610cab81610d22565b821015610ccb57604051638be4f6eb60e01b815260040160405180910390fd5b5050565b600081600181610c20670de0b6b3a764000087612441565b60006109f3610cff836802d1a51c7e00500000610d8d565b6601c6bf526340006110e9565b6000610d1883836110f9565b5090949350505050565b600080610d318361103c612458565b9050610c9f19811280610d45575061103c81135b15610d6357604051637edf443b60e11b815260040160405180910390fd5b610a0d610d88610d72836111e9565b610d83670df27a2cdf448000611274565b611358565b61141d565b600081610d9b60028261241f565b610a34670de0b6b3a764000086612441565b60006001600160601b03821115610e1a5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b60648201526084015b60405180910390fd5b5090565b8115610ec1576000846000018381548110610e3b57610e3b61247f565b6000918252602091829020604080518082019091529101546001600160a01b03811682526001600160601b03600160a01b909104811692820183905290925083161015610ea1576001600160601b0382166020820152610e9c8582856114b9565b610ebb565b6001600160601b0382166020820152610ebb858285611644565b50610c9c565b604080518082019091526001600160a01b03841681526001600160601b03821660208201528454610c9c918691611644565b6001600160a01b03821660009081526001808501602052604082208290558454610f1d91906123e3565b9050808203610f54578354849080610f3757610f37612495565b600082815260208120820160001990810191909155019055610c9c565b6000846000018281548110610f6b57610f6b61247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091528554909150859080610fba57610fba612495565b600082815260208120820160001990810191909155019055610fdd858285611644565b610c9a85866000018581548110610ff657610ff661247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152856114b9565b60008082121561105d5760405163608c83ff60e11b815260048101839052602401610e11565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f9082131561109a57604051632c482c3960e01b815260048101839052602401610e11565b6109f3670de0b6b3a76400008302611721565b80546000906109f3906001906123e3565b600081156109f357610a0d6110db846110d68561188f565b610d8d565b678ac7230489e80000610d8d565b600081831015610c015781610a0d565b60008080611000670de0b6b3a764000082808080805b86156111db5761111f878b6123f6565b93508b8461200181106111345761113461247f565b015492508b6120010184612001811061114f5761114f61247f565b015491508160000361116a576111658684610a14565b61118c565b61118c6111778388612441565b846a0c097ce7bc90715b34b9f160241b6118a3565b61119690866123f6565b90508a8110156111b557611cdc84116111b0578399508094505b6111cf565b81156111c8576111c58683611951565b95505b8098508597505b600187901c965061110f565b505050505050509250925092565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156112295760405163e608e18b60e01b815260048101839052602401610e11565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315611266576040516371f72a3160e01b815260048101839052602401610e11565b50670de0b6b3a76400000290565b60008082136112995760405163309fa7dd60e11b815260048101839052602401610e11565b6000670de0b6b3a764000083126112b2575060016112cb565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b60006112e0670de0b6b3a76400008505611966565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff19810161130a57505002919050565b6706f05b59d3b200005b600081131561134f57670de0b6b3a7640000828002059150671bc16d674ec800008212611347579384019360019190911d905b60011d611314565b50505002919050565b6000600160ff1b83148061136f5750600160ff1b82145b1561138d57604051630d01a11b60e21b815260040160405180910390fd5b6000806000851261139e57846113a3565b846000035b9150600084126113b357836113b8565b836000035b905060006113c68383611a44565b90506001600160ff1b038111156113f35760405163bf79e8d960e01b815260048101829052602401610e11565b60001980871390861380821860011461140c5782611411565b826000035b98975050505050505050565b6000808212156114705768033dd1780914b971141982121561144157506000919050565b61144d8260000361141d565b6a0c097ce7bc90715b34b9f160241b8161146957611469612409565b0592915050565b680a688906bd8b000000821261149c5760405163e69458f960e01b815260048101839052602401610e11565b670de0b6b3a7640000604083901b04610a0d81611b0a565b919050565b60006114c6826002612441565b84549091508181116114e3576114de8585858461219c565b610c9a565b60008560000183815481106114fa576114fa61247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b03169181019190915290506115428360016123f6565b82118015611593575060208101516001600160601b0316866115658560016123f6565b815481106115755761157561247f565b600091825260209091200154600160a01b90046001600160601b0316115b156115f357856115a2846124ab565b935083815481106115b5576115b561247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b03169181019190915290505b84602001516001600160601b031681602001516001600160601b031611611625576116208686868561219c565b61163c565b6116318682868561219c565b61163c8686856114b9565b505050505050565b8254600182148061169457508361165c60028461241f565b8154811061166c5761166c61247f565b60009182526020918290200154908401516001600160601b03600160a01b9092048216911611155b156116aa576116a58484848461219c565b610c9c565b61170c84806116ba60028661241f565b815481106116ca576116ca61247f565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152848461219c565b610c9c848461171c60028661241f565b611644565b60008160000361173357506000919050565b50600181600160801b811061174d5760409190911b9060801c5b600160401b81106117635760209190911b9060401c5b600160201b81106117795760109190911b9060201c5b62010000811061178e5760089190911b9060101c5b61010081106117a25760049190911b9060081c5b601081106117b55760029190911b9060041c5b600881106117c557600182901b91505b60018284816117d6576117d6612409565b048301901c915060018284816117ee576117ee612409565b048301901c9150600182848161180657611806612409565b048301901c9150600182848161181e5761181e612409565b048301901c9150600182848161183657611836612409565b048301901c9150600182848161184e5761184e612409565b048301901c9150600182848161186657611866612409565b048301901c9150600082848161187e5761187e612409565b04905080831015610a0d5782610ab7565b60006109f3670de0b6b3a764000083612441565b60008080600019858709858702925082811083820303915050806000036118dd578382816118d3576118d3612409565b0492505050610a0d565b8084116118e957600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000670de0b6b3a7640000610a3e8385612441565b6000600160801b821061198657608091821c9161198390826123f6565b90505b600160401b82106119a457604091821c916119a190826123f6565b90505b600160201b82106119c257602091821c916119bf90826123f6565b90505b6201000082106119df57601091821c916119dc90826123f6565b90505b61010082106119fb57600891821c916119f890826123f6565b90505b60108210611a1657600491821c91611a1390826123f6565b90505b60048210611a3157600291821c91611a2e90826123f6565b90505b600282106114b4576109f36001826123f6565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110611a885760405163698d9a0160e11b815260048101829052602401610e11565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff8211905082600003611ac65780670de0b6b3a76400008504019450505050506109f3565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615611b2a5768016a09e667f3bcc9090260401c5b6001603e1b821615611b45576801306fe0a31b7152df0260401c5b6001603d1b821615611b60576801172b83c7d517adce0260401c5b6001603c1b821615611b7b5768010b5586cf9890f62a0260401c5b6001603b1b821615611b96576801059b0d31585743ae0260401c5b6001603a1b821615611bb157680102c9a3e778060ee70260401c5b600160391b821615611bcc5768010163da9fb33356d80260401c5b600160381b821615611be757680100b1afa5abcbed610260401c5b600160371b821615611c025768010058c86da1c09ea20260401c5b600160361b821615611c1d576801002c605e2e8cec500260401c5b600160351b821615611c3857680100162f3904051fa10260401c5b600160341b821615611c53576801000b175effdc76ba0260401c5b600160331b821615611c6e57680100058ba01fb9f96d0260401c5b600160321b821615611c895768010002c5cc37da94920260401c5b600160311b821615611ca4576801000162e525ee05470260401c5b600160301b821615611cbf5768010000b17255775c040260401c5b6001602f1b821615611cda576801000058b91b5bc9ae0260401c5b6001602e1b821615611cf557680100002c5c89d5ec6d0260401c5b6001602d1b821615611d105768010000162e43f4f8310260401c5b6001602c1b821615611d2b57680100000b1721bcfc9a0260401c5b6001602b1b821615611d465768010000058b90cf1e6e0260401c5b6001602a1b821615611d61576801000002c5c863b73f0260401c5b600160291b821615611d7c57680100000162e430e5a20260401c5b600160281b821615611d97576801000000b1721835510260401c5b600160271b821615611db257680100000058b90c0b490260401c5b600160261b821615611dcd5768010000002c5c8601cc0260401c5b600160251b821615611de8576801000000162e42fff00260401c5b600160241b821615611e035768010000000b17217fbb0260401c5b600160231b821615611e1e576801000000058b90bfce0260401c5b600160221b821615611e3957680100000002c5c85fe30260401c5b600160211b821615611e545768010000000162e42ff10260401c5b600160201b821615611e6f57680100000000b17217f80260401c5b6380000000821615611e8a5768010000000058b90bfc0260401c5b6340000000821615611ea5576801000000002c5c85fe0260401c5b6320000000821615611ec057680100000000162e42ff0260401c5b6310000000821615611edb576801000000000b17217f0260401c5b6308000000821615611ef657680100000000058b90c00260401c5b6304000000821615611f115768010000000002c5c8600260401c5b6302000000821615611f2c576801000000000162e4300260401c5b6301000000821615611f475768010000000000b172180260401c5b62800000821615611f61576801000000000058b90c0260401c5b62400000821615611f7b57680100000000002c5c860260401c5b62200000821615611f955768010000000000162e430260401c5b62100000821615611faf57680100000000000b17210260401c5b62080000821615611fc95768010000000000058b910260401c5b62040000821615611fe3576801000000000002c5c80260401c5b62020000821615611ffd57680100000000000162e40260401c5b620100008216156120165761b172600160401b010260401c5b61800082161561202e576158b9600160401b010260401c5b61400082161561204657612c5d600160401b010260401c5b61200082161561205e5761162e600160401b010260401c5b61100082161561207657610b17600160401b010260401c5b61080082161561208e5761058c600160401b010260401c5b6104008216156120a6576102c6600160401b010260401c5b6102008216156120be57610163600160401b010260401c5b6101008216156120d55760b1600160401b010260401c5b60808216156120eb576059600160401b010260401c5b604082161561210157602c600160401b010260401c5b6020821615612117576016600160401b010260401c5b601082161561212d57600b600160401b010260401c5b6008821615612143576006600160401b010260401c5b6004821615612159576003600160401b010260401c5b600282161561216f576001600160401b010260401c5b6001821615612185576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b8082036121e257835460018101855560008581526020908190208551918601516001600160601b0316600160a01b026001600160a01b039092169190911791015561222c565b828460000183815481106121f8576121f861247f565b6000918252602091829020835193909201516001600160601b0316600160a01b026001600160a01b03909316929092179101555b5090516001600160a01b031660009081526001909201602052604090912055565b6000610120828403121561226057600080fd5b50919050565b600080600080610180858703121561227d57600080fd5b84359350602085013592506040850135915061229c866060870161224d565b905092959194509250565b80356001600160a01b03811681146114b457600080fd5b600080600080600080600080610200898b0312156122db57600080fd5b8835975060208901359650604089013595506122fa8a60608b0161224d565b94506123096101808a016122a7565b979a96995094979396956101a085013595506101c0850135946101e001359350915050565b60008060008060008060008060006102208a8c03121561234d57600080fd5b8935985060208a0135975060408a0135965061236c8b60608c0161224d565b95506101808a013594506123836101a08b016122a7565b93506101c08a013592506101e08a013591506102008a013590509295985092959850929598565b6000602082840312156123bc57600080fd5b813560ff81168114610a0d57600080fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156109f3576109f36123cd565b808201808211156109f3576109f36123cd565b634e487b7160e01b600052601260045260246000fd5b60008261243c57634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176109f3576109f36123cd565b8181036000831280158383131683831282161715612478576124786123cd565b5092915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6000600182016124bd576124bd6123cd565b506001019056fea2646970667358221220386f893dd500b9b7969516ec38646619509cd121873fbc70a7258d28c45476db64736f6c63430008120033","args":[],"salt":"AJNA","value":[]}
2024-01-08T15:26:16.077Z cannon:builder:runtime resolve artifact KickerActions
2024-01-08T15:26:16.077Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:26:23.905Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/KickerActions.sol': 'KickerActions' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/KickerActions.sol': {
      keccak256: '0xa486e9c9091c1cc8966f13b2b6bb9f9b7eeaf26d539b990c3904befd7a2a25fe',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/RevertsHelper.sol': {
      keccak256: '0xcaff095290172f1b5726d4e887ab9be5f524d9321e94ca0095f99b666381a6f4',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:26:23.905Z cannon:cli:foundry evm version paris
2024-01-08T15:26:23.911Z cannon:builder:runtime reported contract artifact KickerActions {
  contractName: 'KickerActions',
  sourceName: 'src/libraries/external/KickerActions.sol',
  abi: [
    {
      type: 'event',
      name: 'BondWithdrawn',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'BucketBankruptcy',
      inputs: [Array],
      anonymous: false
    },
    { type: 'event', name: 'Kick', inputs: [Array], anonymous: false },
    {
      type: 'event',
      name: 'KickReserveAuction',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'RemoveQuoteToken',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'AuctionActive', inputs: [] },
    { type: 'error', name: 'BorrowerOk', inputs: [] },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'InsufficientLiquidity', inputs: [] },
    { type: 'error', name: 'LimitIndexExceeded', inputs: [] },
    { type: 'error', name: 'NoReserves', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'PriceBelowLUP', inputs: [] },
    { type: 'error', name: 'ReserveAuctionTooSoon', inputs: [] }
  ],
  bytecode: '0x61264b61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c8063062f2dea1461005b5780632de27df2146100b75780638f4e8516146100d7578063f88050b714610105575b600080fd5b81801561006757600080fd5b5061007b610076366004612352565b610127565b6040516100ae91908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b8180156100c357600080fd5b5061007b6100d23660046123c9565b610291565b8180156100e357600080fd5b506100f76100f2366004612425565b6102cc565b6040519081526020016100ae565b81801561011157600080fd5b5061012561012036600461245a565b610392565b005b61012f6122fa565b61015a6040518060800160405280600081526020016000815260200160008152602001600081525090565b610163846104ad565b6020820152600061017889606088013561051f565b9050808260200151101561019f57604051631eceae9960e21b815260040160405180910390fd5b6000858152602089815260408083203384526003810190925290912060018101546002830154106101d15760006101d4565b80545b60608501526101e38b8861053c565b8085526001830154835460608701516020880151610204949190600061055a565b604085018190528451101561021b57835160408501525b83604001516000036102405760405163bb55fd2760e01b815260040160405180910390fd5b600061025f8c86604001518b6060013561025a91906124b1565b61051f565b90506102788d8b8b6102708e6105d2565b518b866105e5565b606081019490945250919b9a5050505050505050505050565b6102996122fa565b60006102a987866060013561051f565b90506102b98887878787866105e5565b6060810191909152979650505050505050565b3360009081526004840160205260408120546102e883826108c4565b91508160000361030b5760405163bb55fd2760e01b815260040160405180910390fd5b8185600201600082825461031f91906124c4565b9091555050336000908152600486016020526040812080548492906103459084906124c4565b90915550506040518281526001600160a01b0385169033907f1b6622b92ce16ed648b5b93fe47df1cd4c763fdcafe3281bc1dfd5ff7998a94d9060200160405180910390a3509392505050565b600382015482546103a690620697806124b1565b4210156103c6576040516357d0f8ef60e01b815260040160405180910390fd5b600283015460006103f56103e2602086013560608701356108db565b600288015486359085604089013561090f565b905061040181836124b1565b9150816000036104245760405163d8b9cde160e01b815260040160405180910390fd5b60028501829055428555600180860183905561044090846124b1565b600386018190556000818152600687016020526040902042908190559093507f3dacf6b19b0a84358a76a3338466cd428d1d4e80e53ccfe91b15d9b8021df96090839061048d908261097f565b8560405161049d939291906124d7565b60405180910390a1505050505050565b6000806104bc8361103c6124ed565b9050610c9f198112806104d0575061103c81135b156104ee57604051637edf443b60e11b815260040160405180910390fd5b6105186105136104fd83610a40565b61050e670df27a2cdf448000610ad0565b610bb4565b610c79565b9392505050565b600061053361052e8484610d15565b6104ad565b90505b92915050565b600061053361054b8484610d2b565b6105558585610dd9565b6108db565b600084158015610568575086155b156105745750826105c8565b856000036105835750826105c8565b6105c56105908489612514565b6105a2670de0b6b3a764000088612514565b6105ac91906124b1565b856105bf670de0b6b3a76400008a612514565b85610e46565b90505b9695505050505050565b6105da612322565b610536826001610ea5565b6105ed6122fa565b6001600160a01b0384166000908152600388016020526040902060018101546001600160601b031615610633576040516359bfb80360e11b815260040160405180910390fd5b6001600160a01b03851660009081526002880160209081526040808320805486840152600181015486830152815161014081018352848152928301849052908201839052606082018390526080820183905260a0820183905260c0820183905260e0820183905261010082018390526101208201929092526106bd84602001518960a001356108db565b815260408401516020808301919091528401516002906106e49061055560e08c0135610f25565b6106ee9190612541565b604082015260028201546060820152805160208083015161071d92918890610718908d018d612555565b610f4a565b1561073b576040516312eb95c560e21b815260040160405180910390fd5b6107786107666107578360000151670e6ed27d666800006108db565b83606001518460200151610fbf565b6ba25c8b0b1bdd606602df22a66108c4565b60808201819052610789908761106d565b6107ac6107958a6105d2565b602001516001600160601b03168960a0013561109a565b60a0820181905260808201516107c591610766916110b7565b60c0820152805160608201516107db91906110c7565b61010083015260e0820152805160208201516107f79190611118565b8161012001818152505061082c8a84898461010001518560e001518660c0015187608001518861012001518960400151611138565b61083b8a826101000151611349565b84526001600160a01b038716600090815260018a016020526040902054610865908a9089906113d5565b866001600160a01b03167f9f9a32e7f0271518f9b1895d0b1f2f4f73ed305e48b0a3782932094f9d00d948826000015183602001518461010001516040516108af939291906124d7565b60405180910390a25050509695505050505050565b6000818311156108d45781610533565b5090919050565b6000670de0b6b3a76400006108f1600282612541565b6108fb8486612514565b61090591906124b1565b6105339190612541565b60008061091c84866124b1565b9050808311156109755761093083886124b1565b91506109588282610949670de0b6b3e2feca008a6108db565b61095391906124b1565b6108c4565b61096290836124c4565b91506109728261095383866124c4565b91505b5095945050505050565b6000821561053657600061099384426124c4565b905060006109a3610e1083612541565b676765c793fa10079d601b1b901c905060006109e26b0331adfc6b81cf95c39de3b1603c6109d3610e1087612578565b6109dd9190612541565b611521565b905060008515610a0657610a01676765c793fa10079d601b1b87611118565b610a09565b60005b9050676765c793fa10079d601b1b610a218484611599565b610a2b9083612514565b610a359190612541565b979650505050505050565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f19821215610a855760405163e608e18b60e01b8152600481018390526024015b60405180910390fd5b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315610ac2576040516371f72a3160e01b815260048101839052602401610a7c565b50670de0b6b3a76400000290565b6000808213610af55760405163309fa7dd60e11b815260048101839052602401610a7c565b6000670de0b6b3a76400008312610b0e57506001610b27565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b6000610b3c670de0b6b3a764000085056115b2565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff198101610b6657505002919050565b6706f05b59d3b200005b6000811315610bab57670de0b6b3a7640000828002059150671bc16d674ec800008212610ba3579384019360019190911d905b60011d610b70565b50505002919050565b6000600160ff1b831480610bcb5750600160ff1b82145b15610be957604051630d01a11b60e21b815260040160405180910390fd5b60008060008512610bfa5784610bff565b846000035b915060008412610c0f5783610c14565b836000035b90506000610c228383611690565b90506001600160ff1b03811115610c4f5760405163bf79e8d960e01b815260048101829052602401610a7c565b600019808713908613808218600114610c685782610c6d565b826000035b98975050505050505050565b600080821215610ccc5768033dd1780914b9711419821215610c9d57506000919050565b610ca982600003610c79565b6a0c097ce7bc90715b34b9f160241b81610cc557610cc561252b565b0592915050565b680a688906bd8b0000008212610cf85760405163e69458f960e01b815260048101839052602401610a7c565b670de0b6b3a7640000604083901b0461051881611756565b919050565b6000610d218383611de8565b5090949350505050565b6000610d368261258c565b9150600183836120018110610d4d57610d4d6125a5565b0154915060008060005b858416600003610dcf57610d6b84876124c4565b925086836120018110610d8057610d806125a5565b015491508661200101836120018110610d9b57610d9b6125a5565b0154905080600003610dad5781610db7565b610db781836108db565b610dc190866124c4565b9450600184901b9350610d57565b5050505092915050565b6000610de48261258c565b9150670de0b6b3a764000090505b61200082116105365760008361200101836120018110610e1457610e146125a5565b015490508015610e2b57610e2882826108db565b91505b610e3483611ed8565b610e3e90846124b1565b925050610df2565b600080610e54868686610fbf565b90506001836002811115610e6a57610e6a6125bb565b148015610e87575060008480610e8257610e8261252b565b868809115b15610e9a57610e976001826124b1565b90505b90505b949350505050565b610ead612322565b82548210610ece576040805180820190915260008082526020820152610533565b826000018281548110610ee357610ee36125a5565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091529392505050565b6000610536610f3d836802d1a51c7e00500000611118565b6601c6bf526340006110b7565b600064173eb4c80a83148015610f5f57508415155b15610f6c57506000610e9d565b60001960ff831601610f9857670de0b6b3a7640000610f8b8186612541565b610f959190612514565b93505b610faa670e6ed27d66680000866108db565b610fb485856108db565b101595945050505050565b6000808060001985870985870292508281108382030391505080600003610ff957838281610fef57610fef61252b565b0492505050610518565b80841161100557600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b611076816104ad565b82101561109657604051638be4f6eb60e01b815260040160405180910390fd5b5050565b60006105336110a984846108db565b670e6ed27d666800006108db565b6000818310156108d45781610533565b6000806111036110f6666a94d74f430000600a6110ec670de0b6b3a7640000886124c4565b6109539190612541565b6611c37937e080006110b7565b915061110f82856108db565b90509250929050565b600081611126600282612541565b6108fb670de0b6b3a764000086612514565b87546001600160a01b031916331788556001880180546001600160601b0342166001600160601b031990911617905561117086611ef7565b6003890180546001600160a01b0319166001600160a01b039290921691909117905561119b85611f64565b88546001600160601b0391909116600160a01b026001600160a01b039091161788556111c683611f64565b6003890180546001600160a01b0316600160a01b6001600160601b0393841602179055600489018390556005890182905589548a9160009161120891166125d1565b82546001600160601b039182166101009390930a92830291909202199091161790558854600160601b90046001600160a01b0316156112d1576001808a01546001600160a01b03908116600081815260038d01602052604090206002018054928b16600160601b9081026001600160601b03948516178255938c0180549483029484169490941790935591546112a9916112a4918891166110b7565b611f64565b60028a0180546001600160601b0319166001600160601b03929092169190911790555061131b565b88546001600160601b0316600160601b6001600160a01b038916021789556112f884611f64565b6002890180546001600160601b0319166001600160601b03929092169190911790555b505050600190950180546001600160a01b039094166001600160a01b03199094169390931790925550505050565b336000'... 9724 more characters,
  deployedBytecode: '0x73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c8063062f2dea1461005b5780632de27df2146100b75780638f4e8516146100d7578063f88050b714610105575b600080fd5b81801561006757600080fd5b5061007b610076366004612352565b610127565b6040516100ae91908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b8180156100c357600080fd5b5061007b6100d23660046123c9565b610291565b8180156100e357600080fd5b506100f76100f2366004612425565b6102cc565b6040519081526020016100ae565b81801561011157600080fd5b5061012561012036600461245a565b610392565b005b61012f6122fa565b61015a6040518060800160405280600081526020016000815260200160008152602001600081525090565b610163846104ad565b6020820152600061017889606088013561051f565b9050808260200151101561019f57604051631eceae9960e21b815260040160405180910390fd5b6000858152602089815260408083203384526003810190925290912060018101546002830154106101d15760006101d4565b80545b60608501526101e38b8861053c565b8085526001830154835460608701516020880151610204949190600061055a565b604085018190528451101561021b57835160408501525b83604001516000036102405760405163bb55fd2760e01b815260040160405180910390fd5b600061025f8c86604001518b6060013561025a91906124b1565b61051f565b90506102788d8b8b6102708e6105d2565b518b866105e5565b606081019490945250919b9a5050505050505050505050565b6102996122fa565b60006102a987866060013561051f565b90506102b98887878787866105e5565b6060810191909152979650505050505050565b3360009081526004840160205260408120546102e883826108c4565b91508160000361030b5760405163bb55fd2760e01b815260040160405180910390fd5b8185600201600082825461031f91906124c4565b9091555050336000908152600486016020526040812080548492906103459084906124c4565b90915550506040518281526001600160a01b0385169033907f1b6622b92ce16ed648b5b93fe47df1cd4c763fdcafe3281bc1dfd5ff7998a94d9060200160405180910390a3509392505050565b600382015482546103a690620697806124b1565b4210156103c6576040516357d0f8ef60e01b815260040160405180910390fd5b600283015460006103f56103e2602086013560608701356108db565b600288015486359085604089013561090f565b905061040181836124b1565b9150816000036104245760405163d8b9cde160e01b815260040160405180910390fd5b60028501829055428555600180860183905561044090846124b1565b600386018190556000818152600687016020526040902042908190559093507f3dacf6b19b0a84358a76a3338466cd428d1d4e80e53ccfe91b15d9b8021df96090839061048d908261097f565b8560405161049d939291906124d7565b60405180910390a1505050505050565b6000806104bc8361103c6124ed565b9050610c9f198112806104d0575061103c81135b156104ee57604051637edf443b60e11b815260040160405180910390fd5b6105186105136104fd83610a40565b61050e670df27a2cdf448000610ad0565b610bb4565b610c79565b9392505050565b600061053361052e8484610d15565b6104ad565b90505b92915050565b600061053361054b8484610d2b565b6105558585610dd9565b6108db565b600084158015610568575086155b156105745750826105c8565b856000036105835750826105c8565b6105c56105908489612514565b6105a2670de0b6b3a764000088612514565b6105ac91906124b1565b856105bf670de0b6b3a76400008a612514565b85610e46565b90505b9695505050505050565b6105da612322565b610536826001610ea5565b6105ed6122fa565b6001600160a01b0384166000908152600388016020526040902060018101546001600160601b031615610633576040516359bfb80360e11b815260040160405180910390fd5b6001600160a01b03851660009081526002880160209081526040808320805486840152600181015486830152815161014081018352848152928301849052908201839052606082018390526080820183905260a0820183905260c0820183905260e0820183905261010082018390526101208201929092526106bd84602001518960a001356108db565b815260408401516020808301919091528401516002906106e49061055560e08c0135610f25565b6106ee9190612541565b604082015260028201546060820152805160208083015161071d92918890610718908d018d612555565b610f4a565b1561073b576040516312eb95c560e21b815260040160405180910390fd5b6107786107666107578360000151670e6ed27d666800006108db565b83606001518460200151610fbf565b6ba25c8b0b1bdd606602df22a66108c4565b60808201819052610789908761106d565b6107ac6107958a6105d2565b602001516001600160601b03168960a0013561109a565b60a0820181905260808201516107c591610766916110b7565b60c0820152805160608201516107db91906110c7565b61010083015260e0820152805160208201516107f79190611118565b8161012001818152505061082c8a84898461010001518560e001518660c0015187608001518861012001518960400151611138565b61083b8a826101000151611349565b84526001600160a01b038716600090815260018a016020526040902054610865908a9089906113d5565b866001600160a01b03167f9f9a32e7f0271518f9b1895d0b1f2f4f73ed305e48b0a3782932094f9d00d948826000015183602001518461010001516040516108af939291906124d7565b60405180910390a25050509695505050505050565b6000818311156108d45781610533565b5090919050565b6000670de0b6b3a76400006108f1600282612541565b6108fb8486612514565b61090591906124b1565b6105339190612541565b60008061091c84866124b1565b9050808311156109755761093083886124b1565b91506109588282610949670de0b6b3e2feca008a6108db565b61095391906124b1565b6108c4565b61096290836124c4565b91506109728261095383866124c4565b91505b5095945050505050565b6000821561053657600061099384426124c4565b905060006109a3610e1083612541565b676765c793fa10079d601b1b901c905060006109e26b0331adfc6b81cf95c39de3b1603c6109d3610e1087612578565b6109dd9190612541565b611521565b905060008515610a0657610a01676765c793fa10079d601b1b87611118565b610a09565b60005b9050676765c793fa10079d601b1b610a218484611599565b610a2b9083612514565b610a359190612541565b979650505050505050565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f19821215610a855760405163e608e18b60e01b8152600481018390526024015b60405180910390fd5b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315610ac2576040516371f72a3160e01b815260048101839052602401610a7c565b50670de0b6b3a76400000290565b6000808213610af55760405163309fa7dd60e11b815260048101839052602401610a7c565b6000670de0b6b3a76400008312610b0e57506001610b27565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b6000610b3c670de0b6b3a764000085056115b2565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff198101610b6657505002919050565b6706f05b59d3b200005b6000811315610bab57670de0b6b3a7640000828002059150671bc16d674ec800008212610ba3579384019360019190911d905b60011d610b70565b50505002919050565b6000600160ff1b831480610bcb5750600160ff1b82145b15610be957604051630d01a11b60e21b815260040160405180910390fd5b60008060008512610bfa5784610bff565b846000035b915060008412610c0f5783610c14565b836000035b90506000610c228383611690565b90506001600160ff1b03811115610c4f5760405163bf79e8d960e01b815260048101829052602401610a7c565b600019808713908613808218600114610c685782610c6d565b826000035b98975050505050505050565b600080821215610ccc5768033dd1780914b9711419821215610c9d57506000919050565b610ca982600003610c79565b6a0c097ce7bc90715b34b9f160241b81610cc557610cc561252b565b0592915050565b680a688906bd8b0000008212610cf85760405163e69458f960e01b815260048101839052602401610a7c565b670de0b6b3a7640000604083901b0461051881611756565b919050565b6000610d218383611de8565b5090949350505050565b6000610d368261258c565b9150600183836120018110610d4d57610d4d6125a5565b0154915060008060005b858416600003610dcf57610d6b84876124c4565b925086836120018110610d8057610d806125a5565b015491508661200101836120018110610d9b57610d9b6125a5565b0154905080600003610dad5781610db7565b610db781836108db565b610dc190866124c4565b9450600184901b9350610d57565b5050505092915050565b6000610de48261258c565b9150670de0b6b3a764000090505b61200082116105365760008361200101836120018110610e1457610e146125a5565b015490508015610e2b57610e2882826108db565b91505b610e3483611ed8565b610e3e90846124b1565b925050610df2565b600080610e54868686610fbf565b90506001836002811115610e6a57610e6a6125bb565b148015610e87575060008480610e8257610e8261252b565b868809115b15610e9a57610e976001826124b1565b90505b90505b949350505050565b610ead612322565b82548210610ece576040805180820190915260008082526020820152610533565b826000018281548110610ee357610ee36125a5565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091529392505050565b6000610536610f3d836802d1a51c7e00500000611118565b6601c6bf526340006110b7565b600064173eb4c80a83148015610f5f57508415155b15610f6c57506000610e9d565b60001960ff831601610f9857670de0b6b3a7640000610f8b8186612541565b610f959190612514565b93505b610faa670e6ed27d66680000866108db565b610fb485856108db565b101595945050505050565b6000808060001985870985870292508281108382030391505080600003610ff957838281610fef57610fef61252b565b0492505050610518565b80841161100557600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b611076816104ad565b82101561109657604051638be4f6eb60e01b815260040160405180910390fd5b5050565b60006105336110a984846108db565b670e6ed27d666800006108db565b6000818310156108d45781610533565b6000806111036110f6666a94d74f430000600a6110ec670de0b6b3a7640000886124c4565b6109539190612541565b6611c37937e080006110b7565b915061110f82856108db565b90509250929050565b600081611126600282612541565b6108fb670de0b6b3a764000086612514565b87546001600160a01b031916331788556001880180546001600160601b0342166001600160601b031990911617905561117086611ef7565b6003890180546001600160a01b0319166001600160a01b039290921691909117905561119b85611f64565b88546001600160601b0391909116600160a01b026001600160a01b039091161788556111c683611f64565b6003890180546001600160a01b0316600160a01b6001600160601b0393841602179055600489018390556005890182905589548a9160009161120891166125d1565b82546001600160601b039182166101009390930a92830291909202199091161790558854600160601b90046001600160a01b0316156112d1576001808a01546001600160a01b03908116600081815260038d01602052604090206002018054928b16600160601b9081026001600160601b03948516178255938c0180549483029484169490941790935591546112a9916112a4918891166110b7565b611f64565b60028a0180546001600160601b0319166001600160601b03929092169190911790555061131b565b88546001600160601b0316600160601b6001600160a01b038916021789556112f884611f64565b6002890180546001600160601b0319166001600160601b03929092169190911790555b505050600190950180546001600160a01b039094166001600160a01b03199094169390931790925550505050565b336000908152600483016020526040812060018101805484919084906113709084906124b1565b9091555050805483811061139d578382600001600082'... 9608 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel\'s lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don\'t need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.\'s \\"Hacker\'s Delight\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\"msb\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // ‚Üí `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // ‚Üí `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton\'s method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result'... 254173 more characters
  }
}
2024-01-08T15:26:23.911Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x61264b61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c8063062f2dea1461005b5780632de27df2146100b75780638f4e8516146100d7578063f88050b714610105575b600080fd5b81801561006757600080fd5b5061007b610076366004612352565b610127565b6040516100ae91908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b8180156100c357600080fd5b5061007b6100d23660046123c9565b610291565b8180156100e357600080fd5b506100f76100f2366004612425565b6102cc565b6040519081526020016100ae565b81801561011157600080fd5b5061012561012036600461245a565b610392565b005b61012f6122fa565b61015a6040518060800160405280600081526020016000815260200160008152602001600081525090565b610163846104ad565b6020820152600061017889606088013561051f565b9050808260200151101561019f57604051631eceae9960e21b815260040160405180910390fd5b6000858152602089815260408083203384526003810190925290912060018101546002830154106101d15760006101d4565b80545b60608501526101e38b8861053c565b8085526001830154835460608701516020880151610204949190600061055a565b604085018190528451101561021b57835160408501525b83604001516000036102405760405163bb55fd2760e01b815260040160405180910390fd5b600061025f8c86604001518b6060013561025a91906124b1565b61051f565b90506102788d8b8b6102708e6105d2565b518b866105e5565b606081019490945250919b9a5050505050505050505050565b6102996122fa565b60006102a987866060013561051f565b90506102b98887878787866105e5565b6060810191909152979650505050505050565b3360009081526004840160205260408120546102e883826108c4565b91508160000361030b5760405163bb55fd2760e01b815260040160405180910390fd5b8185600201600082825461031f91906124c4565b9091555050336000908152600486016020526040812080548492906103459084906124c4565b90915550506040518281526001600160a01b0385169033907f1b6622b92ce16ed648b5b93fe47df1cd4c763fdcafe3281bc1dfd5ff7998a94d9060200160405180910390a3509392505050565b600382015482546103a690620697806124b1565b4210156103c6576040516357d0f8ef60e01b815260040160405180910390fd5b600283015460006103f56103e2602086013560608701356108db565b600288015486359085604089013561090f565b905061040181836124b1565b9150816000036104245760405163d8b9cde160e01b815260040160405180910390fd5b60028501829055428555600180860183905561044090846124b1565b600386018190556000818152600687016020526040902042908190559093507f3dacf6b19b0a84358a76a3338466cd428d1d4e80e53ccfe91b15d9b8021df96090839061048d908261097f565b8560405161049d939291906124d7565b60405180910390a1505050505050565b6000806104bc8361103c6124ed565b9050610c9f198112806104d0575061103c81135b156104ee57604051637edf443b60e11b815260040160405180910390fd5b6105186105136104fd83610a40565b61050e670df27a2cdf448000610ad0565b610bb4565b610c79565b9392505050565b600061053361052e8484610d15565b6104ad565b90505b92915050565b600061053361054b8484610d2b565b6105558585610dd9565b6108db565b600084158015610568575086155b156105745750826105c8565b856000036105835750826105c8565b6105c56105908489612514565b6105a2670de0b6b3a764000088612514565b6105ac91906124b1565b856105bf670de0b6b3a76400008a612514565b85610e46565b90505b9695505050505050565b6105da612322565b610536826001610ea5565b6105ed6122fa565b6001600160a01b0384166000908152600388016020526040902060018101546001600160601b031615610633576040516359bfb80360e11b815260040160405180910390fd5b6001600160a01b03851660009081526002880160209081526040808320805486840152600181015486830152815161014081018352848152928301849052908201839052606082018390526080820183905260a0820183905260c0820183905260e0820183905261010082018390526101208201929092526106bd84602001518960a001356108db565b815260408401516020808301919091528401516002906106e49061055560e08c0135610f25565b6106ee9190612541565b604082015260028201546060820152805160208083015161071d92918890610718908d018d612555565b610f4a565b1561073b576040516312eb95c560e21b815260040160405180910390fd5b6107786107666107578360000151670e6ed27d666800006108db565b83606001518460200151610fbf565b6ba25c8b0b1bdd606602df22a66108c4565b60808201819052610789908761106d565b6107ac6107958a6105d2565b602001516001600160601b03168960a0013561109a565b60a0820181905260808201516107c591610766916110b7565b60c0820152805160608201516107db91906110c7565b61010083015260e0820152805160208201516107f79190611118565b8161012001818152505061082c8a84898461010001518560e001518660c0015187608001518861012001518960400151611138565b61083b8a826101000151611349565b84526001600160a01b038716600090815260018a016020526040902054610865908a9089906113d5565b866001600160a01b03167f9f9a32e7f0271518f9b1895d0b1f2f4f73ed305e48b0a3782932094f9d00d948826000015183602001518461010001516040516108af939291906124d7565b60405180910390a25050509695505050505050565b6000818311156108d45781610533565b5090919050565b6000670de0b6b3a76400006108f1600282612541565b6108fb8486612514565b61090591906124b1565b6105339190612541565b60008061091c84866124b1565b9050808311156109755761093083886124b1565b91506109588282610949670de0b6b3e2feca008a6108db565b61095391906124b1565b6108c4565b61096290836124c4565b91506109728261095383866124c4565b91505b5095945050505050565b6000821561053657600061099384426124c4565b905060006109a3610e1083612541565b676765c793fa10079d601b1b901c905060006109e26b0331adfc6b81cf95c39de3b1603c6109d3610e1087612578565b6109dd9190612541565b611521565b905060008515610a0657610a01676765c793fa10079d601b1b87611118565b610a09565b60005b9050676765c793fa10079d601b1b610a218484611599565b610a2b9083612514565b610a359190612541565b979650505050505050565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f19821215610a855760405163e608e18b60e01b8152600481018390526024015b60405180910390fd5b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315610ac2576040516371f72a3160e01b815260048101839052602401610a7c565b50670de0b6b3a76400000290565b6000808213610af55760405163309fa7dd60e11b815260048101839052602401610a7c565b6000670de0b6b3a76400008312610b0e57506001610b27565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b6000610b3c670de0b6b3a764000085056115b2565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff198101610b6657505002919050565b6706f05b59d3b200005b6000811315610bab57670de0b6b3a7640000828002059150671bc16d674ec800008212610ba3579384019360019190911d905b60011d610b70565b50505002919050565b6000600160ff1b831480610bcb5750600160ff1b82145b15610be957604051630d01a11b60e21b815260040160405180910390fd5b60008060008512610bfa5784610bff565b846000035b915060008412610c0f5783610c14565b836000035b90506000610c228383611690565b90506001600160ff1b03811115610c4f5760405163bf79e8d960e01b815260048101829052602401610a7c565b600019808713908613808218600114610c685782610c6d565b826000035b98975050505050505050565b600080821215610ccc5768033dd1780914b9711419821215610c9d57506000919050565b610ca982600003610c79565b6a0c097ce7bc90715b34b9f160241b81610cc557610cc561252b565b0592915050565b680a688906bd8b0000008212610cf85760405163e69458f960e01b815260048101839052602401610a7c565b670de0b6b3a7640000604083901b0461051881611756565b919050565b6000610d218383611de8565b5090949350505050565b6000610d368261258c565b9150600183836120018110610d4d57610d4d6125a5565b0154915060008060005b858416600003610dcf57610d6b84876124c4565b925086836120018110610d8057610d806125a5565b015491508661200101836120018110610d9b57610d9b6125a5565b0154905080600003610dad5781610db7565b610db781836108db565b610dc190866124c4565b9450600184901b9350610d57565b5050505092915050565b6000610de48261258c565b9150670de0b6b3a764000090505b61200082116105365760008361200101836120018110610e1457610e146125a5565b015490508015610e2b57610e2882826108db565b91505b610e3483611ed8565b610e3e90846124b1565b925050610df2565b600080610e54868686610fbf565b90506001836002811115610e6a57610e6a6125bb565b148015610e87575060008480610e8257610e8261252b565b868809115b15610e9a57610e976001826124b1565b90505b90505b949350505050565b610ead612322565b82548210610ece576040805180820190915260008082526020820152610533565b826000018281548110610ee357610ee36125a5565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091529392505050565b6000610536610f3d836802d1a51c7e00500000611118565b6601c6bf526340006110b7565b600064173eb4c80a83148015610f5f57508415155b15610f6c57506000610e9d565b60001960ff831601610f9857670de0b6b3a7640000610f8b8186612541565b610f959190612514565b93505b610faa670e6ed27d66680000866108db565b610fb485856108db565b101595945050505050565b6000808060001985870985870292508281108382030391505080600003610ff957838281610fef57610fef61252b565b0492505050610518565b80841161100557600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b611076816104ad565b82101561109657604051638be4f6eb60e01b815260040160405180910390fd5b5050565b60006105336110a984846108db565b670e6ed27d666800006108db565b6000818310156108d45781610533565b6000806111036110f6666a94d74f430000600a6110ec670de0b6b3a7640000886124c4565b6109539190612541565b6611c37937e080006110b7565b915061110f82856108db565b90509250929050565b600081611126600282612541565b6108fb670de0b6b3a764000086612514565b87546001600160a01b031916331788556001880180546001600160601b0342166001600160601b031990911617905561117086611ef7565b6003890180546001600160a01b0319166001600160a01b039290921691909117905561119b85611f64565b88546001600160601b0391909116600160a01b026001600160a01b039091161788556111c683611f64565b6003890180546001600160a01b0316600160a01b6001600160601b0393841602179055600489018390556005890182905589548a9160009161120891166125d1565b82546001600160601b039182166101009390930a92830291909202199091161790558854600160601b90046001600160a01b0316156112d1576001808a01546001600160a01b03908116600081815260038d01602052604090206002018054928b16600160601b9081026001600160601b03948516178255938c0180549483029484169490941790935591546112a9916112a4918891166110b7565b611f64565b60028a0180546001600160601b0319166001600160601b03929092169190911790555061131b565b88546001600160601b0316600160601b6001600160a01b038916021789556112f884611f64565b6002890180546001600160601b0319166001600160601b03929092169190911790555b505050600190950180546001600160a01b039094166001600160a01b03199094169390931790925550505050565b336000908152600483016020526040812060018101805484919084906113709084906124b1565b9091555050805483811061139d578382600001600082825461139291906124c4565b909155506113cd9050565b6113a781856124c4565b925060008260000181905550828560020160008282546113c791906124b1565b90915550505b505092915050565b6001600160a01b038216600090815260018085016020526040822082905584546113ff91906124c4565b9050808203611436578354849080611419576114196125ff565b60008281526020812082016000199081019190915501905561151b565b600084600001828154811061144d5761144d6125a5565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152855490915085908061149c5761149c6125ff565b6000828152602081208201600019908101919091550190556114bf858285611fcc565b611519858660000185815481106114d8576114d86125a5565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152856120a9565b505b50505050565b600061152e600283612578565b60000361154657676765c793fa10079d601b1b611548565b825b9050611555600283612541565b91505b8115610536576115688384611599565b9250611575600283612578565b15611587576115848184611599565b90505b611592600283612541565b9150611558565b6000676765c793fa10079d601b1b6108f1600282612541565b6000600160801b82106115d257608091821c916115cf90826124b1565b90505b600160401b82106115f057604091821c916115ed90826124b1565b90505b600160201b821061160e57602091821c9161160b90826124b1565b90505b62010000821061162b57601091821c9161162890826124b1565b90505b610100821061164757600891821c9161164490826124b1565b90505b6010821061166257600491821c9161165f90826124b1565b90505b6004821061167d57600291821c9161167a90826124b1565b90505b60028210610d10576105366001826124b1565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106116d45760405163698d9a0160e11b815260048101829052602401610a7c565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff82119050826000036117125780670de0b6b3a7640000850401945050505050610536565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b8216156117765768016a09e667f3bcc9090260401c5b6001603e1b821615611791576801306fe0a31b7152df0260401c5b6001603d1b8216156117ac576801172b83c7d517adce0260401c5b6001603c1b8216156117c75768010b5586cf9890f62a0260401c5b6001603b1b8216156117e2576801059b0d31585743ae0260401c5b6001603a1b8216156117fd57680102c9a3e778060ee70260401c5b600160391b8216156118185768010163da9fb33356d80260401c5b600160381b82161561183357680100b1afa5abcbed610260401c5b600160371b82161561184e5768010058c86da1c09ea20260401c5b600160361b821615611869576801002c605e2e8cec500260401c5b600160351b82161561188457680100162f3904051fa10260401c5b600160341b82161561189f576801000b175effdc76ba0260401c5b600160331b8216156118ba57680100058ba01fb9f96d0260401c5b600160321b8216156118d55768010002c5cc37da94920260401c5b600160311b8216156118f0576801000162e525ee05470260401c5b600160301b82161561190b5768010000b17255775c040260401c5b6001602f1b821615611926576801000058b91b5bc9ae0260401c5b6001602e1b82161561194157680100002c5c89d5ec6d0260401c5b6001602d1b82161561195c5768010000162e43f4f8310260401c5b6001602c1b82161561197757680100000b1721bcfc9a0260401c5b6001602b1b8216156119925768010000058b90cf1e6e0260401c5b6001602a1b8216156119ad576801000002c5c863b73f0260401c5b600160291b8216156119c857680100000162e430e5a20260401c5b600160281b8216156119e3576801000000b1721835510260401c5b600160271b8216156119fe57680100000058b90c0b490260401c5b600160261b821615611a195768010000002c5c8601cc0260401c5b600160251b821615611a34576801000000162e42fff00260401c5b600160241b821615611a4f5768010000000b17217fbb0260401c5b600160231b821615611a6a576801000000058b90bfce0260401c5b600160221b821615611a8557680100000002c5c85fe30260401c5b600160211b821615611aa05768010000000162e42ff10260401c5b600160201b821615611abb57680100000000b17217f80260401c5b6380000000821615611ad65768010000000058b90bfc0260401c5b6340000000821615611af1576801000000002c5c85fe0260401c5b6320000000821615611b0c57680100000000162e42ff0260401c5b6310000000821615611b27576801000000000b17217f0260401c5b6308000000821615611b4257680100000000058b90c00260401c5b6304000000821615611b5d5768010000000002c5c8600260401c5b6302000000821615611b78576801000000000162e4300260401c5b6301000000821615611b935768010000000000b172180260401c5b62800000821615611bad576801000000000058b90c0260401c5b62400000821615611bc757680100000000002c5c860260401c5b62200000821615611be15768010000000000162e430260401c5b62100000821615611bfb57680100000000000b17210260401c5b62080000821615611c155768010000000000058b910260401c5b62040000821615611c2f576801000000000002c5c80260401c5b62020000821615611c4957680100000000000162e40260401c5b62010000821615611c625761b172600160401b010260401c5b618000821615611c7a576158b9600160401b010260401c5b614000821615611c9257612c5d600160401b010260401c5b612000821615611caa5761162e600160401b010260401c5b611000821615611cc257610b17600160401b010260401c5b610800821615611cda5761058c600160401b010260401c5b610400821615611cf2576102c6600160401b010260401c5b610200821615611d0a57610163600160401b010260401c5b610100821615611d215760b1600160401b010260401c5b6080821615611d37576059600160401b010260401c5b6040821615611d4d57602c600160401b010260401c5b6020821615611d63576016600160401b010260401c5b6010821615611d7957600b600160401b010260401c5b6008821615611d8f576006600160401b010260401c5b6004821615611da5576003600160401b010260401c5b6002821615611dbb576001600160401b010260401c5b6001821615611dd1576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b60008080611000670de0b6b3a764000082808080805b8615611eca57611e0e878b6124b1565b93508b846120018110611e2357611e236125a5565b015492508b61200101846120018110611e3e57611e3e6125a5565b0154915081600003611e5957611e5486846108db565b611e7b565b611e7b611e668388612514565b846a0c097ce7bc90715b34b9f160241b610fbf565b611e8590866124b1565b90508a811015611ea457611cdc8411611e9f578399508094505b611ebe565b8115611eb757611eb48683612234565b95505b8098508597505b600187901c9650611dfe565b505050505050509250925092565b60008115610d1057611eef600019831860016124b1565b909116919050565b60006001600160a01b03821115611f605760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663630206269747360c81b6064820152608401610a7c565b5090565b60006001600160601b03821115611f605760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b6064820152608401610a7c565b8254600182148061201c575083611fe4600284612541565b81548110611ff457611ff46125a5565b60009182526020918290200154908401516001600160601b03600160a01b9092048216911611155b156120325761202d84848484612249565b61151b565b6120948480612042600286612541565b81548110612052576120526125a5565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091528484612249565b61151b84846120a4600286612541565b611fcc565b60006120b6826002612514565b84549091508181116120d3576120ce85858584612249565b611519565b60008560000183815481106120ea576120ea6125a5565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b03169181019190915290506121328360016124b1565b82118015612183575060208101516001600160601b0316866121558560016124b1565b81548110612165576121656125a5565b600091825260209091200154600160a01b90046001600160601b0316115b156121e357856121928461258c565b935083815481106121a5576121a56125a5565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b03169181019190915290505b84602001516001600160601b031681602001516001600160601b0316116122155761221086868685612249565b61222c565b61222186828685612249565b61222c8686856120a9565b505050505050565b6000670de0b6b3a76400006109058385612514565b80820361228f57835460018101855560008581526020908190208551918601516001600160601b0316600160a01b026001600160a01b03909216919091179101556122d9565b828460000183815481106122a5576122a56125a5565b6000918252602091829020835193909201516001600160601b0316600160a01b026001600160a01b03909316929092179101555b5090516001600160a01b031660009081526001909201602052604090912055565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b604080518082019091526000808252602082015290565b6000610120828403121561234c57600080fd5b50919050565b60008060008060008060006101e0888a03121561236e57600080fd5b873596506020880135955060408801359450606088013593506123948960808a01612339565b92506101a088013591506101c0880135905092959891949750929550565b80356001600160a01b0381168114610d1057600080fd5b6000806000806000806101c087890312156123e357600080fd5b8635955060208701359450604087013593506124028860608901612339565b925061241161018088016123b2565b91506101a087013590509295509295509295565b60008060006060848603121561243a57600080fd5b8335925061244a602085016123b2565b9150604084013590509250925092565b600080600083850360c081121561247057600080fd5b84359350602085013592506080603f198201121561248d57600080fd5b506040840190509250925092565b634e487b7160e01b600052601160045260246000fd5b808201808211156105365761053661249b565b818103818111156105365761053661249b565b9283526020830191909152604082015260600190565b818103600083128015838313168383128216171561250d5761250d61249b565b5092915050565b80820281158282048414176105365761053661249b565b634e487b7160e01b600052601260045260246000fd5b6000826125505761255061252b565b500490565b60006020828403121561256757600080fd5b813560ff8116811461051857600080fd5b6000826125875761258761252b565b500690565b60006001820161259e5761259e61249b565b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60006001600160601b038281166002600160601b031981016125f5576125f561249b565b6001019392505050565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220deb169f5aa106e1f5320c5920d3475ddb9ec460f470f67589396b8cddb50a08c64736f6c63430008120033","args":[],"salt":"AJNA","value":[]}
2024-01-08T15:26:23.912Z cannon:builder comparing states null 1c2e1948536a5738c6c6d2addd195d73
2024-01-08T15:26:23.912Z cannon:builder run isolated contract.KickerActions
Executing [contract.KickerActions]...
2024-01-08T15:26:23.914Z cannon:verbose:builder ctx for step contract.KickerActions {
  package: {},
  timestamp: '1704727545',
  chainId: 10,
  settings: {
    bwAJNA_ADDRESS: '0x6c518f9D1a163379235816c543E62922a79863Fa',
    salt: 'AJNA'
  },
  contracts: {},
  txns: {},
  imports: {},
  extras: {}
}
2024-01-08T15:26:23.914Z cannon:builder:contract exec {
  artifact: 'KickerActions',
  salt: 'AJNA',
  create2: true,
  from: '',
  nonce: '',
  value: '',
  abi: ''
}
2024-01-08T15:26:23.914Z cannon:builder:runtime resolve artifact KickerActions
2024-01-08T15:26:23.914Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:26:32.042Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/KickerActions.sol': 'KickerActions' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/KickerActions.sol': {
      keccak256: '0xa486e9c9091c1cc8966f13b2b6bb9f9b7eeaf26d539b990c3904befd7a2a25fe',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/RevertsHelper.sol': {
      keccak256: '0xcaff095290172f1b5726d4e887ab9be5f524d9321e94ca0095f99b666381a6f4',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:26:32.042Z cannon:cli:foundry evm version paris
2024-01-08T15:26:32.053Z cannon:builder:runtime reported contract artifact KickerActions {
  contractName: 'KickerActions',
  sourceName: 'src/libraries/external/KickerActions.sol',
  abi: [
    {
      type: 'event',
      name: 'BondWithdrawn',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'BucketBankruptcy',
      inputs: [Array],
      anonymous: false
    },
    { type: 'event', name: 'Kick', inputs: [Array], anonymous: false },
    {
      type: 'event',
      name: 'KickReserveAuction',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'RemoveQuoteToken',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'AuctionActive', inputs: [] },
    { type: 'error', name: 'BorrowerOk', inputs: [] },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'InsufficientLiquidity', inputs: [] },
    { type: 'error', name: 'LimitIndexExceeded', inputs: [] },
    { type: 'error', name: 'NoReserves', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'PriceBelowLUP', inputs: [] },
    { type: 'error', name: 'ReserveAuctionTooSoon', inputs: [] }
  ],
  bytecode: '0x61264b61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c8063062f2dea1461005b5780632de27df2146100b75780638f4e8516146100d7578063f88050b714610105575b600080fd5b81801561006757600080fd5b5061007b610076366004612352565b610127565b6040516100ae91908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b8180156100c357600080fd5b5061007b6100d23660046123c9565b610291565b8180156100e357600080fd5b506100f76100f2366004612425565b6102cc565b6040519081526020016100ae565b81801561011157600080fd5b5061012561012036600461245a565b610392565b005b61012f6122fa565b61015a6040518060800160405280600081526020016000815260200160008152602001600081525090565b610163846104ad565b6020820152600061017889606088013561051f565b9050808260200151101561019f57604051631eceae9960e21b815260040160405180910390fd5b6000858152602089815260408083203384526003810190925290912060018101546002830154106101d15760006101d4565b80545b60608501526101e38b8861053c565b8085526001830154835460608701516020880151610204949190600061055a565b604085018190528451101561021b57835160408501525b83604001516000036102405760405163bb55fd2760e01b815260040160405180910390fd5b600061025f8c86604001518b6060013561025a91906124b1565b61051f565b90506102788d8b8b6102708e6105d2565b518b866105e5565b606081019490945250919b9a5050505050505050505050565b6102996122fa565b60006102a987866060013561051f565b90506102b98887878787866105e5565b6060810191909152979650505050505050565b3360009081526004840160205260408120546102e883826108c4565b91508160000361030b5760405163bb55fd2760e01b815260040160405180910390fd5b8185600201600082825461031f91906124c4565b9091555050336000908152600486016020526040812080548492906103459084906124c4565b90915550506040518281526001600160a01b0385169033907f1b6622b92ce16ed648b5b93fe47df1cd4c763fdcafe3281bc1dfd5ff7998a94d9060200160405180910390a3509392505050565b600382015482546103a690620697806124b1565b4210156103c6576040516357d0f8ef60e01b815260040160405180910390fd5b600283015460006103f56103e2602086013560608701356108db565b600288015486359085604089013561090f565b905061040181836124b1565b9150816000036104245760405163d8b9cde160e01b815260040160405180910390fd5b60028501829055428555600180860183905561044090846124b1565b600386018190556000818152600687016020526040902042908190559093507f3dacf6b19b0a84358a76a3338466cd428d1d4e80e53ccfe91b15d9b8021df96090839061048d908261097f565b8560405161049d939291906124d7565b60405180910390a1505050505050565b6000806104bc8361103c6124ed565b9050610c9f198112806104d0575061103c81135b156104ee57604051637edf443b60e11b815260040160405180910390fd5b6105186105136104fd83610a40565b61050e670df27a2cdf448000610ad0565b610bb4565b610c79565b9392505050565b600061053361052e8484610d15565b6104ad565b90505b92915050565b600061053361054b8484610d2b565b6105558585610dd9565b6108db565b600084158015610568575086155b156105745750826105c8565b856000036105835750826105c8565b6105c56105908489612514565b6105a2670de0b6b3a764000088612514565b6105ac91906124b1565b856105bf670de0b6b3a76400008a612514565b85610e46565b90505b9695505050505050565b6105da612322565b610536826001610ea5565b6105ed6122fa565b6001600160a01b0384166000908152600388016020526040902060018101546001600160601b031615610633576040516359bfb80360e11b815260040160405180910390fd5b6001600160a01b03851660009081526002880160209081526040808320805486840152600181015486830152815161014081018352848152928301849052908201839052606082018390526080820183905260a0820183905260c0820183905260e0820183905261010082018390526101208201929092526106bd84602001518960a001356108db565b815260408401516020808301919091528401516002906106e49061055560e08c0135610f25565b6106ee9190612541565b604082015260028201546060820152805160208083015161071d92918890610718908d018d612555565b610f4a565b1561073b576040516312eb95c560e21b815260040160405180910390fd5b6107786107666107578360000151670e6ed27d666800006108db565b83606001518460200151610fbf565b6ba25c8b0b1bdd606602df22a66108c4565b60808201819052610789908761106d565b6107ac6107958a6105d2565b602001516001600160601b03168960a0013561109a565b60a0820181905260808201516107c591610766916110b7565b60c0820152805160608201516107db91906110c7565b61010083015260e0820152805160208201516107f79190611118565b8161012001818152505061082c8a84898461010001518560e001518660c0015187608001518861012001518960400151611138565b61083b8a826101000151611349565b84526001600160a01b038716600090815260018a016020526040902054610865908a9089906113d5565b866001600160a01b03167f9f9a32e7f0271518f9b1895d0b1f2f4f73ed305e48b0a3782932094f9d00d948826000015183602001518461010001516040516108af939291906124d7565b60405180910390a25050509695505050505050565b6000818311156108d45781610533565b5090919050565b6000670de0b6b3a76400006108f1600282612541565b6108fb8486612514565b61090591906124b1565b6105339190612541565b60008061091c84866124b1565b9050808311156109755761093083886124b1565b91506109588282610949670de0b6b3e2feca008a6108db565b61095391906124b1565b6108c4565b61096290836124c4565b91506109728261095383866124c4565b91505b5095945050505050565b6000821561053657600061099384426124c4565b905060006109a3610e1083612541565b676765c793fa10079d601b1b901c905060006109e26b0331adfc6b81cf95c39de3b1603c6109d3610e1087612578565b6109dd9190612541565b611521565b905060008515610a0657610a01676765c793fa10079d601b1b87611118565b610a09565b60005b9050676765c793fa10079d601b1b610a218484611599565b610a2b9083612514565b610a359190612541565b979650505050505050565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f19821215610a855760405163e608e18b60e01b8152600481018390526024015b60405180910390fd5b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315610ac2576040516371f72a3160e01b815260048101839052602401610a7c565b50670de0b6b3a76400000290565b6000808213610af55760405163309fa7dd60e11b815260048101839052602401610a7c565b6000670de0b6b3a76400008312610b0e57506001610b27565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b6000610b3c670de0b6b3a764000085056115b2565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff198101610b6657505002919050565b6706f05b59d3b200005b6000811315610bab57670de0b6b3a7640000828002059150671bc16d674ec800008212610ba3579384019360019190911d905b60011d610b70565b50505002919050565b6000600160ff1b831480610bcb5750600160ff1b82145b15610be957604051630d01a11b60e21b815260040160405180910390fd5b60008060008512610bfa5784610bff565b846000035b915060008412610c0f5783610c14565b836000035b90506000610c228383611690565b90506001600160ff1b03811115610c4f5760405163bf79e8d960e01b815260048101829052602401610a7c565b600019808713908613808218600114610c685782610c6d565b826000035b98975050505050505050565b600080821215610ccc5768033dd1780914b9711419821215610c9d57506000919050565b610ca982600003610c79565b6a0c097ce7bc90715b34b9f160241b81610cc557610cc561252b565b0592915050565b680a688906bd8b0000008212610cf85760405163e69458f960e01b815260048101839052602401610a7c565b670de0b6b3a7640000604083901b0461051881611756565b919050565b6000610d218383611de8565b5090949350505050565b6000610d368261258c565b9150600183836120018110610d4d57610d4d6125a5565b0154915060008060005b858416600003610dcf57610d6b84876124c4565b925086836120018110610d8057610d806125a5565b015491508661200101836120018110610d9b57610d9b6125a5565b0154905080600003610dad5781610db7565b610db781836108db565b610dc190866124c4565b9450600184901b9350610d57565b5050505092915050565b6000610de48261258c565b9150670de0b6b3a764000090505b61200082116105365760008361200101836120018110610e1457610e146125a5565b015490508015610e2b57610e2882826108db565b91505b610e3483611ed8565b610e3e90846124b1565b925050610df2565b600080610e54868686610fbf565b90506001836002811115610e6a57610e6a6125bb565b148015610e87575060008480610e8257610e8261252b565b868809115b15610e9a57610e976001826124b1565b90505b90505b949350505050565b610ead612322565b82548210610ece576040805180820190915260008082526020820152610533565b826000018281548110610ee357610ee36125a5565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091529392505050565b6000610536610f3d836802d1a51c7e00500000611118565b6601c6bf526340006110b7565b600064173eb4c80a83148015610f5f57508415155b15610f6c57506000610e9d565b60001960ff831601610f9857670de0b6b3a7640000610f8b8186612541565b610f959190612514565b93505b610faa670e6ed27d66680000866108db565b610fb485856108db565b101595945050505050565b6000808060001985870985870292508281108382030391505080600003610ff957838281610fef57610fef61252b565b0492505050610518565b80841161100557600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b611076816104ad565b82101561109657604051638be4f6eb60e01b815260040160405180910390fd5b5050565b60006105336110a984846108db565b670e6ed27d666800006108db565b6000818310156108d45781610533565b6000806111036110f6666a94d74f430000600a6110ec670de0b6b3a7640000886124c4565b6109539190612541565b6611c37937e080006110b7565b915061110f82856108db565b90509250929050565b600081611126600282612541565b6108fb670de0b6b3a764000086612514565b87546001600160a01b031916331788556001880180546001600160601b0342166001600160601b031990911617905561117086611ef7565b6003890180546001600160a01b0319166001600160a01b039290921691909117905561119b85611f64565b88546001600160601b0391909116600160a01b026001600160a01b039091161788556111c683611f64565b6003890180546001600160a01b0316600160a01b6001600160601b0393841602179055600489018390556005890182905589548a9160009161120891166125d1565b82546001600160601b039182166101009390930a92830291909202199091161790558854600160601b90046001600160a01b0316156112d1576001808a01546001600160a01b03908116600081815260038d01602052604090206002018054928b16600160601b9081026001600160601b03948516178255938c0180549483029484169490941790935591546112a9916112a4918891166110b7565b611f64565b60028a0180546001600160601b0319166001600160601b03929092169190911790555061131b565b88546001600160601b0316600160601b6001600160a01b038916021789556112f884611f64565b6002890180546001600160601b0319166001600160601b03929092169190911790555b505050600190950180546001600160a01b039094166001600160a01b03199094169390931790925550505050565b336000'... 9724 more characters,
  deployedBytecode: '0x73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c8063062f2dea1461005b5780632de27df2146100b75780638f4e8516146100d7578063f88050b714610105575b600080fd5b81801561006757600080fd5b5061007b610076366004612352565b610127565b6040516100ae91908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b8180156100c357600080fd5b5061007b6100d23660046123c9565b610291565b8180156100e357600080fd5b506100f76100f2366004612425565b6102cc565b6040519081526020016100ae565b81801561011157600080fd5b5061012561012036600461245a565b610392565b005b61012f6122fa565b61015a6040518060800160405280600081526020016000815260200160008152602001600081525090565b610163846104ad565b6020820152600061017889606088013561051f565b9050808260200151101561019f57604051631eceae9960e21b815260040160405180910390fd5b6000858152602089815260408083203384526003810190925290912060018101546002830154106101d15760006101d4565b80545b60608501526101e38b8861053c565b8085526001830154835460608701516020880151610204949190600061055a565b604085018190528451101561021b57835160408501525b83604001516000036102405760405163bb55fd2760e01b815260040160405180910390fd5b600061025f8c86604001518b6060013561025a91906124b1565b61051f565b90506102788d8b8b6102708e6105d2565b518b866105e5565b606081019490945250919b9a5050505050505050505050565b6102996122fa565b60006102a987866060013561051f565b90506102b98887878787866105e5565b6060810191909152979650505050505050565b3360009081526004840160205260408120546102e883826108c4565b91508160000361030b5760405163bb55fd2760e01b815260040160405180910390fd5b8185600201600082825461031f91906124c4565b9091555050336000908152600486016020526040812080548492906103459084906124c4565b90915550506040518281526001600160a01b0385169033907f1b6622b92ce16ed648b5b93fe47df1cd4c763fdcafe3281bc1dfd5ff7998a94d9060200160405180910390a3509392505050565b600382015482546103a690620697806124b1565b4210156103c6576040516357d0f8ef60e01b815260040160405180910390fd5b600283015460006103f56103e2602086013560608701356108db565b600288015486359085604089013561090f565b905061040181836124b1565b9150816000036104245760405163d8b9cde160e01b815260040160405180910390fd5b60028501829055428555600180860183905561044090846124b1565b600386018190556000818152600687016020526040902042908190559093507f3dacf6b19b0a84358a76a3338466cd428d1d4e80e53ccfe91b15d9b8021df96090839061048d908261097f565b8560405161049d939291906124d7565b60405180910390a1505050505050565b6000806104bc8361103c6124ed565b9050610c9f198112806104d0575061103c81135b156104ee57604051637edf443b60e11b815260040160405180910390fd5b6105186105136104fd83610a40565b61050e670df27a2cdf448000610ad0565b610bb4565b610c79565b9392505050565b600061053361052e8484610d15565b6104ad565b90505b92915050565b600061053361054b8484610d2b565b6105558585610dd9565b6108db565b600084158015610568575086155b156105745750826105c8565b856000036105835750826105c8565b6105c56105908489612514565b6105a2670de0b6b3a764000088612514565b6105ac91906124b1565b856105bf670de0b6b3a76400008a612514565b85610e46565b90505b9695505050505050565b6105da612322565b610536826001610ea5565b6105ed6122fa565b6001600160a01b0384166000908152600388016020526040902060018101546001600160601b031615610633576040516359bfb80360e11b815260040160405180910390fd5b6001600160a01b03851660009081526002880160209081526040808320805486840152600181015486830152815161014081018352848152928301849052908201839052606082018390526080820183905260a0820183905260c0820183905260e0820183905261010082018390526101208201929092526106bd84602001518960a001356108db565b815260408401516020808301919091528401516002906106e49061055560e08c0135610f25565b6106ee9190612541565b604082015260028201546060820152805160208083015161071d92918890610718908d018d612555565b610f4a565b1561073b576040516312eb95c560e21b815260040160405180910390fd5b6107786107666107578360000151670e6ed27d666800006108db565b83606001518460200151610fbf565b6ba25c8b0b1bdd606602df22a66108c4565b60808201819052610789908761106d565b6107ac6107958a6105d2565b602001516001600160601b03168960a0013561109a565b60a0820181905260808201516107c591610766916110b7565b60c0820152805160608201516107db91906110c7565b61010083015260e0820152805160208201516107f79190611118565b8161012001818152505061082c8a84898461010001518560e001518660c0015187608001518861012001518960400151611138565b61083b8a826101000151611349565b84526001600160a01b038716600090815260018a016020526040902054610865908a9089906113d5565b866001600160a01b03167f9f9a32e7f0271518f9b1895d0b1f2f4f73ed305e48b0a3782932094f9d00d948826000015183602001518461010001516040516108af939291906124d7565b60405180910390a25050509695505050505050565b6000818311156108d45781610533565b5090919050565b6000670de0b6b3a76400006108f1600282612541565b6108fb8486612514565b61090591906124b1565b6105339190612541565b60008061091c84866124b1565b9050808311156109755761093083886124b1565b91506109588282610949670de0b6b3e2feca008a6108db565b61095391906124b1565b6108c4565b61096290836124c4565b91506109728261095383866124c4565b91505b5095945050505050565b6000821561053657600061099384426124c4565b905060006109a3610e1083612541565b676765c793fa10079d601b1b901c905060006109e26b0331adfc6b81cf95c39de3b1603c6109d3610e1087612578565b6109dd9190612541565b611521565b905060008515610a0657610a01676765c793fa10079d601b1b87611118565b610a09565b60005b9050676765c793fa10079d601b1b610a218484611599565b610a2b9083612514565b610a359190612541565b979650505050505050565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f19821215610a855760405163e608e18b60e01b8152600481018390526024015b60405180910390fd5b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315610ac2576040516371f72a3160e01b815260048101839052602401610a7c565b50670de0b6b3a76400000290565b6000808213610af55760405163309fa7dd60e11b815260048101839052602401610a7c565b6000670de0b6b3a76400008312610b0e57506001610b27565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b6000610b3c670de0b6b3a764000085056115b2565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff198101610b6657505002919050565b6706f05b59d3b200005b6000811315610bab57670de0b6b3a7640000828002059150671bc16d674ec800008212610ba3579384019360019190911d905b60011d610b70565b50505002919050565b6000600160ff1b831480610bcb5750600160ff1b82145b15610be957604051630d01a11b60e21b815260040160405180910390fd5b60008060008512610bfa5784610bff565b846000035b915060008412610c0f5783610c14565b836000035b90506000610c228383611690565b90506001600160ff1b03811115610c4f5760405163bf79e8d960e01b815260048101829052602401610a7c565b600019808713908613808218600114610c685782610c6d565b826000035b98975050505050505050565b600080821215610ccc5768033dd1780914b9711419821215610c9d57506000919050565b610ca982600003610c79565b6a0c097ce7bc90715b34b9f160241b81610cc557610cc561252b565b0592915050565b680a688906bd8b0000008212610cf85760405163e69458f960e01b815260048101839052602401610a7c565b670de0b6b3a7640000604083901b0461051881611756565b919050565b6000610d218383611de8565b5090949350505050565b6000610d368261258c565b9150600183836120018110610d4d57610d4d6125a5565b0154915060008060005b858416600003610dcf57610d6b84876124c4565b925086836120018110610d8057610d806125a5565b015491508661200101836120018110610d9b57610d9b6125a5565b0154905080600003610dad5781610db7565b610db781836108db565b610dc190866124c4565b9450600184901b9350610d57565b5050505092915050565b6000610de48261258c565b9150670de0b6b3a764000090505b61200082116105365760008361200101836120018110610e1457610e146125a5565b015490508015610e2b57610e2882826108db565b91505b610e3483611ed8565b610e3e90846124b1565b925050610df2565b600080610e54868686610fbf565b90506001836002811115610e6a57610e6a6125bb565b148015610e87575060008480610e8257610e8261252b565b868809115b15610e9a57610e976001826124b1565b90505b90505b949350505050565b610ead612322565b82548210610ece576040805180820190915260008082526020820152610533565b826000018281548110610ee357610ee36125a5565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091529392505050565b6000610536610f3d836802d1a51c7e00500000611118565b6601c6bf526340006110b7565b600064173eb4c80a83148015610f5f57508415155b15610f6c57506000610e9d565b60001960ff831601610f9857670de0b6b3a7640000610f8b8186612541565b610f959190612514565b93505b610faa670e6ed27d66680000866108db565b610fb485856108db565b101595945050505050565b6000808060001985870985870292508281108382030391505080600003610ff957838281610fef57610fef61252b565b0492505050610518565b80841161100557600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b611076816104ad565b82101561109657604051638be4f6eb60e01b815260040160405180910390fd5b5050565b60006105336110a984846108db565b670e6ed27d666800006108db565b6000818310156108d45781610533565b6000806111036110f6666a94d74f430000600a6110ec670de0b6b3a7640000886124c4565b6109539190612541565b6611c37937e080006110b7565b915061110f82856108db565b90509250929050565b600081611126600282612541565b6108fb670de0b6b3a764000086612514565b87546001600160a01b031916331788556001880180546001600160601b0342166001600160601b031990911617905561117086611ef7565b6003890180546001600160a01b0319166001600160a01b039290921691909117905561119b85611f64565b88546001600160601b0391909116600160a01b026001600160a01b039091161788556111c683611f64565b6003890180546001600160a01b0316600160a01b6001600160601b0393841602179055600489018390556005890182905589548a9160009161120891166125d1565b82546001600160601b039182166101009390930a92830291909202199091161790558854600160601b90046001600160a01b0316156112d1576001808a01546001600160a01b03908116600081815260038d01602052604090206002018054928b16600160601b9081026001600160601b03948516178255938c0180549483029484169490941790935591546112a9916112a4918891166110b7565b611f64565b60028a0180546001600160601b0319166001600160601b03929092169190911790555061131b565b88546001600160601b0316600160601b6001600160a01b038916021789556112f884611f64565b6002890180546001600160601b0319166001600160601b03929092169190911790555b505050600190950180546001600160a01b039094166001600160a01b03199094169390931790925550505050565b336000908152600483016020526040812060018101805484919084906113709084906124b1565b9091555050805483811061139d578382600001600082'... 9608 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel\'s lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don\'t need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.\'s \\"Hacker\'s Delight\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\"msb\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // ‚Üí `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // ‚Üí `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton\'s method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result'... 254173 more characters
  }
}
2024-01-08T15:26:32.102Z cannon:cli:rpc eth_chainId

2024-01-08T15:26:32.104Z cannon:builder:contract performing arachnid create2
2024-01-08T15:26:32.133Z cannon:builder:contract create2 address is 0xf419056B545783BbFfEAB4d0aA057a52FbA4F4fd
2024-01-08T15:26:32.133Z cannon:cli:rpc eth_getCode

2024-01-08T15:26:32.136Z cannon:cli:rpc eth_chainId

2024-01-08T15:26:32.141Z cannon:cli:rpc eth_getCode

2024-01-08T15:26:32.656Z cannon:cli:rpc anvil_impersonateAccount

2024-01-08T15:26:32.657Z cannon:cli:rpc anvil_setBalance

2024-01-08T15:26:32.659Z cannon:cli:rpc eth_blockNumber

2024-01-08T15:26:32.662Z cannon:cli:rpc eth_chainId

2024-01-08T15:26:32.665Z cannon:cli:rpc eth_chainId

2024-01-08T15:26:32.668Z cannon:cli:rpc eth_estimateGas

2024-01-08T15:26:32.681Z cannon:cli:rpc eth_sendTransaction

2024-01-08T15:26:32.682Z cannon:cli:rpc 
    Transaction: 0x6b94aa77f3d25a3b8a8735230426dba65b7160855256b3dfc5f5213a67fc0a68
    Gas used: 2173039

    Block Number: 114564384
    Block Hash: 0x7ad56beca93375cc03ccc67e910ef6f3a086ad1c609ccc7475e8971506f508bf
    Block Time: "Mon, 8 Jan 2024 15:26:30 +0000"


2024-01-08T15:26:32.682Z cannon:cli:rpc eth_chainId

2024-01-08T15:26:32.684Z cannon:cli:rpc eth_getTransactionByHash

2024-01-08T15:26:32.690Z cannon:cli:rpc eth_chainId

2024-01-08T15:26:32.691Z cannon:cli:rpc eth_getTransactionReceipt

2024-01-08T15:26:32.692Z cannon:builder:contract arachnid create2 complete {
  to: '0x4e59b44847b379578588920cA78FbF26c0B4956C',
  from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
  contractAddress: null,
  transactionIndex: 0,
  gasUsed: BigNumber { _hex: '0x21286f', _isBigNumber: true },
  logsBloom: '0x
  blockHash: '0x7ad56beca93375cc03ccc67e910ef6f3a086ad1c609ccc7475e8971506f508bf',
  transactionHash: '0x6b94aa77f3d25a3b8a8735230426dba65b7160855256b3dfc5f5213a67fc0a68',
  logs: [],
  blockNumber: 114564384,
  confirmations: 1,
  cumulativeGasUsed: BigNumber { _hex: '0x21286f', _isBigNumber: true },
  effectiveGasPrice: BigNumber { _hex: '0x3a3b68', _isBigNumber: true },
  status: 1,
  type: 2,
  byzantium: true
}
2024-01-08T15:26:32.692Z cannon:builder:contract contract deployed to address 0xf419056B545783BbFfEAB4d0aA057a52FbA4F4fd
  ‚úî Successfully deployed KickerActions using CREATE2
  Contract Address: 0xf419056B545783BbFfEAB4d0aA057a52FbA4F4fd
  Transaction Hash: 0x6b94aa77f3d25a3b8a8735230426dba65b7160855256b3dfc5f5213a67fc0a68
  Transaction Cost: 0.000008292960043544 ETH (2,173,039 gas)

2024-01-08T15:26:32.695Z cannon:builder:runtime resolve artifact KickerActions
2024-01-08T15:26:32.695Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:26:41.457Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/KickerActions.sol': 'KickerActions' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/KickerActions.sol': {
      keccak256: '0xa486e9c9091c1cc8966f13b2b6bb9f9b7eeaf26d539b990c3904befd7a2a25fe',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/RevertsHelper.sol': {
      keccak256: '0xcaff095290172f1b5726d4e887ab9be5f524d9321e94ca0095f99b666381a6f4',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:26:41.458Z cannon:cli:foundry evm version paris
2024-01-08T15:26:41.468Z cannon:builder:runtime reported contract artifact KickerActions {
  contractName: 'KickerActions',
  sourceName: 'src/libraries/external/KickerActions.sol',
  abi: [
    {
      type: 'event',
      name: 'BondWithdrawn',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'BucketBankruptcy',
      inputs: [Array],
      anonymous: false
    },
    { type: 'event', name: 'Kick', inputs: [Array], anonymous: false },
    {
      type: 'event',
      name: 'KickReserveAuction',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'RemoveQuoteToken',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'AuctionActive', inputs: [] },
    { type: 'error', name: 'BorrowerOk', inputs: [] },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'InsufficientLiquidity', inputs: [] },
    { type: 'error', name: 'LimitIndexExceeded', inputs: [] },
    { type: 'error', name: 'NoReserves', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'PriceBelowLUP', inputs: [] },
    { type: 'error', name: 'ReserveAuctionTooSoon', inputs: [] }
  ],
  bytecode: '0x61264b61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c8063062f2dea1461005b5780632de27df2146100b75780638f4e8516146100d7578063f88050b714610105575b600080fd5b81801561006757600080fd5b5061007b610076366004612352565b610127565b6040516100ae91908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b8180156100c357600080fd5b5061007b6100d23660046123c9565b610291565b8180156100e357600080fd5b506100f76100f2366004612425565b6102cc565b6040519081526020016100ae565b81801561011157600080fd5b5061012561012036600461245a565b610392565b005b61012f6122fa565b61015a6040518060800160405280600081526020016000815260200160008152602001600081525090565b610163846104ad565b6020820152600061017889606088013561051f565b9050808260200151101561019f57604051631eceae9960e21b815260040160405180910390fd5b6000858152602089815260408083203384526003810190925290912060018101546002830154106101d15760006101d4565b80545b60608501526101e38b8861053c565b8085526001830154835460608701516020880151610204949190600061055a565b604085018190528451101561021b57835160408501525b83604001516000036102405760405163bb55fd2760e01b815260040160405180910390fd5b600061025f8c86604001518b6060013561025a91906124b1565b61051f565b90506102788d8b8b6102708e6105d2565b518b866105e5565b606081019490945250919b9a5050505050505050505050565b6102996122fa565b60006102a987866060013561051f565b90506102b98887878787866105e5565b6060810191909152979650505050505050565b3360009081526004840160205260408120546102e883826108c4565b91508160000361030b5760405163bb55fd2760e01b815260040160405180910390fd5b8185600201600082825461031f91906124c4565b9091555050336000908152600486016020526040812080548492906103459084906124c4565b90915550506040518281526001600160a01b0385169033907f1b6622b92ce16ed648b5b93fe47df1cd4c763fdcafe3281bc1dfd5ff7998a94d9060200160405180910390a3509392505050565b600382015482546103a690620697806124b1565b4210156103c6576040516357d0f8ef60e01b815260040160405180910390fd5b600283015460006103f56103e2602086013560608701356108db565b600288015486359085604089013561090f565b905061040181836124b1565b9150816000036104245760405163d8b9cde160e01b815260040160405180910390fd5b60028501829055428555600180860183905561044090846124b1565b600386018190556000818152600687016020526040902042908190559093507f3dacf6b19b0a84358a76a3338466cd428d1d4e80e53ccfe91b15d9b8021df96090839061048d908261097f565b8560405161049d939291906124d7565b60405180910390a1505050505050565b6000806104bc8361103c6124ed565b9050610c9f198112806104d0575061103c81135b156104ee57604051637edf443b60e11b815260040160405180910390fd5b6105186105136104fd83610a40565b61050e670df27a2cdf448000610ad0565b610bb4565b610c79565b9392505050565b600061053361052e8484610d15565b6104ad565b90505b92915050565b600061053361054b8484610d2b565b6105558585610dd9565b6108db565b600084158015610568575086155b156105745750826105c8565b856000036105835750826105c8565b6105c56105908489612514565b6105a2670de0b6b3a764000088612514565b6105ac91906124b1565b856105bf670de0b6b3a76400008a612514565b85610e46565b90505b9695505050505050565b6105da612322565b610536826001610ea5565b6105ed6122fa565b6001600160a01b0384166000908152600388016020526040902060018101546001600160601b031615610633576040516359bfb80360e11b815260040160405180910390fd5b6001600160a01b03851660009081526002880160209081526040808320805486840152600181015486830152815161014081018352848152928301849052908201839052606082018390526080820183905260a0820183905260c0820183905260e0820183905261010082018390526101208201929092526106bd84602001518960a001356108db565b815260408401516020808301919091528401516002906106e49061055560e08c0135610f25565b6106ee9190612541565b604082015260028201546060820152805160208083015161071d92918890610718908d018d612555565b610f4a565b1561073b576040516312eb95c560e21b815260040160405180910390fd5b6107786107666107578360000151670e6ed27d666800006108db565b83606001518460200151610fbf565b6ba25c8b0b1bdd606602df22a66108c4565b60808201819052610789908761106d565b6107ac6107958a6105d2565b602001516001600160601b03168960a0013561109a565b60a0820181905260808201516107c591610766916110b7565b60c0820152805160608201516107db91906110c7565b61010083015260e0820152805160208201516107f79190611118565b8161012001818152505061082c8a84898461010001518560e001518660c0015187608001518861012001518960400151611138565b61083b8a826101000151611349565b84526001600160a01b038716600090815260018a016020526040902054610865908a9089906113d5565b866001600160a01b03167f9f9a32e7f0271518f9b1895d0b1f2f4f73ed305e48b0a3782932094f9d00d948826000015183602001518461010001516040516108af939291906124d7565b60405180910390a25050509695505050505050565b6000818311156108d45781610533565b5090919050565b6000670de0b6b3a76400006108f1600282612541565b6108fb8486612514565b61090591906124b1565b6105339190612541565b60008061091c84866124b1565b9050808311156109755761093083886124b1565b91506109588282610949670de0b6b3e2feca008a6108db565b61095391906124b1565b6108c4565b61096290836124c4565b91506109728261095383866124c4565b91505b5095945050505050565b6000821561053657600061099384426124c4565b905060006109a3610e1083612541565b676765c793fa10079d601b1b901c905060006109e26b0331adfc6b81cf95c39de3b1603c6109d3610e1087612578565b6109dd9190612541565b611521565b905060008515610a0657610a01676765c793fa10079d601b1b87611118565b610a09565b60005b9050676765c793fa10079d601b1b610a218484611599565b610a2b9083612514565b610a359190612541565b979650505050505050565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f19821215610a855760405163e608e18b60e01b8152600481018390526024015b60405180910390fd5b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315610ac2576040516371f72a3160e01b815260048101839052602401610a7c565b50670de0b6b3a76400000290565b6000808213610af55760405163309fa7dd60e11b815260048101839052602401610a7c565b6000670de0b6b3a76400008312610b0e57506001610b27565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b6000610b3c670de0b6b3a764000085056115b2565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff198101610b6657505002919050565b6706f05b59d3b200005b6000811315610bab57670de0b6b3a7640000828002059150671bc16d674ec800008212610ba3579384019360019190911d905b60011d610b70565b50505002919050565b6000600160ff1b831480610bcb5750600160ff1b82145b15610be957604051630d01a11b60e21b815260040160405180910390fd5b60008060008512610bfa5784610bff565b846000035b915060008412610c0f5783610c14565b836000035b90506000610c228383611690565b90506001600160ff1b03811115610c4f5760405163bf79e8d960e01b815260048101829052602401610a7c565b600019808713908613808218600114610c685782610c6d565b826000035b98975050505050505050565b600080821215610ccc5768033dd1780914b9711419821215610c9d57506000919050565b610ca982600003610c79565b6a0c097ce7bc90715b34b9f160241b81610cc557610cc561252b565b0592915050565b680a688906bd8b0000008212610cf85760405163e69458f960e01b815260048101839052602401610a7c565b670de0b6b3a7640000604083901b0461051881611756565b919050565b6000610d218383611de8565b5090949350505050565b6000610d368261258c565b9150600183836120018110610d4d57610d4d6125a5565b0154915060008060005b858416600003610dcf57610d6b84876124c4565b925086836120018110610d8057610d806125a5565b015491508661200101836120018110610d9b57610d9b6125a5565b0154905080600003610dad5781610db7565b610db781836108db565b610dc190866124c4565b9450600184901b9350610d57565b5050505092915050565b6000610de48261258c565b9150670de0b6b3a764000090505b61200082116105365760008361200101836120018110610e1457610e146125a5565b015490508015610e2b57610e2882826108db565b91505b610e3483611ed8565b610e3e90846124b1565b925050610df2565b600080610e54868686610fbf565b90506001836002811115610e6a57610e6a6125bb565b148015610e87575060008480610e8257610e8261252b565b868809115b15610e9a57610e976001826124b1565b90505b90505b949350505050565b610ead612322565b82548210610ece576040805180820190915260008082526020820152610533565b826000018281548110610ee357610ee36125a5565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091529392505050565b6000610536610f3d836802d1a51c7e00500000611118565b6601c6bf526340006110b7565b600064173eb4c80a83148015610f5f57508415155b15610f6c57506000610e9d565b60001960ff831601610f9857670de0b6b3a7640000610f8b8186612541565b610f959190612514565b93505b610faa670e6ed27d66680000866108db565b610fb485856108db565b101595945050505050565b6000808060001985870985870292508281108382030391505080600003610ff957838281610fef57610fef61252b565b0492505050610518565b80841161100557600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b611076816104ad565b82101561109657604051638be4f6eb60e01b815260040160405180910390fd5b5050565b60006105336110a984846108db565b670e6ed27d666800006108db565b6000818310156108d45781610533565b6000806111036110f6666a94d74f430000600a6110ec670de0b6b3a7640000886124c4565b6109539190612541565b6611c37937e080006110b7565b915061110f82856108db565b90509250929050565b600081611126600282612541565b6108fb670de0b6b3a764000086612514565b87546001600160a01b031916331788556001880180546001600160601b0342166001600160601b031990911617905561117086611ef7565b6003890180546001600160a01b0319166001600160a01b039290921691909117905561119b85611f64565b88546001600160601b0391909116600160a01b026001600160a01b039091161788556111c683611f64565b6003890180546001600160a01b0316600160a01b6001600160601b0393841602179055600489018390556005890182905589548a9160009161120891166125d1565b82546001600160601b039182166101009390930a92830291909202199091161790558854600160601b90046001600160a01b0316156112d1576001808a01546001600160a01b03908116600081815260038d01602052604090206002018054928b16600160601b9081026001600160601b03948516178255938c0180549483029484169490941790935591546112a9916112a4918891166110b7565b611f64565b60028a0180546001600160601b0319166001600160601b03929092169190911790555061131b565b88546001600160601b0316600160601b6001600160a01b038916021789556112f884611f64565b6002890180546001600160601b0319166001600160601b03929092169190911790555b505050600190950180546001600160a01b039094166001600160a01b03199094169390931790925550505050565b336000'... 9724 more characters,
  deployedBytecode: '0x73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c8063062f2dea1461005b5780632de27df2146100b75780638f4e8516146100d7578063f88050b714610105575b600080fd5b81801561006757600080fd5b5061007b610076366004612352565b610127565b6040516100ae91908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b8180156100c357600080fd5b5061007b6100d23660046123c9565b610291565b8180156100e357600080fd5b506100f76100f2366004612425565b6102cc565b6040519081526020016100ae565b81801561011157600080fd5b5061012561012036600461245a565b610392565b005b61012f6122fa565b61015a6040518060800160405280600081526020016000815260200160008152602001600081525090565b610163846104ad565b6020820152600061017889606088013561051f565b9050808260200151101561019f57604051631eceae9960e21b815260040160405180910390fd5b6000858152602089815260408083203384526003810190925290912060018101546002830154106101d15760006101d4565b80545b60608501526101e38b8861053c565b8085526001830154835460608701516020880151610204949190600061055a565b604085018190528451101561021b57835160408501525b83604001516000036102405760405163bb55fd2760e01b815260040160405180910390fd5b600061025f8c86604001518b6060013561025a91906124b1565b61051f565b90506102788d8b8b6102708e6105d2565b518b866105e5565b606081019490945250919b9a5050505050505050505050565b6102996122fa565b60006102a987866060013561051f565b90506102b98887878787866105e5565b6060810191909152979650505050505050565b3360009081526004840160205260408120546102e883826108c4565b91508160000361030b5760405163bb55fd2760e01b815260040160405180910390fd5b8185600201600082825461031f91906124c4565b9091555050336000908152600486016020526040812080548492906103459084906124c4565b90915550506040518281526001600160a01b0385169033907f1b6622b92ce16ed648b5b93fe47df1cd4c763fdcafe3281bc1dfd5ff7998a94d9060200160405180910390a3509392505050565b600382015482546103a690620697806124b1565b4210156103c6576040516357d0f8ef60e01b815260040160405180910390fd5b600283015460006103f56103e2602086013560608701356108db565b600288015486359085604089013561090f565b905061040181836124b1565b9150816000036104245760405163d8b9cde160e01b815260040160405180910390fd5b60028501829055428555600180860183905561044090846124b1565b600386018190556000818152600687016020526040902042908190559093507f3dacf6b19b0a84358a76a3338466cd428d1d4e80e53ccfe91b15d9b8021df96090839061048d908261097f565b8560405161049d939291906124d7565b60405180910390a1505050505050565b6000806104bc8361103c6124ed565b9050610c9f198112806104d0575061103c81135b156104ee57604051637edf443b60e11b815260040160405180910390fd5b6105186105136104fd83610a40565b61050e670df27a2cdf448000610ad0565b610bb4565b610c79565b9392505050565b600061053361052e8484610d15565b6104ad565b90505b92915050565b600061053361054b8484610d2b565b6105558585610dd9565b6108db565b600084158015610568575086155b156105745750826105c8565b856000036105835750826105c8565b6105c56105908489612514565b6105a2670de0b6b3a764000088612514565b6105ac91906124b1565b856105bf670de0b6b3a76400008a612514565b85610e46565b90505b9695505050505050565b6105da612322565b610536826001610ea5565b6105ed6122fa565b6001600160a01b0384166000908152600388016020526040902060018101546001600160601b031615610633576040516359bfb80360e11b815260040160405180910390fd5b6001600160a01b03851660009081526002880160209081526040808320805486840152600181015486830152815161014081018352848152928301849052908201839052606082018390526080820183905260a0820183905260c0820183905260e0820183905261010082018390526101208201929092526106bd84602001518960a001356108db565b815260408401516020808301919091528401516002906106e49061055560e08c0135610f25565b6106ee9190612541565b604082015260028201546060820152805160208083015161071d92918890610718908d018d612555565b610f4a565b1561073b576040516312eb95c560e21b815260040160405180910390fd5b6107786107666107578360000151670e6ed27d666800006108db565b83606001518460200151610fbf565b6ba25c8b0b1bdd606602df22a66108c4565b60808201819052610789908761106d565b6107ac6107958a6105d2565b602001516001600160601b03168960a0013561109a565b60a0820181905260808201516107c591610766916110b7565b60c0820152805160608201516107db91906110c7565b61010083015260e0820152805160208201516107f79190611118565b8161012001818152505061082c8a84898461010001518560e001518660c0015187608001518861012001518960400151611138565b61083b8a826101000151611349565b84526001600160a01b038716600090815260018a016020526040902054610865908a9089906113d5565b866001600160a01b03167f9f9a32e7f0271518f9b1895d0b1f2f4f73ed305e48b0a3782932094f9d00d948826000015183602001518461010001516040516108af939291906124d7565b60405180910390a25050509695505050505050565b6000818311156108d45781610533565b5090919050565b6000670de0b6b3a76400006108f1600282612541565b6108fb8486612514565b61090591906124b1565b6105339190612541565b60008061091c84866124b1565b9050808311156109755761093083886124b1565b91506109588282610949670de0b6b3e2feca008a6108db565b61095391906124b1565b6108c4565b61096290836124c4565b91506109728261095383866124c4565b91505b5095945050505050565b6000821561053657600061099384426124c4565b905060006109a3610e1083612541565b676765c793fa10079d601b1b901c905060006109e26b0331adfc6b81cf95c39de3b1603c6109d3610e1087612578565b6109dd9190612541565b611521565b905060008515610a0657610a01676765c793fa10079d601b1b87611118565b610a09565b60005b9050676765c793fa10079d601b1b610a218484611599565b610a2b9083612514565b610a359190612541565b979650505050505050565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f19821215610a855760405163e608e18b60e01b8152600481018390526024015b60405180910390fd5b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315610ac2576040516371f72a3160e01b815260048101839052602401610a7c565b50670de0b6b3a76400000290565b6000808213610af55760405163309fa7dd60e11b815260048101839052602401610a7c565b6000670de0b6b3a76400008312610b0e57506001610b27565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b6000610b3c670de0b6b3a764000085056115b2565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff198101610b6657505002919050565b6706f05b59d3b200005b6000811315610bab57670de0b6b3a7640000828002059150671bc16d674ec800008212610ba3579384019360019190911d905b60011d610b70565b50505002919050565b6000600160ff1b831480610bcb5750600160ff1b82145b15610be957604051630d01a11b60e21b815260040160405180910390fd5b60008060008512610bfa5784610bff565b846000035b915060008412610c0f5783610c14565b836000035b90506000610c228383611690565b90506001600160ff1b03811115610c4f5760405163bf79e8d960e01b815260048101829052602401610a7c565b600019808713908613808218600114610c685782610c6d565b826000035b98975050505050505050565b600080821215610ccc5768033dd1780914b9711419821215610c9d57506000919050565b610ca982600003610c79565b6a0c097ce7bc90715b34b9f160241b81610cc557610cc561252b565b0592915050565b680a688906bd8b0000008212610cf85760405163e69458f960e01b815260048101839052602401610a7c565b670de0b6b3a7640000604083901b0461051881611756565b919050565b6000610d218383611de8565b5090949350505050565b6000610d368261258c565b9150600183836120018110610d4d57610d4d6125a5565b0154915060008060005b858416600003610dcf57610d6b84876124c4565b925086836120018110610d8057610d806125a5565b015491508661200101836120018110610d9b57610d9b6125a5565b0154905080600003610dad5781610db7565b610db781836108db565b610dc190866124c4565b9450600184901b9350610d57565b5050505092915050565b6000610de48261258c565b9150670de0b6b3a764000090505b61200082116105365760008361200101836120018110610e1457610e146125a5565b015490508015610e2b57610e2882826108db565b91505b610e3483611ed8565b610e3e90846124b1565b925050610df2565b600080610e54868686610fbf565b90506001836002811115610e6a57610e6a6125bb565b148015610e87575060008480610e8257610e8261252b565b868809115b15610e9a57610e976001826124b1565b90505b90505b949350505050565b610ead612322565b82548210610ece576040805180820190915260008082526020820152610533565b826000018281548110610ee357610ee36125a5565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091529392505050565b6000610536610f3d836802d1a51c7e00500000611118565b6601c6bf526340006110b7565b600064173eb4c80a83148015610f5f57508415155b15610f6c57506000610e9d565b60001960ff831601610f9857670de0b6b3a7640000610f8b8186612541565b610f959190612514565b93505b610faa670e6ed27d66680000866108db565b610fb485856108db565b101595945050505050565b6000808060001985870985870292508281108382030391505080600003610ff957838281610fef57610fef61252b565b0492505050610518565b80841161100557600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b611076816104ad565b82101561109657604051638be4f6eb60e01b815260040160405180910390fd5b5050565b60006105336110a984846108db565b670e6ed27d666800006108db565b6000818310156108d45781610533565b6000806111036110f6666a94d74f430000600a6110ec670de0b6b3a7640000886124c4565b6109539190612541565b6611c37937e080006110b7565b915061110f82856108db565b90509250929050565b600081611126600282612541565b6108fb670de0b6b3a764000086612514565b87546001600160a01b031916331788556001880180546001600160601b0342166001600160601b031990911617905561117086611ef7565b6003890180546001600160a01b0319166001600160a01b039290921691909117905561119b85611f64565b88546001600160601b0391909116600160a01b026001600160a01b039091161788556111c683611f64565b6003890180546001600160a01b0316600160a01b6001600160601b0393841602179055600489018390556005890182905589548a9160009161120891166125d1565b82546001600160601b039182166101009390930a92830291909202199091161790558854600160601b90046001600160a01b0316156112d1576001808a01546001600160a01b03908116600081815260038d01602052604090206002018054928b16600160601b9081026001600160601b03948516178255938c0180549483029484169490941790935591546112a9916112a4918891166110b7565b611f64565b60028a0180546001600160601b0319166001600160601b03929092169190911790555061131b565b88546001600160601b0316600160601b6001600160a01b038916021789556112f884611f64565b6002890180546001600160601b0319166001600160601b03929092169190911790555b505050600190950180546001600160a01b039094166001600160a01b03199094169390931790925550505050565b336000908152600483016020526040812060018101805484919084906113709084906124b1565b9091555050805483811061139d578382600001600082'... 9608 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel\'s lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don\'t need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.\'s \\"Hacker\'s Delight\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\"msb\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // ‚Üí `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // ‚Üí `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton\'s method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result'... 254173 more characters
  }
}
2024-01-08T15:26:41.469Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x61264b61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c8063062f2dea1461005b5780632de27df2146100b75780638f4e8516146100d7578063f88050b714610105575b600080fd5b81801561006757600080fd5b5061007b610076366004612352565b610127565b6040516100ae91908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b8180156100c357600080fd5b5061007b6100d23660046123c9565b610291565b8180156100e357600080fd5b506100f76100f2366004612425565b6102cc565b6040519081526020016100ae565b81801561011157600080fd5b5061012561012036600461245a565b610392565b005b61012f6122fa565b61015a6040518060800160405280600081526020016000815260200160008152602001600081525090565b610163846104ad565b6020820152600061017889606088013561051f565b9050808260200151101561019f57604051631eceae9960e21b815260040160405180910390fd5b6000858152602089815260408083203384526003810190925290912060018101546002830154106101d15760006101d4565b80545b60608501526101e38b8861053c565b8085526001830154835460608701516020880151610204949190600061055a565b604085018190528451101561021b57835160408501525b83604001516000036102405760405163bb55fd2760e01b815260040160405180910390fd5b600061025f8c86604001518b6060013561025a91906124b1565b61051f565b90506102788d8b8b6102708e6105d2565b518b866105e5565b606081019490945250919b9a5050505050505050505050565b6102996122fa565b60006102a987866060013561051f565b90506102b98887878787866105e5565b6060810191909152979650505050505050565b3360009081526004840160205260408120546102e883826108c4565b91508160000361030b5760405163bb55fd2760e01b815260040160405180910390fd5b8185600201600082825461031f91906124c4565b9091555050336000908152600486016020526040812080548492906103459084906124c4565b90915550506040518281526001600160a01b0385169033907f1b6622b92ce16ed648b5b93fe47df1cd4c763fdcafe3281bc1dfd5ff7998a94d9060200160405180910390a3509392505050565b600382015482546103a690620697806124b1565b4210156103c6576040516357d0f8ef60e01b815260040160405180910390fd5b600283015460006103f56103e2602086013560608701356108db565b600288015486359085604089013561090f565b905061040181836124b1565b9150816000036104245760405163d8b9cde160e01b815260040160405180910390fd5b60028501829055428555600180860183905561044090846124b1565b600386018190556000818152600687016020526040902042908190559093507f3dacf6b19b0a84358a76a3338466cd428d1d4e80e53ccfe91b15d9b8021df96090839061048d908261097f565b8560405161049d939291906124d7565b60405180910390a1505050505050565b6000806104bc8361103c6124ed565b9050610c9f198112806104d0575061103c81135b156104ee57604051637edf443b60e11b815260040160405180910390fd5b6105186105136104fd83610a40565b61050e670df27a2cdf448000610ad0565b610bb4565b610c79565b9392505050565b600061053361052e8484610d15565b6104ad565b90505b92915050565b600061053361054b8484610d2b565b6105558585610dd9565b6108db565b600084158015610568575086155b156105745750826105c8565b856000036105835750826105c8565b6105c56105908489612514565b6105a2670de0b6b3a764000088612514565b6105ac91906124b1565b856105bf670de0b6b3a76400008a612514565b85610e46565b90505b9695505050505050565b6105da612322565b610536826001610ea5565b6105ed6122fa565b6001600160a01b0384166000908152600388016020526040902060018101546001600160601b031615610633576040516359bfb80360e11b815260040160405180910390fd5b6001600160a01b03851660009081526002880160209081526040808320805486840152600181015486830152815161014081018352848152928301849052908201839052606082018390526080820183905260a0820183905260c0820183905260e0820183905261010082018390526101208201929092526106bd84602001518960a001356108db565b815260408401516020808301919091528401516002906106e49061055560e08c0135610f25565b6106ee9190612541565b604082015260028201546060820152805160208083015161071d92918890610718908d018d612555565b610f4a565b1561073b576040516312eb95c560e21b815260040160405180910390fd5b6107786107666107578360000151670e6ed27d666800006108db565b83606001518460200151610fbf565b6ba25c8b0b1bdd606602df22a66108c4565b60808201819052610789908761106d565b6107ac6107958a6105d2565b602001516001600160601b03168960a0013561109a565b60a0820181905260808201516107c591610766916110b7565b60c0820152805160608201516107db91906110c7565b61010083015260e0820152805160208201516107f79190611118565b8161012001818152505061082c8a84898461010001518560e001518660c0015187608001518861012001518960400151611138565b61083b8a826101000151611349565b84526001600160a01b038716600090815260018a016020526040902054610865908a9089906113d5565b866001600160a01b03167f9f9a32e7f0271518f9b1895d0b1f2f4f73ed305e48b0a3782932094f9d00d948826000015183602001518461010001516040516108af939291906124d7565b60405180910390a25050509695505050505050565b6000818311156108d45781610533565b5090919050565b6000670de0b6b3a76400006108f1600282612541565b6108fb8486612514565b61090591906124b1565b6105339190612541565b60008061091c84866124b1565b9050808311156109755761093083886124b1565b91506109588282610949670de0b6b3e2feca008a6108db565b61095391906124b1565b6108c4565b61096290836124c4565b91506109728261095383866124c4565b91505b5095945050505050565b6000821561053657600061099384426124c4565b905060006109a3610e1083612541565b676765c793fa10079d601b1b901c905060006109e26b0331adfc6b81cf95c39de3b1603c6109d3610e1087612578565b6109dd9190612541565b611521565b905060008515610a0657610a01676765c793fa10079d601b1b87611118565b610a09565b60005b9050676765c793fa10079d601b1b610a218484611599565b610a2b9083612514565b610a359190612541565b979650505050505050565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f19821215610a855760405163e608e18b60e01b8152600481018390526024015b60405180910390fd5b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315610ac2576040516371f72a3160e01b815260048101839052602401610a7c565b50670de0b6b3a76400000290565b6000808213610af55760405163309fa7dd60e11b815260048101839052602401610a7c565b6000670de0b6b3a76400008312610b0e57506001610b27565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b6000610b3c670de0b6b3a764000085056115b2565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff198101610b6657505002919050565b6706f05b59d3b200005b6000811315610bab57670de0b6b3a7640000828002059150671bc16d674ec800008212610ba3579384019360019190911d905b60011d610b70565b50505002919050565b6000600160ff1b831480610bcb5750600160ff1b82145b15610be957604051630d01a11b60e21b815260040160405180910390fd5b60008060008512610bfa5784610bff565b846000035b915060008412610c0f5783610c14565b836000035b90506000610c228383611690565b90506001600160ff1b03811115610c4f5760405163bf79e8d960e01b815260048101829052602401610a7c565b600019808713908613808218600114610c685782610c6d565b826000035b98975050505050505050565b600080821215610ccc5768033dd1780914b9711419821215610c9d57506000919050565b610ca982600003610c79565b6a0c097ce7bc90715b34b9f160241b81610cc557610cc561252b565b0592915050565b680a688906bd8b0000008212610cf85760405163e69458f960e01b815260048101839052602401610a7c565b670de0b6b3a7640000604083901b0461051881611756565b919050565b6000610d218383611de8565b5090949350505050565b6000610d368261258c565b9150600183836120018110610d4d57610d4d6125a5565b0154915060008060005b858416600003610dcf57610d6b84876124c4565b925086836120018110610d8057610d806125a5565b015491508661200101836120018110610d9b57610d9b6125a5565b0154905080600003610dad5781610db7565b610db781836108db565b610dc190866124c4565b9450600184901b9350610d57565b5050505092915050565b6000610de48261258c565b9150670de0b6b3a764000090505b61200082116105365760008361200101836120018110610e1457610e146125a5565b015490508015610e2b57610e2882826108db565b91505b610e3483611ed8565b610e3e90846124b1565b925050610df2565b600080610e54868686610fbf565b90506001836002811115610e6a57610e6a6125bb565b148015610e87575060008480610e8257610e8261252b565b868809115b15610e9a57610e976001826124b1565b90505b90505b949350505050565b610ead612322565b82548210610ece576040805180820190915260008082526020820152610533565b826000018281548110610ee357610ee36125a5565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091529392505050565b6000610536610f3d836802d1a51c7e00500000611118565b6601c6bf526340006110b7565b600064173eb4c80a83148015610f5f57508415155b15610f6c57506000610e9d565b60001960ff831601610f9857670de0b6b3a7640000610f8b8186612541565b610f959190612514565b93505b610faa670e6ed27d66680000866108db565b610fb485856108db565b101595945050505050565b6000808060001985870985870292508281108382030391505080600003610ff957838281610fef57610fef61252b565b0492505050610518565b80841161100557600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b611076816104ad565b82101561109657604051638be4f6eb60e01b815260040160405180910390fd5b5050565b60006105336110a984846108db565b670e6ed27d666800006108db565b6000818310156108d45781610533565b6000806111036110f6666a94d74f430000600a6110ec670de0b6b3a7640000886124c4565b6109539190612541565b6611c37937e080006110b7565b915061110f82856108db565b90509250929050565b600081611126600282612541565b6108fb670de0b6b3a764000086612514565b87546001600160a01b031916331788556001880180546001600160601b0342166001600160601b031990911617905561117086611ef7565b6003890180546001600160a01b0319166001600160a01b039290921691909117905561119b85611f64565b88546001600160601b0391909116600160a01b026001600160a01b039091161788556111c683611f64565b6003890180546001600160a01b0316600160a01b6001600160601b0393841602179055600489018390556005890182905589548a9160009161120891166125d1565b82546001600160601b039182166101009390930a92830291909202199091161790558854600160601b90046001600160a01b0316156112d1576001808a01546001600160a01b03908116600081815260038d01602052604090206002018054928b16600160601b9081026001600160601b03948516178255938c0180549483029484169490941790935591546112a9916112a4918891166110b7565b611f64565b60028a0180546001600160601b0319166001600160601b03929092169190911790555061131b565b88546001600160601b0316600160601b6001600160a01b038916021789556112f884611f64565b6002890180546001600160601b0319166001600160601b03929092169190911790555b505050600190950180546001600160a01b039094166001600160a01b03199094169390931790925550505050565b336000908152600483016020526040812060018101805484919084906113709084906124b1565b9091555050805483811061139d578382600001600082825461139291906124c4565b909155506113cd9050565b6113a781856124c4565b925060008260000181905550828560020160008282546113c791906124b1565b90915550505b505092915050565b6001600160a01b038216600090815260018085016020526040822082905584546113ff91906124c4565b9050808203611436578354849080611419576114196125ff565b60008281526020812082016000199081019190915501905561151b565b600084600001828154811061144d5761144d6125a5565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152855490915085908061149c5761149c6125ff565b6000828152602081208201600019908101919091550190556114bf858285611fcc565b611519858660000185815481106114d8576114d86125a5565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152856120a9565b505b50505050565b600061152e600283612578565b60000361154657676765c793fa10079d601b1b611548565b825b9050611555600283612541565b91505b8115610536576115688384611599565b9250611575600283612578565b15611587576115848184611599565b90505b611592600283612541565b9150611558565b6000676765c793fa10079d601b1b6108f1600282612541565b6000600160801b82106115d257608091821c916115cf90826124b1565b90505b600160401b82106115f057604091821c916115ed90826124b1565b90505b600160201b821061160e57602091821c9161160b90826124b1565b90505b62010000821061162b57601091821c9161162890826124b1565b90505b610100821061164757600891821c9161164490826124b1565b90505b6010821061166257600491821c9161165f90826124b1565b90505b6004821061167d57600291821c9161167a90826124b1565b90505b60028210610d10576105366001826124b1565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106116d45760405163698d9a0160e11b815260048101829052602401610a7c565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff82119050826000036117125780670de0b6b3a7640000850401945050505050610536565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b8216156117765768016a09e667f3bcc9090260401c5b6001603e1b821615611791576801306fe0a31b7152df0260401c5b6001603d1b8216156117ac576801172b83c7d517adce0260401c5b6001603c1b8216156117c75768010b5586cf9890f62a0260401c5b6001603b1b8216156117e2576801059b0d31585743ae0260401c5b6001603a1b8216156117fd57680102c9a3e778060ee70260401c5b600160391b8216156118185768010163da9fb33356d80260401c5b600160381b82161561183357680100b1afa5abcbed610260401c5b600160371b82161561184e5768010058c86da1c09ea20260401c5b600160361b821615611869576801002c605e2e8cec500260401c5b600160351b82161561188457680100162f3904051fa10260401c5b600160341b82161561189f576801000b175effdc76ba0260401c5b600160331b8216156118ba57680100058ba01fb9f96d0260401c5b600160321b8216156118d55768010002c5cc37da94920260401c5b600160311b8216156118f0576801000162e525ee05470260401c5b600160301b82161561190b5768010000b17255775c040260401c5b6001602f1b821615611926576801000058b91b5bc9ae0260401c5b6001602e1b82161561194157680100002c5c89d5ec6d0260401c5b6001602d1b82161561195c5768010000162e43f4f8310260401c5b6001602c1b82161561197757680100000b1721bcfc9a0260401c5b6001602b1b8216156119925768010000058b90cf1e6e0260401c5b6001602a1b8216156119ad576801000002c5c863b73f0260401c5b600160291b8216156119c857680100000162e430e5a20260401c5b600160281b8216156119e3576801000000b1721835510260401c5b600160271b8216156119fe57680100000058b90c0b490260401c5b600160261b821615611a195768010000002c5c8601cc0260401c5b600160251b821615611a34576801000000162e42fff00260401c5b600160241b821615611a4f5768010000000b17217fbb0260401c5b600160231b821615611a6a576801000000058b90bfce0260401c5b600160221b821615611a8557680100000002c5c85fe30260401c5b600160211b821615611aa05768010000000162e42ff10260401c5b600160201b821615611abb57680100000000b17217f80260401c5b6380000000821615611ad65768010000000058b90bfc0260401c5b6340000000821615611af1576801000000002c5c85fe0260401c5b6320000000821615611b0c57680100000000162e42ff0260401c5b6310000000821615611b27576801000000000b17217f0260401c5b6308000000821615611b4257680100000000058b90c00260401c5b6304000000821615611b5d5768010000000002c5c8600260401c5b6302000000821615611b78576801000000000162e4300260401c5b6301000000821615611b935768010000000000b172180260401c5b62800000821615611bad576801000000000058b90c0260401c5b62400000821615611bc757680100000000002c5c860260401c5b62200000821615611be15768010000000000162e430260401c5b62100000821615611bfb57680100000000000b17210260401c5b62080000821615611c155768010000000000058b910260401c5b62040000821615611c2f576801000000000002c5c80260401c5b62020000821615611c4957680100000000000162e40260401c5b62010000821615611c625761b172600160401b010260401c5b618000821615611c7a576158b9600160401b010260401c5b614000821615611c9257612c5d600160401b010260401c5b612000821615611caa5761162e600160401b010260401c5b611000821615611cc257610b17600160401b010260401c5b610800821615611cda5761058c600160401b010260401c5b610400821615611cf2576102c6600160401b010260401c5b610200821615611d0a57610163600160401b010260401c5b610100821615611d215760b1600160401b010260401c5b6080821615611d37576059600160401b010260401c5b6040821615611d4d57602c600160401b010260401c5b6020821615611d63576016600160401b010260401c5b6010821615611d7957600b600160401b010260401c5b6008821615611d8f576006600160401b010260401c5b6004821615611da5576003600160401b010260401c5b6002821615611dbb576001600160401b010260401c5b6001821615611dd1576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b60008080611000670de0b6b3a764000082808080805b8615611eca57611e0e878b6124b1565b93508b846120018110611e2357611e236125a5565b015492508b61200101846120018110611e3e57611e3e6125a5565b0154915081600003611e5957611e5486846108db565b611e7b565b611e7b611e668388612514565b846a0c097ce7bc90715b34b9f160241b610fbf565b611e8590866124b1565b90508a811015611ea457611cdc8411611e9f578399508094505b611ebe565b8115611eb757611eb48683612234565b95505b8098508597505b600187901c9650611dfe565b505050505050509250925092565b60008115610d1057611eef600019831860016124b1565b909116919050565b60006001600160a01b03821115611f605760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663630206269747360c81b6064820152608401610a7c565b5090565b60006001600160601b03821115611f605760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b6064820152608401610a7c565b8254600182148061201c575083611fe4600284612541565b81548110611ff457611ff46125a5565b60009182526020918290200154908401516001600160601b03600160a01b9092048216911611155b156120325761202d84848484612249565b61151b565b6120948480612042600286612541565b81548110612052576120526125a5565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091528484612249565b61151b84846120a4600286612541565b611fcc565b60006120b6826002612514565b84549091508181116120d3576120ce85858584612249565b611519565b60008560000183815481106120ea576120ea6125a5565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b03169181019190915290506121328360016124b1565b82118015612183575060208101516001600160601b0316866121558560016124b1565b81548110612165576121656125a5565b600091825260209091200154600160a01b90046001600160601b0316115b156121e357856121928461258c565b935083815481106121a5576121a56125a5565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b03169181019190915290505b84602001516001600160601b031681602001516001600160601b0316116122155761221086868685612249565b61222c565b61222186828685612249565b61222c8686856120a9565b505050505050565b6000670de0b6b3a76400006109058385612514565b80820361228f57835460018101855560008581526020908190208551918601516001600160601b0316600160a01b026001600160a01b03909216919091179101556122d9565b828460000183815481106122a5576122a56125a5565b6000918252602091829020835193909201516001600160601b0316600160a01b026001600160a01b03909316929092179101555b5090516001600160a01b031660009081526001909201602052604090912055565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b604080518082019091526000808252602082015290565b6000610120828403121561234c57600080fd5b50919050565b60008060008060008060006101e0888a03121561236e57600080fd5b873596506020880135955060408801359450606088013593506123948960808a01612339565b92506101a088013591506101c0880135905092959891949750929550565b80356001600160a01b0381168114610d1057600080fd5b6000806000806000806101c087890312156123e357600080fd5b8635955060208701359450604087013593506124028860608901612339565b925061241161018088016123b2565b91506101a087013590509295509295509295565b60008060006060848603121561243a57600080fd5b8335925061244a602085016123b2565b9150604084013590509250925092565b600080600083850360c081121561247057600080fd5b84359350602085013592506080603f198201121561248d57600080fd5b506040840190509250925092565b634e487b7160e01b600052601160045260246000fd5b808201808211156105365761053661249b565b818103818111156105365761053661249b565b9283526020830191909152604082015260600190565b818103600083128015838313168383128216171561250d5761250d61249b565b5092915050565b80820281158282048414176105365761053661249b565b634e487b7160e01b600052601260045260246000fd5b6000826125505761255061252b565b500490565b60006020828403121561256757600080fd5b813560ff8116811461051857600080fd5b6000826125875761258761252b565b500690565b60006001820161259e5761259e61249b565b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60006001600160601b038281166002600160601b031981016125f5576125f561249b565b6001019392505050565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220deb169f5aa106e1f5320c5920d3475ddb9ec460f470f67589396b8cddb50a08c64736f6c63430008120033","args":[],"salt":"AJNA","value":[]}
2024-01-08T15:26:41.471Z cannon:builder:runtime resolve artifact LPActions
2024-01-08T15:26:41.472Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:26:49.569Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/LPActions.sol': 'LPActions' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/LPActions.sol': {
      keccak256: '0x4def554bc6414a7a4a575b8fced4fd334b28c484f09e5f616a0c228cbf875c85',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:26:49.570Z cannon:cli:foundry evm version paris
2024-01-08T15:26:49.573Z cannon:builder:runtime reported contract artifact LPActions {
  contractName: 'LPActions',
  sourceName: 'src/libraries/external/LPActions.sol',
  abi: [
    {
      type: 'event',
      name: 'ApproveLPTransferors',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'DecreaseLPAllowance',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'IncreaseLPAllowance',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'RevokeLPAllowance',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'RevokeLPTransferors',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'TransferLP',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'BucketBankruptcyBlock', inputs: [] },
    { type: 'error', name: 'InvalidAllowancesInput', inputs: [] },
    { type: 'error', name: 'InvalidIndex', inputs: [] },
    { type: 'error', name: 'NoAllowance', inputs: [] },
    { type: 'error', name: 'TransferToSameOwner', inputs: [] },
    { type: 'error', name: 'TransferorNotApproved', inputs: [] }
  ],
  bytecode: '0x610b8861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c8063296bff251461007157806331100943146100935780634b740e8f146100b357806358353580146100d3578063d3f900a3146100f3578063e817b3fb14610113575b600080fd5b81801561007d57600080fd5b5061009161008c366004610810565b610133565b005b81801561009f57600080fd5b506100916100ae366004610877565b6101dc565b8180156100bf57600080fd5b506100916100ce366004610810565b6102c7565b8180156100df57600080fd5b506100916100ee366004610900565b61036b565b8180156100ff57600080fd5b5061009161010e366004610981565b610626565b81801561011f57600080fd5b5061009161012e366004610877565b6106c1565b8060005b8181101561019257846000858584818110610154576101546109da565b905060200201602081019061016991906109f0565b6001600160a01b031681526020810191909152604001600020805460ff19169055600101610137565b50336001600160a01b03167fde63bcd4c57b5d710a16396f80a2797846720923ff52198e806544ccbb720b2b84846040516101ce929190610a0b565b60405180910390a250505050565b828181146101fd576040516392019b0360e01b815260040160405180910390fd5b6000805b8281101561026b5786868281811061021b5761021b6109da565b905060200201359150848482818110610236576102366109da565b90506020020135896000848152602001908152602001600020600082825461025e9190610a6d565b9091555050600101610201565b50866001600160a01b0316336001600160a01b03167fa9f6ab83637f87ef702b94c10d09430c40cd3d4642d14fc2a07408bde931545f888888886040516102b59493929190610ab2565b60405180910390a35050505050505050565b8060005b8181101561032f5760018560008686858181106102ea576102ea6109da565b90506020020160208101906102ff91906109f0565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556001016102cb565b50336001600160a01b03167f6dceda33b951e30872202c47c5e3b449112437927dbc475dfaedd3a22889aa5484846040516101ce929190610a0b565b6001600160a01b03831633148015906103a657506001600160a01b03831660009081526020868152604080832033845290915290205460ff16155b156103c457604051633d80a49160e11b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316036103f65760405163378386fb60e21b815260040160405180910390fd5b80600080805b838110156105da57858582818110610416576104166109da565b905060200201359250611cdc831115610442576040516363df817160e01b815260040160405180910390fd5b600083815260208c815260408083206001600160a01b038c16845260038101909252822060028201546001820154929391929091818310610484576000610487565b83545b905060008f60008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008a81526020019081526020016000205490508060000361050757604051631d7eb35960e31b815260040160405180910390fd5b610511818361079a565b9050801561059e576001600160a01b038d166000908152600387016020526040902060018101548581111561055f57828260000160008282546105549190610a6d565b909155506105639050565b8282555b828760000160008282546105779190610ae4565b909155506105879050838b610a6d565b995061059385826107b5565b826001018190555050505b505050506001600160a01b038a8116600090815260208e81526040808320938d16835292815282822088835290529081205550506001016103fc565b507f98b14a8359f3da2f702dde7a51271b67ea43d27b8712e860408b8bf8dd0eb6828787878785604051610612959493929190610af7565b60405180910390a150505050505050505050565b806000805b8281101561066b57848482818110610645576106456109da565b602090810292909201356000818152928a9052604083209290925550915060010161062b565b50846001600160a01b0316336001600160a01b03167fdf7f78d931b4e040d4598563bab17506dba0aed1a0515c51fd7dbc2a2382afdf86866040516106b1929190610b36565b60405180910390a3505050505050565b828181146106e2576040516392019b0360e01b815260040160405180910390fd5b6000805b8281101561075057868682818110610700576107006109da565b90506020020135915084848281811061071b5761071b6109da565b9050602002013589600084815260200190815260200160002060008282546107439190610ae4565b90915550506001016106e6565b50866001600160a01b0316336001600160a01b03167f4a7a52e2fe7e10addaa7f875ecf9ec17563ec12be96c885457061cfc04e05660888888886040516102b59493929190610ab2565b6000818311156107aa57816107ac565b825b90505b92915050565b6000818310156107aa57816107ac565b60008083601f8401126107d757600080fd5b5081356001600160401b038111156107ee57600080fd5b6020830191508360208260051b850101111561080957600080fd5b9250929050565b60008060006040848603121561082557600080fd5b8335925060208401356001600160401b0381111561084257600080fd5b61084e868287016107c5565b9497909650939450505050565b80356001600160a01b038116811461087257600080fd5b919050565b6000806000806000806080878903121561089057600080fd5b863595506108a06020880161085b565b945060408701356001600160401b03808211156108bc57600080fd5b6108c88a838b016107c5565b909650945060608901359150808211156108e157600080fd5b506108ee89828a016107c5565b979a9699509497509295939492505050565b600080600080600080600060c0888a03121561091b57600080fd5b8735965060208801359550604088013594506109396060890161085b565b93506109476080890161085b565b925060a08801356001600160401b0381111561096257600080fd5b61096e8a828b016107c5565b989b979a50959850939692959293505050565b6000806000806060858703121561099757600080fd5b843593506109a76020860161085b565b925060408501356001600160401b038111156109c257600080fd5b6109ce878288016107c5565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610a0257600080fd5b6107ac8261085b565b60208082528181018390526000908460408401835b86811015610a4c576001600160a01b03610a398461085b565b1682529183019190830190600101610a20565b509695505050505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156107af576107af610a57565b81835260006001600160fb1b03831115610a9957600080fd5b8260051b80836020870137939093016020019392505050565b604081526000610ac6604083018688610a80565b8281036020840152610ad9818587610a80565b979650505050505050565b818103818111156107af576107af610a57565b6001600160a01b03868116825285166020820152608060408201819052600090610b249083018587610a80565b90508260608301529695505050505050565b602081526000610b4a602083018486610a80565b94935050505056fea264697066735822122061800f286ff8ef7406708d7de0eaeb4682cad46cc4919c63a6e78c0baed3a22964736f6c63430008120033',
  deployedBytecode: '0x730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c8063296bff251461007157806331100943146100935780634b740e8f146100b357806358353580146100d3578063d3f900a3146100f3578063e817b3fb14610113575b600080fd5b81801561007d57600080fd5b5061009161008c366004610810565b610133565b005b81801561009f57600080fd5b506100916100ae366004610877565b6101dc565b8180156100bf57600080fd5b506100916100ce366004610810565b6102c7565b8180156100df57600080fd5b506100916100ee366004610900565b61036b565b8180156100ff57600080fd5b5061009161010e366004610981565b610626565b81801561011f57600080fd5b5061009161012e366004610877565b6106c1565b8060005b8181101561019257846000858584818110610154576101546109da565b905060200201602081019061016991906109f0565b6001600160a01b031681526020810191909152604001600020805460ff19169055600101610137565b50336001600160a01b03167fde63bcd4c57b5d710a16396f80a2797846720923ff52198e806544ccbb720b2b84846040516101ce929190610a0b565b60405180910390a250505050565b828181146101fd576040516392019b0360e01b815260040160405180910390fd5b6000805b8281101561026b5786868281811061021b5761021b6109da565b905060200201359150848482818110610236576102366109da565b90506020020135896000848152602001908152602001600020600082825461025e9190610a6d565b9091555050600101610201565b50866001600160a01b0316336001600160a01b03167fa9f6ab83637f87ef702b94c10d09430c40cd3d4642d14fc2a07408bde931545f888888886040516102b59493929190610ab2565b60405180910390a35050505050505050565b8060005b8181101561032f5760018560008686858181106102ea576102ea6109da565b90506020020160208101906102ff91906109f0565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556001016102cb565b50336001600160a01b03167f6dceda33b951e30872202c47c5e3b449112437927dbc475dfaedd3a22889aa5484846040516101ce929190610a0b565b6001600160a01b03831633148015906103a657506001600160a01b03831660009081526020868152604080832033845290915290205460ff16155b156103c457604051633d80a49160e11b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316036103f65760405163378386fb60e21b815260040160405180910390fd5b80600080805b838110156105da57858582818110610416576104166109da565b905060200201359250611cdc831115610442576040516363df817160e01b815260040160405180910390fd5b600083815260208c815260408083206001600160a01b038c16845260038101909252822060028201546001820154929391929091818310610484576000610487565b83545b905060008f60008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008a81526020019081526020016000205490508060000361050757604051631d7eb35960e31b815260040160405180910390fd5b610511818361079a565b9050801561059e576001600160a01b038d166000908152600387016020526040902060018101548581111561055f57828260000160008282546105549190610a6d565b909155506105639050565b8282555b828760000160008282546105779190610ae4565b909155506105879050838b610a6d565b995061059385826107b5565b826001018190555050505b505050506001600160a01b038a8116600090815260208e81526040808320938d16835292815282822088835290529081205550506001016103fc565b507f98b14a8359f3da2f702dde7a51271b67ea43d27b8712e860408b8bf8dd0eb6828787878785604051610612959493929190610af7565b60405180910390a150505050505050505050565b806000805b8281101561066b57848482818110610645576106456109da565b602090810292909201356000818152928a9052604083209290925550915060010161062b565b50846001600160a01b0316336001600160a01b03167fdf7f78d931b4e040d4598563bab17506dba0aed1a0515c51fd7dbc2a2382afdf86866040516106b1929190610b36565b60405180910390a3505050505050565b828181146106e2576040516392019b0360e01b815260040160405180910390fd5b6000805b8281101561075057868682818110610700576107006109da565b90506020020135915084848281811061071b5761071b6109da565b9050602002013589600084815260200190815260200160002060008282546107439190610ae4565b90915550506001016106e6565b50866001600160a01b0316336001600160a01b03167f4a7a52e2fe7e10addaa7f875ecf9ec17563ec12be96c885457061cfc04e05660888888886040516102b59493929190610ab2565b6000818311156107aa57816107ac565b825b90505b92915050565b6000818310156107aa57816107ac565b60008083601f8401126107d757600080fd5b5081356001600160401b038111156107ee57600080fd5b6020830191508360208260051b850101111561080957600080fd5b9250929050565b60008060006040848603121561082557600080fd5b8335925060208401356001600160401b0381111561084257600080fd5b61084e868287016107c5565b9497909650939450505050565b80356001600160a01b038116811461087257600080fd5b919050565b6000806000806000806080878903121561089057600080fd5b863595506108a06020880161085b565b945060408701356001600160401b03808211156108bc57600080fd5b6108c88a838b016107c5565b909650945060608901359150808211156108e157600080fd5b506108ee89828a016107c5565b979a9699509497509295939492505050565b600080600080600080600060c0888a03121561091b57600080fd5b8735965060208801359550604088013594506109396060890161085b565b93506109476080890161085b565b925060a08801356001600160401b0381111561096257600080fd5b61096e8a828b016107c5565b989b979a50959850939692959293505050565b6000806000806060858703121561099757600080fd5b843593506109a76020860161085b565b925060408501356001600160401b038111156109c257600080fd5b6109ce878288016107c5565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610a0257600080fd5b6107ac8261085b565b60208082528181018390526000908460408401835b86811015610a4c576001600160a01b03610a398461085b565b1682529183019190830190600101610a20565b509695505050505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156107af576107af610a57565b81835260006001600160fb1b03831115610a9957600080fd5b8260051b80836020870137939093016020019392505050565b604081526000610ac6604083018688610a80565b8281036020840152610ad9818587610a80565b979650505050505050565b818103818111156107af576107af610a57565b6001600160a01b03868116825285166020820152608060408201819052600090610b249083018587610a80565b90508260608301529695505050505050565b602081526000610b4a602083018486610a80565b94935050505056fea264697066735822122061800f286ff8ef7406708d7de0eaeb4682cad46cc4919c63a6e78c0baed3a22964736f6c63430008120033',
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel\'s lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don\'t need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.\'s \\"Hacker\'s Delight\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\"msb\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // ‚Üí `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // ‚Üí `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton\'s method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result'... 201926 more characters
  }
}
2024-01-08T15:26:49.574Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x610b8861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c8063296bff251461007157806331100943146100935780634b740e8f146100b357806358353580146100d3578063d3f900a3146100f3578063e817b3fb14610113575b600080fd5b81801561007d57600080fd5b5061009161008c366004610810565b610133565b005b81801561009f57600080fd5b506100916100ae366004610877565b6101dc565b8180156100bf57600080fd5b506100916100ce366004610810565b6102c7565b8180156100df57600080fd5b506100916100ee366004610900565b61036b565b8180156100ff57600080fd5b5061009161010e366004610981565b610626565b81801561011f57600080fd5b5061009161012e366004610877565b6106c1565b8060005b8181101561019257846000858584818110610154576101546109da565b905060200201602081019061016991906109f0565b6001600160a01b031681526020810191909152604001600020805460ff19169055600101610137565b50336001600160a01b03167fde63bcd4c57b5d710a16396f80a2797846720923ff52198e806544ccbb720b2b84846040516101ce929190610a0b565b60405180910390a250505050565b828181146101fd576040516392019b0360e01b815260040160405180910390fd5b6000805b8281101561026b5786868281811061021b5761021b6109da565b905060200201359150848482818110610236576102366109da565b90506020020135896000848152602001908152602001600020600082825461025e9190610a6d565b9091555050600101610201565b50866001600160a01b0316336001600160a01b03167fa9f6ab83637f87ef702b94c10d09430c40cd3d4642d14fc2a07408bde931545f888888886040516102b59493929190610ab2565b60405180910390a35050505050505050565b8060005b8181101561032f5760018560008686858181106102ea576102ea6109da565b90506020020160208101906102ff91906109f0565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556001016102cb565b50336001600160a01b03167f6dceda33b951e30872202c47c5e3b449112437927dbc475dfaedd3a22889aa5484846040516101ce929190610a0b565b6001600160a01b03831633148015906103a657506001600160a01b03831660009081526020868152604080832033845290915290205460ff16155b156103c457604051633d80a49160e11b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316036103f65760405163378386fb60e21b815260040160405180910390fd5b80600080805b838110156105da57858582818110610416576104166109da565b905060200201359250611cdc831115610442576040516363df817160e01b815260040160405180910390fd5b600083815260208c815260408083206001600160a01b038c16845260038101909252822060028201546001820154929391929091818310610484576000610487565b83545b905060008f60008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008a81526020019081526020016000205490508060000361050757604051631d7eb35960e31b815260040160405180910390fd5b610511818361079a565b9050801561059e576001600160a01b038d166000908152600387016020526040902060018101548581111561055f57828260000160008282546105549190610a6d565b909155506105639050565b8282555b828760000160008282546105779190610ae4565b909155506105879050838b610a6d565b995061059385826107b5565b826001018190555050505b505050506001600160a01b038a8116600090815260208e81526040808320938d16835292815282822088835290529081205550506001016103fc565b507f98b14a8359f3da2f702dde7a51271b67ea43d27b8712e860408b8bf8dd0eb6828787878785604051610612959493929190610af7565b60405180910390a150505050505050505050565b806000805b8281101561066b57848482818110610645576106456109da565b602090810292909201356000818152928a9052604083209290925550915060010161062b565b50846001600160a01b0316336001600160a01b03167fdf7f78d931b4e040d4598563bab17506dba0aed1a0515c51fd7dbc2a2382afdf86866040516106b1929190610b36565b60405180910390a3505050505050565b828181146106e2576040516392019b0360e01b815260040160405180910390fd5b6000805b8281101561075057868682818110610700576107006109da565b90506020020135915084848281811061071b5761071b6109da565b9050602002013589600084815260200190815260200160002060008282546107439190610ae4565b90915550506001016106e6565b50866001600160a01b0316336001600160a01b03167f4a7a52e2fe7e10addaa7f875ecf9ec17563ec12be96c885457061cfc04e05660888888886040516102b59493929190610ab2565b6000818311156107aa57816107ac565b825b90505b92915050565b6000818310156107aa57816107ac565b60008083601f8401126107d757600080fd5b5081356001600160401b038111156107ee57600080fd5b6020830191508360208260051b850101111561080957600080fd5b9250929050565b60008060006040848603121561082557600080fd5b8335925060208401356001600160401b0381111561084257600080fd5b61084e868287016107c5565b9497909650939450505050565b80356001600160a01b038116811461087257600080fd5b919050565b6000806000806000806080878903121561089057600080fd5b863595506108a06020880161085b565b945060408701356001600160401b03808211156108bc57600080fd5b6108c88a838b016107c5565b909650945060608901359150808211156108e157600080fd5b506108ee89828a016107c5565b979a9699509497509295939492505050565b600080600080600080600060c0888a03121561091b57600080fd5b8735965060208801359550604088013594506109396060890161085b565b93506109476080890161085b565b925060a08801356001600160401b0381111561096257600080fd5b61096e8a828b016107c5565b989b979a50959850939692959293505050565b6000806000806060858703121561099757600080fd5b843593506109a76020860161085b565b925060408501356001600160401b038111156109c257600080fd5b6109ce878288016107c5565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610a0257600080fd5b6107ac8261085b565b60208082528181018390526000908460408401835b86811015610a4c576001600160a01b03610a398461085b565b1682529183019190830190600101610a20565b509695505050505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156107af576107af610a57565b81835260006001600160fb1b03831115610a9957600080fd5b8260051b80836020870137939093016020019392505050565b604081526000610ac6604083018688610a80565b8281036020840152610ad9818587610a80565b979650505050505050565b818103818111156107af576107af610a57565b6001600160a01b03868116825285166020820152608060408201819052600090610b249083018587610a80565b90508260608301529695505050505050565b602081526000610b4a602083018486610a80565b94935050505056fea264697066735822122061800f286ff8ef7406708d7de0eaeb4682cad46cc4919c63a6e78c0baed3a22964736f6c63430008120033","args":[],"salt":"AJNA","value":[]}
2024-01-08T15:26:49.574Z cannon:builder comparing states null 02c4e78e12e86aeb9bc547d2a955c7de
2024-01-08T15:26:49.574Z cannon:builder run isolated contract.LPActions
Executing [contract.LPActions]...
2024-01-08T15:26:49.575Z cannon:verbose:builder ctx for step contract.LPActions {
  package: {},
  timestamp: '1704727545',
  chainId: 10,
  settings: {
    bwAJNA_ADDRESS: '0x6c518f9D1a163379235816c543E62922a79863Fa',
    salt: 'AJNA'
  },
  contracts: {},
  txns: {},
  imports: {},
  extras: {}
}
2024-01-08T15:26:49.576Z cannon:builder:contract exec {
  artifact: 'LPActions',
  salt: 'AJNA',
  create2: true,
  from: '',
  nonce: '',
  value: '',
  abi: ''
}
2024-01-08T15:26:49.576Z cannon:builder:runtime resolve artifact LPActions
2024-01-08T15:26:49.576Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:26:57.009Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/LPActions.sol': 'LPActions' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/LPActions.sol': {
      keccak256: '0x4def554bc6414a7a4a575b8fced4fd334b28c484f09e5f616a0c228cbf875c85',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:26:57.010Z cannon:cli:foundry evm version paris
2024-01-08T15:26:57.013Z cannon:builder:runtime reported contract artifact LPActions {
  contractName: 'LPActions',
  sourceName: 'src/libraries/external/LPActions.sol',
  abi: [
    {
      type: 'event',
      name: 'ApproveLPTransferors',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'DecreaseLPAllowance',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'IncreaseLPAllowance',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'RevokeLPAllowance',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'RevokeLPTransferors',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'TransferLP',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'BucketBankruptcyBlock', inputs: [] },
    { type: 'error', name: 'InvalidAllowancesInput', inputs: [] },
    { type: 'error', name: 'InvalidIndex', inputs: [] },
    { type: 'error', name: 'NoAllowance', inputs: [] },
    { type: 'error', name: 'TransferToSameOwner', inputs: [] },
    { type: 'error', name: 'TransferorNotApproved', inputs: [] }
  ],
  bytecode: '0x610b8861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c8063296bff251461007157806331100943146100935780634b740e8f146100b357806358353580146100d3578063d3f900a3146100f3578063e817b3fb14610113575b600080fd5b81801561007d57600080fd5b5061009161008c366004610810565b610133565b005b81801561009f57600080fd5b506100916100ae366004610877565b6101dc565b8180156100bf57600080fd5b506100916100ce366004610810565b6102c7565b8180156100df57600080fd5b506100916100ee366004610900565b61036b565b8180156100ff57600080fd5b5061009161010e366004610981565b610626565b81801561011f57600080fd5b5061009161012e366004610877565b6106c1565b8060005b8181101561019257846000858584818110610154576101546109da565b905060200201602081019061016991906109f0565b6001600160a01b031681526020810191909152604001600020805460ff19169055600101610137565b50336001600160a01b03167fde63bcd4c57b5d710a16396f80a2797846720923ff52198e806544ccbb720b2b84846040516101ce929190610a0b565b60405180910390a250505050565b828181146101fd576040516392019b0360e01b815260040160405180910390fd5b6000805b8281101561026b5786868281811061021b5761021b6109da565b905060200201359150848482818110610236576102366109da565b90506020020135896000848152602001908152602001600020600082825461025e9190610a6d565b9091555050600101610201565b50866001600160a01b0316336001600160a01b03167fa9f6ab83637f87ef702b94c10d09430c40cd3d4642d14fc2a07408bde931545f888888886040516102b59493929190610ab2565b60405180910390a35050505050505050565b8060005b8181101561032f5760018560008686858181106102ea576102ea6109da565b90506020020160208101906102ff91906109f0565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556001016102cb565b50336001600160a01b03167f6dceda33b951e30872202c47c5e3b449112437927dbc475dfaedd3a22889aa5484846040516101ce929190610a0b565b6001600160a01b03831633148015906103a657506001600160a01b03831660009081526020868152604080832033845290915290205460ff16155b156103c457604051633d80a49160e11b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316036103f65760405163378386fb60e21b815260040160405180910390fd5b80600080805b838110156105da57858582818110610416576104166109da565b905060200201359250611cdc831115610442576040516363df817160e01b815260040160405180910390fd5b600083815260208c815260408083206001600160a01b038c16845260038101909252822060028201546001820154929391929091818310610484576000610487565b83545b905060008f60008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008a81526020019081526020016000205490508060000361050757604051631d7eb35960e31b815260040160405180910390fd5b610511818361079a565b9050801561059e576001600160a01b038d166000908152600387016020526040902060018101548581111561055f57828260000160008282546105549190610a6d565b909155506105639050565b8282555b828760000160008282546105779190610ae4565b909155506105879050838b610a6d565b995061059385826107b5565b826001018190555050505b505050506001600160a01b038a8116600090815260208e81526040808320938d16835292815282822088835290529081205550506001016103fc565b507f98b14a8359f3da2f702dde7a51271b67ea43d27b8712e860408b8bf8dd0eb6828787878785604051610612959493929190610af7565b60405180910390a150505050505050505050565b806000805b8281101561066b57848482818110610645576106456109da565b602090810292909201356000818152928a9052604083209290925550915060010161062b565b50846001600160a01b0316336001600160a01b03167fdf7f78d931b4e040d4598563bab17506dba0aed1a0515c51fd7dbc2a2382afdf86866040516106b1929190610b36565b60405180910390a3505050505050565b828181146106e2576040516392019b0360e01b815260040160405180910390fd5b6000805b8281101561075057868682818110610700576107006109da565b90506020020135915084848281811061071b5761071b6109da565b9050602002013589600084815260200190815260200160002060008282546107439190610ae4565b90915550506001016106e6565b50866001600160a01b0316336001600160a01b03167f4a7a52e2fe7e10addaa7f875ecf9ec17563ec12be96c885457061cfc04e05660888888886040516102b59493929190610ab2565b6000818311156107aa57816107ac565b825b90505b92915050565b6000818310156107aa57816107ac565b60008083601f8401126107d757600080fd5b5081356001600160401b038111156107ee57600080fd5b6020830191508360208260051b850101111561080957600080fd5b9250929050565b60008060006040848603121561082557600080fd5b8335925060208401356001600160401b0381111561084257600080fd5b61084e868287016107c5565b9497909650939450505050565b80356001600160a01b038116811461087257600080fd5b919050565b6000806000806000806080878903121561089057600080fd5b863595506108a06020880161085b565b945060408701356001600160401b03808211156108bc57600080fd5b6108c88a838b016107c5565b909650945060608901359150808211156108e157600080fd5b506108ee89828a016107c5565b979a9699509497509295939492505050565b600080600080600080600060c0888a03121561091b57600080fd5b8735965060208801359550604088013594506109396060890161085b565b93506109476080890161085b565b925060a08801356001600160401b0381111561096257600080fd5b61096e8a828b016107c5565b989b979a50959850939692959293505050565b6000806000806060858703121561099757600080fd5b843593506109a76020860161085b565b925060408501356001600160401b038111156109c257600080fd5b6109ce878288016107c5565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610a0257600080fd5b6107ac8261085b565b60208082528181018390526000908460408401835b86811015610a4c576001600160a01b03610a398461085b565b1682529183019190830190600101610a20565b509695505050505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156107af576107af610a57565b81835260006001600160fb1b03831115610a9957600080fd5b8260051b80836020870137939093016020019392505050565b604081526000610ac6604083018688610a80565b8281036020840152610ad9818587610a80565b979650505050505050565b818103818111156107af576107af610a57565b6001600160a01b03868116825285166020820152608060408201819052600090610b249083018587610a80565b90508260608301529695505050505050565b602081526000610b4a602083018486610a80565b94935050505056fea264697066735822122061800f286ff8ef7406708d7de0eaeb4682cad46cc4919c63a6e78c0baed3a22964736f6c63430008120033',
  deployedBytecode: '0x730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c8063296bff251461007157806331100943146100935780634b740e8f146100b357806358353580146100d3578063d3f900a3146100f3578063e817b3fb14610113575b600080fd5b81801561007d57600080fd5b5061009161008c366004610810565b610133565b005b81801561009f57600080fd5b506100916100ae366004610877565b6101dc565b8180156100bf57600080fd5b506100916100ce366004610810565b6102c7565b8180156100df57600080fd5b506100916100ee366004610900565b61036b565b8180156100ff57600080fd5b5061009161010e366004610981565b610626565b81801561011f57600080fd5b5061009161012e366004610877565b6106c1565b8060005b8181101561019257846000858584818110610154576101546109da565b905060200201602081019061016991906109f0565b6001600160a01b031681526020810191909152604001600020805460ff19169055600101610137565b50336001600160a01b03167fde63bcd4c57b5d710a16396f80a2797846720923ff52198e806544ccbb720b2b84846040516101ce929190610a0b565b60405180910390a250505050565b828181146101fd576040516392019b0360e01b815260040160405180910390fd5b6000805b8281101561026b5786868281811061021b5761021b6109da565b905060200201359150848482818110610236576102366109da565b90506020020135896000848152602001908152602001600020600082825461025e9190610a6d565b9091555050600101610201565b50866001600160a01b0316336001600160a01b03167fa9f6ab83637f87ef702b94c10d09430c40cd3d4642d14fc2a07408bde931545f888888886040516102b59493929190610ab2565b60405180910390a35050505050505050565b8060005b8181101561032f5760018560008686858181106102ea576102ea6109da565b90506020020160208101906102ff91906109f0565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556001016102cb565b50336001600160a01b03167f6dceda33b951e30872202c47c5e3b449112437927dbc475dfaedd3a22889aa5484846040516101ce929190610a0b565b6001600160a01b03831633148015906103a657506001600160a01b03831660009081526020868152604080832033845290915290205460ff16155b156103c457604051633d80a49160e11b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316036103f65760405163378386fb60e21b815260040160405180910390fd5b80600080805b838110156105da57858582818110610416576104166109da565b905060200201359250611cdc831115610442576040516363df817160e01b815260040160405180910390fd5b600083815260208c815260408083206001600160a01b038c16845260038101909252822060028201546001820154929391929091818310610484576000610487565b83545b905060008f60008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008a81526020019081526020016000205490508060000361050757604051631d7eb35960e31b815260040160405180910390fd5b610511818361079a565b9050801561059e576001600160a01b038d166000908152600387016020526040902060018101548581111561055f57828260000160008282546105549190610a6d565b909155506105639050565b8282555b828760000160008282546105779190610ae4565b909155506105879050838b610a6d565b995061059385826107b5565b826001018190555050505b505050506001600160a01b038a8116600090815260208e81526040808320938d16835292815282822088835290529081205550506001016103fc565b507f98b14a8359f3da2f702dde7a51271b67ea43d27b8712e860408b8bf8dd0eb6828787878785604051610612959493929190610af7565b60405180910390a150505050505050505050565b806000805b8281101561066b57848482818110610645576106456109da565b602090810292909201356000818152928a9052604083209290925550915060010161062b565b50846001600160a01b0316336001600160a01b03167fdf7f78d931b4e040d4598563bab17506dba0aed1a0515c51fd7dbc2a2382afdf86866040516106b1929190610b36565b60405180910390a3505050505050565b828181146106e2576040516392019b0360e01b815260040160405180910390fd5b6000805b8281101561075057868682818110610700576107006109da565b90506020020135915084848281811061071b5761071b6109da565b9050602002013589600084815260200190815260200160002060008282546107439190610ae4565b90915550506001016106e6565b50866001600160a01b0316336001600160a01b03167f4a7a52e2fe7e10addaa7f875ecf9ec17563ec12be96c885457061cfc04e05660888888886040516102b59493929190610ab2565b6000818311156107aa57816107ac565b825b90505b92915050565b6000818310156107aa57816107ac565b60008083601f8401126107d757600080fd5b5081356001600160401b038111156107ee57600080fd5b6020830191508360208260051b850101111561080957600080fd5b9250929050565b60008060006040848603121561082557600080fd5b8335925060208401356001600160401b0381111561084257600080fd5b61084e868287016107c5565b9497909650939450505050565b80356001600160a01b038116811461087257600080fd5b919050565b6000806000806000806080878903121561089057600080fd5b863595506108a06020880161085b565b945060408701356001600160401b03808211156108bc57600080fd5b6108c88a838b016107c5565b909650945060608901359150808211156108e157600080fd5b506108ee89828a016107c5565b979a9699509497509295939492505050565b600080600080600080600060c0888a03121561091b57600080fd5b8735965060208801359550604088013594506109396060890161085b565b93506109476080890161085b565b925060a08801356001600160401b0381111561096257600080fd5b61096e8a828b016107c5565b989b979a50959850939692959293505050565b6000806000806060858703121561099757600080fd5b843593506109a76020860161085b565b925060408501356001600160401b038111156109c257600080fd5b6109ce878288016107c5565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610a0257600080fd5b6107ac8261085b565b60208082528181018390526000908460408401835b86811015610a4c576001600160a01b03610a398461085b565b1682529183019190830190600101610a20565b509695505050505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156107af576107af610a57565b81835260006001600160fb1b03831115610a9957600080fd5b8260051b80836020870137939093016020019392505050565b604081526000610ac6604083018688610a80565b8281036020840152610ad9818587610a80565b979650505050505050565b818103818111156107af576107af610a57565b6001600160a01b03868116825285166020820152608060408201819052600090610b249083018587610a80565b90508260608301529695505050505050565b602081526000610b4a602083018486610a80565b94935050505056fea264697066735822122061800f286ff8ef7406708d7de0eaeb4682cad46cc4919c63a6e78c0baed3a22964736f6c63430008120033',
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel\'s lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don\'t need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.\'s \\"Hacker\'s Delight\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\"msb\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // ‚Üí `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // ‚Üí `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton\'s method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result'... 201926 more characters
  }
}
2024-01-08T15:26:57.019Z cannon:cli:rpc eth_chainId

2024-01-08T15:26:57.022Z cannon:cli:rpc eth_getCode

2024-01-08T15:26:57.022Z cannon:builder:contract performing arachnid create2
2024-01-08T15:26:57.023Z cannon:builder:contract create2 address is 0xb257A98a3549a0B36b9001d0eDc9e75d313d5c8e
2024-01-08T15:26:57.025Z cannon:cli:rpc eth_chainId

2024-01-08T15:26:57.027Z cannon:cli:rpc eth_getCode

2024-01-08T15:26:57.550Z cannon:cli:rpc anvil_impersonateAccount

2024-01-08T15:26:57.551Z cannon:cli:rpc anvil_setBalance

2024-01-08T15:26:57.554Z cannon:cli:rpc eth_blockNumber

2024-01-08T15:26:57.555Z cannon:cli:rpc eth_chainId

2024-01-08T15:26:57.558Z cannon:cli:rpc eth_chainId

2024-01-08T15:26:57.561Z cannon:cli:rpc eth_estimateGas

2024-01-08T15:26:57.567Z cannon:cli:rpc eth_sendTransaction

2024-01-08T15:26:57.568Z cannon:cli:rpc 
    Transaction: 0xf87dedfa9197400f141a7dde71e6096290cc2f6eb4179e437cbd9466988d753d
    Gas used: 692518

    Block Number: 114564385
    Block Hash: 0xbc45cb2978c3e33090993acf64eb4833661036dcce00a52c2f4a5927bdc4b419
    Block Time: "Mon, 8 Jan 2024 15:26:55 +0000"


2024-01-08T15:26:57.569Z cannon:cli:rpc eth_chainId

2024-01-08T15:26:57.571Z cannon:cli:rpc eth_getTransactionByHash

2024-01-08T15:26:57.576Z cannon:cli:rpc eth_chainId

2024-01-08T15:26:57.578Z cannon:cli:rpc eth_getTransactionReceipt

2024-01-08T15:26:57.580Z cannon:builder:contract arachnid create2 complete {
  to: '0x4e59b44847b379578588920cA78FbF26c0B4956C',
  from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
  contractAddress: null,
  transactionIndex: 0,
  gasUsed: BigNumber { _hex: '0x0a9126', _isBigNumber: true },
  logsBloom: '0x
  blockHash: '0xbc45cb2978c3e33090993acf64eb4833661036dcce00a52c2f4a5927bdc4b419',
  transactionHash: '0xf87dedfa9197400f141a7dde71e6096290cc2f6eb4179e437cbd9466988d753d',
  logs: [],
  blockNumber: 114564385,
  confirmations: 1,
  cumulativeGasUsed: BigNumber { _hex: '0x0a9126', _isBigNumber: true },
  effectiveGasPrice: BigNumber { _hex: '0x3401f0', _isBigNumber: true },
  status: 1,
  type: 2,
  byzantium: true
}
2024-01-08T15:26:57.580Z cannon:builder:contract contract deployed to address 0xb257A98a3549a0B36b9001d0eDc9e75d313d5c8e
  ‚úî Successfully deployed LPActions using CREATE2
  Contract Address: 0xb257A98a3549a0B36b9001d0eDc9e75d313d5c8e
  Transaction Hash: 0xf87dedfa9197400f141a7dde71e6096290cc2f6eb4179e437cbd9466988d753d
  Transaction Cost: 0.000002360356190624 ETH (692,518 gas)

2024-01-08T15:26:57.584Z cannon:builder:runtime resolve artifact LPActions
2024-01-08T15:26:57.584Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:27:05.047Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/LPActions.sol': 'LPActions' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/LPActions.sol': {
      keccak256: '0x4def554bc6414a7a4a575b8fced4fd334b28c484f09e5f616a0c228cbf875c85',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:27:05.048Z cannon:cli:foundry evm version paris
2024-01-08T15:27:05.053Z cannon:builder:runtime reported contract artifact LPActions {
  contractName: 'LPActions',
  sourceName: 'src/libraries/external/LPActions.sol',
  abi: [
    {
      type: 'event',
      name: 'ApproveLPTransferors',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'DecreaseLPAllowance',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'IncreaseLPAllowance',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'RevokeLPAllowance',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'RevokeLPTransferors',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'TransferLP',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'BucketBankruptcyBlock', inputs: [] },
    { type: 'error', name: 'InvalidAllowancesInput', inputs: [] },
    { type: 'error', name: 'InvalidIndex', inputs: [] },
    { type: 'error', name: 'NoAllowance', inputs: [] },
    { type: 'error', name: 'TransferToSameOwner', inputs: [] },
    { type: 'error', name: 'TransferorNotApproved', inputs: [] }
  ],
  bytecode: '0x610b8861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c8063296bff251461007157806331100943146100935780634b740e8f146100b357806358353580146100d3578063d3f900a3146100f3578063e817b3fb14610113575b600080fd5b81801561007d57600080fd5b5061009161008c366004610810565b610133565b005b81801561009f57600080fd5b506100916100ae366004610877565b6101dc565b8180156100bf57600080fd5b506100916100ce366004610810565b6102c7565b8180156100df57600080fd5b506100916100ee366004610900565b61036b565b8180156100ff57600080fd5b5061009161010e366004610981565b610626565b81801561011f57600080fd5b5061009161012e366004610877565b6106c1565b8060005b8181101561019257846000858584818110610154576101546109da565b905060200201602081019061016991906109f0565b6001600160a01b031681526020810191909152604001600020805460ff19169055600101610137565b50336001600160a01b03167fde63bcd4c57b5d710a16396f80a2797846720923ff52198e806544ccbb720b2b84846040516101ce929190610a0b565b60405180910390a250505050565b828181146101fd576040516392019b0360e01b815260040160405180910390fd5b6000805b8281101561026b5786868281811061021b5761021b6109da565b905060200201359150848482818110610236576102366109da565b90506020020135896000848152602001908152602001600020600082825461025e9190610a6d565b9091555050600101610201565b50866001600160a01b0316336001600160a01b03167fa9f6ab83637f87ef702b94c10d09430c40cd3d4642d14fc2a07408bde931545f888888886040516102b59493929190610ab2565b60405180910390a35050505050505050565b8060005b8181101561032f5760018560008686858181106102ea576102ea6109da565b90506020020160208101906102ff91906109f0565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556001016102cb565b50336001600160a01b03167f6dceda33b951e30872202c47c5e3b449112437927dbc475dfaedd3a22889aa5484846040516101ce929190610a0b565b6001600160a01b03831633148015906103a657506001600160a01b03831660009081526020868152604080832033845290915290205460ff16155b156103c457604051633d80a49160e11b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316036103f65760405163378386fb60e21b815260040160405180910390fd5b80600080805b838110156105da57858582818110610416576104166109da565b905060200201359250611cdc831115610442576040516363df817160e01b815260040160405180910390fd5b600083815260208c815260408083206001600160a01b038c16845260038101909252822060028201546001820154929391929091818310610484576000610487565b83545b905060008f60008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008a81526020019081526020016000205490508060000361050757604051631d7eb35960e31b815260040160405180910390fd5b610511818361079a565b9050801561059e576001600160a01b038d166000908152600387016020526040902060018101548581111561055f57828260000160008282546105549190610a6d565b909155506105639050565b8282555b828760000160008282546105779190610ae4565b909155506105879050838b610a6d565b995061059385826107b5565b826001018190555050505b505050506001600160a01b038a8116600090815260208e81526040808320938d16835292815282822088835290529081205550506001016103fc565b507f98b14a8359f3da2f702dde7a51271b67ea43d27b8712e860408b8bf8dd0eb6828787878785604051610612959493929190610af7565b60405180910390a150505050505050505050565b806000805b8281101561066b57848482818110610645576106456109da565b602090810292909201356000818152928a9052604083209290925550915060010161062b565b50846001600160a01b0316336001600160a01b03167fdf7f78d931b4e040d4598563bab17506dba0aed1a0515c51fd7dbc2a2382afdf86866040516106b1929190610b36565b60405180910390a3505050505050565b828181146106e2576040516392019b0360e01b815260040160405180910390fd5b6000805b8281101561075057868682818110610700576107006109da565b90506020020135915084848281811061071b5761071b6109da565b9050602002013589600084815260200190815260200160002060008282546107439190610ae4565b90915550506001016106e6565b50866001600160a01b0316336001600160a01b03167f4a7a52e2fe7e10addaa7f875ecf9ec17563ec12be96c885457061cfc04e05660888888886040516102b59493929190610ab2565b6000818311156107aa57816107ac565b825b90505b92915050565b6000818310156107aa57816107ac565b60008083601f8401126107d757600080fd5b5081356001600160401b038111156107ee57600080fd5b6020830191508360208260051b850101111561080957600080fd5b9250929050565b60008060006040848603121561082557600080fd5b8335925060208401356001600160401b0381111561084257600080fd5b61084e868287016107c5565b9497909650939450505050565b80356001600160a01b038116811461087257600080fd5b919050565b6000806000806000806080878903121561089057600080fd5b863595506108a06020880161085b565b945060408701356001600160401b03808211156108bc57600080fd5b6108c88a838b016107c5565b909650945060608901359150808211156108e157600080fd5b506108ee89828a016107c5565b979a9699509497509295939492505050565b600080600080600080600060c0888a03121561091b57600080fd5b8735965060208801359550604088013594506109396060890161085b565b93506109476080890161085b565b925060a08801356001600160401b0381111561096257600080fd5b61096e8a828b016107c5565b989b979a50959850939692959293505050565b6000806000806060858703121561099757600080fd5b843593506109a76020860161085b565b925060408501356001600160401b038111156109c257600080fd5b6109ce878288016107c5565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610a0257600080fd5b6107ac8261085b565b60208082528181018390526000908460408401835b86811015610a4c576001600160a01b03610a398461085b565b1682529183019190830190600101610a20565b509695505050505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156107af576107af610a57565b81835260006001600160fb1b03831115610a9957600080fd5b8260051b80836020870137939093016020019392505050565b604081526000610ac6604083018688610a80565b8281036020840152610ad9818587610a80565b979650505050505050565b818103818111156107af576107af610a57565b6001600160a01b03868116825285166020820152608060408201819052600090610b249083018587610a80565b90508260608301529695505050505050565b602081526000610b4a602083018486610a80565b94935050505056fea264697066735822122061800f286ff8ef7406708d7de0eaeb4682cad46cc4919c63a6e78c0baed3a22964736f6c63430008120033',
  deployedBytecode: '0x730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c8063296bff251461007157806331100943146100935780634b740e8f146100b357806358353580146100d3578063d3f900a3146100f3578063e817b3fb14610113575b600080fd5b81801561007d57600080fd5b5061009161008c366004610810565b610133565b005b81801561009f57600080fd5b506100916100ae366004610877565b6101dc565b8180156100bf57600080fd5b506100916100ce366004610810565b6102c7565b8180156100df57600080fd5b506100916100ee366004610900565b61036b565b8180156100ff57600080fd5b5061009161010e366004610981565b610626565b81801561011f57600080fd5b5061009161012e366004610877565b6106c1565b8060005b8181101561019257846000858584818110610154576101546109da565b905060200201602081019061016991906109f0565b6001600160a01b031681526020810191909152604001600020805460ff19169055600101610137565b50336001600160a01b03167fde63bcd4c57b5d710a16396f80a2797846720923ff52198e806544ccbb720b2b84846040516101ce929190610a0b565b60405180910390a250505050565b828181146101fd576040516392019b0360e01b815260040160405180910390fd5b6000805b8281101561026b5786868281811061021b5761021b6109da565b905060200201359150848482818110610236576102366109da565b90506020020135896000848152602001908152602001600020600082825461025e9190610a6d565b9091555050600101610201565b50866001600160a01b0316336001600160a01b03167fa9f6ab83637f87ef702b94c10d09430c40cd3d4642d14fc2a07408bde931545f888888886040516102b59493929190610ab2565b60405180910390a35050505050505050565b8060005b8181101561032f5760018560008686858181106102ea576102ea6109da565b90506020020160208101906102ff91906109f0565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556001016102cb565b50336001600160a01b03167f6dceda33b951e30872202c47c5e3b449112437927dbc475dfaedd3a22889aa5484846040516101ce929190610a0b565b6001600160a01b03831633148015906103a657506001600160a01b03831660009081526020868152604080832033845290915290205460ff16155b156103c457604051633d80a49160e11b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316036103f65760405163378386fb60e21b815260040160405180910390fd5b80600080805b838110156105da57858582818110610416576104166109da565b905060200201359250611cdc831115610442576040516363df817160e01b815260040160405180910390fd5b600083815260208c815260408083206001600160a01b038c16845260038101909252822060028201546001820154929391929091818310610484576000610487565b83545b905060008f60008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008a81526020019081526020016000205490508060000361050757604051631d7eb35960e31b815260040160405180910390fd5b610511818361079a565b9050801561059e576001600160a01b038d166000908152600387016020526040902060018101548581111561055f57828260000160008282546105549190610a6d565b909155506105639050565b8282555b828760000160008282546105779190610ae4565b909155506105879050838b610a6d565b995061059385826107b5565b826001018190555050505b505050506001600160a01b038a8116600090815260208e81526040808320938d16835292815282822088835290529081205550506001016103fc565b507f98b14a8359f3da2f702dde7a51271b67ea43d27b8712e860408b8bf8dd0eb6828787878785604051610612959493929190610af7565b60405180910390a150505050505050505050565b806000805b8281101561066b57848482818110610645576106456109da565b602090810292909201356000818152928a9052604083209290925550915060010161062b565b50846001600160a01b0316336001600160a01b03167fdf7f78d931b4e040d4598563bab17506dba0aed1a0515c51fd7dbc2a2382afdf86866040516106b1929190610b36565b60405180910390a3505050505050565b828181146106e2576040516392019b0360e01b815260040160405180910390fd5b6000805b8281101561075057868682818110610700576107006109da565b90506020020135915084848281811061071b5761071b6109da565b9050602002013589600084815260200190815260200160002060008282546107439190610ae4565b90915550506001016106e6565b50866001600160a01b0316336001600160a01b03167f4a7a52e2fe7e10addaa7f875ecf9ec17563ec12be96c885457061cfc04e05660888888886040516102b59493929190610ab2565b6000818311156107aa57816107ac565b825b90505b92915050565b6000818310156107aa57816107ac565b60008083601f8401126107d757600080fd5b5081356001600160401b038111156107ee57600080fd5b6020830191508360208260051b850101111561080957600080fd5b9250929050565b60008060006040848603121561082557600080fd5b8335925060208401356001600160401b0381111561084257600080fd5b61084e868287016107c5565b9497909650939450505050565b80356001600160a01b038116811461087257600080fd5b919050565b6000806000806000806080878903121561089057600080fd5b863595506108a06020880161085b565b945060408701356001600160401b03808211156108bc57600080fd5b6108c88a838b016107c5565b909650945060608901359150808211156108e157600080fd5b506108ee89828a016107c5565b979a9699509497509295939492505050565b600080600080600080600060c0888a03121561091b57600080fd5b8735965060208801359550604088013594506109396060890161085b565b93506109476080890161085b565b925060a08801356001600160401b0381111561096257600080fd5b61096e8a828b016107c5565b989b979a50959850939692959293505050565b6000806000806060858703121561099757600080fd5b843593506109a76020860161085b565b925060408501356001600160401b038111156109c257600080fd5b6109ce878288016107c5565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610a0257600080fd5b6107ac8261085b565b60208082528181018390526000908460408401835b86811015610a4c576001600160a01b03610a398461085b565b1682529183019190830190600101610a20565b509695505050505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156107af576107af610a57565b81835260006001600160fb1b03831115610a9957600080fd5b8260051b80836020870137939093016020019392505050565b604081526000610ac6604083018688610a80565b8281036020840152610ad9818587610a80565b979650505050505050565b818103818111156107af576107af610a57565b6001600160a01b03868116825285166020820152608060408201819052600090610b249083018587610a80565b90508260608301529695505050505050565b602081526000610b4a602083018486610a80565b94935050505056fea264697066735822122061800f286ff8ef7406708d7de0eaeb4682cad46cc4919c63a6e78c0baed3a22964736f6c63430008120033',
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel\'s lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don\'t need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.\'s \\"Hacker\'s Delight\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\"msb\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // ‚Üí `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // ‚Üí `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton\'s method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result'... 201926 more characters
  }
}
2024-01-08T15:27:05.054Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x610b8861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c8063296bff251461007157806331100943146100935780634b740e8f146100b357806358353580146100d3578063d3f900a3146100f3578063e817b3fb14610113575b600080fd5b81801561007d57600080fd5b5061009161008c366004610810565b610133565b005b81801561009f57600080fd5b506100916100ae366004610877565b6101dc565b8180156100bf57600080fd5b506100916100ce366004610810565b6102c7565b8180156100df57600080fd5b506100916100ee366004610900565b61036b565b8180156100ff57600080fd5b5061009161010e366004610981565b610626565b81801561011f57600080fd5b5061009161012e366004610877565b6106c1565b8060005b8181101561019257846000858584818110610154576101546109da565b905060200201602081019061016991906109f0565b6001600160a01b031681526020810191909152604001600020805460ff19169055600101610137565b50336001600160a01b03167fde63bcd4c57b5d710a16396f80a2797846720923ff52198e806544ccbb720b2b84846040516101ce929190610a0b565b60405180910390a250505050565b828181146101fd576040516392019b0360e01b815260040160405180910390fd5b6000805b8281101561026b5786868281811061021b5761021b6109da565b905060200201359150848482818110610236576102366109da565b90506020020135896000848152602001908152602001600020600082825461025e9190610a6d565b9091555050600101610201565b50866001600160a01b0316336001600160a01b03167fa9f6ab83637f87ef702b94c10d09430c40cd3d4642d14fc2a07408bde931545f888888886040516102b59493929190610ab2565b60405180910390a35050505050505050565b8060005b8181101561032f5760018560008686858181106102ea576102ea6109da565b90506020020160208101906102ff91906109f0565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556001016102cb565b50336001600160a01b03167f6dceda33b951e30872202c47c5e3b449112437927dbc475dfaedd3a22889aa5484846040516101ce929190610a0b565b6001600160a01b03831633148015906103a657506001600160a01b03831660009081526020868152604080832033845290915290205460ff16155b156103c457604051633d80a49160e11b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316036103f65760405163378386fb60e21b815260040160405180910390fd5b80600080805b838110156105da57858582818110610416576104166109da565b905060200201359250611cdc831115610442576040516363df817160e01b815260040160405180910390fd5b600083815260208c815260408083206001600160a01b038c16845260038101909252822060028201546001820154929391929091818310610484576000610487565b83545b905060008f60008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008a81526020019081526020016000205490508060000361050757604051631d7eb35960e31b815260040160405180910390fd5b610511818361079a565b9050801561059e576001600160a01b038d166000908152600387016020526040902060018101548581111561055f57828260000160008282546105549190610a6d565b909155506105639050565b8282555b828760000160008282546105779190610ae4565b909155506105879050838b610a6d565b995061059385826107b5565b826001018190555050505b505050506001600160a01b038a8116600090815260208e81526040808320938d16835292815282822088835290529081205550506001016103fc565b507f98b14a8359f3da2f702dde7a51271b67ea43d27b8712e860408b8bf8dd0eb6828787878785604051610612959493929190610af7565b60405180910390a150505050505050505050565b806000805b8281101561066b57848482818110610645576106456109da565b602090810292909201356000818152928a9052604083209290925550915060010161062b565b50846001600160a01b0316336001600160a01b03167fdf7f78d931b4e040d4598563bab17506dba0aed1a0515c51fd7dbc2a2382afdf86866040516106b1929190610b36565b60405180910390a3505050505050565b828181146106e2576040516392019b0360e01b815260040160405180910390fd5b6000805b8281101561075057868682818110610700576107006109da565b90506020020135915084848281811061071b5761071b6109da565b9050602002013589600084815260200190815260200160002060008282546107439190610ae4565b90915550506001016106e6565b50866001600160a01b0316336001600160a01b03167f4a7a52e2fe7e10addaa7f875ecf9ec17563ec12be96c885457061cfc04e05660888888886040516102b59493929190610ab2565b6000818311156107aa57816107ac565b825b90505b92915050565b6000818310156107aa57816107ac565b60008083601f8401126107d757600080fd5b5081356001600160401b038111156107ee57600080fd5b6020830191508360208260051b850101111561080957600080fd5b9250929050565b60008060006040848603121561082557600080fd5b8335925060208401356001600160401b0381111561084257600080fd5b61084e868287016107c5565b9497909650939450505050565b80356001600160a01b038116811461087257600080fd5b919050565b6000806000806000806080878903121561089057600080fd5b863595506108a06020880161085b565b945060408701356001600160401b03808211156108bc57600080fd5b6108c88a838b016107c5565b909650945060608901359150808211156108e157600080fd5b506108ee89828a016107c5565b979a9699509497509295939492505050565b600080600080600080600060c0888a03121561091b57600080fd5b8735965060208801359550604088013594506109396060890161085b565b93506109476080890161085b565b925060a08801356001600160401b0381111561096257600080fd5b61096e8a828b016107c5565b989b979a50959850939692959293505050565b6000806000806060858703121561099757600080fd5b843593506109a76020860161085b565b925060408501356001600160401b038111156109c257600080fd5b6109ce878288016107c5565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610a0257600080fd5b6107ac8261085b565b60208082528181018390526000908460408401835b86811015610a4c576001600160a01b03610a398461085b565b1682529183019190830190600101610a20565b509695505050505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156107af576107af610a57565b81835260006001600160fb1b03831115610a9957600080fd5b8260051b80836020870137939093016020019392505050565b604081526000610ac6604083018688610a80565b8281036020840152610ad9818587610a80565b979650505050505050565b818103818111156107af576107af610a57565b6001600160a01b03868116825285166020820152608060408201819052600090610b249083018587610a80565b90508260608301529695505050505050565b602081526000610b4a602083018486610a80565b94935050505056fea264697066735822122061800f286ff8ef7406708d7de0eaeb4682cad46cc4919c63a6e78c0baed3a22964736f6c63430008120033","args":[],"salt":"AJNA","value":[]}
2024-01-08T15:27:05.059Z cannon:builder:runtime resolve artifact LenderActions
2024-01-08T15:27:05.059Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:27:12.528Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/LenderActions.sol': 'LenderActions' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/LenderActions.sol': {
      keccak256: '0x04b37827f21db736b668fb27393b6c8b968b4cb24abf338b0a658090a173e0dd',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:27:12.529Z cannon:cli:foundry evm version paris
2024-01-08T15:27:12.537Z cannon:builder:runtime reported contract artifact LenderActions {
  contractName: 'LenderActions',
  sourceName: 'src/libraries/external/LenderActions.sol',
  abi: [
    {
      type: 'event',
      name: 'AddQuoteToken',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'BucketBankruptcy',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'MoveQuoteToken',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'RemoveQuoteToken',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'BucketBankruptcyBlock', inputs: [] },
    { type: 'error', name: 'BucketBankruptcyBlock', inputs: [] },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'CannotMergeToHigherPrice', inputs: [] },
    { type: 'error', name: 'DustAmountNotExceeded', inputs: [] },
    { type: 'error', name: 'InsufficientCollateral', inputs: [] },
    { type: 'error', name: 'InsufficientLP', inputs: [] },
    { type: 'error', name: 'InsufficientLiquidity', inputs: [] },
    { type: 'error', name: 'InvalidAmount', inputs: [] },
    { type: 'error', name: 'InvalidAmount', inputs: [] },
    { type: 'error', name: 'InvalidIndex', inputs: [] },
    { type: 'error', name: 'LUPBelowHTP', inputs: [] },
    { type: 'error', name: 'MoveToSameIndex', inputs: [] },
    { type: 'error', name: 'NoClaim', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    }
  ],
  bytecode: '0x61291e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100775760003560e01c80632f9fa1031461007c5780633806e8ef146100b457806350865720146100e457806380f2fcd014610104578063ba9784e814610139578063bf2980c714610167578063fd4682de14610187575b600080fd5b81801561008857600080fd5b5061009c6100973660046125c1565b6101a7565b6040516100ab93929190612615565b60405180910390f35b8180156100c057600080fd5b506100d46100cf36600461262b565b610396565b6040516100ab9493929190612670565b8180156100f057600080fd5b5061009c6100ff36600461268b565b610863565b81801561011057600080fd5b5061012461011f3660046126d0565b610a91565b604080519283526020830191909152016100ab565b81801561014557600080fd5b5061015961015436600461270b565b610ad0565b6040519081526020016100ab565b81801561017357600080fd5b5061015961018236600461270b565b610b83565b81801561019357600080fd5b506101246101a236600461273d565b610d2a565b60008080833581036101cc5760405163162908e360e11b815260040160405180910390fd5b602084013515806101e25750611cdc8460200135115b15610200576040516363df817160e01b815260040160405180910390fd5b6020808501356000908152908890526040902060028101544281036102385760405163c1e4c5f760e01b815260040160405180910390fd5b6000610248898860200135610e4e565b9050600061025a8a8960200135610efc565b905060006102688284610f6f565b905060006102798a60200135610faa565b90506102a48a3561028d60e08e0135611015565b61029f90670de0b6b3a76400006127e7565b610f6f565b97506102bd86600101548760000154848b85600061102a565b9850886000036102e05760405163955a8bf560e01b815260040160405180910390fd5b6102f88c8b602001356102f38b876110a2565b6110c2565b6103048686338c61119a565b8886600001600082825461031891906127fa565b909155506000905061032e8d60608e01356111f5565b905061033981610faa565b97508a60200135336001600160a01b03167f8b24a9808cf05d3d8e48ac09e4f649054994a88cfa657b3f4bf340b62137df1e8b8d8c60405161037d93929190612615565b60405180910390a3505050505050509450945094915050565b600080808060408501358535036103c0576040516343c7e10b60e01b815260040160405180910390fd5b856101000135856020013510156103ea576040516345b3f65d60e01b815260040160405180910390fd5b604085013515806104005750611cdc8560400135115b1561041e576040516363df817160e01b815260040160405180910390fd5b60008860008760400135815260200190815260200160002090506104aa604051806101c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600282015461010082018190524290036104d75760405163c1e4c5f760e01b815260040160405180910390fd5b8635600081815260208c8152604080832033845260038101909252909120909161050090610faa565b83526001808301546020850152825460408086019190915290820154608085015261052d908a0135610faa565b60e084015260808301516002830154101561054a57805460608401525b6105a38b6040518060e001604052808c602001358152602001866060015181526020018660400151815260200186602001518152602001866000015181526020018c6000013581526020018d610100013581525061120b565b60c0860152985095506040890135893510156105cd576105ca8661028d8c60e00135611015565b95505b6105db8b8a60400135610e4e565b6101408401526105ef8b60408b0135610efc565b610180840181905261014084015161060691610f6f565b61016084018190526001850154855460e086015161062893908a90600061102a565b96508660000361064b5760405163955a8bf560e01b815260040160405180910390fd5b6106638b8a604001356102f3898761018001516110a2565b6106718b8b606001356113eb565b945061068589606001358b60a001356113ff565b6101a0840152604089013589351080156106c3575084836101a0015111806106c3575060608a0135158015906106c357506120008b01548a60600135115b156106e15760405163444507e160e01b815260040160405180910390fd5b8783604001516106f191906127e7565b60a0840152602083015115801561070a575060c0830151155b8015610719575060a083015115155b15610756576000825542600283015560a08301516040519081528935906000805160206128c98339815191529060200160405180910390a2610777565b8781600001600082825461076a91906127e7565b909155505060a083015182555b336000908152600385016020526040902060018101546101208501819052610100850151106107bf578781556101008401516107b49060016127fa565b6101208501526107d9565b878160000160008282546107d391906127fa565b90915550505b6107ec846080015185610120015161141c565b60018201558454889086906000906108059084906127fa565b909155505060408051908b0135908b359033907f9d7ab6bb30c003ae7d5b583911db0ada7a9e51b0b4ac7ac1bb5e6896e82e4dbe9061084b908c908f908f908e90612670565b60405180910390a45050505050945094509450949050565b6000806000836020013560000361088d5760405163162908e360e11b815260040160405180910390fd5b83356000908152602088815260408083203384526003810183528184206001810154835160e081018552868152948501869052928401859052606084018590526080840185905260a0840185905260c0840194909452929181846002015410156108f957825460208201525b806020015160000361091e57604051639b0e91e160e01b815260040160405180910390fd5b6020880135815261092f8835610faa565b60808201528354604082015260018401546060820152873560a082015261010089013560c082015260006109638b8361120b565b919950975090506109788b60608c01356113eb565b9550600061098e8a604001358c60a001356113ff565b9050868111806109b4575060608b0135158015906109b457506120008c01548b60600135115b156109d25760405163444507e160e01b815260040160405180910390fd5b60008884604001516109e491906127e7565b9050836060015160001480156109f8575082155b8015610a0357508015155b15610a3b57600087554260028801556040518181528b35906000805160206128c98339815191529060200160405180910390a2610a58565b88866000016000828254610a4f91906127e7565b90915550508087555b6040518b359033907f0130a7b525bd6b1e72def1ee0b77f3467028a0e958e30174a0c95eb3860fc2219061037d908e908e908e90612615565b60008083600003610ab55760405163162908e360e11b815260040160405180910390fd5b610ac28787878787611433565b915091509550959350505050565b600082600003610af35760405163162908e360e11b815260040160405180910390fd5b811580610b015750611cdc82115b15610b1f576040516363df817160e01b815260040160405180910390fd5b6000610b2b8584611643565b90506000610b3884610faa565b6000858152602089905260409020909150610b56903384888561165c565b925082600003610b795760405163955a8bf560e01b815260040160405180910390fd5b5050949350505050565b600082600003610ba65760405163162908e360e11b815260040160405180910390fd5b6000828152602086905260409020600181015480851115610bda57604051633a23d82560e01b815260040160405180910390fd5b6000610be585610faa565b83549091506000610bf68988611643565b9050610c078483838b8760016116e6565b955085600003610c2a5760405163955a8bf560e01b815260040160405180910390fd5b3360009081526003860160205260408120600181015460028801549192911015610c52575080545b801580610c5e57508088115b15610c7c5760405163955a8bf560e01b815260040160405180910390fd5b610c8688856127e7565b935083158015610c94575082155b15610c9d578599505b610ca78a876127e7565b60018801819055955085158015610cbc575082155b8015610cc757508315155b15610cfe576000875542600288015560405184815289906000805160206128c98339815191529060200160405180910390a2610d1b565b87826000016000828254610d1291906127e7565b90915550508387555b50505050505050949350505050565b60008080808087875b8887108015610d4157508185105b15610dd8578a8a86818110610d5857610d5861280d565b90506020020135935087841115610d82576040516339cf269160e21b815260040160405180910390fd5b610d908d8d60018488611433565b5092506000839003610db55760405163162908e360e11b815260040160405180910390fd5b610dbf83886127fa565b9650610dcb83826127e7565b9050846001019450610d33565b888714610e3e576000610deb8d8a611643565b90506000610df88a610faa565b9050610e188f60008c815260200190815260200160002033848c8561165c565b975087600003610e3b5760405163955a8bf560e01b815260040160405180910390fd5b50505b5050505050965096945050505050565b6000610e5982612823565b9150600183836120018110610e7057610e7061280d565b0154915060008060005b858416600003610ef257610e8e84876127e7565b925086836120018110610ea357610ea361280d565b015491508661200101836120018110610ebe57610ebe61280d565b0154905080600003610ed05781610eda565b610eda8183610f6f565b610ee490866127e7565b9450600184901b9350610e7a565b5050505092915050565b6000610f0782612823565b9150670de0b6b3a764000090505b6120008211610f695760008361200101836120018110610f3757610f3761280d565b015490508015610f4e57610f4b8282610f6f565b91505b610f578361172a565b610f6190846127fa565b925050610f15565b92915050565b6000670de0b6b3a7640000610f85600282612852565b610f8f8486612874565b610f9991906127fa565b610fa39190612852565b9392505050565b600080610fb98361103c61288b565b9050610c9f19811280610fcd575061103c81135b15610feb57604051637edf443b60e11b815260040160405180910390fd5b610fa3611010610ffa8361174b565b61100b670df27a2cdf4480006117db565b6118bf565b611984565b6000610f6982683b5c2d7a70fcbc00006110a2565b600084158015611038575086155b15611044575082611098565b85600003611053575082611098565b61109586611069670de0b6b3a764000087612874565b611073868b612874565b611085670de0b6b3a76400008a612874565b61108f91906127fa565b85611a1b565b90505b9695505050505050565b6000816110b0600282612852565b610f8f670de0b6b3a764000086612874565b806000036110e35760405163162908e360e11b815260040160405180910390fd5b6110ec82612823565b915060008060005b612000851161119257858561200181106111105761111061280d565b01549250856120010185612001811061112b5761112b61280d565b0154915061113984846127fa565b905081156111625761114b8383610f6f565b6111558284610f6f565b61115f91906127e7565b93505b80868661200181106111765761117661280d565b01556111818561172a565b61118b90866127fa565b94506110f4565b505050505050565b80156111ef576001600160a01b03821660009081526003850160205260409020600181015484106111cd578181556111e7565b818160000160008282546111e191906127fa565b90915550505b426001909101555b50505050565b60006112018383611a78565b5090949350505050565b60008060008061121f868660a00151610e4e565b9050806000036112425760405163bb55fd2760e01b815260040160405180910390fd5b6000611252878760a00151610efc565b905060006112608383610f6f565b9050600061128388606001518960400151848b602001518c608001516000611b68565b9050600082896000015110801561129a5750885182115b156112e457886000015197506112c189606001518a60400151858b8d60800151600161102a565b96506112d1878a60200151611bcd565b96506112dd88856110a2565b9050611355565b818310156113245782975061130a89606001518a60400151858b8d60800151600161102a565b965061131a878a60200151611bcd565b9650849050611355565b8860200151965061134689606001518a60400151858a8d608001516000611b68565b975061135288'... 11170 more characters,
  deployedBytecode: '0x73000000000000000000000000000000000000000030146080604052600436106100775760003560e01c80632f9fa1031461007c5780633806e8ef146100b457806350865720146100e457806380f2fcd014610104578063ba9784e814610139578063bf2980c714610167578063fd4682de14610187575b600080fd5b81801561008857600080fd5b5061009c6100973660046125c1565b6101a7565b6040516100ab93929190612615565b60405180910390f35b8180156100c057600080fd5b506100d46100cf36600461262b565b610396565b6040516100ab9493929190612670565b8180156100f057600080fd5b5061009c6100ff36600461268b565b610863565b81801561011057600080fd5b5061012461011f3660046126d0565b610a91565b604080519283526020830191909152016100ab565b81801561014557600080fd5b5061015961015436600461270b565b610ad0565b6040519081526020016100ab565b81801561017357600080fd5b5061015961018236600461270b565b610b83565b81801561019357600080fd5b506101246101a236600461273d565b610d2a565b60008080833581036101cc5760405163162908e360e11b815260040160405180910390fd5b602084013515806101e25750611cdc8460200135115b15610200576040516363df817160e01b815260040160405180910390fd5b6020808501356000908152908890526040902060028101544281036102385760405163c1e4c5f760e01b815260040160405180910390fd5b6000610248898860200135610e4e565b9050600061025a8a8960200135610efc565b905060006102688284610f6f565b905060006102798a60200135610faa565b90506102a48a3561028d60e08e0135611015565b61029f90670de0b6b3a76400006127e7565b610f6f565b97506102bd86600101548760000154848b85600061102a565b9850886000036102e05760405163955a8bf560e01b815260040160405180910390fd5b6102f88c8b602001356102f38b876110a2565b6110c2565b6103048686338c61119a565b8886600001600082825461031891906127fa565b909155506000905061032e8d60608e01356111f5565b905061033981610faa565b97508a60200135336001600160a01b03167f8b24a9808cf05d3d8e48ac09e4f649054994a88cfa657b3f4bf340b62137df1e8b8d8c60405161037d93929190612615565b60405180910390a3505050505050509450945094915050565b600080808060408501358535036103c0576040516343c7e10b60e01b815260040160405180910390fd5b856101000135856020013510156103ea576040516345b3f65d60e01b815260040160405180910390fd5b604085013515806104005750611cdc8560400135115b1561041e576040516363df817160e01b815260040160405180910390fd5b60008860008760400135815260200190815260200160002090506104aa604051806101c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600282015461010082018190524290036104d75760405163c1e4c5f760e01b815260040160405180910390fd5b8635600081815260208c8152604080832033845260038101909252909120909161050090610faa565b83526001808301546020850152825460408086019190915290820154608085015261052d908a0135610faa565b60e084015260808301516002830154101561054a57805460608401525b6105a38b6040518060e001604052808c602001358152602001866060015181526020018660400151815260200186602001518152602001866000015181526020018c6000013581526020018d610100013581525061120b565b60c0860152985095506040890135893510156105cd576105ca8661028d8c60e00135611015565b95505b6105db8b8a60400135610e4e565b6101408401526105ef8b60408b0135610efc565b610180840181905261014084015161060691610f6f565b61016084018190526001850154855460e086015161062893908a90600061102a565b96508660000361064b5760405163955a8bf560e01b815260040160405180910390fd5b6106638b8a604001356102f3898761018001516110a2565b6106718b8b606001356113eb565b945061068589606001358b60a001356113ff565b6101a0840152604089013589351080156106c3575084836101a0015111806106c3575060608a0135158015906106c357506120008b01548a60600135115b156106e15760405163444507e160e01b815260040160405180910390fd5b8783604001516106f191906127e7565b60a0840152602083015115801561070a575060c0830151155b8015610719575060a083015115155b15610756576000825542600283015560a08301516040519081528935906000805160206128c98339815191529060200160405180910390a2610777565b8781600001600082825461076a91906127e7565b909155505060a083015182555b336000908152600385016020526040902060018101546101208501819052610100850151106107bf578781556101008401516107b49060016127fa565b6101208501526107d9565b878160000160008282546107d391906127fa565b90915550505b6107ec846080015185610120015161141c565b60018201558454889086906000906108059084906127fa565b909155505060408051908b0135908b359033907f9d7ab6bb30c003ae7d5b583911db0ada7a9e51b0b4ac7ac1bb5e6896e82e4dbe9061084b908c908f908f908e90612670565b60405180910390a45050505050945094509450949050565b6000806000836020013560000361088d5760405163162908e360e11b815260040160405180910390fd5b83356000908152602088815260408083203384526003810183528184206001810154835160e081018552868152948501869052928401859052606084018590526080840185905260a0840185905260c0840194909452929181846002015410156108f957825460208201525b806020015160000361091e57604051639b0e91e160e01b815260040160405180910390fd5b6020880135815261092f8835610faa565b60808201528354604082015260018401546060820152873560a082015261010089013560c082015260006109638b8361120b565b919950975090506109788b60608c01356113eb565b9550600061098e8a604001358c60a001356113ff565b9050868111806109b4575060608b0135158015906109b457506120008c01548b60600135115b156109d25760405163444507e160e01b815260040160405180910390fd5b60008884604001516109e491906127e7565b9050836060015160001480156109f8575082155b8015610a0357508015155b15610a3b57600087554260028801556040518181528b35906000805160206128c98339815191529060200160405180910390a2610a58565b88866000016000828254610a4f91906127e7565b90915550508087555b6040518b359033907f0130a7b525bd6b1e72def1ee0b77f3467028a0e958e30174a0c95eb3860fc2219061037d908e908e908e90612615565b60008083600003610ab55760405163162908e360e11b815260040160405180910390fd5b610ac28787878787611433565b915091509550959350505050565b600082600003610af35760405163162908e360e11b815260040160405180910390fd5b811580610b015750611cdc82115b15610b1f576040516363df817160e01b815260040160405180910390fd5b6000610b2b8584611643565b90506000610b3884610faa565b6000858152602089905260409020909150610b56903384888561165c565b925082600003610b795760405163955a8bf560e01b815260040160405180910390fd5b5050949350505050565b600082600003610ba65760405163162908e360e11b815260040160405180910390fd5b6000828152602086905260409020600181015480851115610bda57604051633a23d82560e01b815260040160405180910390fd5b6000610be585610faa565b83549091506000610bf68988611643565b9050610c078483838b8760016116e6565b955085600003610c2a5760405163955a8bf560e01b815260040160405180910390fd5b3360009081526003860160205260408120600181015460028801549192911015610c52575080545b801580610c5e57508088115b15610c7c5760405163955a8bf560e01b815260040160405180910390fd5b610c8688856127e7565b935083158015610c94575082155b15610c9d578599505b610ca78a876127e7565b60018801819055955085158015610cbc575082155b8015610cc757508315155b15610cfe576000875542600288015560405184815289906000805160206128c98339815191529060200160405180910390a2610d1b565b87826000016000828254610d1291906127e7565b90915550508387555b50505050505050949350505050565b60008080808087875b8887108015610d4157508185105b15610dd8578a8a86818110610d5857610d5861280d565b90506020020135935087841115610d82576040516339cf269160e21b815260040160405180910390fd5b610d908d8d60018488611433565b5092506000839003610db55760405163162908e360e11b815260040160405180910390fd5b610dbf83886127fa565b9650610dcb83826127e7565b9050846001019450610d33565b888714610e3e576000610deb8d8a611643565b90506000610df88a610faa565b9050610e188f60008c815260200190815260200160002033848c8561165c565b975087600003610e3b5760405163955a8bf560e01b815260040160405180910390fd5b50505b5050505050965096945050505050565b6000610e5982612823565b9150600183836120018110610e7057610e7061280d565b0154915060008060005b858416600003610ef257610e8e84876127e7565b925086836120018110610ea357610ea361280d565b015491508661200101836120018110610ebe57610ebe61280d565b0154905080600003610ed05781610eda565b610eda8183610f6f565b610ee490866127e7565b9450600184901b9350610e7a565b5050505092915050565b6000610f0782612823565b9150670de0b6b3a764000090505b6120008211610f695760008361200101836120018110610f3757610f3761280d565b015490508015610f4e57610f4b8282610f6f565b91505b610f578361172a565b610f6190846127fa565b925050610f15565b92915050565b6000670de0b6b3a7640000610f85600282612852565b610f8f8486612874565b610f9991906127fa565b610fa39190612852565b9392505050565b600080610fb98361103c61288b565b9050610c9f19811280610fcd575061103c81135b15610feb57604051637edf443b60e11b815260040160405180910390fd5b610fa3611010610ffa8361174b565b61100b670df27a2cdf4480006117db565b6118bf565b611984565b6000610f6982683b5c2d7a70fcbc00006110a2565b600084158015611038575086155b15611044575082611098565b85600003611053575082611098565b61109586611069670de0b6b3a764000087612874565b611073868b612874565b611085670de0b6b3a76400008a612874565b61108f91906127fa565b85611a1b565b90505b9695505050505050565b6000816110b0600282612852565b610f8f670de0b6b3a764000086612874565b806000036110e35760405163162908e360e11b815260040160405180910390fd5b6110ec82612823565b915060008060005b612000851161119257858561200181106111105761111061280d565b01549250856120010185612001811061112b5761112b61280d565b0154915061113984846127fa565b905081156111625761114b8383610f6f565b6111558284610f6f565b61115f91906127e7565b93505b80868661200181106111765761117661280d565b01556111818561172a565b61118b90866127fa565b94506110f4565b505050505050565b80156111ef576001600160a01b03821660009081526003850160205260409020600181015484106111cd578181556111e7565b818160000160008282546111e191906127fa565b90915550505b426001909101555b50505050565b60006112018383611a78565b5090949350505050565b60008060008061121f868660a00151610e4e565b9050806000036112425760405163bb55fd2760e01b815260040160405180910390fd5b6000611252878760a00151610efc565b905060006112608383610f6f565b9050600061128388606001518960400151848b602001518c608001516000611b68565b9050600082896000015110801561129a5750885182115b156112e457886000015197506112c189606001518a60400151858b8d60800151600161102a565b96506112d1878a60200151611bcd565b96506112dd88856110a2565b9050611355565b818310156113245782975061130a89606001518a60400151858b8d60800151600161102a565b965061131a878a60200151611bcd565b9650849050611355565b8860200151965061134689606001518a60400151858a8d608001516000611b68565b975061135288856110a2565b90505b88604001518703611367578297508490505b61137188846127e7565b9250821580159061138557508860c0015183105b15'... 11054 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel\'s lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don\'t need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.\'s \\"Hacker\'s Delight\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\"msb\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // ‚Üí `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // ‚Üí `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton\'s method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result'... 253212 more characters
  }
}
2024-01-08T15:27:12.538Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x61291e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100775760003560e01c80632f9fa1031461007c5780633806e8ef146100b457806350865720146100e457806380f2fcd014610104578063ba9784e814610139578063bf2980c714610167578063fd4682de14610187575b600080fd5b81801561008857600080fd5b5061009c6100973660046125c1565b6101a7565b6040516100ab93929190612615565b60405180910390f35b8180156100c057600080fd5b506100d46100cf36600461262b565b610396565b6040516100ab9493929190612670565b8180156100f057600080fd5b5061009c6100ff36600461268b565b610863565b81801561011057600080fd5b5061012461011f3660046126d0565b610a91565b604080519283526020830191909152016100ab565b81801561014557600080fd5b5061015961015436600461270b565b610ad0565b6040519081526020016100ab565b81801561017357600080fd5b5061015961018236600461270b565b610b83565b81801561019357600080fd5b506101246101a236600461273d565b610d2a565b60008080833581036101cc5760405163162908e360e11b815260040160405180910390fd5b602084013515806101e25750611cdc8460200135115b15610200576040516363df817160e01b815260040160405180910390fd5b6020808501356000908152908890526040902060028101544281036102385760405163c1e4c5f760e01b815260040160405180910390fd5b6000610248898860200135610e4e565b9050600061025a8a8960200135610efc565b905060006102688284610f6f565b905060006102798a60200135610faa565b90506102a48a3561028d60e08e0135611015565b61029f90670de0b6b3a76400006127e7565b610f6f565b97506102bd86600101548760000154848b85600061102a565b9850886000036102e05760405163955a8bf560e01b815260040160405180910390fd5b6102f88c8b602001356102f38b876110a2565b6110c2565b6103048686338c61119a565b8886600001600082825461031891906127fa565b909155506000905061032e8d60608e01356111f5565b905061033981610faa565b97508a60200135336001600160a01b03167f8b24a9808cf05d3d8e48ac09e4f649054994a88cfa657b3f4bf340b62137df1e8b8d8c60405161037d93929190612615565b60405180910390a3505050505050509450945094915050565b600080808060408501358535036103c0576040516343c7e10b60e01b815260040160405180910390fd5b856101000135856020013510156103ea576040516345b3f65d60e01b815260040160405180910390fd5b604085013515806104005750611cdc8560400135115b1561041e576040516363df817160e01b815260040160405180910390fd5b60008860008760400135815260200190815260200160002090506104aa604051806101c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600282015461010082018190524290036104d75760405163c1e4c5f760e01b815260040160405180910390fd5b8635600081815260208c8152604080832033845260038101909252909120909161050090610faa565b83526001808301546020850152825460408086019190915290820154608085015261052d908a0135610faa565b60e084015260808301516002830154101561054a57805460608401525b6105a38b6040518060e001604052808c602001358152602001866060015181526020018660400151815260200186602001518152602001866000015181526020018c6000013581526020018d610100013581525061120b565b60c0860152985095506040890135893510156105cd576105ca8661028d8c60e00135611015565b95505b6105db8b8a60400135610e4e565b6101408401526105ef8b60408b0135610efc565b610180840181905261014084015161060691610f6f565b61016084018190526001850154855460e086015161062893908a90600061102a565b96508660000361064b5760405163955a8bf560e01b815260040160405180910390fd5b6106638b8a604001356102f3898761018001516110a2565b6106718b8b606001356113eb565b945061068589606001358b60a001356113ff565b6101a0840152604089013589351080156106c3575084836101a0015111806106c3575060608a0135158015906106c357506120008b01548a60600135115b156106e15760405163444507e160e01b815260040160405180910390fd5b8783604001516106f191906127e7565b60a0840152602083015115801561070a575060c0830151155b8015610719575060a083015115155b15610756576000825542600283015560a08301516040519081528935906000805160206128c98339815191529060200160405180910390a2610777565b8781600001600082825461076a91906127e7565b909155505060a083015182555b336000908152600385016020526040902060018101546101208501819052610100850151106107bf578781556101008401516107b49060016127fa565b6101208501526107d9565b878160000160008282546107d391906127fa565b90915550505b6107ec846080015185610120015161141c565b60018201558454889086906000906108059084906127fa565b909155505060408051908b0135908b359033907f9d7ab6bb30c003ae7d5b583911db0ada7a9e51b0b4ac7ac1bb5e6896e82e4dbe9061084b908c908f908f908e90612670565b60405180910390a45050505050945094509450949050565b6000806000836020013560000361088d5760405163162908e360e11b815260040160405180910390fd5b83356000908152602088815260408083203384526003810183528184206001810154835160e081018552868152948501869052928401859052606084018590526080840185905260a0840185905260c0840194909452929181846002015410156108f957825460208201525b806020015160000361091e57604051639b0e91e160e01b815260040160405180910390fd5b6020880135815261092f8835610faa565b60808201528354604082015260018401546060820152873560a082015261010089013560c082015260006109638b8361120b565b919950975090506109788b60608c01356113eb565b9550600061098e8a604001358c60a001356113ff565b9050868111806109b4575060608b0135158015906109b457506120008c01548b60600135115b156109d25760405163444507e160e01b815260040160405180910390fd5b60008884604001516109e491906127e7565b9050836060015160001480156109f8575082155b8015610a0357508015155b15610a3b57600087554260028801556040518181528b35906000805160206128c98339815191529060200160405180910390a2610a58565b88866000016000828254610a4f91906127e7565b90915550508087555b6040518b359033907f0130a7b525bd6b1e72def1ee0b77f3467028a0e958e30174a0c95eb3860fc2219061037d908e908e908e90612615565b60008083600003610ab55760405163162908e360e11b815260040160405180910390fd5b610ac28787878787611433565b915091509550959350505050565b600082600003610af35760405163162908e360e11b815260040160405180910390fd5b811580610b015750611cdc82115b15610b1f576040516363df817160e01b815260040160405180910390fd5b6000610b2b8584611643565b90506000610b3884610faa565b6000858152602089905260409020909150610b56903384888561165c565b925082600003610b795760405163955a8bf560e01b815260040160405180910390fd5b5050949350505050565b600082600003610ba65760405163162908e360e11b815260040160405180910390fd5b6000828152602086905260409020600181015480851115610bda57604051633a23d82560e01b815260040160405180910390fd5b6000610be585610faa565b83549091506000610bf68988611643565b9050610c078483838b8760016116e6565b955085600003610c2a5760405163955a8bf560e01b815260040160405180910390fd5b3360009081526003860160205260408120600181015460028801549192911015610c52575080545b801580610c5e57508088115b15610c7c5760405163955a8bf560e01b815260040160405180910390fd5b610c8688856127e7565b935083158015610c94575082155b15610c9d578599505b610ca78a876127e7565b60018801819055955085158015610cbc575082155b8015610cc757508315155b15610cfe576000875542600288015560405184815289906000805160206128c98339815191529060200160405180910390a2610d1b565b87826000016000828254610d1291906127e7565b90915550508387555b50505050505050949350505050565b60008080808087875b8887108015610d4157508185105b15610dd8578a8a86818110610d5857610d5861280d565b90506020020135935087841115610d82576040516339cf269160e21b815260040160405180910390fd5b610d908d8d60018488611433565b5092506000839003610db55760405163162908e360e11b815260040160405180910390fd5b610dbf83886127fa565b9650610dcb83826127e7565b9050846001019450610d33565b888714610e3e576000610deb8d8a611643565b90506000610df88a610faa565b9050610e188f60008c815260200190815260200160002033848c8561165c565b975087600003610e3b5760405163955a8bf560e01b815260040160405180910390fd5b50505b5050505050965096945050505050565b6000610e5982612823565b9150600183836120018110610e7057610e7061280d565b0154915060008060005b858416600003610ef257610e8e84876127e7565b925086836120018110610ea357610ea361280d565b015491508661200101836120018110610ebe57610ebe61280d565b0154905080600003610ed05781610eda565b610eda8183610f6f565b610ee490866127e7565b9450600184901b9350610e7a565b5050505092915050565b6000610f0782612823565b9150670de0b6b3a764000090505b6120008211610f695760008361200101836120018110610f3757610f3761280d565b015490508015610f4e57610f4b8282610f6f565b91505b610f578361172a565b610f6190846127fa565b925050610f15565b92915050565b6000670de0b6b3a7640000610f85600282612852565b610f8f8486612874565b610f9991906127fa565b610fa39190612852565b9392505050565b600080610fb98361103c61288b565b9050610c9f19811280610fcd575061103c81135b15610feb57604051637edf443b60e11b815260040160405180910390fd5b610fa3611010610ffa8361174b565b61100b670df27a2cdf4480006117db565b6118bf565b611984565b6000610f6982683b5c2d7a70fcbc00006110a2565b600084158015611038575086155b15611044575082611098565b85600003611053575082611098565b61109586611069670de0b6b3a764000087612874565b611073868b612874565b611085670de0b6b3a76400008a612874565b61108f91906127fa565b85611a1b565b90505b9695505050505050565b6000816110b0600282612852565b610f8f670de0b6b3a764000086612874565b806000036110e35760405163162908e360e11b815260040160405180910390fd5b6110ec82612823565b915060008060005b612000851161119257858561200181106111105761111061280d565b01549250856120010185612001811061112b5761112b61280d565b0154915061113984846127fa565b905081156111625761114b8383610f6f565b6111558284610f6f565b61115f91906127e7565b93505b80868661200181106111765761117661280d565b01556111818561172a565b61118b90866127fa565b94506110f4565b505050505050565b80156111ef576001600160a01b03821660009081526003850160205260409020600181015484106111cd578181556111e7565b818160000160008282546111e191906127fa565b90915550505b426001909101555b50505050565b60006112018383611a78565b5090949350505050565b60008060008061121f868660a00151610e4e565b9050806000036112425760405163bb55fd2760e01b815260040160405180910390fd5b6000611252878760a00151610efc565b905060006112608383610f6f565b9050600061128388606001518960400151848b602001518c608001516000611b68565b9050600082896000015110801561129a5750885182115b156112e457886000015197506112c189606001518a60400151858b8d60800151600161102a565b96506112d1878a60200151611bcd565b96506112dd88856110a2565b9050611355565b818310156113245782975061130a89606001518a60400151858b8d60800151600161102a565b965061131a878a60200151611bcd565b9650849050611355565b8860200151965061134689606001518a60400151858a8d608001516000611b68565b975061135288856110a2565b90505b88604001518703611367578297508490505b61137188846127e7565b9250821580159061138557508860c0015183105b156113a3576040516345b3f65d60e01b815260040160405180910390fd5b6113ad81866127e7565b9550866000036113d05760405163955a8bf560e01b815260040160405180910390fd5b6113df8a8a60a0015183611bdd565b50505050509250925092565b6000610fa36113fa84846111f5565b610faa565b6000610fa361140e8484610f6f565b670e6ed27d66680000610f6f565b60008183101561142c5781610fa3565b5090919050565b6000818152602086905260408120600181015482919080830361146957604051633a23d82560e01b815260040160405180910390fd5b3360009081526003830160205260408120600181015460028501549192911015611491575080545b806000036114b257604051639b0e91e160e01b815260040160405180910390fd5b60006114bd88610faa565b855490915060006114ce8d8b611643565b90506114da8b87611bcd565b985060006114ed8784848d8860016116e6565b9050806000036115105760405163955a8bf560e01b815260040160405180910390fd5b84811161151f57809850611550565b84985061152d858b83611caf565b9950896000036115505760405163955a8bf560e01b815260040160405180910390fd5b61155a838a611bcd565b61156490846127e7565b925082158015611572575081155b1561157b578699505b611585878b611bcd565b99506115918a886127e7565b965086158015906115a157508c87105b156115bf576040516345b3f65d60e01b815260040160405180910390fd5b60018801879055861580156115d2575081155b80156115dd57508215155b1561161457600088554260028901556040518381528b906000805160206128c98339815191529060200160405180910390a2611631565b8886600001600082825461162891906127e7565b90915550508288555b50505050505050509550959350505050565b6000610fa36116528484610e4e565b61029f8585610efc565b60028501546000904281036116845760405163c1e4c5f760e01b815260040160405180910390fd5b61169b8760010154886000015487878760006116e6565b9150838760010160008282546116b191906127fa565b90915550508654829088906000906116ca9084906127fa565b909155506116dc90508782888561119a565b5095945050505050565b6000841580156116f4575086155b1561170a576117038484610f6f565b9050611098565b8560000361171c576117038484610f6f565b611095866110698587612874565b6000811561174657611741600019831860016127fa565b821690505b919050565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156117905760405163e608e18b60e01b8152600481018390526024015b60405180910390fd5b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f908213156117cd576040516371f72a3160e01b815260048101839052602401611787565b50670de0b6b3a76400000290565b60008082136118005760405163309fa7dd60e11b815260048101839052602401611787565b6000670de0b6b3a7640000831261181957506001611832565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b6000611847670de0b6b3a76400008505611d5d565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff19810161187157505002919050565b6706f05b59d3b200005b60008113156118b657670de0b6b3a7640000828002059150671bc16d674ec8000082126118ae579384019360019190911d905b60011d61187b565b50505002919050565b6000600160ff1b8314806118d65750600160ff1b82145b156118f457604051630d01a11b60e21b815260040160405180910390fd5b60008060008512611905578461190a565b846000035b91506000841261191a578361191f565b836000035b9050600061192d8383611e3b565b90506001600160ff1b0381111561195a5760405163bf79e8d960e01b815260048101829052602401611787565b6000198087139086138082186001146119735782611978565b826000035b98975050505050505050565b6000808212156119d75768033dd1780914b97114198212156119a857506000919050565b6119b482600003611984565b6a0c097ce7bc90715b34b9f160241b816119d0576119d061283c565b0592915050565b680a688906bd8b0000008212611a035760405163e69458f960e01b815260048101839052602401611787565b670de0b6b3a7640000604083901b04610fa381611f01565b600080611a29868686611caf565b90506001836002811115611a3f57611a3f6128b2565b148015611a5c575060008480611a5757611a5761283c565b868809115b15611a6f57611a6c6001826127fa565b90505b95945050505050565b60008080611000670de0b6b3a764000082808080805b8615611b5a57611a9e878b6127fa565b93508b846120018110611ab357611ab361280d565b015492508b61200101846120018110611ace57611ace61280d565b0154915081600003611ae957611ae48684610f6f565b611b0b565b611b0b611af68388612874565b846a0c097ce7bc90715b34b9f160241b611caf565b611b1590866127fa565b90508a811015611b3457611cdc8411611b2f578399508094505b611b4e565b8115611b4757611b448683612593565b95505b8098508597505b600187901c9650611a8e565b505050505050509250925092565b600084158015611b76575086155b15611b82575082611098565b85600003611b91575082611098565b611095611b9e8489612874565b611bb0670de0b6b3a764000088612874565b611bba91906127fa565b8561108f670de0b6b3a76400008a612874565b60008183111561142c5781610fa3565b80600003611bfe5760405163162908e360e11b815260040160405180910390fd5b611c0782612823565b91505b6120008211611caa5760008184846120018110611c2957611c2961280d565b016000828254611c3991906127e7565b925050819055905060008461200101846120018110611c5a57611c5a61280d565b015490508015611c8e57611c6e8282610f6f565b611c81611c7b85856127fa565b83610f6f565b611c8b91906127e7565b92505b611c978461172a565b611ca190856127fa565b93505050611c0a565b505050565b6000808060001985870985870292508281108382030391505080600003611ce957838281611cdf57611cdf61283c565b0492505050610fa3565b808411611cf557600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b8210611d7d57608091821c91611d7a90826127fa565b90505b600160401b8210611d9b57604091821c91611d9890826127fa565b90505b600160201b8210611db957602091821c91611db690826127fa565b90505b620100008210611dd657601091821c91611dd390826127fa565b90505b6101008210611df257600891821c91611def90826127fa565b90505b60108210611e0d57600491821c91611e0a90826127fa565b90505b60048210611e2857600291821c91611e2590826127fa565b90505b6002821061174657610f696001826127fa565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110611e7f5760405163698d9a0160e11b815260048101829052602401611787565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff8211905082600003611ebd5780670de0b6b3a7640000850401945050505050610f69565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615611f215768016a09e667f3bcc9090260401c5b6001603e1b821615611f3c576801306fe0a31b7152df0260401c5b6001603d1b821615611f57576801172b83c7d517adce0260401c5b6001603c1b821615611f725768010b5586cf9890f62a0260401c5b6001603b1b821615611f8d576801059b0d31585743ae0260401c5b6001603a1b821615611fa857680102c9a3e778060ee70260401c5b600160391b821615611fc35768010163da9fb33356d80260401c5b600160381b821615611fde57680100b1afa5abcbed610260401c5b600160371b821615611ff95768010058c86da1c09ea20260401c5b600160361b821615612014576801002c605e2e8cec500260401c5b600160351b82161561202f57680100162f3904051fa10260401c5b600160341b82161561204a576801000b175effdc76ba0260401c5b600160331b82161561206557680100058ba01fb9f96d0260401c5b600160321b8216156120805768010002c5cc37da94920260401c5b600160311b82161561209b576801000162e525ee05470260401c5b600160301b8216156120b65768010000b17255775c040260401c5b6001602f1b8216156120d1576801000058b91b5bc9ae0260401c5b6001602e1b8216156120ec57680100002c5c89d5ec6d0260401c5b6001602d1b8216156121075768010000162e43f4f8310260401c5b6001602c1b82161561212257680100000b1721bcfc9a0260401c5b6001602b1b82161561213d5768010000058b90cf1e6e0260401c5b6001602a1b821615612158576801000002c5c863b73f0260401c5b600160291b82161561217357680100000162e430e5a20260401c5b600160281b82161561218e576801000000b1721835510260401c5b600160271b8216156121a957680100000058b90c0b490260401c5b600160261b8216156121c45768010000002c5c8601cc0260401c5b600160251b8216156121df576801000000162e42fff00260401c5b600160241b8216156121fa5768010000000b17217fbb0260401c5b600160231b821615612215576801000000058b90bfce0260401c5b600160221b82161561223057680100000002c5c85fe30260401c5b600160211b82161561224b5768010000000162e42ff10260401c5b600160201b82161561226657680100000000b17217f80260401c5b63800000008216156122815768010000000058b90bfc0260401c5b634000000082161561229c576801000000002c5c85fe0260401c5b63200000008216156122b757680100000000162e42ff0260401c5b63100000008216156122d2576801000000000b17217f0260401c5b63080000008216156122ed57680100000000058b90c00260401c5b63040000008216156123085768010000000002c5c8600260401c5b6302000000821615612323576801000000000162e4300260401c5b630100000082161561233e5768010000000000b172180260401c5b62800000821615612358576801000000000058b90c0260401c5b6240000082161561237257680100000000002c5c860260401c5b6220000082161561238c5768010000000000162e430260401c5b621000008216156123a657680100000000000b17210260401c5b620800008216156123c05768010000000000058b910260401c5b620400008216156123da576801000000000002c5c80260401c5b620200008216156123f457680100000000000162e40260401c5b6201000082161561240d5761b172600160401b010260401c5b618000821615612425576158b9600160401b010260401c5b61400082161561243d57612c5d600160401b010260401c5b6120008216156124555761162e600160401b010260401c5b61100082161561246d57610b17600160401b010260401c5b6108008216156124855761058c600160401b010260401c5b61040082161561249d576102c6600160401b010260401c5b6102008216156124b557610163600160401b010260401c5b6101008216156124cc5760b1600160401b010260401c5b60808216156124e2576059600160401b010260401c5b60408216156124f857602c600160401b010260401c5b602082161561250e576016600160401b010260401c5b601082161561252457600b600160401b010260401c5b600882161561253a576006600160401b010260401c5b6004821615612550576003600160401b010260401c5b6002821615612566576001600160401b010260401c5b600182161561257c576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6000670de0b6b3a7640000610f998385612874565b600061012082840312156125bb57600080fd5b50919050565b6000806000808486036101a08112156125d957600080fd5b85359450602086013593506125f187604088016125a8565b9250604061015f198201121561260657600080fd5b50929591945092610160019150565b9283526020830191909152604082015260600190565b6000806000808486036101e081121561264357600080fd5b853594506020860135935061265b87604088016125a8565b9250608061015f198201121561260657600080fd5b93845260208401929092526040830152606082015260800190565b6000806000808486036101c08112156126a357600080fd5b85359450602086013593506126bb87604088016125a8565b9250606061015f198201121561260657600080fd5b600080600080600060a086880312156126e857600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000806000806080858703121561272157600080fd5b5050823594602084013594506040840135936060013592509050565b60008060008060008060a0878903121561275657600080fd5b863595506020870135945060408701356001600160401b038082111561277b57600080fd5b818901915089601f83011261278f57600080fd5b81358181111561279e57600080fd5b8a60208260051b85010111156127b357600080fd5b979a9699505060200196606081013595608090910135945092505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610f6957610f696127d1565b80820180821115610f6957610f696127d1565b634e487b7160e01b600052603260045260246000fd5b600060018201612835576128356127d1565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261286f57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610f6957610f696127d1565b81810360008312801583831316838312821617156128ab576128ab6127d1565b5092915050565b634e487b7160e01b600052602160045260246000fdfe30ee43613aaa48d222b158aab1123c5a29d452f8b1a849e5f815dd355923ba85a2646970667358221220f6f155bc3a84941d9680d8ae67910223a1405b8e066e330927dd3840af570a1d64736f6c63430008120033","args":[],"salt":"AJNA","value":[]}
2024-01-08T15:27:12.539Z cannon:builder comparing states null b07061cc6d53cdcd70423b39c714e593
2024-01-08T15:27:12.539Z cannon:builder run isolated contract.LenderActions
Executing [contract.LenderActions]...
2024-01-08T15:27:12.540Z cannon:verbose:builder ctx for step contract.LenderActions {
  package: {},
  timestamp: '1704727545',
  chainId: 10,
  settings: {
    bwAJNA_ADDRESS: '0x6c518f9D1a163379235816c543E62922a79863Fa',
    salt: 'AJNA'
  },
  contracts: {},
  txns: {},
  imports: {},
  extras: {}
}
2024-01-08T15:27:12.540Z cannon:builder:contract exec {
  artifact: 'LenderActions',
  salt: 'AJNA',
  create2: true,
  from: '',
  nonce: '',
  value: '',
  abi: ''
}
2024-01-08T15:27:12.540Z cannon:builder:runtime resolve artifact LenderActions
2024-01-08T15:27:12.540Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:27:19.974Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/LenderActions.sol': 'LenderActions' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/LenderActions.sol': {
      keccak256: '0x04b37827f21db736b668fb27393b6c8b968b4cb24abf338b0a658090a173e0dd',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:27:19.975Z cannon:cli:foundry evm version paris
2024-01-08T15:27:19.980Z cannon:builder:runtime reported contract artifact LenderActions {
  contractName: 'LenderActions',
  sourceName: 'src/libraries/external/LenderActions.sol',
  abi: [
    {
      type: 'event',
      name: 'AddQuoteToken',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'BucketBankruptcy',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'MoveQuoteToken',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'RemoveQuoteToken',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'BucketBankruptcyBlock', inputs: [] },
    { type: 'error', name: 'BucketBankruptcyBlock', inputs: [] },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'CannotMergeToHigherPrice', inputs: [] },
    { type: 'error', name: 'DustAmountNotExceeded', inputs: [] },
    { type: 'error', name: 'InsufficientCollateral', inputs: [] },
    { type: 'error', name: 'InsufficientLP', inputs: [] },
    { type: 'error', name: 'InsufficientLiquidity', inputs: [] },
    { type: 'error', name: 'InvalidAmount', inputs: [] },
    { type: 'error', name: 'InvalidAmount', inputs: [] },
    { type: 'error', name: 'InvalidIndex', inputs: [] },
    { type: 'error', name: 'LUPBelowHTP', inputs: [] },
    { type: 'error', name: 'MoveToSameIndex', inputs: [] },
    { type: 'error', name: 'NoClaim', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    }
  ],
  bytecode: '0x61291e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100775760003560e01c80632f9fa1031461007c5780633806e8ef146100b457806350865720146100e457806380f2fcd014610104578063ba9784e814610139578063bf2980c714610167578063fd4682de14610187575b600080fd5b81801561008857600080fd5b5061009c6100973660046125c1565b6101a7565b6040516100ab93929190612615565b60405180910390f35b8180156100c057600080fd5b506100d46100cf36600461262b565b610396565b6040516100ab9493929190612670565b8180156100f057600080fd5b5061009c6100ff36600461268b565b610863565b81801561011057600080fd5b5061012461011f3660046126d0565b610a91565b604080519283526020830191909152016100ab565b81801561014557600080fd5b5061015961015436600461270b565b610ad0565b6040519081526020016100ab565b81801561017357600080fd5b5061015961018236600461270b565b610b83565b81801561019357600080fd5b506101246101a236600461273d565b610d2a565b60008080833581036101cc5760405163162908e360e11b815260040160405180910390fd5b602084013515806101e25750611cdc8460200135115b15610200576040516363df817160e01b815260040160405180910390fd5b6020808501356000908152908890526040902060028101544281036102385760405163c1e4c5f760e01b815260040160405180910390fd5b6000610248898860200135610e4e565b9050600061025a8a8960200135610efc565b905060006102688284610f6f565b905060006102798a60200135610faa565b90506102a48a3561028d60e08e0135611015565b61029f90670de0b6b3a76400006127e7565b610f6f565b97506102bd86600101548760000154848b85600061102a565b9850886000036102e05760405163955a8bf560e01b815260040160405180910390fd5b6102f88c8b602001356102f38b876110a2565b6110c2565b6103048686338c61119a565b8886600001600082825461031891906127fa565b909155506000905061032e8d60608e01356111f5565b905061033981610faa565b97508a60200135336001600160a01b03167f8b24a9808cf05d3d8e48ac09e4f649054994a88cfa657b3f4bf340b62137df1e8b8d8c60405161037d93929190612615565b60405180910390a3505050505050509450945094915050565b600080808060408501358535036103c0576040516343c7e10b60e01b815260040160405180910390fd5b856101000135856020013510156103ea576040516345b3f65d60e01b815260040160405180910390fd5b604085013515806104005750611cdc8560400135115b1561041e576040516363df817160e01b815260040160405180910390fd5b60008860008760400135815260200190815260200160002090506104aa604051806101c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600282015461010082018190524290036104d75760405163c1e4c5f760e01b815260040160405180910390fd5b8635600081815260208c8152604080832033845260038101909252909120909161050090610faa565b83526001808301546020850152825460408086019190915290820154608085015261052d908a0135610faa565b60e084015260808301516002830154101561054a57805460608401525b6105a38b6040518060e001604052808c602001358152602001866060015181526020018660400151815260200186602001518152602001866000015181526020018c6000013581526020018d610100013581525061120b565b60c0860152985095506040890135893510156105cd576105ca8661028d8c60e00135611015565b95505b6105db8b8a60400135610e4e565b6101408401526105ef8b60408b0135610efc565b610180840181905261014084015161060691610f6f565b61016084018190526001850154855460e086015161062893908a90600061102a565b96508660000361064b5760405163955a8bf560e01b815260040160405180910390fd5b6106638b8a604001356102f3898761018001516110a2565b6106718b8b606001356113eb565b945061068589606001358b60a001356113ff565b6101a0840152604089013589351080156106c3575084836101a0015111806106c3575060608a0135158015906106c357506120008b01548a60600135115b156106e15760405163444507e160e01b815260040160405180910390fd5b8783604001516106f191906127e7565b60a0840152602083015115801561070a575060c0830151155b8015610719575060a083015115155b15610756576000825542600283015560a08301516040519081528935906000805160206128c98339815191529060200160405180910390a2610777565b8781600001600082825461076a91906127e7565b909155505060a083015182555b336000908152600385016020526040902060018101546101208501819052610100850151106107bf578781556101008401516107b49060016127fa565b6101208501526107d9565b878160000160008282546107d391906127fa565b90915550505b6107ec846080015185610120015161141c565b60018201558454889086906000906108059084906127fa565b909155505060408051908b0135908b359033907f9d7ab6bb30c003ae7d5b583911db0ada7a9e51b0b4ac7ac1bb5e6896e82e4dbe9061084b908c908f908f908e90612670565b60405180910390a45050505050945094509450949050565b6000806000836020013560000361088d5760405163162908e360e11b815260040160405180910390fd5b83356000908152602088815260408083203384526003810183528184206001810154835160e081018552868152948501869052928401859052606084018590526080840185905260a0840185905260c0840194909452929181846002015410156108f957825460208201525b806020015160000361091e57604051639b0e91e160e01b815260040160405180910390fd5b6020880135815261092f8835610faa565b60808201528354604082015260018401546060820152873560a082015261010089013560c082015260006109638b8361120b565b919950975090506109788b60608c01356113eb565b9550600061098e8a604001358c60a001356113ff565b9050868111806109b4575060608b0135158015906109b457506120008c01548b60600135115b156109d25760405163444507e160e01b815260040160405180910390fd5b60008884604001516109e491906127e7565b9050836060015160001480156109f8575082155b8015610a0357508015155b15610a3b57600087554260028801556040518181528b35906000805160206128c98339815191529060200160405180910390a2610a58565b88866000016000828254610a4f91906127e7565b90915550508087555b6040518b359033907f0130a7b525bd6b1e72def1ee0b77f3467028a0e958e30174a0c95eb3860fc2219061037d908e908e908e90612615565b60008083600003610ab55760405163162908e360e11b815260040160405180910390fd5b610ac28787878787611433565b915091509550959350505050565b600082600003610af35760405163162908e360e11b815260040160405180910390fd5b811580610b015750611cdc82115b15610b1f576040516363df817160e01b815260040160405180910390fd5b6000610b2b8584611643565b90506000610b3884610faa565b6000858152602089905260409020909150610b56903384888561165c565b925082600003610b795760405163955a8bf560e01b815260040160405180910390fd5b5050949350505050565b600082600003610ba65760405163162908e360e11b815260040160405180910390fd5b6000828152602086905260409020600181015480851115610bda57604051633a23d82560e01b815260040160405180910390fd5b6000610be585610faa565b83549091506000610bf68988611643565b9050610c078483838b8760016116e6565b955085600003610c2a5760405163955a8bf560e01b815260040160405180910390fd5b3360009081526003860160205260408120600181015460028801549192911015610c52575080545b801580610c5e57508088115b15610c7c5760405163955a8bf560e01b815260040160405180910390fd5b610c8688856127e7565b935083158015610c94575082155b15610c9d578599505b610ca78a876127e7565b60018801819055955085158015610cbc575082155b8015610cc757508315155b15610cfe576000875542600288015560405184815289906000805160206128c98339815191529060200160405180910390a2610d1b565b87826000016000828254610d1291906127e7565b90915550508387555b50505050505050949350505050565b60008080808087875b8887108015610d4157508185105b15610dd8578a8a86818110610d5857610d5861280d565b90506020020135935087841115610d82576040516339cf269160e21b815260040160405180910390fd5b610d908d8d60018488611433565b5092506000839003610db55760405163162908e360e11b815260040160405180910390fd5b610dbf83886127fa565b9650610dcb83826127e7565b9050846001019450610d33565b888714610e3e576000610deb8d8a611643565b90506000610df88a610faa565b9050610e188f60008c815260200190815260200160002033848c8561165c565b975087600003610e3b5760405163955a8bf560e01b815260040160405180910390fd5b50505b5050505050965096945050505050565b6000610e5982612823565b9150600183836120018110610e7057610e7061280d565b0154915060008060005b858416600003610ef257610e8e84876127e7565b925086836120018110610ea357610ea361280d565b015491508661200101836120018110610ebe57610ebe61280d565b0154905080600003610ed05781610eda565b610eda8183610f6f565b610ee490866127e7565b9450600184901b9350610e7a565b5050505092915050565b6000610f0782612823565b9150670de0b6b3a764000090505b6120008211610f695760008361200101836120018110610f3757610f3761280d565b015490508015610f4e57610f4b8282610f6f565b91505b610f578361172a565b610f6190846127fa565b925050610f15565b92915050565b6000670de0b6b3a7640000610f85600282612852565b610f8f8486612874565b610f9991906127fa565b610fa39190612852565b9392505050565b600080610fb98361103c61288b565b9050610c9f19811280610fcd575061103c81135b15610feb57604051637edf443b60e11b815260040160405180910390fd5b610fa3611010610ffa8361174b565b61100b670df27a2cdf4480006117db565b6118bf565b611984565b6000610f6982683b5c2d7a70fcbc00006110a2565b600084158015611038575086155b15611044575082611098565b85600003611053575082611098565b61109586611069670de0b6b3a764000087612874565b611073868b612874565b611085670de0b6b3a76400008a612874565b61108f91906127fa565b85611a1b565b90505b9695505050505050565b6000816110b0600282612852565b610f8f670de0b6b3a764000086612874565b806000036110e35760405163162908e360e11b815260040160405180910390fd5b6110ec82612823565b915060008060005b612000851161119257858561200181106111105761111061280d565b01549250856120010185612001811061112b5761112b61280d565b0154915061113984846127fa565b905081156111625761114b8383610f6f565b6111558284610f6f565b61115f91906127e7565b93505b80868661200181106111765761117661280d565b01556111818561172a565b61118b90866127fa565b94506110f4565b505050505050565b80156111ef576001600160a01b03821660009081526003850160205260409020600181015484106111cd578181556111e7565b818160000160008282546111e191906127fa565b90915550505b426001909101555b50505050565b60006112018383611a78565b5090949350505050565b60008060008061121f868660a00151610e4e565b9050806000036112425760405163bb55fd2760e01b815260040160405180910390fd5b6000611252878760a00151610efc565b905060006112608383610f6f565b9050600061128388606001518960400151848b602001518c608001516000611b68565b9050600082896000015110801561129a5750885182115b156112e457886000015197506112c189606001518a60400151858b8d60800151600161102a565b96506112d1878a60200151611bcd565b96506112dd88856110a2565b9050611355565b818310156113245782975061130a89606001518a60400151858b8d60800151600161102a565b965061131a878a60200151611bcd565b9650849050611355565b8860200151965061134689606001518a60400151858a8d608001516000611b68565b975061135288'... 11170 more characters,
  deployedBytecode: '0x73000000000000000000000000000000000000000030146080604052600436106100775760003560e01c80632f9fa1031461007c5780633806e8ef146100b457806350865720146100e457806380f2fcd014610104578063ba9784e814610139578063bf2980c714610167578063fd4682de14610187575b600080fd5b81801561008857600080fd5b5061009c6100973660046125c1565b6101a7565b6040516100ab93929190612615565b60405180910390f35b8180156100c057600080fd5b506100d46100cf36600461262b565b610396565b6040516100ab9493929190612670565b8180156100f057600080fd5b5061009c6100ff36600461268b565b610863565b81801561011057600080fd5b5061012461011f3660046126d0565b610a91565b604080519283526020830191909152016100ab565b81801561014557600080fd5b5061015961015436600461270b565b610ad0565b6040519081526020016100ab565b81801561017357600080fd5b5061015961018236600461270b565b610b83565b81801561019357600080fd5b506101246101a236600461273d565b610d2a565b60008080833581036101cc5760405163162908e360e11b815260040160405180910390fd5b602084013515806101e25750611cdc8460200135115b15610200576040516363df817160e01b815260040160405180910390fd5b6020808501356000908152908890526040902060028101544281036102385760405163c1e4c5f760e01b815260040160405180910390fd5b6000610248898860200135610e4e565b9050600061025a8a8960200135610efc565b905060006102688284610f6f565b905060006102798a60200135610faa565b90506102a48a3561028d60e08e0135611015565b61029f90670de0b6b3a76400006127e7565b610f6f565b97506102bd86600101548760000154848b85600061102a565b9850886000036102e05760405163955a8bf560e01b815260040160405180910390fd5b6102f88c8b602001356102f38b876110a2565b6110c2565b6103048686338c61119a565b8886600001600082825461031891906127fa565b909155506000905061032e8d60608e01356111f5565b905061033981610faa565b97508a60200135336001600160a01b03167f8b24a9808cf05d3d8e48ac09e4f649054994a88cfa657b3f4bf340b62137df1e8b8d8c60405161037d93929190612615565b60405180910390a3505050505050509450945094915050565b600080808060408501358535036103c0576040516343c7e10b60e01b815260040160405180910390fd5b856101000135856020013510156103ea576040516345b3f65d60e01b815260040160405180910390fd5b604085013515806104005750611cdc8560400135115b1561041e576040516363df817160e01b815260040160405180910390fd5b60008860008760400135815260200190815260200160002090506104aa604051806101c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600282015461010082018190524290036104d75760405163c1e4c5f760e01b815260040160405180910390fd5b8635600081815260208c8152604080832033845260038101909252909120909161050090610faa565b83526001808301546020850152825460408086019190915290820154608085015261052d908a0135610faa565b60e084015260808301516002830154101561054a57805460608401525b6105a38b6040518060e001604052808c602001358152602001866060015181526020018660400151815260200186602001518152602001866000015181526020018c6000013581526020018d610100013581525061120b565b60c0860152985095506040890135893510156105cd576105ca8661028d8c60e00135611015565b95505b6105db8b8a60400135610e4e565b6101408401526105ef8b60408b0135610efc565b610180840181905261014084015161060691610f6f565b61016084018190526001850154855460e086015161062893908a90600061102a565b96508660000361064b5760405163955a8bf560e01b815260040160405180910390fd5b6106638b8a604001356102f3898761018001516110a2565b6106718b8b606001356113eb565b945061068589606001358b60a001356113ff565b6101a0840152604089013589351080156106c3575084836101a0015111806106c3575060608a0135158015906106c357506120008b01548a60600135115b156106e15760405163444507e160e01b815260040160405180910390fd5b8783604001516106f191906127e7565b60a0840152602083015115801561070a575060c0830151155b8015610719575060a083015115155b15610756576000825542600283015560a08301516040519081528935906000805160206128c98339815191529060200160405180910390a2610777565b8781600001600082825461076a91906127e7565b909155505060a083015182555b336000908152600385016020526040902060018101546101208501819052610100850151106107bf578781556101008401516107b49060016127fa565b6101208501526107d9565b878160000160008282546107d391906127fa565b90915550505b6107ec846080015185610120015161141c565b60018201558454889086906000906108059084906127fa565b909155505060408051908b0135908b359033907f9d7ab6bb30c003ae7d5b583911db0ada7a9e51b0b4ac7ac1bb5e6896e82e4dbe9061084b908c908f908f908e90612670565b60405180910390a45050505050945094509450949050565b6000806000836020013560000361088d5760405163162908e360e11b815260040160405180910390fd5b83356000908152602088815260408083203384526003810183528184206001810154835160e081018552868152948501869052928401859052606084018590526080840185905260a0840185905260c0840194909452929181846002015410156108f957825460208201525b806020015160000361091e57604051639b0e91e160e01b815260040160405180910390fd5b6020880135815261092f8835610faa565b60808201528354604082015260018401546060820152873560a082015261010089013560c082015260006109638b8361120b565b919950975090506109788b60608c01356113eb565b9550600061098e8a604001358c60a001356113ff565b9050868111806109b4575060608b0135158015906109b457506120008c01548b60600135115b156109d25760405163444507e160e01b815260040160405180910390fd5b60008884604001516109e491906127e7565b9050836060015160001480156109f8575082155b8015610a0357508015155b15610a3b57600087554260028801556040518181528b35906000805160206128c98339815191529060200160405180910390a2610a58565b88866000016000828254610a4f91906127e7565b90915550508087555b6040518b359033907f0130a7b525bd6b1e72def1ee0b77f3467028a0e958e30174a0c95eb3860fc2219061037d908e908e908e90612615565b60008083600003610ab55760405163162908e360e11b815260040160405180910390fd5b610ac28787878787611433565b915091509550959350505050565b600082600003610af35760405163162908e360e11b815260040160405180910390fd5b811580610b015750611cdc82115b15610b1f576040516363df817160e01b815260040160405180910390fd5b6000610b2b8584611643565b90506000610b3884610faa565b6000858152602089905260409020909150610b56903384888561165c565b925082600003610b795760405163955a8bf560e01b815260040160405180910390fd5b5050949350505050565b600082600003610ba65760405163162908e360e11b815260040160405180910390fd5b6000828152602086905260409020600181015480851115610bda57604051633a23d82560e01b815260040160405180910390fd5b6000610be585610faa565b83549091506000610bf68988611643565b9050610c078483838b8760016116e6565b955085600003610c2a5760405163955a8bf560e01b815260040160405180910390fd5b3360009081526003860160205260408120600181015460028801549192911015610c52575080545b801580610c5e57508088115b15610c7c5760405163955a8bf560e01b815260040160405180910390fd5b610c8688856127e7565b935083158015610c94575082155b15610c9d578599505b610ca78a876127e7565b60018801819055955085158015610cbc575082155b8015610cc757508315155b15610cfe576000875542600288015560405184815289906000805160206128c98339815191529060200160405180910390a2610d1b565b87826000016000828254610d1291906127e7565b90915550508387555b50505050505050949350505050565b60008080808087875b8887108015610d4157508185105b15610dd8578a8a86818110610d5857610d5861280d565b90506020020135935087841115610d82576040516339cf269160e21b815260040160405180910390fd5b610d908d8d60018488611433565b5092506000839003610db55760405163162908e360e11b815260040160405180910390fd5b610dbf83886127fa565b9650610dcb83826127e7565b9050846001019450610d33565b888714610e3e576000610deb8d8a611643565b90506000610df88a610faa565b9050610e188f60008c815260200190815260200160002033848c8561165c565b975087600003610e3b5760405163955a8bf560e01b815260040160405180910390fd5b50505b5050505050965096945050505050565b6000610e5982612823565b9150600183836120018110610e7057610e7061280d565b0154915060008060005b858416600003610ef257610e8e84876127e7565b925086836120018110610ea357610ea361280d565b015491508661200101836120018110610ebe57610ebe61280d565b0154905080600003610ed05781610eda565b610eda8183610f6f565b610ee490866127e7565b9450600184901b9350610e7a565b5050505092915050565b6000610f0782612823565b9150670de0b6b3a764000090505b6120008211610f695760008361200101836120018110610f3757610f3761280d565b015490508015610f4e57610f4b8282610f6f565b91505b610f578361172a565b610f6190846127fa565b925050610f15565b92915050565b6000670de0b6b3a7640000610f85600282612852565b610f8f8486612874565b610f9991906127fa565b610fa39190612852565b9392505050565b600080610fb98361103c61288b565b9050610c9f19811280610fcd575061103c81135b15610feb57604051637edf443b60e11b815260040160405180910390fd5b610fa3611010610ffa8361174b565b61100b670df27a2cdf4480006117db565b6118bf565b611984565b6000610f6982683b5c2d7a70fcbc00006110a2565b600084158015611038575086155b15611044575082611098565b85600003611053575082611098565b61109586611069670de0b6b3a764000087612874565b611073868b612874565b611085670de0b6b3a76400008a612874565b61108f91906127fa565b85611a1b565b90505b9695505050505050565b6000816110b0600282612852565b610f8f670de0b6b3a764000086612874565b806000036110e35760405163162908e360e11b815260040160405180910390fd5b6110ec82612823565b915060008060005b612000851161119257858561200181106111105761111061280d565b01549250856120010185612001811061112b5761112b61280d565b0154915061113984846127fa565b905081156111625761114b8383610f6f565b6111558284610f6f565b61115f91906127e7565b93505b80868661200181106111765761117661280d565b01556111818561172a565b61118b90866127fa565b94506110f4565b505050505050565b80156111ef576001600160a01b03821660009081526003850160205260409020600181015484106111cd578181556111e7565b818160000160008282546111e191906127fa565b90915550505b426001909101555b50505050565b60006112018383611a78565b5090949350505050565b60008060008061121f868660a00151610e4e565b9050806000036112425760405163bb55fd2760e01b815260040160405180910390fd5b6000611252878760a00151610efc565b905060006112608383610f6f565b9050600061128388606001518960400151848b602001518c608001516000611b68565b9050600082896000015110801561129a5750885182115b156112e457886000015197506112c189606001518a60400151858b8d60800151600161102a565b96506112d1878a60200151611bcd565b96506112dd88856110a2565b9050611355565b818310156113245782975061130a89606001518a60400151858b8d60800151600161102a565b965061131a878a60200151611bcd565b9650849050611355565b8860200151965061134689606001518a60400151858a8d608001516000611b68565b975061135288856110a2565b90505b88604001518703611367578297508490505b61137188846127e7565b9250821580159061138557508860c0015183105b15'... 11054 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel\'s lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don\'t need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.\'s \\"Hacker\'s Delight\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\"msb\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // ‚Üí `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // ‚Üí `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton\'s method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result'... 253212 more characters
  }
}
duplicate definition - BucketBankruptcyBlock()
duplicate definition - InvalidAmount()
2024-01-08T15:27:19.988Z cannon:cli:rpc eth_chainId

2024-01-08T15:27:19.990Z cannon:cli:rpc eth_getCode

2024-01-08T15:27:19.990Z cannon:builder:contract performing arachnid create2
2024-01-08T15:27:19.993Z cannon:builder:contract create2 address is 0x7456CF19C121842FE2C3a888075A11d51ED63b98
2024-01-08T15:27:19.995Z cannon:cli:rpc eth_chainId

2024-01-08T15:27:19.997Z cannon:cli:rpc eth_getCode

2024-01-08T15:27:20.525Z cannon:cli:rpc anvil_impersonateAccount

2024-01-08T15:27:20.527Z cannon:cli:rpc anvil_setBalance

2024-01-08T15:27:20.529Z cannon:cli:rpc eth_blockNumber

2024-01-08T15:27:20.531Z cannon:cli:rpc eth_chainId

2024-01-08T15:27:20.535Z cannon:cli:rpc eth_chainId

2024-01-08T15:27:20.538Z cannon:cli:rpc eth_estimateGas

2024-01-08T15:27:20.546Z cannon:cli:rpc eth_sendTransaction

2024-01-08T15:27:20.547Z cannon:cli:rpc 
    Transaction: 0x9b4f17ee54f9802c9ac92cd6b4eebc449e22b215183590328583b9b596dba208
    Gas used: 2329033

    Block Number: 114564386
    Block Hash: 0x7d971c155054cd5f6f3811b75e5919255436e49f1d82fa7342f7ed98e60232a4
    Block Time: "Mon, 8 Jan 2024 15:27:18 +0000"


2024-01-08T15:27:20.549Z cannon:cli:rpc eth_chainId

2024-01-08T15:27:20.550Z cannon:cli:rpc eth_getTransactionByHash

2024-01-08T15:27:20.559Z cannon:cli:rpc eth_chainId

2024-01-08T15:27:20.560Z cannon:cli:rpc eth_getTransactionReceipt

2024-01-08T15:27:20.561Z cannon:builder:contract arachnid create2 complete {
  to: '0x4e59b44847b379578588920cA78FbF26c0B4956C',
  from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
  contractAddress: null,
  transactionIndex: 0,
  gasUsed: BigNumber { _hex: '0x2389c9', _isBigNumber: true },
  logsBloom: '0x
  blockHash: '0x7d971c155054cd5f6f3811b75e5919255436e49f1d82fa7342f7ed98e60232a4',
  transactionHash: '0x9b4f17ee54f9802c9ac92cd6b4eebc449e22b215183590328583b9b596dba208',
  logs: [],
  blockNumber: 114564386,
  confirmations: 1,
  cumulativeGasUsed: BigNumber { _hex: '0x2389c9', _isBigNumber: true },
  effectiveGasPrice: BigNumber { _hex: '0x2dce88', _isBigNumber: true },
  status: 1,
  type: 2,
  byzantium: true
}
2024-01-08T15:27:20.561Z cannon:builder:contract contract deployed to address 0x7456CF19C121842FE2C3a888075A11d51ED63b98
  ‚úî Successfully deployed LenderActions using CREATE2
  Contract Address: 0x7456CF19C121842FE2C3a888075A11d51ED63b98
  Transaction Hash: 0x9b4f17ee54f9802c9ac92cd6b4eebc449e22b215183590328583b9b596dba208
  Transaction Cost: 0.000006991738433736 ETH (2,329,033 gas)

2024-01-08T15:27:20.564Z cannon:builder:runtime resolve artifact LenderActions
2024-01-08T15:27:20.564Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:27:27.879Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/LenderActions.sol': 'LenderActions' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/LenderActions.sol': {
      keccak256: '0x04b37827f21db736b668fb27393b6c8b968b4cb24abf338b0a658090a173e0dd',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:27:27.880Z cannon:cli:foundry evm version paris
2024-01-08T15:27:27.886Z cannon:builder:runtime reported contract artifact LenderActions {
  contractName: 'LenderActions',
  sourceName: 'src/libraries/external/LenderActions.sol',
  abi: [
    {
      type: 'event',
      name: 'AddQuoteToken',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'BucketBankruptcy',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'MoveQuoteToken',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'RemoveQuoteToken',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'BucketBankruptcyBlock', inputs: [] },
    { type: 'error', name: 'BucketBankruptcyBlock', inputs: [] },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'CannotMergeToHigherPrice', inputs: [] },
    { type: 'error', name: 'DustAmountNotExceeded', inputs: [] },
    { type: 'error', name: 'InsufficientCollateral', inputs: [] },
    { type: 'error', name: 'InsufficientLP', inputs: [] },
    { type: 'error', name: 'InsufficientLiquidity', inputs: [] },
    { type: 'error', name: 'InvalidAmount', inputs: [] },
    { type: 'error', name: 'InvalidAmount', inputs: [] },
    { type: 'error', name: 'InvalidIndex', inputs: [] },
    { type: 'error', name: 'LUPBelowHTP', inputs: [] },
    { type: 'error', name: 'MoveToSameIndex', inputs: [] },
    { type: 'error', name: 'NoClaim', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    }
  ],
  bytecode: '0x61291e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100775760003560e01c80632f9fa1031461007c5780633806e8ef146100b457806350865720146100e457806380f2fcd014610104578063ba9784e814610139578063bf2980c714610167578063fd4682de14610187575b600080fd5b81801561008857600080fd5b5061009c6100973660046125c1565b6101a7565b6040516100ab93929190612615565b60405180910390f35b8180156100c057600080fd5b506100d46100cf36600461262b565b610396565b6040516100ab9493929190612670565b8180156100f057600080fd5b5061009c6100ff36600461268b565b610863565b81801561011057600080fd5b5061012461011f3660046126d0565b610a91565b604080519283526020830191909152016100ab565b81801561014557600080fd5b5061015961015436600461270b565b610ad0565b6040519081526020016100ab565b81801561017357600080fd5b5061015961018236600461270b565b610b83565b81801561019357600080fd5b506101246101a236600461273d565b610d2a565b60008080833581036101cc5760405163162908e360e11b815260040160405180910390fd5b602084013515806101e25750611cdc8460200135115b15610200576040516363df817160e01b815260040160405180910390fd5b6020808501356000908152908890526040902060028101544281036102385760405163c1e4c5f760e01b815260040160405180910390fd5b6000610248898860200135610e4e565b9050600061025a8a8960200135610efc565b905060006102688284610f6f565b905060006102798a60200135610faa565b90506102a48a3561028d60e08e0135611015565b61029f90670de0b6b3a76400006127e7565b610f6f565b97506102bd86600101548760000154848b85600061102a565b9850886000036102e05760405163955a8bf560e01b815260040160405180910390fd5b6102f88c8b602001356102f38b876110a2565b6110c2565b6103048686338c61119a565b8886600001600082825461031891906127fa565b909155506000905061032e8d60608e01356111f5565b905061033981610faa565b97508a60200135336001600160a01b03167f8b24a9808cf05d3d8e48ac09e4f649054994a88cfa657b3f4bf340b62137df1e8b8d8c60405161037d93929190612615565b60405180910390a3505050505050509450945094915050565b600080808060408501358535036103c0576040516343c7e10b60e01b815260040160405180910390fd5b856101000135856020013510156103ea576040516345b3f65d60e01b815260040160405180910390fd5b604085013515806104005750611cdc8560400135115b1561041e576040516363df817160e01b815260040160405180910390fd5b60008860008760400135815260200190815260200160002090506104aa604051806101c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600282015461010082018190524290036104d75760405163c1e4c5f760e01b815260040160405180910390fd5b8635600081815260208c8152604080832033845260038101909252909120909161050090610faa565b83526001808301546020850152825460408086019190915290820154608085015261052d908a0135610faa565b60e084015260808301516002830154101561054a57805460608401525b6105a38b6040518060e001604052808c602001358152602001866060015181526020018660400151815260200186602001518152602001866000015181526020018c6000013581526020018d610100013581525061120b565b60c0860152985095506040890135893510156105cd576105ca8661028d8c60e00135611015565b95505b6105db8b8a60400135610e4e565b6101408401526105ef8b60408b0135610efc565b610180840181905261014084015161060691610f6f565b61016084018190526001850154855460e086015161062893908a90600061102a565b96508660000361064b5760405163955a8bf560e01b815260040160405180910390fd5b6106638b8a604001356102f3898761018001516110a2565b6106718b8b606001356113eb565b945061068589606001358b60a001356113ff565b6101a0840152604089013589351080156106c3575084836101a0015111806106c3575060608a0135158015906106c357506120008b01548a60600135115b156106e15760405163444507e160e01b815260040160405180910390fd5b8783604001516106f191906127e7565b60a0840152602083015115801561070a575060c0830151155b8015610719575060a083015115155b15610756576000825542600283015560a08301516040519081528935906000805160206128c98339815191529060200160405180910390a2610777565b8781600001600082825461076a91906127e7565b909155505060a083015182555b336000908152600385016020526040902060018101546101208501819052610100850151106107bf578781556101008401516107b49060016127fa565b6101208501526107d9565b878160000160008282546107d391906127fa565b90915550505b6107ec846080015185610120015161141c565b60018201558454889086906000906108059084906127fa565b909155505060408051908b0135908b359033907f9d7ab6bb30c003ae7d5b583911db0ada7a9e51b0b4ac7ac1bb5e6896e82e4dbe9061084b908c908f908f908e90612670565b60405180910390a45050505050945094509450949050565b6000806000836020013560000361088d5760405163162908e360e11b815260040160405180910390fd5b83356000908152602088815260408083203384526003810183528184206001810154835160e081018552868152948501869052928401859052606084018590526080840185905260a0840185905260c0840194909452929181846002015410156108f957825460208201525b806020015160000361091e57604051639b0e91e160e01b815260040160405180910390fd5b6020880135815261092f8835610faa565b60808201528354604082015260018401546060820152873560a082015261010089013560c082015260006109638b8361120b565b919950975090506109788b60608c01356113eb565b9550600061098e8a604001358c60a001356113ff565b9050868111806109b4575060608b0135158015906109b457506120008c01548b60600135115b156109d25760405163444507e160e01b815260040160405180910390fd5b60008884604001516109e491906127e7565b9050836060015160001480156109f8575082155b8015610a0357508015155b15610a3b57600087554260028801556040518181528b35906000805160206128c98339815191529060200160405180910390a2610a58565b88866000016000828254610a4f91906127e7565b90915550508087555b6040518b359033907f0130a7b525bd6b1e72def1ee0b77f3467028a0e958e30174a0c95eb3860fc2219061037d908e908e908e90612615565b60008083600003610ab55760405163162908e360e11b815260040160405180910390fd5b610ac28787878787611433565b915091509550959350505050565b600082600003610af35760405163162908e360e11b815260040160405180910390fd5b811580610b015750611cdc82115b15610b1f576040516363df817160e01b815260040160405180910390fd5b6000610b2b8584611643565b90506000610b3884610faa565b6000858152602089905260409020909150610b56903384888561165c565b925082600003610b795760405163955a8bf560e01b815260040160405180910390fd5b5050949350505050565b600082600003610ba65760405163162908e360e11b815260040160405180910390fd5b6000828152602086905260409020600181015480851115610bda57604051633a23d82560e01b815260040160405180910390fd5b6000610be585610faa565b83549091506000610bf68988611643565b9050610c078483838b8760016116e6565b955085600003610c2a5760405163955a8bf560e01b815260040160405180910390fd5b3360009081526003860160205260408120600181015460028801549192911015610c52575080545b801580610c5e57508088115b15610c7c5760405163955a8bf560e01b815260040160405180910390fd5b610c8688856127e7565b935083158015610c94575082155b15610c9d578599505b610ca78a876127e7565b60018801819055955085158015610cbc575082155b8015610cc757508315155b15610cfe576000875542600288015560405184815289906000805160206128c98339815191529060200160405180910390a2610d1b565b87826000016000828254610d1291906127e7565b90915550508387555b50505050505050949350505050565b60008080808087875b8887108015610d4157508185105b15610dd8578a8a86818110610d5857610d5861280d565b90506020020135935087841115610d82576040516339cf269160e21b815260040160405180910390fd5b610d908d8d60018488611433565b5092506000839003610db55760405163162908e360e11b815260040160405180910390fd5b610dbf83886127fa565b9650610dcb83826127e7565b9050846001019450610d33565b888714610e3e576000610deb8d8a611643565b90506000610df88a610faa565b9050610e188f60008c815260200190815260200160002033848c8561165c565b975087600003610e3b5760405163955a8bf560e01b815260040160405180910390fd5b50505b5050505050965096945050505050565b6000610e5982612823565b9150600183836120018110610e7057610e7061280d565b0154915060008060005b858416600003610ef257610e8e84876127e7565b925086836120018110610ea357610ea361280d565b015491508661200101836120018110610ebe57610ebe61280d565b0154905080600003610ed05781610eda565b610eda8183610f6f565b610ee490866127e7565b9450600184901b9350610e7a565b5050505092915050565b6000610f0782612823565b9150670de0b6b3a764000090505b6120008211610f695760008361200101836120018110610f3757610f3761280d565b015490508015610f4e57610f4b8282610f6f565b91505b610f578361172a565b610f6190846127fa565b925050610f15565b92915050565b6000670de0b6b3a7640000610f85600282612852565b610f8f8486612874565b610f9991906127fa565b610fa39190612852565b9392505050565b600080610fb98361103c61288b565b9050610c9f19811280610fcd575061103c81135b15610feb57604051637edf443b60e11b815260040160405180910390fd5b610fa3611010610ffa8361174b565b61100b670df27a2cdf4480006117db565b6118bf565b611984565b6000610f6982683b5c2d7a70fcbc00006110a2565b600084158015611038575086155b15611044575082611098565b85600003611053575082611098565b61109586611069670de0b6b3a764000087612874565b611073868b612874565b611085670de0b6b3a76400008a612874565b61108f91906127fa565b85611a1b565b90505b9695505050505050565b6000816110b0600282612852565b610f8f670de0b6b3a764000086612874565b806000036110e35760405163162908e360e11b815260040160405180910390fd5b6110ec82612823565b915060008060005b612000851161119257858561200181106111105761111061280d565b01549250856120010185612001811061112b5761112b61280d565b0154915061113984846127fa565b905081156111625761114b8383610f6f565b6111558284610f6f565b61115f91906127e7565b93505b80868661200181106111765761117661280d565b01556111818561172a565b61118b90866127fa565b94506110f4565b505050505050565b80156111ef576001600160a01b03821660009081526003850160205260409020600181015484106111cd578181556111e7565b818160000160008282546111e191906127fa565b90915550505b426001909101555b50505050565b60006112018383611a78565b5090949350505050565b60008060008061121f868660a00151610e4e565b9050806000036112425760405163bb55fd2760e01b815260040160405180910390fd5b6000611252878760a00151610efc565b905060006112608383610f6f565b9050600061128388606001518960400151848b602001518c608001516000611b68565b9050600082896000015110801561129a5750885182115b156112e457886000015197506112c189606001518a60400151858b8d60800151600161102a565b96506112d1878a60200151611bcd565b96506112dd88856110a2565b9050611355565b818310156113245782975061130a89606001518a60400151858b8d60800151600161102a565b965061131a878a60200151611bcd565b9650849050611355565b8860200151965061134689606001518a60400151858a8d608001516000611b68565b975061135288'... 11170 more characters,
  deployedBytecode: '0x73000000000000000000000000000000000000000030146080604052600436106100775760003560e01c80632f9fa1031461007c5780633806e8ef146100b457806350865720146100e457806380f2fcd014610104578063ba9784e814610139578063bf2980c714610167578063fd4682de14610187575b600080fd5b81801561008857600080fd5b5061009c6100973660046125c1565b6101a7565b6040516100ab93929190612615565b60405180910390f35b8180156100c057600080fd5b506100d46100cf36600461262b565b610396565b6040516100ab9493929190612670565b8180156100f057600080fd5b5061009c6100ff36600461268b565b610863565b81801561011057600080fd5b5061012461011f3660046126d0565b610a91565b604080519283526020830191909152016100ab565b81801561014557600080fd5b5061015961015436600461270b565b610ad0565b6040519081526020016100ab565b81801561017357600080fd5b5061015961018236600461270b565b610b83565b81801561019357600080fd5b506101246101a236600461273d565b610d2a565b60008080833581036101cc5760405163162908e360e11b815260040160405180910390fd5b602084013515806101e25750611cdc8460200135115b15610200576040516363df817160e01b815260040160405180910390fd5b6020808501356000908152908890526040902060028101544281036102385760405163c1e4c5f760e01b815260040160405180910390fd5b6000610248898860200135610e4e565b9050600061025a8a8960200135610efc565b905060006102688284610f6f565b905060006102798a60200135610faa565b90506102a48a3561028d60e08e0135611015565b61029f90670de0b6b3a76400006127e7565b610f6f565b97506102bd86600101548760000154848b85600061102a565b9850886000036102e05760405163955a8bf560e01b815260040160405180910390fd5b6102f88c8b602001356102f38b876110a2565b6110c2565b6103048686338c61119a565b8886600001600082825461031891906127fa565b909155506000905061032e8d60608e01356111f5565b905061033981610faa565b97508a60200135336001600160a01b03167f8b24a9808cf05d3d8e48ac09e4f649054994a88cfa657b3f4bf340b62137df1e8b8d8c60405161037d93929190612615565b60405180910390a3505050505050509450945094915050565b600080808060408501358535036103c0576040516343c7e10b60e01b815260040160405180910390fd5b856101000135856020013510156103ea576040516345b3f65d60e01b815260040160405180910390fd5b604085013515806104005750611cdc8560400135115b1561041e576040516363df817160e01b815260040160405180910390fd5b60008860008760400135815260200190815260200160002090506104aa604051806101c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600282015461010082018190524290036104d75760405163c1e4c5f760e01b815260040160405180910390fd5b8635600081815260208c8152604080832033845260038101909252909120909161050090610faa565b83526001808301546020850152825460408086019190915290820154608085015261052d908a0135610faa565b60e084015260808301516002830154101561054a57805460608401525b6105a38b6040518060e001604052808c602001358152602001866060015181526020018660400151815260200186602001518152602001866000015181526020018c6000013581526020018d610100013581525061120b565b60c0860152985095506040890135893510156105cd576105ca8661028d8c60e00135611015565b95505b6105db8b8a60400135610e4e565b6101408401526105ef8b60408b0135610efc565b610180840181905261014084015161060691610f6f565b61016084018190526001850154855460e086015161062893908a90600061102a565b96508660000361064b5760405163955a8bf560e01b815260040160405180910390fd5b6106638b8a604001356102f3898761018001516110a2565b6106718b8b606001356113eb565b945061068589606001358b60a001356113ff565b6101a0840152604089013589351080156106c3575084836101a0015111806106c3575060608a0135158015906106c357506120008b01548a60600135115b156106e15760405163444507e160e01b815260040160405180910390fd5b8783604001516106f191906127e7565b60a0840152602083015115801561070a575060c0830151155b8015610719575060a083015115155b15610756576000825542600283015560a08301516040519081528935906000805160206128c98339815191529060200160405180910390a2610777565b8781600001600082825461076a91906127e7565b909155505060a083015182555b336000908152600385016020526040902060018101546101208501819052610100850151106107bf578781556101008401516107b49060016127fa565b6101208501526107d9565b878160000160008282546107d391906127fa565b90915550505b6107ec846080015185610120015161141c565b60018201558454889086906000906108059084906127fa565b909155505060408051908b0135908b359033907f9d7ab6bb30c003ae7d5b583911db0ada7a9e51b0b4ac7ac1bb5e6896e82e4dbe9061084b908c908f908f908e90612670565b60405180910390a45050505050945094509450949050565b6000806000836020013560000361088d5760405163162908e360e11b815260040160405180910390fd5b83356000908152602088815260408083203384526003810183528184206001810154835160e081018552868152948501869052928401859052606084018590526080840185905260a0840185905260c0840194909452929181846002015410156108f957825460208201525b806020015160000361091e57604051639b0e91e160e01b815260040160405180910390fd5b6020880135815261092f8835610faa565b60808201528354604082015260018401546060820152873560a082015261010089013560c082015260006109638b8361120b565b919950975090506109788b60608c01356113eb565b9550600061098e8a604001358c60a001356113ff565b9050868111806109b4575060608b0135158015906109b457506120008c01548b60600135115b156109d25760405163444507e160e01b815260040160405180910390fd5b60008884604001516109e491906127e7565b9050836060015160001480156109f8575082155b8015610a0357508015155b15610a3b57600087554260028801556040518181528b35906000805160206128c98339815191529060200160405180910390a2610a58565b88866000016000828254610a4f91906127e7565b90915550508087555b6040518b359033907f0130a7b525bd6b1e72def1ee0b77f3467028a0e958e30174a0c95eb3860fc2219061037d908e908e908e90612615565b60008083600003610ab55760405163162908e360e11b815260040160405180910390fd5b610ac28787878787611433565b915091509550959350505050565b600082600003610af35760405163162908e360e11b815260040160405180910390fd5b811580610b015750611cdc82115b15610b1f576040516363df817160e01b815260040160405180910390fd5b6000610b2b8584611643565b90506000610b3884610faa565b6000858152602089905260409020909150610b56903384888561165c565b925082600003610b795760405163955a8bf560e01b815260040160405180910390fd5b5050949350505050565b600082600003610ba65760405163162908e360e11b815260040160405180910390fd5b6000828152602086905260409020600181015480851115610bda57604051633a23d82560e01b815260040160405180910390fd5b6000610be585610faa565b83549091506000610bf68988611643565b9050610c078483838b8760016116e6565b955085600003610c2a5760405163955a8bf560e01b815260040160405180910390fd5b3360009081526003860160205260408120600181015460028801549192911015610c52575080545b801580610c5e57508088115b15610c7c5760405163955a8bf560e01b815260040160405180910390fd5b610c8688856127e7565b935083158015610c94575082155b15610c9d578599505b610ca78a876127e7565b60018801819055955085158015610cbc575082155b8015610cc757508315155b15610cfe576000875542600288015560405184815289906000805160206128c98339815191529060200160405180910390a2610d1b565b87826000016000828254610d1291906127e7565b90915550508387555b50505050505050949350505050565b60008080808087875b8887108015610d4157508185105b15610dd8578a8a86818110610d5857610d5861280d565b90506020020135935087841115610d82576040516339cf269160e21b815260040160405180910390fd5b610d908d8d60018488611433565b5092506000839003610db55760405163162908e360e11b815260040160405180910390fd5b610dbf83886127fa565b9650610dcb83826127e7565b9050846001019450610d33565b888714610e3e576000610deb8d8a611643565b90506000610df88a610faa565b9050610e188f60008c815260200190815260200160002033848c8561165c565b975087600003610e3b5760405163955a8bf560e01b815260040160405180910390fd5b50505b5050505050965096945050505050565b6000610e5982612823565b9150600183836120018110610e7057610e7061280d565b0154915060008060005b858416600003610ef257610e8e84876127e7565b925086836120018110610ea357610ea361280d565b015491508661200101836120018110610ebe57610ebe61280d565b0154905080600003610ed05781610eda565b610eda8183610f6f565b610ee490866127e7565b9450600184901b9350610e7a565b5050505092915050565b6000610f0782612823565b9150670de0b6b3a764000090505b6120008211610f695760008361200101836120018110610f3757610f3761280d565b015490508015610f4e57610f4b8282610f6f565b91505b610f578361172a565b610f6190846127fa565b925050610f15565b92915050565b6000670de0b6b3a7640000610f85600282612852565b610f8f8486612874565b610f9991906127fa565b610fa39190612852565b9392505050565b600080610fb98361103c61288b565b9050610c9f19811280610fcd575061103c81135b15610feb57604051637edf443b60e11b815260040160405180910390fd5b610fa3611010610ffa8361174b565b61100b670df27a2cdf4480006117db565b6118bf565b611984565b6000610f6982683b5c2d7a70fcbc00006110a2565b600084158015611038575086155b15611044575082611098565b85600003611053575082611098565b61109586611069670de0b6b3a764000087612874565b611073868b612874565b611085670de0b6b3a76400008a612874565b61108f91906127fa565b85611a1b565b90505b9695505050505050565b6000816110b0600282612852565b610f8f670de0b6b3a764000086612874565b806000036110e35760405163162908e360e11b815260040160405180910390fd5b6110ec82612823565b915060008060005b612000851161119257858561200181106111105761111061280d565b01549250856120010185612001811061112b5761112b61280d565b0154915061113984846127fa565b905081156111625761114b8383610f6f565b6111558284610f6f565b61115f91906127e7565b93505b80868661200181106111765761117661280d565b01556111818561172a565b61118b90866127fa565b94506110f4565b505050505050565b80156111ef576001600160a01b03821660009081526003850160205260409020600181015484106111cd578181556111e7565b818160000160008282546111e191906127fa565b90915550505b426001909101555b50505050565b60006112018383611a78565b5090949350505050565b60008060008061121f868660a00151610e4e565b9050806000036112425760405163bb55fd2760e01b815260040160405180910390fd5b6000611252878760a00151610efc565b905060006112608383610f6f565b9050600061128388606001518960400151848b602001518c608001516000611b68565b9050600082896000015110801561129a5750885182115b156112e457886000015197506112c189606001518a60400151858b8d60800151600161102a565b96506112d1878a60200151611bcd565b96506112dd88856110a2565b9050611355565b818310156113245782975061130a89606001518a60400151858b8d60800151600161102a565b965061131a878a60200151611bcd565b9650849050611355565b8860200151965061134689606001518a60400151858a8d608001516000611b68565b975061135288856110a2565b90505b88604001518703611367578297508490505b61137188846127e7565b9250821580159061138557508860c0015183105b15'... 11054 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel\'s lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don\'t need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.\'s \\"Hacker\'s Delight\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\"msb\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // ‚Üí `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // ‚Üí `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton\'s method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result'... 253212 more characters
  }
}
2024-01-08T15:27:27.887Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x61291e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100775760003560e01c80632f9fa1031461007c5780633806e8ef146100b457806350865720146100e457806380f2fcd014610104578063ba9784e814610139578063bf2980c714610167578063fd4682de14610187575b600080fd5b81801561008857600080fd5b5061009c6100973660046125c1565b6101a7565b6040516100ab93929190612615565b60405180910390f35b8180156100c057600080fd5b506100d46100cf36600461262b565b610396565b6040516100ab9493929190612670565b8180156100f057600080fd5b5061009c6100ff36600461268b565b610863565b81801561011057600080fd5b5061012461011f3660046126d0565b610a91565b604080519283526020830191909152016100ab565b81801561014557600080fd5b5061015961015436600461270b565b610ad0565b6040519081526020016100ab565b81801561017357600080fd5b5061015961018236600461270b565b610b83565b81801561019357600080fd5b506101246101a236600461273d565b610d2a565b60008080833581036101cc5760405163162908e360e11b815260040160405180910390fd5b602084013515806101e25750611cdc8460200135115b15610200576040516363df817160e01b815260040160405180910390fd5b6020808501356000908152908890526040902060028101544281036102385760405163c1e4c5f760e01b815260040160405180910390fd5b6000610248898860200135610e4e565b9050600061025a8a8960200135610efc565b905060006102688284610f6f565b905060006102798a60200135610faa565b90506102a48a3561028d60e08e0135611015565b61029f90670de0b6b3a76400006127e7565b610f6f565b97506102bd86600101548760000154848b85600061102a565b9850886000036102e05760405163955a8bf560e01b815260040160405180910390fd5b6102f88c8b602001356102f38b876110a2565b6110c2565b6103048686338c61119a565b8886600001600082825461031891906127fa565b909155506000905061032e8d60608e01356111f5565b905061033981610faa565b97508a60200135336001600160a01b03167f8b24a9808cf05d3d8e48ac09e4f649054994a88cfa657b3f4bf340b62137df1e8b8d8c60405161037d93929190612615565b60405180910390a3505050505050509450945094915050565b600080808060408501358535036103c0576040516343c7e10b60e01b815260040160405180910390fd5b856101000135856020013510156103ea576040516345b3f65d60e01b815260040160405180910390fd5b604085013515806104005750611cdc8560400135115b1561041e576040516363df817160e01b815260040160405180910390fd5b60008860008760400135815260200190815260200160002090506104aa604051806101c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600282015461010082018190524290036104d75760405163c1e4c5f760e01b815260040160405180910390fd5b8635600081815260208c8152604080832033845260038101909252909120909161050090610faa565b83526001808301546020850152825460408086019190915290820154608085015261052d908a0135610faa565b60e084015260808301516002830154101561054a57805460608401525b6105a38b6040518060e001604052808c602001358152602001866060015181526020018660400151815260200186602001518152602001866000015181526020018c6000013581526020018d610100013581525061120b565b60c0860152985095506040890135893510156105cd576105ca8661028d8c60e00135611015565b95505b6105db8b8a60400135610e4e565b6101408401526105ef8b60408b0135610efc565b610180840181905261014084015161060691610f6f565b61016084018190526001850154855460e086015161062893908a90600061102a565b96508660000361064b5760405163955a8bf560e01b815260040160405180910390fd5b6106638b8a604001356102f3898761018001516110a2565b6106718b8b606001356113eb565b945061068589606001358b60a001356113ff565b6101a0840152604089013589351080156106c3575084836101a0015111806106c3575060608a0135158015906106c357506120008b01548a60600135115b156106e15760405163444507e160e01b815260040160405180910390fd5b8783604001516106f191906127e7565b60a0840152602083015115801561070a575060c0830151155b8015610719575060a083015115155b15610756576000825542600283015560a08301516040519081528935906000805160206128c98339815191529060200160405180910390a2610777565b8781600001600082825461076a91906127e7565b909155505060a083015182555b336000908152600385016020526040902060018101546101208501819052610100850151106107bf578781556101008401516107b49060016127fa565b6101208501526107d9565b878160000160008282546107d391906127fa565b90915550505b6107ec846080015185610120015161141c565b60018201558454889086906000906108059084906127fa565b909155505060408051908b0135908b359033907f9d7ab6bb30c003ae7d5b583911db0ada7a9e51b0b4ac7ac1bb5e6896e82e4dbe9061084b908c908f908f908e90612670565b60405180910390a45050505050945094509450949050565b6000806000836020013560000361088d5760405163162908e360e11b815260040160405180910390fd5b83356000908152602088815260408083203384526003810183528184206001810154835160e081018552868152948501869052928401859052606084018590526080840185905260a0840185905260c0840194909452929181846002015410156108f957825460208201525b806020015160000361091e57604051639b0e91e160e01b815260040160405180910390fd5b6020880135815261092f8835610faa565b60808201528354604082015260018401546060820152873560a082015261010089013560c082015260006109638b8361120b565b919950975090506109788b60608c01356113eb565b9550600061098e8a604001358c60a001356113ff565b9050868111806109b4575060608b0135158015906109b457506120008c01548b60600135115b156109d25760405163444507e160e01b815260040160405180910390fd5b60008884604001516109e491906127e7565b9050836060015160001480156109f8575082155b8015610a0357508015155b15610a3b57600087554260028801556040518181528b35906000805160206128c98339815191529060200160405180910390a2610a58565b88866000016000828254610a4f91906127e7565b90915550508087555b6040518b359033907f0130a7b525bd6b1e72def1ee0b77f3467028a0e958e30174a0c95eb3860fc2219061037d908e908e908e90612615565b60008083600003610ab55760405163162908e360e11b815260040160405180910390fd5b610ac28787878787611433565b915091509550959350505050565b600082600003610af35760405163162908e360e11b815260040160405180910390fd5b811580610b015750611cdc82115b15610b1f576040516363df817160e01b815260040160405180910390fd5b6000610b2b8584611643565b90506000610b3884610faa565b6000858152602089905260409020909150610b56903384888561165c565b925082600003610b795760405163955a8bf560e01b815260040160405180910390fd5b5050949350505050565b600082600003610ba65760405163162908e360e11b815260040160405180910390fd5b6000828152602086905260409020600181015480851115610bda57604051633a23d82560e01b815260040160405180910390fd5b6000610be585610faa565b83549091506000610bf68988611643565b9050610c078483838b8760016116e6565b955085600003610c2a5760405163955a8bf560e01b815260040160405180910390fd5b3360009081526003860160205260408120600181015460028801549192911015610c52575080545b801580610c5e57508088115b15610c7c5760405163955a8bf560e01b815260040160405180910390fd5b610c8688856127e7565b935083158015610c94575082155b15610c9d578599505b610ca78a876127e7565b60018801819055955085158015610cbc575082155b8015610cc757508315155b15610cfe576000875542600288015560405184815289906000805160206128c98339815191529060200160405180910390a2610d1b565b87826000016000828254610d1291906127e7565b90915550508387555b50505050505050949350505050565b60008080808087875b8887108015610d4157508185105b15610dd8578a8a86818110610d5857610d5861280d565b90506020020135935087841115610d82576040516339cf269160e21b815260040160405180910390fd5b610d908d8d60018488611433565b5092506000839003610db55760405163162908e360e11b815260040160405180910390fd5b610dbf83886127fa565b9650610dcb83826127e7565b9050846001019450610d33565b888714610e3e576000610deb8d8a611643565b90506000610df88a610faa565b9050610e188f60008c815260200190815260200160002033848c8561165c565b975087600003610e3b5760405163955a8bf560e01b815260040160405180910390fd5b50505b5050505050965096945050505050565b6000610e5982612823565b9150600183836120018110610e7057610e7061280d565b0154915060008060005b858416600003610ef257610e8e84876127e7565b925086836120018110610ea357610ea361280d565b015491508661200101836120018110610ebe57610ebe61280d565b0154905080600003610ed05781610eda565b610eda8183610f6f565b610ee490866127e7565b9450600184901b9350610e7a565b5050505092915050565b6000610f0782612823565b9150670de0b6b3a764000090505b6120008211610f695760008361200101836120018110610f3757610f3761280d565b015490508015610f4e57610f4b8282610f6f565b91505b610f578361172a565b610f6190846127fa565b925050610f15565b92915050565b6000670de0b6b3a7640000610f85600282612852565b610f8f8486612874565b610f9991906127fa565b610fa39190612852565b9392505050565b600080610fb98361103c61288b565b9050610c9f19811280610fcd575061103c81135b15610feb57604051637edf443b60e11b815260040160405180910390fd5b610fa3611010610ffa8361174b565b61100b670df27a2cdf4480006117db565b6118bf565b611984565b6000610f6982683b5c2d7a70fcbc00006110a2565b600084158015611038575086155b15611044575082611098565b85600003611053575082611098565b61109586611069670de0b6b3a764000087612874565b611073868b612874565b611085670de0b6b3a76400008a612874565b61108f91906127fa565b85611a1b565b90505b9695505050505050565b6000816110b0600282612852565b610f8f670de0b6b3a764000086612874565b806000036110e35760405163162908e360e11b815260040160405180910390fd5b6110ec82612823565b915060008060005b612000851161119257858561200181106111105761111061280d565b01549250856120010185612001811061112b5761112b61280d565b0154915061113984846127fa565b905081156111625761114b8383610f6f565b6111558284610f6f565b61115f91906127e7565b93505b80868661200181106111765761117661280d565b01556111818561172a565b61118b90866127fa565b94506110f4565b505050505050565b80156111ef576001600160a01b03821660009081526003850160205260409020600181015484106111cd578181556111e7565b818160000160008282546111e191906127fa565b90915550505b426001909101555b50505050565b60006112018383611a78565b5090949350505050565b60008060008061121f868660a00151610e4e565b9050806000036112425760405163bb55fd2760e01b815260040160405180910390fd5b6000611252878760a00151610efc565b905060006112608383610f6f565b9050600061128388606001518960400151848b602001518c608001516000611b68565b9050600082896000015110801561129a5750885182115b156112e457886000015197506112c189606001518a60400151858b8d60800151600161102a565b96506112d1878a60200151611bcd565b96506112dd88856110a2565b9050611355565b818310156113245782975061130a89606001518a60400151858b8d60800151600161102a565b965061131a878a60200151611bcd565b9650849050611355565b8860200151965061134689606001518a60400151858a8d608001516000611b68565b975061135288856110a2565b90505b88604001518703611367578297508490505b61137188846127e7565b9250821580159061138557508860c0015183105b156113a3576040516345b3f65d60e01b815260040160405180910390fd5b6113ad81866127e7565b9550866000036113d05760405163955a8bf560e01b815260040160405180910390fd5b6113df8a8a60a0015183611bdd565b50505050509250925092565b6000610fa36113fa84846111f5565b610faa565b6000610fa361140e8484610f6f565b670e6ed27d66680000610f6f565b60008183101561142c5781610fa3565b5090919050565b6000818152602086905260408120600181015482919080830361146957604051633a23d82560e01b815260040160405180910390fd5b3360009081526003830160205260408120600181015460028501549192911015611491575080545b806000036114b257604051639b0e91e160e01b815260040160405180910390fd5b60006114bd88610faa565b855490915060006114ce8d8b611643565b90506114da8b87611bcd565b985060006114ed8784848d8860016116e6565b9050806000036115105760405163955a8bf560e01b815260040160405180910390fd5b84811161151f57809850611550565b84985061152d858b83611caf565b9950896000036115505760405163955a8bf560e01b815260040160405180910390fd5b61155a838a611bcd565b61156490846127e7565b925082158015611572575081155b1561157b578699505b611585878b611bcd565b99506115918a886127e7565b965086158015906115a157508c87105b156115bf576040516345b3f65d60e01b815260040160405180910390fd5b60018801879055861580156115d2575081155b80156115dd57508215155b1561161457600088554260028901556040518381528b906000805160206128c98339815191529060200160405180910390a2611631565b8886600001600082825461162891906127e7565b90915550508288555b50505050505050509550959350505050565b6000610fa36116528484610e4e565b61029f8585610efc565b60028501546000904281036116845760405163c1e4c5f760e01b815260040160405180910390fd5b61169b8760010154886000015487878760006116e6565b9150838760010160008282546116b191906127fa565b90915550508654829088906000906116ca9084906127fa565b909155506116dc90508782888561119a565b5095945050505050565b6000841580156116f4575086155b1561170a576117038484610f6f565b9050611098565b8560000361171c576117038484610f6f565b611095866110698587612874565b6000811561174657611741600019831860016127fa565b821690505b919050565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156117905760405163e608e18b60e01b8152600481018390526024015b60405180910390fd5b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f908213156117cd576040516371f72a3160e01b815260048101839052602401611787565b50670de0b6b3a76400000290565b60008082136118005760405163309fa7dd60e11b815260048101839052602401611787565b6000670de0b6b3a7640000831261181957506001611832565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b6000611847670de0b6b3a76400008505611d5d565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff19810161187157505002919050565b6706f05b59d3b200005b60008113156118b657670de0b6b3a7640000828002059150671bc16d674ec8000082126118ae579384019360019190911d905b60011d61187b565b50505002919050565b6000600160ff1b8314806118d65750600160ff1b82145b156118f457604051630d01a11b60e21b815260040160405180910390fd5b60008060008512611905578461190a565b846000035b91506000841261191a578361191f565b836000035b9050600061192d8383611e3b565b90506001600160ff1b0381111561195a5760405163bf79e8d960e01b815260048101829052602401611787565b6000198087139086138082186001146119735782611978565b826000035b98975050505050505050565b6000808212156119d75768033dd1780914b97114198212156119a857506000919050565b6119b482600003611984565b6a0c097ce7bc90715b34b9f160241b816119d0576119d061283c565b0592915050565b680a688906bd8b0000008212611a035760405163e69458f960e01b815260048101839052602401611787565b670de0b6b3a7640000604083901b04610fa381611f01565b600080611a29868686611caf565b90506001836002811115611a3f57611a3f6128b2565b148015611a5c575060008480611a5757611a5761283c565b868809115b15611a6f57611a6c6001826127fa565b90505b95945050505050565b60008080611000670de0b6b3a764000082808080805b8615611b5a57611a9e878b6127fa565b93508b846120018110611ab357611ab361280d565b015492508b61200101846120018110611ace57611ace61280d565b0154915081600003611ae957611ae48684610f6f565b611b0b565b611b0b611af68388612874565b846a0c097ce7bc90715b34b9f160241b611caf565b611b1590866127fa565b90508a811015611b3457611cdc8411611b2f578399508094505b611b4e565b8115611b4757611b448683612593565b95505b8098508597505b600187901c9650611a8e565b505050505050509250925092565b600084158015611b76575086155b15611b82575082611098565b85600003611b91575082611098565b611095611b9e8489612874565b611bb0670de0b6b3a764000088612874565b611bba91906127fa565b8561108f670de0b6b3a76400008a612874565b60008183111561142c5781610fa3565b80600003611bfe5760405163162908e360e11b815260040160405180910390fd5b611c0782612823565b91505b6120008211611caa5760008184846120018110611c2957611c2961280d565b016000828254611c3991906127e7565b925050819055905060008461200101846120018110611c5a57611c5a61280d565b015490508015611c8e57611c6e8282610f6f565b611c81611c7b85856127fa565b83610f6f565b611c8b91906127e7565b92505b611c978461172a565b611ca190856127fa565b93505050611c0a565b505050565b6000808060001985870985870292508281108382030391505080600003611ce957838281611cdf57611cdf61283c565b0492505050610fa3565b808411611cf557600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b8210611d7d57608091821c91611d7a90826127fa565b90505b600160401b8210611d9b57604091821c91611d9890826127fa565b90505b600160201b8210611db957602091821c91611db690826127fa565b90505b620100008210611dd657601091821c91611dd390826127fa565b90505b6101008210611df257600891821c91611def90826127fa565b90505b60108210611e0d57600491821c91611e0a90826127fa565b90505b60048210611e2857600291821c91611e2590826127fa565b90505b6002821061174657610f696001826127fa565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110611e7f5760405163698d9a0160e11b815260048101829052602401611787565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff8211905082600003611ebd5780670de0b6b3a7640000850401945050505050610f69565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615611f215768016a09e667f3bcc9090260401c5b6001603e1b821615611f3c576801306fe0a31b7152df0260401c5b6001603d1b821615611f57576801172b83c7d517adce0260401c5b6001603c1b821615611f725768010b5586cf9890f62a0260401c5b6001603b1b821615611f8d576801059b0d31585743ae0260401c5b6001603a1b821615611fa857680102c9a3e778060ee70260401c5b600160391b821615611fc35768010163da9fb33356d80260401c5b600160381b821615611fde57680100b1afa5abcbed610260401c5b600160371b821615611ff95768010058c86da1c09ea20260401c5b600160361b821615612014576801002c605e2e8cec500260401c5b600160351b82161561202f57680100162f3904051fa10260401c5b600160341b82161561204a576801000b175effdc76ba0260401c5b600160331b82161561206557680100058ba01fb9f96d0260401c5b600160321b8216156120805768010002c5cc37da94920260401c5b600160311b82161561209b576801000162e525ee05470260401c5b600160301b8216156120b65768010000b17255775c040260401c5b6001602f1b8216156120d1576801000058b91b5bc9ae0260401c5b6001602e1b8216156120ec57680100002c5c89d5ec6d0260401c5b6001602d1b8216156121075768010000162e43f4f8310260401c5b6001602c1b82161561212257680100000b1721bcfc9a0260401c5b6001602b1b82161561213d5768010000058b90cf1e6e0260401c5b6001602a1b821615612158576801000002c5c863b73f0260401c5b600160291b82161561217357680100000162e430e5a20260401c5b600160281b82161561218e576801000000b1721835510260401c5b600160271b8216156121a957680100000058b90c0b490260401c5b600160261b8216156121c45768010000002c5c8601cc0260401c5b600160251b8216156121df576801000000162e42fff00260401c5b600160241b8216156121fa5768010000000b17217fbb0260401c5b600160231b821615612215576801000000058b90bfce0260401c5b600160221b82161561223057680100000002c5c85fe30260401c5b600160211b82161561224b5768010000000162e42ff10260401c5b600160201b82161561226657680100000000b17217f80260401c5b63800000008216156122815768010000000058b90bfc0260401c5b634000000082161561229c576801000000002c5c85fe0260401c5b63200000008216156122b757680100000000162e42ff0260401c5b63100000008216156122d2576801000000000b17217f0260401c5b63080000008216156122ed57680100000000058b90c00260401c5b63040000008216156123085768010000000002c5c8600260401c5b6302000000821615612323576801000000000162e4300260401c5b630100000082161561233e5768010000000000b172180260401c5b62800000821615612358576801000000000058b90c0260401c5b6240000082161561237257680100000000002c5c860260401c5b6220000082161561238c5768010000000000162e430260401c5b621000008216156123a657680100000000000b17210260401c5b620800008216156123c05768010000000000058b910260401c5b620400008216156123da576801000000000002c5c80260401c5b620200008216156123f457680100000000000162e40260401c5b6201000082161561240d5761b172600160401b010260401c5b618000821615612425576158b9600160401b010260401c5b61400082161561243d57612c5d600160401b010260401c5b6120008216156124555761162e600160401b010260401c5b61100082161561246d57610b17600160401b010260401c5b6108008216156124855761058c600160401b010260401c5b61040082161561249d576102c6600160401b010260401c5b6102008216156124b557610163600160401b010260401c5b6101008216156124cc5760b1600160401b010260401c5b60808216156124e2576059600160401b010260401c5b60408216156124f857602c600160401b010260401c5b602082161561250e576016600160401b010260401c5b601082161561252457600b600160401b010260401c5b600882161561253a576006600160401b010260401c5b6004821615612550576003600160401b010260401c5b6002821615612566576001600160401b010260401c5b600182161561257c576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6000670de0b6b3a7640000610f998385612874565b600061012082840312156125bb57600080fd5b50919050565b6000806000808486036101a08112156125d957600080fd5b85359450602086013593506125f187604088016125a8565b9250604061015f198201121561260657600080fd5b50929591945092610160019150565b9283526020830191909152604082015260600190565b6000806000808486036101e081121561264357600080fd5b853594506020860135935061265b87604088016125a8565b9250608061015f198201121561260657600080fd5b93845260208401929092526040830152606082015260800190565b6000806000808486036101c08112156126a357600080fd5b85359450602086013593506126bb87604088016125a8565b9250606061015f198201121561260657600080fd5b600080600080600060a086880312156126e857600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000806000806080858703121561272157600080fd5b5050823594602084013594506040840135936060013592509050565b60008060008060008060a0878903121561275657600080fd5b863595506020870135945060408701356001600160401b038082111561277b57600080fd5b818901915089601f83011261278f57600080fd5b81358181111561279e57600080fd5b8a60208260051b85010111156127b357600080fd5b979a9699505060200196606081013595608090910135945092505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610f6957610f696127d1565b80820180821115610f6957610f696127d1565b634e487b7160e01b600052603260045260246000fd5b600060018201612835576128356127d1565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261286f57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610f6957610f696127d1565b81810360008312801583831316838312821617156128ab576128ab6127d1565b5092915050565b634e487b7160e01b600052602160045260246000fdfe30ee43613aaa48d222b158aab1123c5a29d452f8b1a849e5f815dd355923ba85a2646970667358221220f6f155bc3a84941d9680d8ae67910223a1405b8e066e330927dd3840af570a1d64736f6c63430008120033","args":[],"salt":"AJNA","value":[]}
2024-01-08T15:27:27.890Z cannon:builder:runtime resolve artifact PoolCommons
2024-01-08T15:27:27.890Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:27:37.166Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/PoolCommons.sol': 'PoolCommons' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol': {
      keccak256: '0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol': {
      keccak256: '0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol': {
      keccak256: '0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Address.sol': {
      keccak256: '0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathUD60x18.sol': {
      keccak256: '0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/PoolCommons.sol': {
      keccak256: '0x1dd40766b71468dade905c41a90783dad18761fe998f1a85acd79e8a0bb32ed3',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:27:37.168Z cannon:cli:foundry evm version paris
2024-01-08T15:27:37.174Z cannon:builder:runtime reported contract artifact PoolCommons {
  contractName: 'PoolCommons',
  sourceName: 'src/libraries/external/PoolCommons.sol',
  abi: [
    {
      type: 'function',
      name: 'debtInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'lenderInterestMargin',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'pure'
    },
    {
      type: 'function',
      name: 'pendingInflator',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'pendingInterestFactor',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'pure'
    },
    {
      type: 'event',
      name: 'Flashloan',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'ResetInterestRate',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'UpdateInterestRate',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'BucketPriceOutOfBounds', inputs: [] },
    { type: 'error', name: 'FlashloanCallbackFailed', inputs: [] },
    { type: 'error', name: 'FlashloanIncorrectBalance', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__CeilOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__ExpInputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathUD60x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathUD60x18__ExpInputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathUD60x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'PRBMath__MulDivOverflow', inputs: [Array] }
  ],
  bytecode: ''... 13186 more characters,
  deployedBytecode: ''... 13070 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller\'s account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender\'s allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller\'s\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account\'s ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn\'t\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``\'s tokens,\\n     * given ``owner``\'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``\'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``\'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\"../IERC20.sol\\";\\nimport \\"../extensions/draft-IERC20Permit.sol\\";\\nimport \\"../../../utils/Address.sol\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // \'safeIncreaseAllowance\' and \'safeDecreaseAllowance\'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\"SafeERC20: approve from non-zero to non-zero allowance\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\"SafeERC20: decreased allowance below zero\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\"SafeERC20: permit did not succeed\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity\'s return data size checking mechanism, since\\n        // we\'re implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\"SafeERC20: low-level call failed\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\"SafeERC20: ERC20 operation'... 289109 more characters
  }
}
2024-01-08T15:27:37.175Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x612d0e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100825760003560e01c80630cbcb4cd146100875780635676e1ff146100ad57806378792ff1146100cf5780639b5bef86146100e2578063d3f2b14a14610110578063edf6fdf614610130578063f6eb5f8514610143578063fc99bab014610176575b600080fd5b61009a6100953660046124a4565b610189565b6040519081526020015b60405180910390f35b8180156100b957600080fd5b506100cd6100c836600461255a565b6101b5565b005b61009a6100dd36600461261e565b610669565b8180156100ee57600080fd5b506101026100fd36600461264a565b61069a565b6040516100a492919061269f565b81801561011c57600080fd5b506100cd61012b3660046126c2565b6107ec565b61009a61013e366004612760565b610a26565b610156610151366004612843565b610a31565b6040805194855260208501939093529183015260608201526080016100a4565b61009a610184366004612760565b610aaf565b60006101ac6301e1338061019d848661291c565b6101a79190612949565b610ac3565b90505b92915050565b61022e604051806101e001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b84548152600185015460208083019190915260028601546040808401919091526003808801546060850152600488015461012085015288015460808401528401519084015161027d919061295d565b6101c0820181905260a08401516102949190610b1e565b8160c00181815250506102c86102be858560400151846101c001518760a001518660800151610b52565b8260c00151610bde565b8160a00181815250506102e38360a001518260800151610b1e565b60e08201526101c08101516102f9908390610b1e565b61010082015261012081015142146104f3578061012001516000036103435760c0810151815260a0810151602082015260e0810151604082015261010081015160608201526104ca565b61035f81610120015142610357919061295d565b610e10610bf5565b61014082018190526103839061037e9066cd367959873bd81990610c15565b610cda565b6101608201526101408101516103a69061037e90661d50ecc3a59ad51990610c15565b6101808201526101608101516103d2906103c890670de0b6b3a7640000612970565b8760010154610c15565b6103e58261016001518360000151610c15565b6103ef9190612997565b81526101608101516104179061040d90670de0b6b3a7640000612970565b8760020154610c15565b61042a8261016001518360200151610c15565b6104349190612997565b602082015261018081015161045f9061045590670de0b6b3a7640000612970565b8760040154610c15565b6104728261018001518360400151610c15565b61047c9190612997565b60408201526101808101516104a79061049d90670de0b6b3a7640000612970565b8760050154610c15565b6104ba8261018001518360600151610c15565b6104c49190612997565b60608201525b805185556020810151600186015560408101516002860155606081015160038601554260048601555b67016345785d8a00008360e00151118015610522575061051e816020015166b1a2bc2ec50000610b1e565b8151105b156105845767016345785d8a0000600160d01b4265ffffffffffff16028117875560e08401516040517f20ae1d4a2e8d297f3820670c20fc79531e31643d4b201892680e7df3c4ab159992610577929161269f565b60405180910390a1610637565b855461a8c0906105a390600160d01b900465ffffffffffff164261295d565b1115610637576105c6838260000151836020015184604001518560600151610d4a565b6101a0820181905260e084015114610637576101a081015165ffffffffffff4216600160d01b026001600160d01b03821617875560e08401516040517f2463616ef8e6f9bddf00e4964b853ad9050f87cd3c73985d2ee6b6c8a83369919261062e929161269f565b60405180910390a15b60c0810151600187015560a0810151600287015560e08101516004870155610100015160059095019490945550505050565b60006106908461068b6301e13380610681874261295d565b61019d908761291c565b610b1e565b90505b9392505050565b600080806106b46301e1338061019d8660e08a013561291c565b90506106c48660a0013582610b1e565b925060006106d6868860a00135610edd565b905060006b033f4a75fb6ff29166751a4b8211156106f657506001610718565b64173eb4c80a82101561070c5750611cdc610718565b61071582610efa565b90505b60006107288a8a60600135610fc4565b905081811115610736578091505b60006107428b84610fda565b905080156107dd576107866107676107628e600001548f600101546110e5565b6110f7565b61068b61077c670de0b6b3a76400008961295d565b8d60600135610b1e565b95506000670de0b6b3a76400006107c46107a089856111a1565b6107bf6107b5670de0b6b3a76400008b61295d565b61068b600a6111b6565b6111ca565b6107ce91906129bf565b90506107db8c85836111da565b505b50505050509550959350505050565b6040516370a0823160e01b815284906000906001600160a01b038316906370a082319061081d9030906004016129d2565b602060405180830381865afa15801561083a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085e91906129e6565b90506108746001600160a01b038316888761137d565b6040516323e30c8b60e01b81527f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9906001600160a01b038916906323e30c8b906108cd9033908b908b906000908c908c906004016129ff565b6020604051808303816000875af11580156108ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091091906129e6565b1461092e5760405163f594248f60e01b815260040160405180910390fd5b6109436001600160a01b0383168830886113e5565b6040516370a0823160e01b815281906001600160a01b038416906370a08231906109719030906004016129d2565b602060405180830381865afa15801561098e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b291906129e6565b146109d0576040516370fc723360e01b815260040160405180910390fd5b856001600160a01b0316876001600160a01b03167f6b15284fe89dbd5c436c2e0b06b1bf72e3a0a8e96d1b4a2abd61dfae2d7849a687604051610a1591815260200190565b60405180910390a350505050505050565b60006101af826110f7565b600080600080600087604001519050600087600001516001600160d01b03169050610a7f82610a7a838b6020015165ffffffffffff168b600001516001600160d01b0316610669565b611423565b610a898383611423565b610a978b6020015184611423565b89608001519550955095509550505093509350935093565b60006101af826000015483600101546110e5565b6000680736ea4425c11ac6318210610af65760405163062bb40d60e31b8152600481018390526024015b60405180910390fd5b6714057b7ef767814f8202610693670de0b6b3a76400006706f05b59d3b2000083010461144f565b6000670de0b6b3a7640000610b34600282612949565b610b3e848661291c565b610b4891906129bf565b6101ac9190612949565b600080610b60858585611495565b905080600003610b78576120008701545b9150610bbb565b6b033f4a75fb6ff29166751a4b8110610b945760009150610bbb565b64173eb4c80a8110610bb257610b7187610bad83610efa565b610fda565b61200087015491505b610bc9826107bf8887610b1e565b610bd3908361295d565b979650505050505050565b600081831015610bee57816101ac565b5090919050565b600081610c03600282612949565b610b3e670de0b6b3a76400008661291c565b6000600160ff1b831480610c2c5750600160ff1b82145b15610c4a57604051630d01a11b60e21b815260040160405180910390fd5b60008060008512610c5b5784610c60565b846000035b915060008412610c705783610c75565b836000035b90506000610c8383836114c2565b90506001600160ff1b03811115610cb05760405163bf79e8d960e01b815260048101829052602401610aed565b600019808713908613808218600114610cc95782610cce565b826000035b98975050505050505050565b600068023f2fa8f6da5b9d3119821215610cf657506000919050565b680736ea4425c11ac6318212610d22576040516399bb754160e01b815260048101839052602401610aed565b6714057b7ef767814f8202610693670de0b6b3a76400006706f05b59d3b20000830105611588565b60008060008760600151600014610d8f57610d6587876110e5565b9150670de0b6b3a7640000610d82670e27c49886e6000084612a5b565b610d8c9190612a8b565b90505b600084600003610da757670de0b6b3a7640000610db1565b610db18686610bf5565b60e08a015194509050670de0b6b3a76400006002633b9aca0082610dd58686612997565b610ddf9190612970565b610de99190612a8b565b610df39190612bee565b610dfd9190612970565b610e078383612970565b610e12906004612a5b565b1215610e3557610e2e8960e00151670f43fc2c04ee0000610b1e565b9350610eb3565b6002633b9aca00670de0b6b3a7640000610e4f8685612997565b610e599190612970565b610e639190612a8b565b610e6d9190612bee565b610e7f90670de0b6b3a7640000612970565b610e898483612970565b610e94906004612a5b565b1315610eb357610eb08960e00151670c7d713b49da0000610b1e565b93505b610ed0673782dace9d9000006107bf66038d7ea4c6800087610bde565b9998505050505050505050565b60006101ac610eec8484610b1e565b670e6ed27d66680000610b1e565b600064173eb4c80a821080610f1a57506b033f4a75fb6ff29166751a4b82115b15610f3857604051635665ba4560e11b815260040160405180910390fd5b6000610f5c610f468461160c565b610f57670df27a2cdf44800061160c565b6116f0565b90506000610f69826117b6565b9050600082128015610f8b57506706f05b59d3b20000610f898383612970565b135b15610fae57610fa6670de0b6b3a7640000820561103d612970565b949350505050565b610fa6670de0b6b3a7640000820561103c612970565b6000610fd08383611824565b5090949350505050565b6000610fe582612bfd565b9150670de0b6b3a7640000612000600080610fff86611914565b905060005b8184106110da5761101584846129bf565b90506120008111611004576000886120010182612001811061103957611039612c16565b01549050878516156110ba5760008983612001811061105a5761105a612c16565b0154905081600003611075576110708782610b1e565b611097565b611097611082838961291c565b826a0c097ce7bc90715b34b9f160241b611933565b6110a190896129bf565b97508294508885036110b45750506110da565b506110cd565b80156110cd576110ca86826119e2565b95505b600185901c945050611004565b505050505092915050565b600081156101af576101ac8383610bf5565b60008061110c83670de0b6b3a76400006111ca565b61111990620f424061291c565b61112d9069d3c21bcecceda100000061295d565b9050670de0b6b3a764000081101561114f5750670de0b6b3a764000092915050565b6000611163826704a03ce68d2155566119f7565b905061118961117a82670214e8348c4f0000610b1e565b68056bc75e2d63100000610bf5565b610fa690670de0b6b3a764000061295d565b50919050565b600081610b48670de0b6b3a76400008561291c565b60006101af670de0b6b3a76400008361291c565b600081831115610bee57816101ac565b6111e382612bfd565b91506000806000806111f486611914565b90505b612000811161137457808616156112e5578686612001811061121b5761121b612c16565b01549250866120010186612001811061123657611236612c16565b01549150811561129857600061124c8684610b1e565b90506112588385610b1e565b6112628286610b1e565b61126c919061295d565b61127690866129bf565b945080886120010188612001811061129057611290612c16565b0155506112d4565b826112a38685610b1e565b6112ad919061295d565b6112b790856129bf565b93508487612001018761200181106112d1576112d1612c16565b01555b6112de818761295d565b955061136c565b60006112f182886129bf565b9050848882612001811061130757611307612c16565b01600082825461131791906129bf565b9250508190559350876120010181612001811061133657611336612c16565b01549250821561136a5761135361134d868661295d565b84610b1e565b61135d8585610b1e565b611367919061295d565b94505b505b60011b6111f7565b50505050505050565b6040516001600160a01b0383166024820152604481018290526113e090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611a39565b505050565b6040516001600160a01b038085166024830152831660448201526064810182905261141d9085906323b872dd60e01b906084016113a9565b50505050565b6000670de0b6b3a764000060018161143b858761291c565b61144591906129bf565b610b48919061295d565b6000680a688906bd8b000000821061147d57604051634a4f26f160e01b815260048101839052602401610aed565b670de0b6b3a7640000604083901b0461069381611b0b565b600083156114b8576114b36114ad610eec8585610b1e565b85610bf5565b610690565b5060009392505050565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106115065760405163698d9a0160e11b815260048101829052602401610aed565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff82119050826000036115445780670de0b6b3a76400008504019450505050506101af565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b6000808212156115db5768033dd1780914b97114198212156115ac57506000919050565b6115b882600003611588565b6a0c097ce7bc90715b34b9f160241b816115d4576115d4612933565b0592915050565b680a688906bd8b000000821261147d5760405163e69458f960e01b815260048101839052602401610aed565b919050565b60008082136116315760405163309fa7dd60e11b815260048101839052602401610aed565b6000670de0b6b3a7640000831261164a57506001611663565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b6000611678670de0b6b3a7640000850561219d565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff1981016116a257505002919050565b6706f05b59d3b200005b60008113156116e757670de0b6b3a7640000828002059150671bc16d674ec8000082126116df579384019360019190911d905b60011d6116ac565b50505002919050565b6000600160ff1b8314806117075750600160ff1b82145b156117255760405163b3c754a360e01b815260040160405180910390fd5b60008060008512611736578461173b565b846000035b91506000841261174b5783611750565b836000035b9050600061176783670de0b6b3a76400008461227b565b90506001600160ff1b0381111561179457604051637cb4bef560e01b815260048101829052602401610aed565b6000198087139086138082186001146117ad5782610cce565b610cce83612c2c565b6000670afdc366fbc00000600160ff1b038213156117ea57604051635399a28560e11b815260048101839052602401610aed565b670de0b6b3a7640000820760008190036118065782915061119b565b8083039150600083131561119b5750670de0b6b3a764000001919050565b60008080611000670de0b6b3a764000082808080805b86156119065761184a878b6129bf565b93508b84612001811061185f5761185f612c16565b015492508b6120010184612001811061187a5761187a612c16565b0154915081600003611895576118908684610b1e565b6118b7565b6118b76118a2838861291c565b846a0c097ce7bc90715b34b9f160241b611933565b6118c190866129bf565b90508a8110156118e057611cdc84116118db578399508094505b6118fa565b81156118f3576118f086836119e2565b95505b8098508597505b600187901c965061183a565b505050505050509250925092565b600081156116075761192b600019831860016129bf565b909116919050565b600080806000198587098587029250828110838203039150508060000361196d5783828161196357611963612933565b0492505050610693565b80841161197957600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000670de0b6b3a7640000610b48838561291c565b600082600003611a1f578115611a0e576000611a18565b670de0b6b3a76400005b90506101af565b6101ac611a34611a2e856122cf565b84612385565b61144f565b6000611a8e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123919092919063ffffffff16565b8051909150156113e05780806020019051810190611aac9190612c48565b6113e05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610aed565b600160bf1b6001603f1b821615611b2b5768016a09e667f3bcc9090260401c5b6001603e1b821615611b46576801306fe0a31b7152df0260401c5b6001603d1b821615611b61576801172b83c7d517adce0260401c5b6001603c1b821615611b7c5768010b5586cf9890f62a0260401c5b6001603b1b821615611b97576801059b0d31585743ae0260401c5b6001603a1b821615611bb257680102c9a3e778060ee70260401c5b600160391b821615611bcd5768010163da9fb33356d80260401c5b600160381b821615611be857680100b1afa5abcbed610260401c5b600160371b821615611c035768010058c86da1c09ea20260401c5b600160361b821615611c1e576801002c605e2e8cec500260401c5b600160351b821615611c3957680100162f3904051fa10260401c5b600160341b821615611c54576801000b175effdc76ba0260401c5b600160331b821615611c6f57680100058ba01fb9f96d0260401c5b600160321b821615611c8a5768010002c5cc37da94920260401c5b600160311b821615611ca5576801000162e525ee05470260401c5b600160301b821615611cc05768010000b17255775c040260401c5b6001602f1b821615611cdb576801000058b91b5bc9ae0260401c5b6001602e1b821615611cf657680100002c5c89d5ec6d0260401c5b6001602d1b821615611d115768010000162e43f4f8310260401c5b6001602c1b821615611d2c57680100000b1721bcfc9a0260401c5b6001602b1b821615611d475768010000058b90cf1e6e0260401c5b6001602a1b821615611d62576801000002c5c863b73f0260401c5b600160291b821615611d7d57680100000162e430e5a20260401c5b600160281b821615611d98576801000000b1721835510260401c5b600160271b821615611db357680100000058b90c0b490260401c5b600160261b821615611dce5768010000002c5c8601cc0260401c5b600160251b821615611de9576801000000162e42fff00260401c5b600160241b821615611e045768010000000b17217fbb0260401c5b600160231b821615611e1f576801000000058b90bfce0260401c5b600160221b821615611e3a57680100000002c5c85fe30260401c5b600160211b821615611e555768010000000162e42ff10260401c5b600160201b821615611e7057680100000000b17217f80260401c5b6380000000821615611e8b5768010000000058b90bfc0260401c5b6340000000821615611ea6576801000000002c5c85fe0260401c5b6320000000821615611ec157680100000000162e42ff0260401c5b6310000000821615611edc576801000000000b17217f0260401c5b6308000000821615611ef757680100000000058b90c00260401c5b6304000000821615611f125768010000000002c5c8600260401c5b6302000000821615611f2d576801000000000162e4300260401c5b6301000000821615611f485768010000000000b172180260401c5b62800000821615611f62576801000000000058b90c0260401c5b62400000821615611f7c57680100000000002c5c860260401c5b62200000821615611f965768010000000000162e430260401c5b62100000821615611fb057680100000000000b17210260401c5b62080000821615611fca5768010000000000058b910260401c5b62040000821615611fe4576801000000000002c5c80260401c5b62020000821615611ffe57680100000000000162e40260401c5b620100008216156120175761b172600160401b010260401c5b61800082161561202f576158b9600160401b010260401c5b61400082161561204757612c5d600160401b010260401c5b61200082161561205f5761162e600160401b010260401c5b61100082161561207757610b17600160401b010260401c5b61080082161561208f5761058c600160401b010260401c5b6104008216156120a7576102c6600160401b010260401c5b6102008216156120bf57610163600160401b010260401c5b6101008216156120d65760b1600160401b010260401c5b60808216156120ec576059600160401b010260401c5b604082161561210257602c600160401b010260401c5b6020821615612118576016600160401b010260401c5b601082161561212e57600b600160401b010260401c5b6008821615612144576006600160401b010260401c5b600482161561215a576003600160401b010260401c5b6002821615612170576001600160401b010260401c5b6001821615612186576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6000600160801b82106121bd57608091821c916121ba90826129bf565b90505b600160401b82106121db57604091821c916121d890826129bf565b90505b600160201b82106121f957602091821c916121f690826129bf565b90505b62010000821061221657601091821c9161221390826129bf565b90505b610100821061223257600891821c9161222f90826129bf565b90505b6010821061224d57600491821c9161224a90826129bf565b90505b6004821061226857600291821c9161226590826129bf565b90505b60028210611607576101af6001826129bf565b60008080600019858709858702925082811083820303915050806000036122ab5783828161196357611963612933565b838110611979578084604051631dcf306360e21b8152600401610aed92919061269f565b6000670de0b6b3a76400008210156122fd57604051633621413760e21b815260048101839052602401610aed565b6000612312670de0b6b3a7640000840461219d565b670de0b6b3a764000081029250905082811c670de0b6b3a763ffff19810161233b575050919050565b6706f05b59d3b200005b801561237d57670de0b6b3a7640000828002049150671bc16d674ec800008210612375579283019260019190911c905b60011c612345565b505050919050565b60006101ac83836114c2565b6060610690848460008585600080866001600160a01b031685876040516123b89190612c89565b60006040518083038185875af1925050503d80600081146123f5576040519150601f19603f3d011682016040523d82523d6000602084013e6123fa565b606091505b5091509150610bd3878383876060831561247557825160000361246e576001600160a01b0385163b61246e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610aed565b5081610fa6565b610fa6838381511561248a5781518083602001fd5b8060405162461bcd60e51b8152600401610aed9190612ca5565b600080604083850312156124b757600080fd5b50508035926020909101359150565b60405161012081016001600160401b03811182821017156124f757634e487b7160e01b600052604160045260246000fd5b60405290565b604080519081016001600160401b03811182821017156124f757634e487b7160e01b600052604160045260246000fd5b803560ff8116811461160757600080fd5b801515811461254c57600080fd5b50565b80356116078161253e565b60008060008060008587036101a081121561257457600080fd5b86359550602087013594506040870135935061012080605f198301121561259a57600080fd5b6125a26124c6565b91506125b06060890161252d565b82526080880135602083015260a0880135604083015260c0880135606083015260e088013560808301526101008089013560a08401526125f1828a0161254f565b60c084015261014089013560e0840152610160890135908301525094979396509194610180013592915050565b60008060006060848603121561263357600080fd5b505081359360208301359350604090920135919050565b60008060008060008587036101a081121561266457600080fd5b8635955060208701359450610120603f198201121561268257600080fd5b509396929550505060408301926101608101359250610180013590565b918252602082015260400190565b6001600160a01b038116811461254c57600080fd5b6000806000806000608086880312156126da57600080fd5b85356126e5816126ad565b945060208601356126f5816126ad565b93506040860135925060608601356001600160401b038082111561271857600080fd5b818801915088601f83011261272c57600080fd5b81358181111561273b57600080fd5b89602082850101111561274d57600080fd5b9699959850939650602001949392505050565b60006020828403121561277257600080fd5b5035919050565b80356001600160d01b038116811461160757600080fd5b803565ffffffffffff8116811461160757600080fd5b600060e082840312156127b857600080fd5b60405160e081016001600160401b03811182821017156127e857634e487b7160e01b600052604160045260246000fd5b6040529050806127f783612779565b815261280560208401612790565b602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201525092915050565b600080600083850361018081121561285a57600080fd5b606081121561286857600080fd5b604051606081016001600160401b038111828210171561289857634e487b7160e01b600052604160045260246000fd5b604090815286358252602080880135908301528681013582820152909450605f19820112156128c657600080fd5b506128cf6124fd565b6128db60608601612779565b81526128e960808601612790565b602082015291506128fd8560a086016127a6565b90509250925092565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176101af576101af612906565b634e487b7160e01b600052601260045260246000fd5b60008261295857612958612933565b500490565b818103818111156101af576101af612906565b818103600083128015838313168383128216171561299057612990612906565b5092915050565b80820182811260008312801582168215821617156129b7576129b7612906565b505092915050565b808201808211156101af576101af612906565b6001600160a01b0391909116815260200190565b6000602082840312156129f857600080fd5b5051919050565b6001600160a01b03878116825286166020820152604081018590526060810184905260a06080820181905281018290526000828460c0840137600060c0848401015260c0601f19601f8501168301019050979650505050505050565b80820260008212600160ff1b84141615612a7757612a77612906565b81810583148215176101af576101af612906565b600082612a9a57612a9a612933565b600160ff1b821460001984141615612ab457612ab4612906565b500590565b80825b6001808611612acb5750612afe565b6001600160ff1b03829004821115612ae557612ae5612906565b80861615612af257918102915b9490941c938002612abc565b935093915050565b6000828015612b1c5760018114612b2657612b2f565b60019150506101af565b829150506101af565b5081612b3d575060006101af565b50600160008213808214612b56578015612b7557612b8f565b6001600160ff1b03839004831115612b7057612b70612906565b612b8f565b6001600160ff1b03839005831215612b8f57612b8f612906565b5080831615612b9b5750805b612bab8360011c83840283612ab9565b600082136001600160ff1b0382900483111615612bca57612bca612906565b60008212600160ff1b82900583121615612be657612be6612906565b029392505050565b60006101ac60ff841683612b06565b600060018201612c0f57612c0f612906565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000600160ff1b8201612c4157612c41612906565b5060000390565b600060208284031215612c5a57600080fd5b81516106938161253e565b60005b83811015612c80578181015183820152602001612c68565b50506000910152565b60008251612c9b818460208701612c65565b9190910192915050565b6020815260008251806020840152612cc4816040850160208701612c65565b601f01601f1916919091016040019291505056fea264697066735822122050186d9bbcd5ed1cb2ba31057f95fcd48ac431c2d721ed9904431beb0de269d264736f6c63430008120033","args":[],"salt":"AJNA","value":[]}
2024-01-08T15:27:37.176Z cannon:builder comparing states null b778bc53a7f47e601cb98e3e65e510ba
2024-01-08T15:27:37.176Z cannon:builder run isolated contract.PoolCommons
Executing [contract.PoolCommons]...
2024-01-08T15:27:37.177Z cannon:verbose:builder ctx for step contract.PoolCommons {
  package: {},
  timestamp: '1704727545',
  chainId: 10,
  settings: {
    bwAJNA_ADDRESS: '0x6c518f9D1a163379235816c543E62922a79863Fa',
    salt: 'AJNA'
  },
  contracts: {},
  txns: {},
  imports: {},
  extras: {}
}
2024-01-08T15:27:37.177Z cannon:builder:contract exec {
  artifact: 'PoolCommons',
  salt: 'AJNA',
  create2: true,
  from: '',
  nonce: '',
  value: '',
  abi: ''
}
2024-01-08T15:27:37.177Z cannon:builder:runtime resolve artifact PoolCommons
2024-01-08T15:27:37.177Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:27:45.063Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/PoolCommons.sol': 'PoolCommons' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol': {
      keccak256: '0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol': {
      keccak256: '0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol': {
      keccak256: '0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Address.sol': {
      keccak256: '0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathUD60x18.sol': {
      keccak256: '0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/PoolCommons.sol': {
      keccak256: '0x1dd40766b71468dade905c41a90783dad18761fe998f1a85acd79e8a0bb32ed3',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:27:45.064Z cannon:cli:foundry evm version paris
2024-01-08T15:27:45.073Z cannon:builder:runtime reported contract artifact PoolCommons {
  contractName: 'PoolCommons',
  sourceName: 'src/libraries/external/PoolCommons.sol',
  abi: [
    {
      type: 'function',
      name: 'debtInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'lenderInterestMargin',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'pure'
    },
    {
      type: 'function',
      name: 'pendingInflator',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'pendingInterestFactor',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'pure'
    },
    {
      type: 'event',
      name: 'Flashloan',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'ResetInterestRate',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'UpdateInterestRate',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'BucketPriceOutOfBounds', inputs: [] },
    { type: 'error', name: 'FlashloanCallbackFailed', inputs: [] },
    { type: 'error', name: 'FlashloanIncorrectBalance', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__CeilOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__ExpInputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathUD60x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathUD60x18__ExpInputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathUD60x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'PRBMath__MulDivOverflow', inputs: [Array] }
  ],
  bytecode: ''... 13186 more characters,
  deployedBytecode: ''... 13070 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller\'s account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender\'s allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller\'s\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account\'s ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn\'t\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``\'s tokens,\\n     * given ``owner``\'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``\'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``\'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\"../IERC20.sol\\";\\nimport \\"../extensions/draft-IERC20Permit.sol\\";\\nimport \\"../../../utils/Address.sol\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // \'safeIncreaseAllowance\' and \'safeDecreaseAllowance\'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\"SafeERC20: approve from non-zero to non-zero allowance\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\"SafeERC20: decreased allowance below zero\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\"SafeERC20: permit did not succeed\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity\'s return data size checking mechanism, since\\n        // we\'re implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\"SafeERC20: low-level call failed\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\"SafeERC20: ERC20 operation'... 289109 more characters
  }
}
2024-01-08T15:27:45.083Z cannon:cli:rpc eth_chainId

2024-01-08T15:27:45.086Z cannon:cli:rpc eth_getCode

2024-01-08T15:27:45.087Z cannon:builder:contract performing arachnid create2
2024-01-08T15:27:45.089Z cannon:builder:contract create2 address is 0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540
2024-01-08T15:27:45.091Z cannon:cli:rpc eth_chainId

2024-01-08T15:27:45.093Z cannon:cli:rpc eth_getCode

2024-01-08T15:27:45.632Z cannon:cli:rpc anvil_impersonateAccount

2024-01-08T15:27:45.634Z cannon:cli:rpc anvil_setBalance

2024-01-08T15:27:45.636Z cannon:cli:rpc eth_blockNumber

2024-01-08T15:27:45.638Z cannon:cli:rpc eth_chainId

2024-01-08T15:27:45.642Z cannon:cli:rpc eth_chainId

2024-01-08T15:27:45.648Z cannon:cli:rpc eth_estimateGas

2024-01-08T15:27:45.660Z cannon:cli:rpc eth_sendTransaction

2024-01-08T15:27:45.661Z cannon:cli:rpc 
    Transaction: 0x9ee2e160d6eff90f8f284668026974bc66484709a99d7fce7cd7e3f527bdbfb1
    Gas used: 2546476

    Block Number: 114564387
    Block Hash: 0x1bb7c858a67b25f5592dab27b2848612699e539dc3517299d9739fb844966103

2024-01-08T15:27:45.661Z cannon:cli:rpc     Block Time: "Mon, 8 Jan 2024 15:27:43 +0000"


2024-01-08T15:27:45.663Z cannon:cli:rpc eth_chainId

2024-01-08T15:27:45.666Z cannon:cli:rpc eth_getTransactionByHash

2024-01-08T15:27:45.676Z cannon:cli:rpc eth_chainId

2024-01-08T15:27:45.678Z cannon:cli:rpc eth_getTransactionReceipt

2024-01-08T15:27:45.680Z cannon:builder:contract arachnid create2 complete {
  to: '0x4e59b44847b379578588920cA78FbF26c0B4956C',
  from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
  contractAddress: null,
  transactionIndex: 0,
  gasUsed: BigNumber { _hex: '0x26db2c', _isBigNumber: true },
  logsBloom: '0x
  blockHash: '0x1bb7c858a67b25f5592dab27b2848612699e539dc3517299d9739fb844966103',
  transactionHash: '0x9ee2e160d6eff90f8f284668026974bc66484709a99d7fce7cd7e3f527bdbfb1',
  logs: [],
  blockNumber: 114564387,
  confirmations: 1,
  cumulativeGasUsed: BigNumber { _hex: '0x26db2c', _isBigNumber: true },
  effectiveGasPrice: BigNumber { _hex: '0x28f850', _isBigNumber: true },
  status: 1,
  type: 2,
  byzantium: true
}
2024-01-08T15:27:45.680Z cannon:builder:contract contract deployed to address 0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540
  ‚úî Successfully deployed PoolCommons using CREATE2
  Contract Address: 0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540
  Transaction Hash: 0x9ee2e160d6eff90f8f284668026974bc66484709a99d7fce7cd7e3f527bdbfb1
  Transaction Cost: 0.000006837308431808 ETH (2,546,476 gas)

2024-01-08T15:27:45.683Z cannon:builder:runtime resolve artifact PoolCommons
2024-01-08T15:27:45.683Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:27:55.382Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/PoolCommons.sol': 'PoolCommons' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol': {
      keccak256: '0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol': {
      keccak256: '0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol': {
      keccak256: '0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Address.sol': {
      keccak256: '0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathUD60x18.sol': {
      keccak256: '0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/PoolCommons.sol': {
      keccak256: '0x1dd40766b71468dade905c41a90783dad18761fe998f1a85acd79e8a0bb32ed3',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:27:55.384Z cannon:cli:foundry evm version paris
2024-01-08T15:27:55.394Z cannon:builder:runtime reported contract artifact PoolCommons {
  contractName: 'PoolCommons',
  sourceName: 'src/libraries/external/PoolCommons.sol',
  abi: [
    {
      type: 'function',
      name: 'debtInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'lenderInterestMargin',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'pure'
    },
    {
      type: 'function',
      name: 'pendingInflator',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'pendingInterestFactor',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'pure'
    },
    {
      type: 'event',
      name: 'Flashloan',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'ResetInterestRate',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'UpdateInterestRate',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'BucketPriceOutOfBounds', inputs: [] },
    { type: 'error', name: 'FlashloanCallbackFailed', inputs: [] },
    { type: 'error', name: 'FlashloanIncorrectBalance', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__CeilOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__ExpInputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathUD60x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathUD60x18__ExpInputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathUD60x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'PRBMath__MulDivOverflow', inputs: [Array] }
  ],
  bytecode: ''... 13186 more characters,
  deployedBytecode: ''... 13070 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller\'s account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender\'s allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller\'s\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account\'s ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn\'t\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``\'s tokens,\\n     * given ``owner``\'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``\'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``\'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\"../IERC20.sol\\";\\nimport \\"../extensions/draft-IERC20Permit.sol\\";\\nimport \\"../../../utils/Address.sol\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // \'safeIncreaseAllowance\' and \'safeDecreaseAllowance\'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\"SafeERC20: approve from non-zero to non-zero allowance\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\"SafeERC20: decreased allowance below zero\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\"SafeERC20: permit did not succeed\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity\'s return data size checking mechanism, since\\n        // we\'re implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\"SafeERC20: low-level call failed\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\"SafeERC20: ERC20 operation'... 289109 more characters
  }
}
2024-01-08T15:27:55.396Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x612d0e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100825760003560e01c80630cbcb4cd146100875780635676e1ff146100ad57806378792ff1146100cf5780639b5bef86146100e2578063d3f2b14a14610110578063edf6fdf614610130578063f6eb5f8514610143578063fc99bab014610176575b600080fd5b61009a6100953660046124a4565b610189565b6040519081526020015b60405180910390f35b8180156100b957600080fd5b506100cd6100c836600461255a565b6101b5565b005b61009a6100dd36600461261e565b610669565b8180156100ee57600080fd5b506101026100fd36600461264a565b61069a565b6040516100a492919061269f565b81801561011c57600080fd5b506100cd61012b3660046126c2565b6107ec565b61009a61013e366004612760565b610a26565b610156610151366004612843565b610a31565b6040805194855260208501939093529183015260608201526080016100a4565b61009a610184366004612760565b610aaf565b60006101ac6301e1338061019d848661291c565b6101a79190612949565b610ac3565b90505b92915050565b61022e604051806101e001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b84548152600185015460208083019190915260028601546040808401919091526003808801546060850152600488015461012085015288015460808401528401519084015161027d919061295d565b6101c0820181905260a08401516102949190610b1e565b8160c00181815250506102c86102be858560400151846101c001518760a001518660800151610b52565b8260c00151610bde565b8160a00181815250506102e38360a001518260800151610b1e565b60e08201526101c08101516102f9908390610b1e565b61010082015261012081015142146104f3578061012001516000036103435760c0810151815260a0810151602082015260e0810151604082015261010081015160608201526104ca565b61035f81610120015142610357919061295d565b610e10610bf5565b61014082018190526103839061037e9066cd367959873bd81990610c15565b610cda565b6101608201526101408101516103a69061037e90661d50ecc3a59ad51990610c15565b6101808201526101608101516103d2906103c890670de0b6b3a7640000612970565b8760010154610c15565b6103e58261016001518360000151610c15565b6103ef9190612997565b81526101608101516104179061040d90670de0b6b3a7640000612970565b8760020154610c15565b61042a8261016001518360200151610c15565b6104349190612997565b602082015261018081015161045f9061045590670de0b6b3a7640000612970565b8760040154610c15565b6104728261018001518360400151610c15565b61047c9190612997565b60408201526101808101516104a79061049d90670de0b6b3a7640000612970565b8760050154610c15565b6104ba8261018001518360600151610c15565b6104c49190612997565b60608201525b805185556020810151600186015560408101516002860155606081015160038601554260048601555b67016345785d8a00008360e00151118015610522575061051e816020015166b1a2bc2ec50000610b1e565b8151105b156105845767016345785d8a0000600160d01b4265ffffffffffff16028117875560e08401516040517f20ae1d4a2e8d297f3820670c20fc79531e31643d4b201892680e7df3c4ab159992610577929161269f565b60405180910390a1610637565b855461a8c0906105a390600160d01b900465ffffffffffff164261295d565b1115610637576105c6838260000151836020015184604001518560600151610d4a565b6101a0820181905260e084015114610637576101a081015165ffffffffffff4216600160d01b026001600160d01b03821617875560e08401516040517f2463616ef8e6f9bddf00e4964b853ad9050f87cd3c73985d2ee6b6c8a83369919261062e929161269f565b60405180910390a15b60c0810151600187015560a0810151600287015560e08101516004870155610100015160059095019490945550505050565b60006106908461068b6301e13380610681874261295d565b61019d908761291c565b610b1e565b90505b9392505050565b600080806106b46301e1338061019d8660e08a013561291c565b90506106c48660a0013582610b1e565b925060006106d6868860a00135610edd565b905060006b033f4a75fb6ff29166751a4b8211156106f657506001610718565b64173eb4c80a82101561070c5750611cdc610718565b61071582610efa565b90505b60006107288a8a60600135610fc4565b905081811115610736578091505b60006107428b84610fda565b905080156107dd576107866107676107628e600001548f600101546110e5565b6110f7565b61068b61077c670de0b6b3a76400008961295d565b8d60600135610b1e565b95506000670de0b6b3a76400006107c46107a089856111a1565b6107bf6107b5670de0b6b3a76400008b61295d565b61068b600a6111b6565b6111ca565b6107ce91906129bf565b90506107db8c85836111da565b505b50505050509550959350505050565b6040516370a0823160e01b815284906000906001600160a01b038316906370a082319061081d9030906004016129d2565b602060405180830381865afa15801561083a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085e91906129e6565b90506108746001600160a01b038316888761137d565b6040516323e30c8b60e01b81527f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9906001600160a01b038916906323e30c8b906108cd9033908b908b906000908c908c906004016129ff565b6020604051808303816000875af11580156108ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091091906129e6565b1461092e5760405163f594248f60e01b815260040160405180910390fd5b6109436001600160a01b0383168830886113e5565b6040516370a0823160e01b815281906001600160a01b038416906370a08231906109719030906004016129d2565b602060405180830381865afa15801561098e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b291906129e6565b146109d0576040516370fc723360e01b815260040160405180910390fd5b856001600160a01b0316876001600160a01b03167f6b15284fe89dbd5c436c2e0b06b1bf72e3a0a8e96d1b4a2abd61dfae2d7849a687604051610a1591815260200190565b60405180910390a350505050505050565b60006101af826110f7565b600080600080600087604001519050600087600001516001600160d01b03169050610a7f82610a7a838b6020015165ffffffffffff168b600001516001600160d01b0316610669565b611423565b610a898383611423565b610a978b6020015184611423565b89608001519550955095509550505093509350935093565b60006101af826000015483600101546110e5565b6000680736ea4425c11ac6318210610af65760405163062bb40d60e31b8152600481018390526024015b60405180910390fd5b6714057b7ef767814f8202610693670de0b6b3a76400006706f05b59d3b2000083010461144f565b6000670de0b6b3a7640000610b34600282612949565b610b3e848661291c565b610b4891906129bf565b6101ac9190612949565b600080610b60858585611495565b905080600003610b78576120008701545b9150610bbb565b6b033f4a75fb6ff29166751a4b8110610b945760009150610bbb565b64173eb4c80a8110610bb257610b7187610bad83610efa565b610fda565b61200087015491505b610bc9826107bf8887610b1e565b610bd3908361295d565b979650505050505050565b600081831015610bee57816101ac565b5090919050565b600081610c03600282612949565b610b3e670de0b6b3a76400008661291c565b6000600160ff1b831480610c2c5750600160ff1b82145b15610c4a57604051630d01a11b60e21b815260040160405180910390fd5b60008060008512610c5b5784610c60565b846000035b915060008412610c705783610c75565b836000035b90506000610c8383836114c2565b90506001600160ff1b03811115610cb05760405163bf79e8d960e01b815260048101829052602401610aed565b600019808713908613808218600114610cc95782610cce565b826000035b98975050505050505050565b600068023f2fa8f6da5b9d3119821215610cf657506000919050565b680736ea4425c11ac6318212610d22576040516399bb754160e01b815260048101839052602401610aed565b6714057b7ef767814f8202610693670de0b6b3a76400006706f05b59d3b20000830105611588565b60008060008760600151600014610d8f57610d6587876110e5565b9150670de0b6b3a7640000610d82670e27c49886e6000084612a5b565b610d8c9190612a8b565b90505b600084600003610da757670de0b6b3a7640000610db1565b610db18686610bf5565b60e08a015194509050670de0b6b3a76400006002633b9aca0082610dd58686612997565b610ddf9190612970565b610de99190612a8b565b610df39190612bee565b610dfd9190612970565b610e078383612970565b610e12906004612a5b565b1215610e3557610e2e8960e00151670f43fc2c04ee0000610b1e565b9350610eb3565b6002633b9aca00670de0b6b3a7640000610e4f8685612997565b610e599190612970565b610e639190612a8b565b610e6d9190612bee565b610e7f90670de0b6b3a7640000612970565b610e898483612970565b610e94906004612a5b565b1315610eb357610eb08960e00151670c7d713b49da0000610b1e565b93505b610ed0673782dace9d9000006107bf66038d7ea4c6800087610bde565b9998505050505050505050565b60006101ac610eec8484610b1e565b670e6ed27d66680000610b1e565b600064173eb4c80a821080610f1a57506b033f4a75fb6ff29166751a4b82115b15610f3857604051635665ba4560e11b815260040160405180910390fd5b6000610f5c610f468461160c565b610f57670df27a2cdf44800061160c565b6116f0565b90506000610f69826117b6565b9050600082128015610f8b57506706f05b59d3b20000610f898383612970565b135b15610fae57610fa6670de0b6b3a7640000820561103d612970565b949350505050565b610fa6670de0b6b3a7640000820561103c612970565b6000610fd08383611824565b5090949350505050565b6000610fe582612bfd565b9150670de0b6b3a7640000612000600080610fff86611914565b905060005b8184106110da5761101584846129bf565b90506120008111611004576000886120010182612001811061103957611039612c16565b01549050878516156110ba5760008983612001811061105a5761105a612c16565b0154905081600003611075576110708782610b1e565b611097565b611097611082838961291c565b826a0c097ce7bc90715b34b9f160241b611933565b6110a190896129bf565b97508294508885036110b45750506110da565b506110cd565b80156110cd576110ca86826119e2565b95505b600185901c945050611004565b505050505092915050565b600081156101af576101ac8383610bf5565b60008061110c83670de0b6b3a76400006111ca565b61111990620f424061291c565b61112d9069d3c21bcecceda100000061295d565b9050670de0b6b3a764000081101561114f5750670de0b6b3a764000092915050565b6000611163826704a03ce68d2155566119f7565b905061118961117a82670214e8348c4f0000610b1e565b68056bc75e2d63100000610bf5565b610fa690670de0b6b3a764000061295d565b50919050565b600081610b48670de0b6b3a76400008561291c565b60006101af670de0b6b3a76400008361291c565b600081831115610bee57816101ac565b6111e382612bfd565b91506000806000806111f486611914565b90505b612000811161137457808616156112e5578686612001811061121b5761121b612c16565b01549250866120010186612001811061123657611236612c16565b01549150811561129857600061124c8684610b1e565b90506112588385610b1e565b6112628286610b1e565b61126c919061295d565b61127690866129bf565b945080886120010188612001811061129057611290612c16565b0155506112d4565b826112a38685610b1e565b6112ad919061295d565b6112b790856129bf565b93508487612001018761200181106112d1576112d1612c16565b01555b6112de818761295d565b955061136c565b60006112f182886129bf565b9050848882612001811061130757611307612c16565b01600082825461131791906129bf565b9250508190559350876120010181612001811061133657611336612c16565b01549250821561136a5761135361134d868661295d565b84610b1e565b61135d8585610b1e565b611367919061295d565b94505b505b60011b6111f7565b50505050505050565b6040516001600160a01b0383166024820152604481018290526113e090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611a39565b505050565b6040516001600160a01b038085166024830152831660448201526064810182905261141d9085906323b872dd60e01b906084016113a9565b50505050565b6000670de0b6b3a764000060018161143b858761291c565b61144591906129bf565b610b48919061295d565b6000680a688906bd8b000000821061147d57604051634a4f26f160e01b815260048101839052602401610aed565b670de0b6b3a7640000604083901b0461069381611b0b565b600083156114b8576114b36114ad610eec8585610b1e565b85610bf5565b610690565b5060009392505050565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106115065760405163698d9a0160e11b815260048101829052602401610aed565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff82119050826000036115445780670de0b6b3a76400008504019450505050506101af565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b6000808212156115db5768033dd1780914b97114198212156115ac57506000919050565b6115b882600003611588565b6a0c097ce7bc90715b34b9f160241b816115d4576115d4612933565b0592915050565b680a688906bd8b000000821261147d5760405163e69458f960e01b815260048101839052602401610aed565b919050565b60008082136116315760405163309fa7dd60e11b815260048101839052602401610aed565b6000670de0b6b3a7640000831261164a57506001611663565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b6000611678670de0b6b3a7640000850561219d565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff1981016116a257505002919050565b6706f05b59d3b200005b60008113156116e757670de0b6b3a7640000828002059150671bc16d674ec8000082126116df579384019360019190911d905b60011d6116ac565b50505002919050565b6000600160ff1b8314806117075750600160ff1b82145b156117255760405163b3c754a360e01b815260040160405180910390fd5b60008060008512611736578461173b565b846000035b91506000841261174b5783611750565b836000035b9050600061176783670de0b6b3a76400008461227b565b90506001600160ff1b0381111561179457604051637cb4bef560e01b815260048101829052602401610aed565b6000198087139086138082186001146117ad5782610cce565b610cce83612c2c565b6000670afdc366fbc00000600160ff1b038213156117ea57604051635399a28560e11b815260048101839052602401610aed565b670de0b6b3a7640000820760008190036118065782915061119b565b8083039150600083131561119b5750670de0b6b3a764000001919050565b60008080611000670de0b6b3a764000082808080805b86156119065761184a878b6129bf565b93508b84612001811061185f5761185f612c16565b015492508b6120010184612001811061187a5761187a612c16565b0154915081600003611895576118908684610b1e565b6118b7565b6118b76118a2838861291c565b846a0c097ce7bc90715b34b9f160241b611933565b6118c190866129bf565b90508a8110156118e057611cdc84116118db578399508094505b6118fa565b81156118f3576118f086836119e2565b95505b8098508597505b600187901c965061183a565b505050505050509250925092565b600081156116075761192b600019831860016129bf565b909116919050565b600080806000198587098587029250828110838203039150508060000361196d5783828161196357611963612933565b0492505050610693565b80841161197957600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000670de0b6b3a7640000610b48838561291c565b600082600003611a1f578115611a0e576000611a18565b670de0b6b3a76400005b90506101af565b6101ac611a34611a2e856122cf565b84612385565b61144f565b6000611a8e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123919092919063ffffffff16565b8051909150156113e05780806020019051810190611aac9190612c48565b6113e05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610aed565b600160bf1b6001603f1b821615611b2b5768016a09e667f3bcc9090260401c5b6001603e1b821615611b46576801306fe0a31b7152df0260401c5b6001603d1b821615611b61576801172b83c7d517adce0260401c5b6001603c1b821615611b7c5768010b5586cf9890f62a0260401c5b6001603b1b821615611b97576801059b0d31585743ae0260401c5b6001603a1b821615611bb257680102c9a3e778060ee70260401c5b600160391b821615611bcd5768010163da9fb33356d80260401c5b600160381b821615611be857680100b1afa5abcbed610260401c5b600160371b821615611c035768010058c86da1c09ea20260401c5b600160361b821615611c1e576801002c605e2e8cec500260401c5b600160351b821615611c3957680100162f3904051fa10260401c5b600160341b821615611c54576801000b175effdc76ba0260401c5b600160331b821615611c6f57680100058ba01fb9f96d0260401c5b600160321b821615611c8a5768010002c5cc37da94920260401c5b600160311b821615611ca5576801000162e525ee05470260401c5b600160301b821615611cc05768010000b17255775c040260401c5b6001602f1b821615611cdb576801000058b91b5bc9ae0260401c5b6001602e1b821615611cf657680100002c5c89d5ec6d0260401c5b6001602d1b821615611d115768010000162e43f4f8310260401c5b6001602c1b821615611d2c57680100000b1721bcfc9a0260401c5b6001602b1b821615611d475768010000058b90cf1e6e0260401c5b6001602a1b821615611d62576801000002c5c863b73f0260401c5b600160291b821615611d7d57680100000162e430e5a20260401c5b600160281b821615611d98576801000000b1721835510260401c5b600160271b821615611db357680100000058b90c0b490260401c5b600160261b821615611dce5768010000002c5c8601cc0260401c5b600160251b821615611de9576801000000162e42fff00260401c5b600160241b821615611e045768010000000b17217fbb0260401c5b600160231b821615611e1f576801000000058b90bfce0260401c5b600160221b821615611e3a57680100000002c5c85fe30260401c5b600160211b821615611e555768010000000162e42ff10260401c5b600160201b821615611e7057680100000000b17217f80260401c5b6380000000821615611e8b5768010000000058b90bfc0260401c5b6340000000821615611ea6576801000000002c5c85fe0260401c5b6320000000821615611ec157680100000000162e42ff0260401c5b6310000000821615611edc576801000000000b17217f0260401c5b6308000000821615611ef757680100000000058b90c00260401c5b6304000000821615611f125768010000000002c5c8600260401c5b6302000000821615611f2d576801000000000162e4300260401c5b6301000000821615611f485768010000000000b172180260401c5b62800000821615611f62576801000000000058b90c0260401c5b62400000821615611f7c57680100000000002c5c860260401c5b62200000821615611f965768010000000000162e430260401c5b62100000821615611fb057680100000000000b17210260401c5b62080000821615611fca5768010000000000058b910260401c5b62040000821615611fe4576801000000000002c5c80260401c5b62020000821615611ffe57680100000000000162e40260401c5b620100008216156120175761b172600160401b010260401c5b61800082161561202f576158b9600160401b010260401c5b61400082161561204757612c5d600160401b010260401c5b61200082161561205f5761162e600160401b010260401c5b61100082161561207757610b17600160401b010260401c5b61080082161561208f5761058c600160401b010260401c5b6104008216156120a7576102c6600160401b010260401c5b6102008216156120bf57610163600160401b010260401c5b6101008216156120d65760b1600160401b010260401c5b60808216156120ec576059600160401b010260401c5b604082161561210257602c600160401b010260401c5b6020821615612118576016600160401b010260401c5b601082161561212e57600b600160401b010260401c5b6008821615612144576006600160401b010260401c5b600482161561215a576003600160401b010260401c5b6002821615612170576001600160401b010260401c5b6001821615612186576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6000600160801b82106121bd57608091821c916121ba90826129bf565b90505b600160401b82106121db57604091821c916121d890826129bf565b90505b600160201b82106121f957602091821c916121f690826129bf565b90505b62010000821061221657601091821c9161221390826129bf565b90505b610100821061223257600891821c9161222f90826129bf565b90505b6010821061224d57600491821c9161224a90826129bf565b90505b6004821061226857600291821c9161226590826129bf565b90505b60028210611607576101af6001826129bf565b60008080600019858709858702925082811083820303915050806000036122ab5783828161196357611963612933565b838110611979578084604051631dcf306360e21b8152600401610aed92919061269f565b6000670de0b6b3a76400008210156122fd57604051633621413760e21b815260048101839052602401610aed565b6000612312670de0b6b3a7640000840461219d565b670de0b6b3a764000081029250905082811c670de0b6b3a763ffff19810161233b575050919050565b6706f05b59d3b200005b801561237d57670de0b6b3a7640000828002049150671bc16d674ec800008210612375579283019260019190911c905b60011c612345565b505050919050565b60006101ac83836114c2565b6060610690848460008585600080866001600160a01b031685876040516123b89190612c89565b60006040518083038185875af1925050503d80600081146123f5576040519150601f19603f3d011682016040523d82523d6000602084013e6123fa565b606091505b5091509150610bd3878383876060831561247557825160000361246e576001600160a01b0385163b61246e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610aed565b5081610fa6565b610fa6838381511561248a5781518083602001fd5b8060405162461bcd60e51b8152600401610aed9190612ca5565b600080604083850312156124b757600080fd5b50508035926020909101359150565b60405161012081016001600160401b03811182821017156124f757634e487b7160e01b600052604160045260246000fd5b60405290565b604080519081016001600160401b03811182821017156124f757634e487b7160e01b600052604160045260246000fd5b803560ff8116811461160757600080fd5b801515811461254c57600080fd5b50565b80356116078161253e565b60008060008060008587036101a081121561257457600080fd5b86359550602087013594506040870135935061012080605f198301121561259a57600080fd5b6125a26124c6565b91506125b06060890161252d565b82526080880135602083015260a0880135604083015260c0880135606083015260e088013560808301526101008089013560a08401526125f1828a0161254f565b60c084015261014089013560e0840152610160890135908301525094979396509194610180013592915050565b60008060006060848603121561263357600080fd5b505081359360208301359350604090920135919050565b60008060008060008587036101a081121561266457600080fd5b8635955060208701359450610120603f198201121561268257600080fd5b509396929550505060408301926101608101359250610180013590565b918252602082015260400190565b6001600160a01b038116811461254c57600080fd5b6000806000806000608086880312156126da57600080fd5b85356126e5816126ad565b945060208601356126f5816126ad565b93506040860135925060608601356001600160401b038082111561271857600080fd5b818801915088601f83011261272c57600080fd5b81358181111561273b57600080fd5b89602082850101111561274d57600080fd5b9699959850939650602001949392505050565b60006020828403121561277257600080fd5b5035919050565b80356001600160d01b038116811461160757600080fd5b803565ffffffffffff8116811461160757600080fd5b600060e082840312156127b857600080fd5b60405160e081016001600160401b03811182821017156127e857634e487b7160e01b600052604160045260246000fd5b6040529050806127f783612779565b815261280560208401612790565b602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201525092915050565b600080600083850361018081121561285a57600080fd5b606081121561286857600080fd5b604051606081016001600160401b038111828210171561289857634e487b7160e01b600052604160045260246000fd5b604090815286358252602080880135908301528681013582820152909450605f19820112156128c657600080fd5b506128cf6124fd565b6128db60608601612779565b81526128e960808601612790565b602082015291506128fd8560a086016127a6565b90509250925092565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176101af576101af612906565b634e487b7160e01b600052601260045260246000fd5b60008261295857612958612933565b500490565b818103818111156101af576101af612906565b818103600083128015838313168383128216171561299057612990612906565b5092915050565b80820182811260008312801582168215821617156129b7576129b7612906565b505092915050565b808201808211156101af576101af612906565b6001600160a01b0391909116815260200190565b6000602082840312156129f857600080fd5b5051919050565b6001600160a01b03878116825286166020820152604081018590526060810184905260a06080820181905281018290526000828460c0840137600060c0848401015260c0601f19601f8501168301019050979650505050505050565b80820260008212600160ff1b84141615612a7757612a77612906565b81810583148215176101af576101af612906565b600082612a9a57612a9a612933565b600160ff1b821460001984141615612ab457612ab4612906565b500590565b80825b6001808611612acb5750612afe565b6001600160ff1b03829004821115612ae557612ae5612906565b80861615612af257918102915b9490941c938002612abc565b935093915050565b6000828015612b1c5760018114612b2657612b2f565b60019150506101af565b829150506101af565b5081612b3d575060006101af565b50600160008213808214612b56578015612b7557612b8f565b6001600160ff1b03839004831115612b7057612b70612906565b612b8f565b6001600160ff1b03839005831215612b8f57612b8f612906565b5080831615612b9b5750805b612bab8360011c83840283612ab9565b600082136001600160ff1b0382900483111615612bca57612bca612906565b60008212600160ff1b82900583121615612be657612be6612906565b029392505050565b60006101ac60ff841683612b06565b600060018201612c0f57612c0f612906565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000600160ff1b8201612c4157612c41612906565b5060000390565b600060208284031215612c5a57600080fd5b81516106938161253e565b60005b83811015612c80578181015183820152602001612c68565b50506000910152565b60008251612c9b818460208701612c65565b9190910192915050565b6020815260008251806020840152612cc4816040850160208701612c65565b601f01601f1916919091016040019291505056fea264697066735822122050186d9bbcd5ed1cb2ba31057f95fcd48ac431c2d721ed9904431beb0de269d264736f6c63430008120033","args":[],"salt":"AJNA","value":[]}
2024-01-08T15:27:55.404Z cannon:builder:runtime resolve artifact PositionNFTSVG
2024-01-08T15:27:55.405Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:28:06.038Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [ [Object] ],
    devdoc: { kind: 'dev', methods: {}, version: 1 },
    userdoc: { kind: 'user', methods: {}, version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/PositionNFTSVG.sol': 'PositionNFTSVG' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/base64/base64.sol': {
      keccak256: '0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Strings.sol': {
      keccak256: '0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/PositionNFTSVG.sol': {
      keccak256: '0xc99cd282f520c3bdc84f4da0309ad36ff0bab58a4057247c3eb7ab905df681c5',
      urls: [Array],
      license: 'BUSL-1.1'
    }
  },
  version: 1
}
2024-01-08T15:28:06.039Z cannon:cli:foundry evm version paris
2024-01-08T15:28:06.041Z cannon:builder:runtime reported contract artifact PositionNFTSVG {
  contractName: 'PositionNFTSVG',
  sourceName: 'src/libraries/external/PositionNFTSVG.sol',
  abi: [
    {
      type: 'function',
      name: 'constructTokenURI',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'pure'
    }
  ],
  bytecode: '0x613ad661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806337b2b7511461003a575b600080fd5b61004d61004836600461080f565b610063565b60405161005a91906108f0565b60405180910390f35b604080518082019091526015815274416a6e6120506f736974696f6e73204e46542d563160581b6020820152606090600061009d8461015a565b905060006100aa826101b4565b905060006100bb8660400151610318565b6040516020016100cb919061093f565b604051602081830303815290604052905060006100ff601488606001516001600160a01b03166103aa90919063ffffffff16565b905061012f8286858460405160200161011b9493929190610973565b6040516020818303038152906040526101b4565b60405160200161013f9190610a64565b60405160208183030381529060405295505050505050919050565b6060610164610552565b61016c6105e6565b61017e8460000151856020015161060b565b61018b8560400151610654565b60405160200161019e9493929190610aa9565b6040516020818303038152906040529050919050565b606081516000036101d357505060408051602081019091526000815290565b6000604051806060016040528060408152602001613a4160409139905060006003845160026102029190610b94565b61020c9190610ba7565b610217906004610bc9565b90506000610226826020610b94565b6001600160401b0381111561023d5761023d610745565b6040519080825280601f01601f191660200182016040528015610267576020820181803683370190505b509050818152600183018586518101602084015b818310156102d3576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f811685015182535060010161027b565b6003895106600181146102ed57600281146102fe5761030a565b613d3d60f01b60011983015261030a565b603d60f81b6000198301525b509398975050505050505050565b606060006103258361066f565b60010190506000816001600160401b0381111561034457610344610745565b6040519080825280601f01601f19166020018201604052801561036e576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461037857509392505050565b606060006103b9836002610bc9565b6103c4906002610b94565b6001600160401b038111156103db576103db610745565b6040519080825280601f01601f191660200182016040528015610405576020820181803683370190505b509050600360fc1b8160008151811061042057610420610be0565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061044f5761044f610be0565b60200101906001600160f81b031916908160001a9053506000610473846002610bc9565b61047e906001610b94565b90505b60018111156104f6576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106104b2576104b2610be0565b1a60f81b8282815181106104c8576104c8610be0565b60200101906001600160f81b031916908160001a90535060049490941c936104ef81610bf6565b9050610481565b5083156105495760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b90505b92915050565b6060600060405160200161056590610c0d565b6040516020818303038152906040529050600060405160200161058790610ef3565b604051602081830303815290604052905060006040516020016105a9906121af565b60405160208183030381529060405290508282826040516020016105cf93929190613317565b604051602081830303815290604052935050505090565b60606040516020016105f7906133a5565b604051602081830303815290604052905090565b60608282604051602001610620929190613753565b60408051601f198184030181529082905261063d9160200161378f565b604051602081830303815290604052905092915050565b606061065f82610318565b60405160200161019e9190613870565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106106ae5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6904ee2d6d415b85acef8160201b83106106d8576904ee2d6d415b85acef8160201b830492506020015b662386f26fc1000083106106f657662386f26fc10000830492506010015b6305f5e100831061070e576305f5e100830492506008015b612710831061072257612710830492506004015b60648310610734576064830492506002015b600a831061054c5760010192915050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561077d5761077d610745565b60405290565b600082601f83011261079457600080fd5b81356001600160401b03808211156107ae576107ae610745565b604051601f8301601f19908116603f011681019082821181831017156107d6576107d6610745565b816040528381528660208588010111156107ef57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561082157600080fd5b81356001600160401b038082111561083857600080fd5b908301906080828603121561084c57600080fd5b61085461075b565b82358281111561086357600080fd5b61086f87828601610783565b82525060208301358281111561088457600080fd5b61089087828601610783565b60208301525060408381013590820152606090920135916001600160a01b03831683146108bc57600080fd5b6060810192909252509392505050565b60005b838110156108e75781810151838201526020016108cf565b50506000910152565b602081526000825180602084015261090f8160408501602087016108cc565b601f01601f19169190910160400192915050565b600081516109358185602086016108cc565b9290920192915050565b6b416a6e6120546f6b656e202360a01b81526000825161096681600c8501602087016108cc565b91909101600c0192915050565b683d913730b6b2911d1160b91b81528451600090610998816009850160208a016108cc565b71111610113232b9b1b934b83a34b7b7111d1160711b60099184019182015285516109ca81601b840160208a016108cc565b6b1116101134b6b0b3b2911d1160a11b601b92909101918201527919185d184e9a5b5859d94bdcdd99cade1b5b0ed8985cd94d8d0b60321b60278201528451610a1a8160418401602089016108cc565b6b1116101137bbb732b9111d1160a11b604192909101918201528351610a4781604d8401602088016108cc565b61227d60f01b604d9290910191820152604f019695505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251610a9c81601d8501602087016108cc565b91909101601d0192915050565b7f3c7376672066696c6c3d226e6f6e65222076696577426f783d2230203020353181527f32203531322220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f6020820152691918181817b9bb33911f60b11b604082015260008551610b1a81604a850160208a016108cc565b855190830190610b3181604a840160208a016108cc565b8551910190610b4781604a8401602089016108cc565b8451910190610b5d81604a8401602088016108cc565b651e17b9bb339f60d11b604a92909101918201526050019695505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561054c5761054c610b7e565b600082610bc457634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761054c5761054c610b7e565b634e487b7160e01b600052603260045260246000fd5b600081610c0557610c05610b7e565b506000190190565b600080516020613a018339815191528082527f783d223332222066696c6c3d2275726c28237061696e74305f6c696e6561725f60208301526918989aaf9a989491179f60b11b6040830152604a8201527f783d223332222066696c6c3d22626c61636b222066696c6c2d6f706163697479606a820152671e9118171a91179f60c11b608a8201527f3c672066696c7465723d2275726c282366696c746572305f665f3131355f353160928201526214911f60e91b60b28201527f3c656c6c697073652063783d22333734222063793d223339302e35222072783d60b58201527f22313232222072793d223132312e35222066696c6c3d2223423435434436222f60d5820152601f60f91b60f58201527f3c636972636c652063783d22313537222063793d223331352220723d2231323260f68201527111103334b6361e9111999ba321a32111179f60711b6101168201527f3c656c6c697073652063783d223133372e373833222063793d223133372e35226101288201527f2072783d223132312e373833222072793d223132312e35222066696c6c3d2223610148820152681b1a1922221911179f60b91b610168820152600061054c610ead610e67610de361017186015b631e17b39f60e11b815260040190565b7f3c72656374206f7061636974793d22302e352220783d2231362e352220793d2281527f31362e35222077696474683d2234373922206865696768743d2234373922207260208201527f783d2232332e35222066696c6c3d22626c61636b22207374726f6b653d22776860408201526534ba3291179f60d11b606082015260660190565b7f3c636972636c652063783d22323536222063793d223235362220723d22323238815273171a911039ba3937b5b29e913bb434ba3291179f60611b602082015260340190565b7f3c636972636c652063783d22323536222063793d223235362220723d22323139815273171a911039ba3937b5b29e913bb434ba3291179f60611b602082015260340190565b7f3c7061746820643d224d3431302e32373320343637433431302e32303420343681527f37203431302e313339203436362e393734203431302e303738203436362e393260208201527f32433431302e303236203436362e38363120343130203436362e37393620343160408201527f30203436362e37323743343130203436362e363834203431302e30303420343660608201527f362e363435203431302e303133203436362e36314c3431332e3036382034353860808201527f2e323634433431332e303934203435382e313639203431332e3134362034353860a08201527f2e303836203431332e323234203435382e303137433431332e3331312034353760c08201527f2e393339203431332e343238203435372e39203431332e353735203435372e3960e08201527f483431352e343939433431352e363436203435372e39203431352e37353920346101008201527f35372e393339203431352e383337203435382e303137433431352e39323420346101208201527f35382e303836203431352e3938203435382e313639203431362e3030362034356101408201527f382e3236344c3431392e303438203436362e3631433431392e303635203436366101608201527f2e363435203431392e303734203436362e363834203431392e303734203436366101808201527f2e373237433431392e303734203436362e373936203431392e303434203436366101a08201527f2e383631203431382e393833203436362e393232433431382e393331203436366101c08201527f2e393734203431382e38363620343637203431382e37383820343637483431376101e08201527f2e313839433431372e30353920343637203431362e393539203436362e3937206102008201527f3431362e3839203436362e393039433431362e383239203436362e38342034316102208201527f362e3739203436362e373739203431362e373733203436362e3732374c3431366102408201527f2e323636203436352e343031483431322e3739354c3431322e333031203436366102608201527f2e373237433431322e323834203436362e373739203431322e323435203436366102808201527f2e3834203431322e313834203436362e393039433431322e313233203436362e6102a08201527f3937203431322e30313920343637203431312e38373220343637483431302e326102c08201527f37335a4d3431332e333238203436332e353239483431352e3734364c3431342e6102e08201527f353234203436302e3039374c3431332e333238203436332e3532395a222066696103008201526b36361e913bb434ba3291179f60a11b6103208201527f3c7061746820643d224d3433312e313138203436372e3133433433302e36323461032c8201527f203436372e3133203433302e313531203436372e303639203432392e3730312061034c8201527f3436362e393438433432392e323539203436362e383138203432382e3836342061036c8201527f3436362e3632372034'... 20242 more characters,
  deployedBytecode: '0x73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806337b2b7511461003a575b600080fd5b61004d61004836600461080f565b610063565b60405161005a91906108f0565b60405180910390f35b604080518082019091526015815274416a6e6120506f736974696f6e73204e46542d563160581b6020820152606090600061009d8461015a565b905060006100aa826101b4565b905060006100bb8660400151610318565b6040516020016100cb919061093f565b604051602081830303815290604052905060006100ff601488606001516001600160a01b03166103aa90919063ffffffff16565b905061012f8286858460405160200161011b9493929190610973565b6040516020818303038152906040526101b4565b60405160200161013f9190610a64565b60405160208183030381529060405295505050505050919050565b6060610164610552565b61016c6105e6565b61017e8460000151856020015161060b565b61018b8560400151610654565b60405160200161019e9493929190610aa9565b6040516020818303038152906040529050919050565b606081516000036101d357505060408051602081019091526000815290565b6000604051806060016040528060408152602001613a4160409139905060006003845160026102029190610b94565b61020c9190610ba7565b610217906004610bc9565b90506000610226826020610b94565b6001600160401b0381111561023d5761023d610745565b6040519080825280601f01601f191660200182016040528015610267576020820181803683370190505b509050818152600183018586518101602084015b818310156102d3576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f811685015182535060010161027b565b6003895106600181146102ed57600281146102fe5761030a565b613d3d60f01b60011983015261030a565b603d60f81b6000198301525b509398975050505050505050565b606060006103258361066f565b60010190506000816001600160401b0381111561034457610344610745565b6040519080825280601f01601f19166020018201604052801561036e576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461037857509392505050565b606060006103b9836002610bc9565b6103c4906002610b94565b6001600160401b038111156103db576103db610745565b6040519080825280601f01601f191660200182016040528015610405576020820181803683370190505b509050600360fc1b8160008151811061042057610420610be0565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061044f5761044f610be0565b60200101906001600160f81b031916908160001a9053506000610473846002610bc9565b61047e906001610b94565b90505b60018111156104f6576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106104b2576104b2610be0565b1a60f81b8282815181106104c8576104c8610be0565b60200101906001600160f81b031916908160001a90535060049490941c936104ef81610bf6565b9050610481565b5083156105495760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b90505b92915050565b6060600060405160200161056590610c0d565b6040516020818303038152906040529050600060405160200161058790610ef3565b604051602081830303815290604052905060006040516020016105a9906121af565b60405160208183030381529060405290508282826040516020016105cf93929190613317565b604051602081830303815290604052935050505090565b60606040516020016105f7906133a5565b604051602081830303815290604052905090565b60608282604051602001610620929190613753565b60408051601f198184030181529082905261063d9160200161378f565b604051602081830303815290604052905092915050565b606061065f82610318565b60405160200161019e9190613870565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106106ae5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6904ee2d6d415b85acef8160201b83106106d8576904ee2d6d415b85acef8160201b830492506020015b662386f26fc1000083106106f657662386f26fc10000830492506010015b6305f5e100831061070e576305f5e100830492506008015b612710831061072257612710830492506004015b60648310610734576064830492506002015b600a831061054c5760010192915050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561077d5761077d610745565b60405290565b600082601f83011261079457600080fd5b81356001600160401b03808211156107ae576107ae610745565b604051601f8301601f19908116603f011681019082821181831017156107d6576107d6610745565b816040528381528660208588010111156107ef57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561082157600080fd5b81356001600160401b038082111561083857600080fd5b908301906080828603121561084c57600080fd5b61085461075b565b82358281111561086357600080fd5b61086f87828601610783565b82525060208301358281111561088457600080fd5b61089087828601610783565b60208301525060408381013590820152606090920135916001600160a01b03831683146108bc57600080fd5b6060810192909252509392505050565b60005b838110156108e75781810151838201526020016108cf565b50506000910152565b602081526000825180602084015261090f8160408501602087016108cc565b601f01601f19169190910160400192915050565b600081516109358185602086016108cc565b9290920192915050565b6b416a6e6120546f6b656e202360a01b81526000825161096681600c8501602087016108cc565b91909101600c0192915050565b683d913730b6b2911d1160b91b81528451600090610998816009850160208a016108cc565b71111610113232b9b1b934b83a34b7b7111d1160711b60099184019182015285516109ca81601b840160208a016108cc565b6b1116101134b6b0b3b2911d1160a11b601b92909101918201527919185d184e9a5b5859d94bdcdd99cade1b5b0ed8985cd94d8d0b60321b60278201528451610a1a8160418401602089016108cc565b6b1116101137bbb732b9111d1160a11b604192909101918201528351610a4781604d8401602088016108cc565b61227d60f01b604d9290910191820152604f019695505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251610a9c81601d8501602087016108cc565b91909101601d0192915050565b7f3c7376672066696c6c3d226e6f6e65222076696577426f783d2230203020353181527f32203531322220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f6020820152691918181817b9bb33911f60b11b604082015260008551610b1a81604a850160208a016108cc565b855190830190610b3181604a840160208a016108cc565b8551910190610b4781604a8401602089016108cc565b8451910190610b5d81604a8401602088016108cc565b651e17b9bb339f60d11b604a92909101918201526050019695505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561054c5761054c610b7e565b600082610bc457634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761054c5761054c610b7e565b634e487b7160e01b600052603260045260246000fd5b600081610c0557610c05610b7e565b506000190190565b600080516020613a018339815191528082527f783d223332222066696c6c3d2275726c28237061696e74305f6c696e6561725f60208301526918989aaf9a989491179f60b11b6040830152604a8201527f783d223332222066696c6c3d22626c61636b222066696c6c2d6f706163697479606a820152671e9118171a91179f60c11b608a8201527f3c672066696c7465723d2275726c282366696c746572305f665f3131355f353160928201526214911f60e91b60b28201527f3c656c6c697073652063783d22333734222063793d223339302e35222072783d60b58201527f22313232222072793d223132312e35222066696c6c3d2223423435434436222f60d5820152601f60f91b60f58201527f3c636972636c652063783d22313537222063793d223331352220723d2231323260f68201527111103334b6361e9111999ba321a32111179f60711b6101168201527f3c656c6c697073652063783d223133372e373833222063793d223133372e35226101288201527f2072783d223132312e373833222072793d223132312e35222066696c6c3d2223610148820152681b1a1922221911179f60b91b610168820152600061054c610ead610e67610de361017186015b631e17b39f60e11b815260040190565b7f3c72656374206f7061636974793d22302e352220783d2231362e352220793d2281527f31362e35222077696474683d2234373922206865696768743d2234373922207260208201527f783d2232332e35222066696c6c3d22626c61636b22207374726f6b653d22776860408201526534ba3291179f60d11b606082015260660190565b7f3c636972636c652063783d22323536222063793d223235362220723d22323238815273171a911039ba3937b5b29e913bb434ba3291179f60611b602082015260340190565b7f3c636972636c652063783d22323536222063793d223235362220723d22323139815273171a911039ba3937b5b29e913bb434ba3291179f60611b602082015260340190565b7f3c7061746820643d224d3431302e32373320343637433431302e32303420343681527f37203431302e313339203436362e393734203431302e303738203436362e393260208201527f32433431302e303236203436362e38363120343130203436362e37393620343160408201527f30203436362e37323743343130203436362e363834203431302e30303420343660608201527f362e363435203431302e303133203436362e36314c3431332e3036382034353860808201527f2e323634433431332e303934203435382e313639203431332e3134362034353860a08201527f2e303836203431332e323234203435382e303137433431332e3331312034353760c08201527f2e393339203431332e343238203435372e39203431332e353735203435372e3960e08201527f483431352e343939433431352e363436203435372e39203431352e37353920346101008201527f35372e393339203431352e383337203435382e303137433431352e39323420346101208201527f35382e303836203431352e3938203435382e313639203431362e3030362034356101408201527f382e3236344c3431392e303438203436362e3631433431392e303635203436366101608201527f2e363435203431392e303734203436362e363834203431392e303734203436366101808201527f2e373237433431392e303734203436362e373936203431392e303434203436366101a08201527f2e383631203431382e393833203436362e393232433431382e393331203436366101c08201527f2e393734203431382e38363620343637203431382e37383820343637483431376101e08201527f2e313839433431372e30353920343637203431362e393539203436362e3937206102008201527f3431362e3839203436362e393039433431362e383239203436362e38342034316102208201527f362e3739203436362e373739203431362e373733203436362e3732374c3431366102408201527f2e323636203436352e343031483431322e3739354c3431322e333031203436366102608201527f2e373237433431322e323834203436362e373739203431322e323435203436366102808201527f2e3834203431322e313834203436362e393039433431322e313233203436362e6102a08201527f3937203431322e30313920343637203431312e38373220343637483431302e326102c08201527f37335a4d3431332e333238203436332e353239483431352e3734364c3431342e6102e08201527f353234203436302e3039374c3431332e333238203436332e3532395a222066696103008201526b36361e913bb434ba3291179f60a11b6103208201527f3c7061746820643d224d3433312e313138203436372e3133433433302e36323461032c8201527f203436372e3133203433302e313531203436372e303639203432392e3730312061034c8201527f3436362e393438433432392e323539203436362e383138203432382e3836342061036c8201527f3436362e363237203432382e353138203436362e333736433432382e3137312061038c8201527f3436362e313235203432372e383934203436352e383133203432372e'... 20126 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/base64/base64.sol":{"content":"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0;\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides functions for encoding/decoding base64\\nlibrary Base64 {\\n    string internal constant TABLE_ENCODE = \'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\';\\n    bytes  internal constant TABLE_DECODE = hex\\"0000000000000000000000000000000000000000000000000000000000000000\\"\\n                                            hex\\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\\"\\n                                            hex\\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\\"\\n                                            hex\\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\\";\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return \'\';\\n\\n        // load the table into memory\\n        string memory table = TABLE_ENCODE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n                // read 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // write 4 characters\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n            }\\n\\n            // padding with \'=\'\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n\\n        return result;\\n    }\\n\\n    function decode(string memory _data) internal pure returns (bytes memory) {\\n        bytes memory data = bytes(_data);\\n\\n        if (data.length == 0) return new bytes(0);\\n        require(data.length % 4 == 0, \\"invalid base64 decoder input\\");\\n\\n        // load the table into memory\\n        bytes memory table = TABLE_DECODE;\\n\\n        // every 4 characters represent 3 bytes\\n        uint256 decodedLen = (data.length / 4) * 3;\\n\\n        // add some extra buffer at the end required for the writing\\n        bytes memory result = new bytes(decodedLen + 32);\\n\\n        assembly {\\n            // padding with \'=\'\\n            let lastBytes := mload(add(data, mload(data)))\\n            if eq(and(lastBytes, 0xFF), 0x3d) {\\n                decodedLen := sub(decodedLen, 1)\\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\\n                    decodedLen := sub(decodedLen, 1)\\n                }\\n            }\\n\\n            // set the actual output length\\n            mstore(result, decodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 4 characters at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               // read 4 characters\\n               dataPtr := add(dataPtr, 4)\\n               let input := mload(dataPtr)\\n\\n               // write 3 bytes\\n               let output := add(\\n                   add(\\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\\n                   add(\\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\\n                    )\\n                )\\n                mstore(resultPtr, shl(232, output))\\n                resultPtr := add(resultPtr, 3)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\"./math/Math.sol\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\"0123456789abcdef\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\"0\\";\\n        buffer[1] = \\"x\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\"Strings: hex length insufficient\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, pro'... 26022 more characters
  }
}
2024-01-08T15:28:06.043Z cannon:verbose:builder:definition creating hash of {"bytecode":"","args":[],"salt":"AJNA","value":[]}
2024-01-08T15:28:06.043Z cannon:builder comparing states null 9fe09b475b4aa0330aac826fe53572ba
2024-01-08T15:28:06.043Z cannon:builder run isolated contract.PositionNFTSVG
Executing [contract.PositionNFTSVG]...
2024-01-08T15:28:06.049Z cannon:verbose:builder ctx for step contract.PositionNFTSVG {
  package: {},
  timestamp: '1704727545',
  chainId: 10,
  settings: {
    bwAJNA_ADDRESS: '0x6c518f9D1a163379235816c543E62922a79863Fa',
    salt: 'AJNA'
  },
  contracts: {},
  txns: {},
  imports: {},
  extras: {}
}
2024-01-08T15:28:06.049Z cannon:builder:contract exec {
  artifact: 'PositionNFTSVG',
  salt: 'AJNA',
  create2: true,
  from: '',
  nonce: '',
  value: '',
  abi: ''
}
2024-01-08T15:28:06.049Z cannon:builder:runtime resolve artifact PositionNFTSVG
2024-01-08T15:28:06.049Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:28:14.112Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [ [Object] ],
    devdoc: { kind: 'dev', methods: {}, version: 1 },
    userdoc: { kind: 'user', methods: {}, version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/PositionNFTSVG.sol': 'PositionNFTSVG' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/base64/base64.sol': {
      keccak256: '0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Strings.sol': {
      keccak256: '0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/PositionNFTSVG.sol': {
      keccak256: '0xc99cd282f520c3bdc84f4da0309ad36ff0bab58a4057247c3eb7ab905df681c5',
      urls: [Array],
      license: 'BUSL-1.1'
    }
  },
  version: 1
}
2024-01-08T15:28:14.112Z cannon:cli:foundry evm version paris
2024-01-08T15:28:14.115Z cannon:builder:runtime reported contract artifact PositionNFTSVG {
  contractName: 'PositionNFTSVG',
  sourceName: 'src/libraries/external/PositionNFTSVG.sol',
  abi: [
    {
      type: 'function',
      name: 'constructTokenURI',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'pure'
    }
  ],
  bytecode: '0x613ad661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806337b2b7511461003a575b600080fd5b61004d61004836600461080f565b610063565b60405161005a91906108f0565b60405180910390f35b604080518082019091526015815274416a6e6120506f736974696f6e73204e46542d563160581b6020820152606090600061009d8461015a565b905060006100aa826101b4565b905060006100bb8660400151610318565b6040516020016100cb919061093f565b604051602081830303815290604052905060006100ff601488606001516001600160a01b03166103aa90919063ffffffff16565b905061012f8286858460405160200161011b9493929190610973565b6040516020818303038152906040526101b4565b60405160200161013f9190610a64565b60405160208183030381529060405295505050505050919050565b6060610164610552565b61016c6105e6565b61017e8460000151856020015161060b565b61018b8560400151610654565b60405160200161019e9493929190610aa9565b6040516020818303038152906040529050919050565b606081516000036101d357505060408051602081019091526000815290565b6000604051806060016040528060408152602001613a4160409139905060006003845160026102029190610b94565b61020c9190610ba7565b610217906004610bc9565b90506000610226826020610b94565b6001600160401b0381111561023d5761023d610745565b6040519080825280601f01601f191660200182016040528015610267576020820181803683370190505b509050818152600183018586518101602084015b818310156102d3576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f811685015182535060010161027b565b6003895106600181146102ed57600281146102fe5761030a565b613d3d60f01b60011983015261030a565b603d60f81b6000198301525b509398975050505050505050565b606060006103258361066f565b60010190506000816001600160401b0381111561034457610344610745565b6040519080825280601f01601f19166020018201604052801561036e576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461037857509392505050565b606060006103b9836002610bc9565b6103c4906002610b94565b6001600160401b038111156103db576103db610745565b6040519080825280601f01601f191660200182016040528015610405576020820181803683370190505b509050600360fc1b8160008151811061042057610420610be0565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061044f5761044f610be0565b60200101906001600160f81b031916908160001a9053506000610473846002610bc9565b61047e906001610b94565b90505b60018111156104f6576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106104b2576104b2610be0565b1a60f81b8282815181106104c8576104c8610be0565b60200101906001600160f81b031916908160001a90535060049490941c936104ef81610bf6565b9050610481565b5083156105495760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b90505b92915050565b6060600060405160200161056590610c0d565b6040516020818303038152906040529050600060405160200161058790610ef3565b604051602081830303815290604052905060006040516020016105a9906121af565b60405160208183030381529060405290508282826040516020016105cf93929190613317565b604051602081830303815290604052935050505090565b60606040516020016105f7906133a5565b604051602081830303815290604052905090565b60608282604051602001610620929190613753565b60408051601f198184030181529082905261063d9160200161378f565b604051602081830303815290604052905092915050565b606061065f82610318565b60405160200161019e9190613870565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106106ae5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6904ee2d6d415b85acef8160201b83106106d8576904ee2d6d415b85acef8160201b830492506020015b662386f26fc1000083106106f657662386f26fc10000830492506010015b6305f5e100831061070e576305f5e100830492506008015b612710831061072257612710830492506004015b60648310610734576064830492506002015b600a831061054c5760010192915050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561077d5761077d610745565b60405290565b600082601f83011261079457600080fd5b81356001600160401b03808211156107ae576107ae610745565b604051601f8301601f19908116603f011681019082821181831017156107d6576107d6610745565b816040528381528660208588010111156107ef57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561082157600080fd5b81356001600160401b038082111561083857600080fd5b908301906080828603121561084c57600080fd5b61085461075b565b82358281111561086357600080fd5b61086f87828601610783565b82525060208301358281111561088457600080fd5b61089087828601610783565b60208301525060408381013590820152606090920135916001600160a01b03831683146108bc57600080fd5b6060810192909252509392505050565b60005b838110156108e75781810151838201526020016108cf565b50506000910152565b602081526000825180602084015261090f8160408501602087016108cc565b601f01601f19169190910160400192915050565b600081516109358185602086016108cc565b9290920192915050565b6b416a6e6120546f6b656e202360a01b81526000825161096681600c8501602087016108cc565b91909101600c0192915050565b683d913730b6b2911d1160b91b81528451600090610998816009850160208a016108cc565b71111610113232b9b1b934b83a34b7b7111d1160711b60099184019182015285516109ca81601b840160208a016108cc565b6b1116101134b6b0b3b2911d1160a11b601b92909101918201527919185d184e9a5b5859d94bdcdd99cade1b5b0ed8985cd94d8d0b60321b60278201528451610a1a8160418401602089016108cc565b6b1116101137bbb732b9111d1160a11b604192909101918201528351610a4781604d8401602088016108cc565b61227d60f01b604d9290910191820152604f019695505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251610a9c81601d8501602087016108cc565b91909101601d0192915050565b7f3c7376672066696c6c3d226e6f6e65222076696577426f783d2230203020353181527f32203531322220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f6020820152691918181817b9bb33911f60b11b604082015260008551610b1a81604a850160208a016108cc565b855190830190610b3181604a840160208a016108cc565b8551910190610b4781604a8401602089016108cc565b8451910190610b5d81604a8401602088016108cc565b651e17b9bb339f60d11b604a92909101918201526050019695505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561054c5761054c610b7e565b600082610bc457634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761054c5761054c610b7e565b634e487b7160e01b600052603260045260246000fd5b600081610c0557610c05610b7e565b506000190190565b600080516020613a018339815191528082527f783d223332222066696c6c3d2275726c28237061696e74305f6c696e6561725f60208301526918989aaf9a989491179f60b11b6040830152604a8201527f783d223332222066696c6c3d22626c61636b222066696c6c2d6f706163697479606a820152671e9118171a91179f60c11b608a8201527f3c672066696c7465723d2275726c282366696c746572305f665f3131355f353160928201526214911f60e91b60b28201527f3c656c6c697073652063783d22333734222063793d223339302e35222072783d60b58201527f22313232222072793d223132312e35222066696c6c3d2223423435434436222f60d5820152601f60f91b60f58201527f3c636972636c652063783d22313537222063793d223331352220723d2231323260f68201527111103334b6361e9111999ba321a32111179f60711b6101168201527f3c656c6c697073652063783d223133372e373833222063793d223133372e35226101288201527f2072783d223132312e373833222072793d223132312e35222066696c6c3d2223610148820152681b1a1922221911179f60b91b610168820152600061054c610ead610e67610de361017186015b631e17b39f60e11b815260040190565b7f3c72656374206f7061636974793d22302e352220783d2231362e352220793d2281527f31362e35222077696474683d2234373922206865696768743d2234373922207260208201527f783d2232332e35222066696c6c3d22626c61636b22207374726f6b653d22776860408201526534ba3291179f60d11b606082015260660190565b7f3c636972636c652063783d22323536222063793d223235362220723d22323238815273171a911039ba3937b5b29e913bb434ba3291179f60611b602082015260340190565b7f3c636972636c652063783d22323536222063793d223235362220723d22323139815273171a911039ba3937b5b29e913bb434ba3291179f60611b602082015260340190565b7f3c7061746820643d224d3431302e32373320343637433431302e32303420343681527f37203431302e313339203436362e393734203431302e303738203436362e393260208201527f32433431302e303236203436362e38363120343130203436362e37393620343160408201527f30203436362e37323743343130203436362e363834203431302e30303420343660608201527f362e363435203431302e303133203436362e36314c3431332e3036382034353860808201527f2e323634433431332e303934203435382e313639203431332e3134362034353860a08201527f2e303836203431332e323234203435382e303137433431332e3331312034353760c08201527f2e393339203431332e343238203435372e39203431332e353735203435372e3960e08201527f483431352e343939433431352e363436203435372e39203431352e37353920346101008201527f35372e393339203431352e383337203435382e303137433431352e39323420346101208201527f35382e303836203431352e3938203435382e313639203431362e3030362034356101408201527f382e3236344c3431392e303438203436362e3631433431392e303635203436366101608201527f2e363435203431392e303734203436362e363834203431392e303734203436366101808201527f2e373237433431392e303734203436362e373936203431392e303434203436366101a08201527f2e383631203431382e393833203436362e393232433431382e393331203436366101c08201527f2e393734203431382e38363620343637203431382e37383820343637483431376101e08201527f2e313839433431372e30353920343637203431362e393539203436362e3937206102008201527f3431362e3839203436362e393039433431362e383239203436362e38342034316102208201527f362e3739203436362e373739203431362e373733203436362e3732374c3431366102408201527f2e323636203436352e343031483431322e3739354c3431322e333031203436366102608201527f2e373237433431322e323834203436362e373739203431322e323435203436366102808201527f2e3834203431322e313834203436362e393039433431322e313233203436362e6102a08201527f3937203431322e30313920343637203431312e38373220343637483431302e326102c08201527f37335a4d3431332e333238203436332e353239483431352e3734364c3431342e6102e08201527f353234203436302e3039374c3431332e333238203436332e3532395a222066696103008201526b36361e913bb434ba3291179f60a11b6103208201527f3c7061746820643d224d3433312e313138203436372e3133433433302e36323461032c8201527f203436372e3133203433302e313531203436372e303639203432392e3730312061034c8201527f3436362e393438433432392e323539203436362e383138203432382e3836342061036c8201527f3436362e3632372034'... 20242 more characters,
  deployedBytecode: '0x73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806337b2b7511461003a575b600080fd5b61004d61004836600461080f565b610063565b60405161005a91906108f0565b60405180910390f35b604080518082019091526015815274416a6e6120506f736974696f6e73204e46542d563160581b6020820152606090600061009d8461015a565b905060006100aa826101b4565b905060006100bb8660400151610318565b6040516020016100cb919061093f565b604051602081830303815290604052905060006100ff601488606001516001600160a01b03166103aa90919063ffffffff16565b905061012f8286858460405160200161011b9493929190610973565b6040516020818303038152906040526101b4565b60405160200161013f9190610a64565b60405160208183030381529060405295505050505050919050565b6060610164610552565b61016c6105e6565b61017e8460000151856020015161060b565b61018b8560400151610654565b60405160200161019e9493929190610aa9565b6040516020818303038152906040529050919050565b606081516000036101d357505060408051602081019091526000815290565b6000604051806060016040528060408152602001613a4160409139905060006003845160026102029190610b94565b61020c9190610ba7565b610217906004610bc9565b90506000610226826020610b94565b6001600160401b0381111561023d5761023d610745565b6040519080825280601f01601f191660200182016040528015610267576020820181803683370190505b509050818152600183018586518101602084015b818310156102d3576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f811685015182535060010161027b565b6003895106600181146102ed57600281146102fe5761030a565b613d3d60f01b60011983015261030a565b603d60f81b6000198301525b509398975050505050505050565b606060006103258361066f565b60010190506000816001600160401b0381111561034457610344610745565b6040519080825280601f01601f19166020018201604052801561036e576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461037857509392505050565b606060006103b9836002610bc9565b6103c4906002610b94565b6001600160401b038111156103db576103db610745565b6040519080825280601f01601f191660200182016040528015610405576020820181803683370190505b509050600360fc1b8160008151811061042057610420610be0565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061044f5761044f610be0565b60200101906001600160f81b031916908160001a9053506000610473846002610bc9565b61047e906001610b94565b90505b60018111156104f6576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106104b2576104b2610be0565b1a60f81b8282815181106104c8576104c8610be0565b60200101906001600160f81b031916908160001a90535060049490941c936104ef81610bf6565b9050610481565b5083156105495760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b90505b92915050565b6060600060405160200161056590610c0d565b6040516020818303038152906040529050600060405160200161058790610ef3565b604051602081830303815290604052905060006040516020016105a9906121af565b60405160208183030381529060405290508282826040516020016105cf93929190613317565b604051602081830303815290604052935050505090565b60606040516020016105f7906133a5565b604051602081830303815290604052905090565b60608282604051602001610620929190613753565b60408051601f198184030181529082905261063d9160200161378f565b604051602081830303815290604052905092915050565b606061065f82610318565b60405160200161019e9190613870565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106106ae5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6904ee2d6d415b85acef8160201b83106106d8576904ee2d6d415b85acef8160201b830492506020015b662386f26fc1000083106106f657662386f26fc10000830492506010015b6305f5e100831061070e576305f5e100830492506008015b612710831061072257612710830492506004015b60648310610734576064830492506002015b600a831061054c5760010192915050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561077d5761077d610745565b60405290565b600082601f83011261079457600080fd5b81356001600160401b03808211156107ae576107ae610745565b604051601f8301601f19908116603f011681019082821181831017156107d6576107d6610745565b816040528381528660208588010111156107ef57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561082157600080fd5b81356001600160401b038082111561083857600080fd5b908301906080828603121561084c57600080fd5b61085461075b565b82358281111561086357600080fd5b61086f87828601610783565b82525060208301358281111561088457600080fd5b61089087828601610783565b60208301525060408381013590820152606090920135916001600160a01b03831683146108bc57600080fd5b6060810192909252509392505050565b60005b838110156108e75781810151838201526020016108cf565b50506000910152565b602081526000825180602084015261090f8160408501602087016108cc565b601f01601f19169190910160400192915050565b600081516109358185602086016108cc565b9290920192915050565b6b416a6e6120546f6b656e202360a01b81526000825161096681600c8501602087016108cc565b91909101600c0192915050565b683d913730b6b2911d1160b91b81528451600090610998816009850160208a016108cc565b71111610113232b9b1b934b83a34b7b7111d1160711b60099184019182015285516109ca81601b840160208a016108cc565b6b1116101134b6b0b3b2911d1160a11b601b92909101918201527919185d184e9a5b5859d94bdcdd99cade1b5b0ed8985cd94d8d0b60321b60278201528451610a1a8160418401602089016108cc565b6b1116101137bbb732b9111d1160a11b604192909101918201528351610a4781604d8401602088016108cc565b61227d60f01b604d9290910191820152604f019695505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251610a9c81601d8501602087016108cc565b91909101601d0192915050565b7f3c7376672066696c6c3d226e6f6e65222076696577426f783d2230203020353181527f32203531322220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f6020820152691918181817b9bb33911f60b11b604082015260008551610b1a81604a850160208a016108cc565b855190830190610b3181604a840160208a016108cc565b8551910190610b4781604a8401602089016108cc565b8451910190610b5d81604a8401602088016108cc565b651e17b9bb339f60d11b604a92909101918201526050019695505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561054c5761054c610b7e565b600082610bc457634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761054c5761054c610b7e565b634e487b7160e01b600052603260045260246000fd5b600081610c0557610c05610b7e565b506000190190565b600080516020613a018339815191528082527f783d223332222066696c6c3d2275726c28237061696e74305f6c696e6561725f60208301526918989aaf9a989491179f60b11b6040830152604a8201527f783d223332222066696c6c3d22626c61636b222066696c6c2d6f706163697479606a820152671e9118171a91179f60c11b608a8201527f3c672066696c7465723d2275726c282366696c746572305f665f3131355f353160928201526214911f60e91b60b28201527f3c656c6c697073652063783d22333734222063793d223339302e35222072783d60b58201527f22313232222072793d223132312e35222066696c6c3d2223423435434436222f60d5820152601f60f91b60f58201527f3c636972636c652063783d22313537222063793d223331352220723d2231323260f68201527111103334b6361e9111999ba321a32111179f60711b6101168201527f3c656c6c697073652063783d223133372e373833222063793d223133372e35226101288201527f2072783d223132312e373833222072793d223132312e35222066696c6c3d2223610148820152681b1a1922221911179f60b91b610168820152600061054c610ead610e67610de361017186015b631e17b39f60e11b815260040190565b7f3c72656374206f7061636974793d22302e352220783d2231362e352220793d2281527f31362e35222077696474683d2234373922206865696768743d2234373922207260208201527f783d2232332e35222066696c6c3d22626c61636b22207374726f6b653d22776860408201526534ba3291179f60d11b606082015260660190565b7f3c636972636c652063783d22323536222063793d223235362220723d22323238815273171a911039ba3937b5b29e913bb434ba3291179f60611b602082015260340190565b7f3c636972636c652063783d22323536222063793d223235362220723d22323139815273171a911039ba3937b5b29e913bb434ba3291179f60611b602082015260340190565b7f3c7061746820643d224d3431302e32373320343637433431302e32303420343681527f37203431302e313339203436362e393734203431302e303738203436362e393260208201527f32433431302e303236203436362e38363120343130203436362e37393620343160408201527f30203436362e37323743343130203436362e363834203431302e30303420343660608201527f362e363435203431302e303133203436362e36314c3431332e3036382034353860808201527f2e323634433431332e303934203435382e313639203431332e3134362034353860a08201527f2e303836203431332e323234203435382e303137433431332e3331312034353760c08201527f2e393339203431332e343238203435372e39203431332e353735203435372e3960e08201527f483431352e343939433431352e363436203435372e39203431352e37353920346101008201527f35372e393339203431352e383337203435382e303137433431352e39323420346101208201527f35382e303836203431352e3938203435382e313639203431362e3030362034356101408201527f382e3236344c3431392e303438203436362e3631433431392e303635203436366101608201527f2e363435203431392e303734203436362e363834203431392e303734203436366101808201527f2e373237433431392e303734203436362e373936203431392e303434203436366101a08201527f2e383631203431382e393833203436362e393232433431382e393331203436366101c08201527f2e393734203431382e38363620343637203431382e37383820343637483431376101e08201527f2e313839433431372e30353920343637203431362e393539203436362e3937206102008201527f3431362e3839203436362e393039433431362e383239203436362e38342034316102208201527f362e3739203436362e373739203431362e373733203436362e3732374c3431366102408201527f2e323636203436352e343031483431322e3739354c3431322e333031203436366102608201527f2e373237433431322e323834203436362e373739203431322e323435203436366102808201527f2e3834203431322e313834203436362e393039433431322e313233203436362e6102a08201527f3937203431322e30313920343637203431312e38373220343637483431302e326102c08201527f37335a4d3431332e333238203436332e353239483431352e3734364c3431342e6102e08201527f353234203436302e3039374c3431332e333238203436332e3532395a222066696103008201526b36361e913bb434ba3291179f60a11b6103208201527f3c7061746820643d224d3433312e313138203436372e3133433433302e36323461032c8201527f203436372e3133203433302e313531203436372e303639203432392e3730312061034c8201527f3436362e393438433432392e323539203436362e383138203432382e3836342061036c8201527f3436362e363237203432382e353138203436362e333736433432382e3137312061038c8201527f3436362e313235203432372e383934203436352e383133203432372e'... 20126 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/base64/base64.sol":{"content":"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0;\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides functions for encoding/decoding base64\\nlibrary Base64 {\\n    string internal constant TABLE_ENCODE = \'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\';\\n    bytes  internal constant TABLE_DECODE = hex\\"0000000000000000000000000000000000000000000000000000000000000000\\"\\n                                            hex\\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\\"\\n                                            hex\\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\\"\\n                                            hex\\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\\";\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return \'\';\\n\\n        // load the table into memory\\n        string memory table = TABLE_ENCODE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n                // read 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // write 4 characters\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n            }\\n\\n            // padding with \'=\'\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n\\n        return result;\\n    }\\n\\n    function decode(string memory _data) internal pure returns (bytes memory) {\\n        bytes memory data = bytes(_data);\\n\\n        if (data.length == 0) return new bytes(0);\\n        require(data.length % 4 == 0, \\"invalid base64 decoder input\\");\\n\\n        // load the table into memory\\n        bytes memory table = TABLE_DECODE;\\n\\n        // every 4 characters represent 3 bytes\\n        uint256 decodedLen = (data.length / 4) * 3;\\n\\n        // add some extra buffer at the end required for the writing\\n        bytes memory result = new bytes(decodedLen + 32);\\n\\n        assembly {\\n            // padding with \'=\'\\n            let lastBytes := mload(add(data, mload(data)))\\n            if eq(and(lastBytes, 0xFF), 0x3d) {\\n                decodedLen := sub(decodedLen, 1)\\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\\n                    decodedLen := sub(decodedLen, 1)\\n                }\\n            }\\n\\n            // set the actual output length\\n            mstore(result, decodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 4 characters at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               // read 4 characters\\n               dataPtr := add(dataPtr, 4)\\n               let input := mload(dataPtr)\\n\\n               // write 3 bytes\\n               let output := add(\\n                   add(\\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\\n                   add(\\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\\n                    )\\n                )\\n                mstore(resultPtr, shl(232, output))\\n                resultPtr := add(resultPtr, 3)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\"./math/Math.sol\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\"0123456789abcdef\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\"0\\";\\n        buffer[1] = \\"x\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\"Strings: hex length insufficient\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, pro'... 26022 more characters
  }
}
2024-01-08T15:28:14.138Z cannon:cli:rpc eth_chainId

2024-01-08T15:28:14.141Z cannon:cli:rpc eth_getCode

2024-01-08T15:28:14.142Z cannon:builder:contract performing arachnid create2
2024-01-08T15:28:14.149Z cannon:builder:contract create2 address is 0x701ea8F0825E7B160c8C39160783eB45f8110424
2024-01-08T15:28:14.153Z cannon:cli:rpc eth_chainId

2024-01-08T15:28:14.155Z cannon:cli:rpc eth_getCode

2024-01-08T15:28:15.581Z cannon:cli:rpc anvil_impersonateAccount

2024-01-08T15:28:15.584Z cannon:cli:rpc anvil_setBalance

2024-01-08T15:28:15.590Z cannon:cli:rpc eth_blockNumber

2024-01-08T15:28:15.591Z cannon:cli:rpc eth_chainId

2024-01-08T15:28:15.596Z cannon:cli:rpc eth_chainId

2024-01-08T15:28:15.606Z cannon:cli:rpc eth_estimateGas

2024-01-08T15:28:15.631Z cannon:cli:rpc eth_sendTransaction

2024-01-08T15:28:15.633Z cannon:cli:rpc 
    Transaction: 0xd812ffc0aea8df87cc4bfe80519632bceddd9fdf8c405c8e25bb1a389b5670af
    Gas used: 3316823

    Block Number: 114564388
    Block Hash: 0x5ceb1368f6ea6707ca1239ff0d4a6214714a98c831497cb7c830b2c5d26e6128
    Block Time: "Mon, 8 Jan 2024 15:28:13 +0000"


2024-01-08T15:28:15.636Z cannon:cli:rpc eth_chainId

2024-01-08T15:28:15.639Z cannon:cli:rpc eth_getTransactionByHash

2024-01-08T15:28:15.654Z cannon:cli:rpc eth_chainId

2024-01-08T15:28:15.657Z cannon:cli:rpc eth_getTransactionReceipt

2024-01-08T15:28:15.660Z cannon:builder:contract arachnid create2 complete {
  to: '0x4e59b44847b379578588920cA78FbF26c0B4956C',
  from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
  contractAddress: null,
  transactionIndex: 0,
  gasUsed: BigNumber { _hex: '0x329c57', _isBigNumber: true },
  logsBloom: '0x
  blockHash: '0x5ceb1368f6ea6707ca1239ff0d4a6214714a98c831497cb7c830b2c5d26e6128',
  transactionHash: '0xd812ffc0aea8df87cc4bfe80519632bceddd9fdf8c405c8e25bb1a389b5670af',
  logs: [],
  blockNumber: 114564388,
  confirmations: 1,
  cumulativeGasUsed: BigNumber { _hex: '0x329c57', _isBigNumber: true },
  effectiveGasPrice: BigNumber { _hex: '0x24b7d8', _isBigNumber: true },
  status: 1,
  type: 2,
  byzantium: true
}
2024-01-08T15:28:15.661Z cannon:builder:contract contract deployed to address 0x701ea8F0825E7B160c8C39160783eB45f8110424
  ‚úî Successfully deployed PositionNFTSVG using CREATE2
  Contract Address: 0x701ea8F0825E7B160c8C39160783eB45f8110424
  Transaction Hash: 0xd812ffc0aea8df87cc4bfe80519632bceddd9fdf8c405c8e25bb1a389b5670af
  Transaction Cost: 0.00000798147019428 ETH (3,316,823 gas)

2024-01-08T15:28:15.671Z cannon:builder:runtime resolve artifact PositionNFTSVG
2024-01-08T15:28:15.672Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:28:25.097Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [ [Object] ],
    devdoc: { kind: 'dev', methods: {}, version: 1 },
    userdoc: { kind: 'user', methods: {}, version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/PositionNFTSVG.sol': 'PositionNFTSVG' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/base64/base64.sol': {
      keccak256: '0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Strings.sol': {
      keccak256: '0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/PositionNFTSVG.sol': {
      keccak256: '0xc99cd282f520c3bdc84f4da0309ad36ff0bab58a4057247c3eb7ab905df681c5',
      urls: [Array],
      license: 'BUSL-1.1'
    }
  },
  version: 1
}
2024-01-08T15:28:25.098Z cannon:cli:foundry evm version paris
2024-01-08T15:28:25.100Z cannon:builder:runtime reported contract artifact PositionNFTSVG {
  contractName: 'PositionNFTSVG',
  sourceName: 'src/libraries/external/PositionNFTSVG.sol',
  abi: [
    {
      type: 'function',
      name: 'constructTokenURI',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'pure'
    }
  ],
  bytecode: '0x613ad661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806337b2b7511461003a575b600080fd5b61004d61004836600461080f565b610063565b60405161005a91906108f0565b60405180910390f35b604080518082019091526015815274416a6e6120506f736974696f6e73204e46542d563160581b6020820152606090600061009d8461015a565b905060006100aa826101b4565b905060006100bb8660400151610318565b6040516020016100cb919061093f565b604051602081830303815290604052905060006100ff601488606001516001600160a01b03166103aa90919063ffffffff16565b905061012f8286858460405160200161011b9493929190610973565b6040516020818303038152906040526101b4565b60405160200161013f9190610a64565b60405160208183030381529060405295505050505050919050565b6060610164610552565b61016c6105e6565b61017e8460000151856020015161060b565b61018b8560400151610654565b60405160200161019e9493929190610aa9565b6040516020818303038152906040529050919050565b606081516000036101d357505060408051602081019091526000815290565b6000604051806060016040528060408152602001613a4160409139905060006003845160026102029190610b94565b61020c9190610ba7565b610217906004610bc9565b90506000610226826020610b94565b6001600160401b0381111561023d5761023d610745565b6040519080825280601f01601f191660200182016040528015610267576020820181803683370190505b509050818152600183018586518101602084015b818310156102d3576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f811685015182535060010161027b565b6003895106600181146102ed57600281146102fe5761030a565b613d3d60f01b60011983015261030a565b603d60f81b6000198301525b509398975050505050505050565b606060006103258361066f565b60010190506000816001600160401b0381111561034457610344610745565b6040519080825280601f01601f19166020018201604052801561036e576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461037857509392505050565b606060006103b9836002610bc9565b6103c4906002610b94565b6001600160401b038111156103db576103db610745565b6040519080825280601f01601f191660200182016040528015610405576020820181803683370190505b509050600360fc1b8160008151811061042057610420610be0565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061044f5761044f610be0565b60200101906001600160f81b031916908160001a9053506000610473846002610bc9565b61047e906001610b94565b90505b60018111156104f6576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106104b2576104b2610be0565b1a60f81b8282815181106104c8576104c8610be0565b60200101906001600160f81b031916908160001a90535060049490941c936104ef81610bf6565b9050610481565b5083156105495760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b90505b92915050565b6060600060405160200161056590610c0d565b6040516020818303038152906040529050600060405160200161058790610ef3565b604051602081830303815290604052905060006040516020016105a9906121af565b60405160208183030381529060405290508282826040516020016105cf93929190613317565b604051602081830303815290604052935050505090565b60606040516020016105f7906133a5565b604051602081830303815290604052905090565b60608282604051602001610620929190613753565b60408051601f198184030181529082905261063d9160200161378f565b604051602081830303815290604052905092915050565b606061065f82610318565b60405160200161019e9190613870565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106106ae5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6904ee2d6d415b85acef8160201b83106106d8576904ee2d6d415b85acef8160201b830492506020015b662386f26fc1000083106106f657662386f26fc10000830492506010015b6305f5e100831061070e576305f5e100830492506008015b612710831061072257612710830492506004015b60648310610734576064830492506002015b600a831061054c5760010192915050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561077d5761077d610745565b60405290565b600082601f83011261079457600080fd5b81356001600160401b03808211156107ae576107ae610745565b604051601f8301601f19908116603f011681019082821181831017156107d6576107d6610745565b816040528381528660208588010111156107ef57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561082157600080fd5b81356001600160401b038082111561083857600080fd5b908301906080828603121561084c57600080fd5b61085461075b565b82358281111561086357600080fd5b61086f87828601610783565b82525060208301358281111561088457600080fd5b61089087828601610783565b60208301525060408381013590820152606090920135916001600160a01b03831683146108bc57600080fd5b6060810192909252509392505050565b60005b838110156108e75781810151838201526020016108cf565b50506000910152565b602081526000825180602084015261090f8160408501602087016108cc565b601f01601f19169190910160400192915050565b600081516109358185602086016108cc565b9290920192915050565b6b416a6e6120546f6b656e202360a01b81526000825161096681600c8501602087016108cc565b91909101600c0192915050565b683d913730b6b2911d1160b91b81528451600090610998816009850160208a016108cc565b71111610113232b9b1b934b83a34b7b7111d1160711b60099184019182015285516109ca81601b840160208a016108cc565b6b1116101134b6b0b3b2911d1160a11b601b92909101918201527919185d184e9a5b5859d94bdcdd99cade1b5b0ed8985cd94d8d0b60321b60278201528451610a1a8160418401602089016108cc565b6b1116101137bbb732b9111d1160a11b604192909101918201528351610a4781604d8401602088016108cc565b61227d60f01b604d9290910191820152604f019695505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251610a9c81601d8501602087016108cc565b91909101601d0192915050565b7f3c7376672066696c6c3d226e6f6e65222076696577426f783d2230203020353181527f32203531322220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f6020820152691918181817b9bb33911f60b11b604082015260008551610b1a81604a850160208a016108cc565b855190830190610b3181604a840160208a016108cc565b8551910190610b4781604a8401602089016108cc565b8451910190610b5d81604a8401602088016108cc565b651e17b9bb339f60d11b604a92909101918201526050019695505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561054c5761054c610b7e565b600082610bc457634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761054c5761054c610b7e565b634e487b7160e01b600052603260045260246000fd5b600081610c0557610c05610b7e565b506000190190565b600080516020613a018339815191528082527f783d223332222066696c6c3d2275726c28237061696e74305f6c696e6561725f60208301526918989aaf9a989491179f60b11b6040830152604a8201527f783d223332222066696c6c3d22626c61636b222066696c6c2d6f706163697479606a820152671e9118171a91179f60c11b608a8201527f3c672066696c7465723d2275726c282366696c746572305f665f3131355f353160928201526214911f60e91b60b28201527f3c656c6c697073652063783d22333734222063793d223339302e35222072783d60b58201527f22313232222072793d223132312e35222066696c6c3d2223423435434436222f60d5820152601f60f91b60f58201527f3c636972636c652063783d22313537222063793d223331352220723d2231323260f68201527111103334b6361e9111999ba321a32111179f60711b6101168201527f3c656c6c697073652063783d223133372e373833222063793d223133372e35226101288201527f2072783d223132312e373833222072793d223132312e35222066696c6c3d2223610148820152681b1a1922221911179f60b91b610168820152600061054c610ead610e67610de361017186015b631e17b39f60e11b815260040190565b7f3c72656374206f7061636974793d22302e352220783d2231362e352220793d2281527f31362e35222077696474683d2234373922206865696768743d2234373922207260208201527f783d2232332e35222066696c6c3d22626c61636b22207374726f6b653d22776860408201526534ba3291179f60d11b606082015260660190565b7f3c636972636c652063783d22323536222063793d223235362220723d22323238815273171a911039ba3937b5b29e913bb434ba3291179f60611b602082015260340190565b7f3c636972636c652063783d22323536222063793d223235362220723d22323139815273171a911039ba3937b5b29e913bb434ba3291179f60611b602082015260340190565b7f3c7061746820643d224d3431302e32373320343637433431302e32303420343681527f37203431302e313339203436362e393734203431302e303738203436362e393260208201527f32433431302e303236203436362e38363120343130203436362e37393620343160408201527f30203436362e37323743343130203436362e363834203431302e30303420343660608201527f362e363435203431302e303133203436362e36314c3431332e3036382034353860808201527f2e323634433431332e303934203435382e313639203431332e3134362034353860a08201527f2e303836203431332e323234203435382e303137433431332e3331312034353760c08201527f2e393339203431332e343238203435372e39203431332e353735203435372e3960e08201527f483431352e343939433431352e363436203435372e39203431352e37353920346101008201527f35372e393339203431352e383337203435382e303137433431352e39323420346101208201527f35382e303836203431352e3938203435382e313639203431362e3030362034356101408201527f382e3236344c3431392e303438203436362e3631433431392e303635203436366101608201527f2e363435203431392e303734203436362e363834203431392e303734203436366101808201527f2e373237433431392e303734203436362e373936203431392e303434203436366101a08201527f2e383631203431382e393833203436362e393232433431382e393331203436366101c08201527f2e393734203431382e38363620343637203431382e37383820343637483431376101e08201527f2e313839433431372e30353920343637203431362e393539203436362e3937206102008201527f3431362e3839203436362e393039433431362e383239203436362e38342034316102208201527f362e3739203436362e373739203431362e373733203436362e3732374c3431366102408201527f2e323636203436352e343031483431322e3739354c3431322e333031203436366102608201527f2e373237433431322e323834203436362e373739203431322e323435203436366102808201527f2e3834203431322e313834203436362e393039433431322e313233203436362e6102a08201527f3937203431322e30313920343637203431312e38373220343637483431302e326102c08201527f37335a4d3431332e333238203436332e353239483431352e3734364c3431342e6102e08201527f353234203436302e3039374c3431332e333238203436332e3532395a222066696103008201526b36361e913bb434ba3291179f60a11b6103208201527f3c7061746820643d224d3433312e313138203436372e3133433433302e36323461032c8201527f203436372e3133203433302e313531203436372e303639203432392e3730312061034c8201527f3436362e393438433432392e323539203436362e383138203432382e3836342061036c8201527f3436362e3632372034'... 20242 more characters,
  deployedBytecode: '0x73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806337b2b7511461003a575b600080fd5b61004d61004836600461080f565b610063565b60405161005a91906108f0565b60405180910390f35b604080518082019091526015815274416a6e6120506f736974696f6e73204e46542d563160581b6020820152606090600061009d8461015a565b905060006100aa826101b4565b905060006100bb8660400151610318565b6040516020016100cb919061093f565b604051602081830303815290604052905060006100ff601488606001516001600160a01b03166103aa90919063ffffffff16565b905061012f8286858460405160200161011b9493929190610973565b6040516020818303038152906040526101b4565b60405160200161013f9190610a64565b60405160208183030381529060405295505050505050919050565b6060610164610552565b61016c6105e6565b61017e8460000151856020015161060b565b61018b8560400151610654565b60405160200161019e9493929190610aa9565b6040516020818303038152906040529050919050565b606081516000036101d357505060408051602081019091526000815290565b6000604051806060016040528060408152602001613a4160409139905060006003845160026102029190610b94565b61020c9190610ba7565b610217906004610bc9565b90506000610226826020610b94565b6001600160401b0381111561023d5761023d610745565b6040519080825280601f01601f191660200182016040528015610267576020820181803683370190505b509050818152600183018586518101602084015b818310156102d3576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f811685015182535060010161027b565b6003895106600181146102ed57600281146102fe5761030a565b613d3d60f01b60011983015261030a565b603d60f81b6000198301525b509398975050505050505050565b606060006103258361066f565b60010190506000816001600160401b0381111561034457610344610745565b6040519080825280601f01601f19166020018201604052801561036e576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461037857509392505050565b606060006103b9836002610bc9565b6103c4906002610b94565b6001600160401b038111156103db576103db610745565b6040519080825280601f01601f191660200182016040528015610405576020820181803683370190505b509050600360fc1b8160008151811061042057610420610be0565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061044f5761044f610be0565b60200101906001600160f81b031916908160001a9053506000610473846002610bc9565b61047e906001610b94565b90505b60018111156104f6576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106104b2576104b2610be0565b1a60f81b8282815181106104c8576104c8610be0565b60200101906001600160f81b031916908160001a90535060049490941c936104ef81610bf6565b9050610481565b5083156105495760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b90505b92915050565b6060600060405160200161056590610c0d565b6040516020818303038152906040529050600060405160200161058790610ef3565b604051602081830303815290604052905060006040516020016105a9906121af565b60405160208183030381529060405290508282826040516020016105cf93929190613317565b604051602081830303815290604052935050505090565b60606040516020016105f7906133a5565b604051602081830303815290604052905090565b60608282604051602001610620929190613753565b60408051601f198184030181529082905261063d9160200161378f565b604051602081830303815290604052905092915050565b606061065f82610318565b60405160200161019e9190613870565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106106ae5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6904ee2d6d415b85acef8160201b83106106d8576904ee2d6d415b85acef8160201b830492506020015b662386f26fc1000083106106f657662386f26fc10000830492506010015b6305f5e100831061070e576305f5e100830492506008015b612710831061072257612710830492506004015b60648310610734576064830492506002015b600a831061054c5760010192915050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561077d5761077d610745565b60405290565b600082601f83011261079457600080fd5b81356001600160401b03808211156107ae576107ae610745565b604051601f8301601f19908116603f011681019082821181831017156107d6576107d6610745565b816040528381528660208588010111156107ef57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561082157600080fd5b81356001600160401b038082111561083857600080fd5b908301906080828603121561084c57600080fd5b61085461075b565b82358281111561086357600080fd5b61086f87828601610783565b82525060208301358281111561088457600080fd5b61089087828601610783565b60208301525060408381013590820152606090920135916001600160a01b03831683146108bc57600080fd5b6060810192909252509392505050565b60005b838110156108e75781810151838201526020016108cf565b50506000910152565b602081526000825180602084015261090f8160408501602087016108cc565b601f01601f19169190910160400192915050565b600081516109358185602086016108cc565b9290920192915050565b6b416a6e6120546f6b656e202360a01b81526000825161096681600c8501602087016108cc565b91909101600c0192915050565b683d913730b6b2911d1160b91b81528451600090610998816009850160208a016108cc565b71111610113232b9b1b934b83a34b7b7111d1160711b60099184019182015285516109ca81601b840160208a016108cc565b6b1116101134b6b0b3b2911d1160a11b601b92909101918201527919185d184e9a5b5859d94bdcdd99cade1b5b0ed8985cd94d8d0b60321b60278201528451610a1a8160418401602089016108cc565b6b1116101137bbb732b9111d1160a11b604192909101918201528351610a4781604d8401602088016108cc565b61227d60f01b604d9290910191820152604f019695505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251610a9c81601d8501602087016108cc565b91909101601d0192915050565b7f3c7376672066696c6c3d226e6f6e65222076696577426f783d2230203020353181527f32203531322220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f6020820152691918181817b9bb33911f60b11b604082015260008551610b1a81604a850160208a016108cc565b855190830190610b3181604a840160208a016108cc565b8551910190610b4781604a8401602089016108cc565b8451910190610b5d81604a8401602088016108cc565b651e17b9bb339f60d11b604a92909101918201526050019695505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561054c5761054c610b7e565b600082610bc457634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761054c5761054c610b7e565b634e487b7160e01b600052603260045260246000fd5b600081610c0557610c05610b7e565b506000190190565b600080516020613a018339815191528082527f783d223332222066696c6c3d2275726c28237061696e74305f6c696e6561725f60208301526918989aaf9a989491179f60b11b6040830152604a8201527f783d223332222066696c6c3d22626c61636b222066696c6c2d6f706163697479606a820152671e9118171a91179f60c11b608a8201527f3c672066696c7465723d2275726c282366696c746572305f665f3131355f353160928201526214911f60e91b60b28201527f3c656c6c697073652063783d22333734222063793d223339302e35222072783d60b58201527f22313232222072793d223132312e35222066696c6c3d2223423435434436222f60d5820152601f60f91b60f58201527f3c636972636c652063783d22313537222063793d223331352220723d2231323260f68201527111103334b6361e9111999ba321a32111179f60711b6101168201527f3c656c6c697073652063783d223133372e373833222063793d223133372e35226101288201527f2072783d223132312e373833222072793d223132312e35222066696c6c3d2223610148820152681b1a1922221911179f60b91b610168820152600061054c610ead610e67610de361017186015b631e17b39f60e11b815260040190565b7f3c72656374206f7061636974793d22302e352220783d2231362e352220793d2281527f31362e35222077696474683d2234373922206865696768743d2234373922207260208201527f783d2232332e35222066696c6c3d22626c61636b22207374726f6b653d22776860408201526534ba3291179f60d11b606082015260660190565b7f3c636972636c652063783d22323536222063793d223235362220723d22323238815273171a911039ba3937b5b29e913bb434ba3291179f60611b602082015260340190565b7f3c636972636c652063783d22323536222063793d223235362220723d22323139815273171a911039ba3937b5b29e913bb434ba3291179f60611b602082015260340190565b7f3c7061746820643d224d3431302e32373320343637433431302e32303420343681527f37203431302e313339203436362e393734203431302e303738203436362e393260208201527f32433431302e303236203436362e38363120343130203436362e37393620343160408201527f30203436362e37323743343130203436362e363834203431302e30303420343660608201527f362e363435203431302e303133203436362e36314c3431332e3036382034353860808201527f2e323634433431332e303934203435382e313639203431332e3134362034353860a08201527f2e303836203431332e323234203435382e303137433431332e3331312034353760c08201527f2e393339203431332e343238203435372e39203431332e353735203435372e3960e08201527f483431352e343939433431352e363436203435372e39203431352e37353920346101008201527f35372e393339203431352e383337203435382e303137433431352e39323420346101208201527f35382e303836203431352e3938203435382e313639203431362e3030362034356101408201527f382e3236344c3431392e303438203436362e3631433431392e303635203436366101608201527f2e363435203431392e303734203436362e363834203431392e303734203436366101808201527f2e373237433431392e303734203436362e373936203431392e303434203436366101a08201527f2e383631203431382e393833203436362e393232433431382e393331203436366101c08201527f2e393734203431382e38363620343637203431382e37383820343637483431376101e08201527f2e313839433431372e30353920343637203431362e393539203436362e3937206102008201527f3431362e3839203436362e393039433431362e383239203436362e38342034316102208201527f362e3739203436362e373739203431362e373733203436362e3732374c3431366102408201527f2e323636203436352e343031483431322e3739354c3431322e333031203436366102608201527f2e373237433431322e323834203436362e373739203431322e323435203436366102808201527f2e3834203431322e313834203436362e393039433431322e313233203436362e6102a08201527f3937203431322e30313920343637203431312e38373220343637483431302e326102c08201527f37335a4d3431332e333238203436332e353239483431352e3734364c3431342e6102e08201527f353234203436302e3039374c3431332e333238203436332e3532395a222066696103008201526b36361e913bb434ba3291179f60a11b6103208201527f3c7061746820643d224d3433312e313138203436372e3133433433302e36323461032c8201527f203436372e3133203433302e313531203436372e303639203432392e3730312061034c8201527f3436362e393438433432392e323539203436362e383138203432382e3836342061036c8201527f3436362e363237203432382e353138203436362e333736433432382e3137312061038c8201527f3436362e313235203432372e383934203436352e383133203432372e'... 20126 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/base64/base64.sol":{"content":"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0;\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides functions for encoding/decoding base64\\nlibrary Base64 {\\n    string internal constant TABLE_ENCODE = \'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\';\\n    bytes  internal constant TABLE_DECODE = hex\\"0000000000000000000000000000000000000000000000000000000000000000\\"\\n                                            hex\\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\\"\\n                                            hex\\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\\"\\n                                            hex\\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\\";\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return \'\';\\n\\n        // load the table into memory\\n        string memory table = TABLE_ENCODE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n                // read 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // write 4 characters\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n            }\\n\\n            // padding with \'=\'\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n\\n        return result;\\n    }\\n\\n    function decode(string memory _data) internal pure returns (bytes memory) {\\n        bytes memory data = bytes(_data);\\n\\n        if (data.length == 0) return new bytes(0);\\n        require(data.length % 4 == 0, \\"invalid base64 decoder input\\");\\n\\n        // load the table into memory\\n        bytes memory table = TABLE_DECODE;\\n\\n        // every 4 characters represent 3 bytes\\n        uint256 decodedLen = (data.length / 4) * 3;\\n\\n        // add some extra buffer at the end required for the writing\\n        bytes memory result = new bytes(decodedLen + 32);\\n\\n        assembly {\\n            // padding with \'=\'\\n            let lastBytes := mload(add(data, mload(data)))\\n            if eq(and(lastBytes, 0xFF), 0x3d) {\\n                decodedLen := sub(decodedLen, 1)\\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\\n                    decodedLen := sub(decodedLen, 1)\\n                }\\n            }\\n\\n            // set the actual output length\\n            mstore(result, decodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 4 characters at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               // read 4 characters\\n               dataPtr := add(dataPtr, 4)\\n               let input := mload(dataPtr)\\n\\n               // write 3 bytes\\n               let output := add(\\n                   add(\\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\\n                   add(\\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\\n                    )\\n                )\\n                mstore(resultPtr, shl(232, output))\\n                resultPtr := add(resultPtr, 3)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\"./math/Math.sol\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\"0123456789abcdef\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\"0\\";\\n        buffer[1] = \\"x\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\"Strings: hex length insufficient\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, pro'... 26022 more characters
  }
}
2024-01-08T15:28:25.102Z cannon:verbose:builder:definition creating hash of {"bytecode":"","args":[],"salt":"AJNA","value":[]}
2024-01-08T15:28:25.107Z cannon:builder:runtime resolve artifact SettlerActions
2024-01-08T15:28:25.108Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:28:32.723Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/SettlerActions.sol': 'SettlerActions' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/SettlerActions.sol': {
      keccak256: '0x05edfe3f72323b7212fbb5134f76211f397138c2ed30ddf0f3683772213c831d',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:28:32.724Z cannon:cli:foundry evm version paris
2024-01-08T15:28:32.731Z cannon:builder:runtime reported contract artifact SettlerActions {
  contractName: 'SettlerActions',
  sourceName: 'src/libraries/external/SettlerActions.sol',
  abi: [
    {
      type: 'event',
      name: 'AuctionNFTSettle',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'AuctionSettle',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'BucketBankruptcy',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'Settle',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'AuctionNotClearable', inputs: [] },
    { type: 'error', name: 'BucketBankruptcyBlock', inputs: [] },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'BucketPriceOutOfBounds', inputs: [] },
    { type: 'error', name: 'InvalidAmount', inputs: [] },
    { type: 'error', name: 'NoAuction', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__CeilOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'PRBMath__MulDivOverflow', inputs: [Array] }
  ],
  bytecode: '0x6125a061003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063e47aaa311461003a575b600080fd5b81801561004657600080fd5b5061005a6100553660046122fb565b6100b9565b6040516100b09190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b60405180910390f35b6100f96040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81516001600160a01b031660009081526003890160205260408120600101546001600160601b031690819003610142576040516338e806f160e11b815260040160405180910390fd5b82516001600160a01b031660009081526002808801602090815260409283902083516060810185528154815260018201549281019290925290910154918101919091526203f48061019383426123f0565b111580156101a45750602081015115155b156101c2576040516320560ae760e21b815260040160405180910390fd5b805183526020810180516040850152815160a080860191909152905160808501526101f7908a908a90879085908a01356104a1565b6020878101919091528301528082521580159061021657506020810151155b15610391576000846040015161025283600001518660a00151896020013561023e91906123f0565b6102489190612403565b8860a001356107dc565b61025c9190612403565b9050600061026c8a612000015490565b9050600088600201548d6002015461028c670de0b6b3e2feca0085610804565b6102969190612403565b6102a09190612403565b9050808311156103725760006102cd6102c66102bc84876123f0565b8b60a0013561082e565b8651610843565b90506000831180156102ea57506207e9006102e887426123f0565b105b1561035b5787516001600160a01b0316600090815260038f0160205260409020600501546103188282610843565b915061032482826123f0565b9050808f60030160008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060050181905550505b808560000181815161036d91906123f0565b905250505b83511561038d5761038a8c8c89878c60a0013561085a565b84525b5050505b805160a0840180516103a49083906123f0565b90525060a0808401516103b991870135610804565b60c0840181905284516040519182526001600160a01b0316907fa3788eedc10ef3ec6982384227c562c6666cf2b6af4f6a583b6d5d0f2ba0d2049060200160405180910390a2805160000361043657835160208083015161042f928d928d928d9291610427908c018c612416565b60ff166109b7565b5060208201525b80516020808501919091528101516060840181905260808401805161045c9083906123f0565b90525092516001600160a01b03166000908152600296870160209081526040918290208551815590850151600182015593015192909501919091559695505050505050565b8151602080840151908501515b80158015906104bc57508215155b80156104c757508115155b156107d15761052960405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610534886001610b37565b6101208401525060a0820181905261054d908990610c27565b6060820181905261014082015260a081015161056890610cd5565b60e082015261014081015115610794576105828486610804565b602082015260e08101516105979084906107dc565b60c08201526101208101516101408201516105b29190610804565b61010082018190526020820151118015906105d5575080602001518160c0015110155b15610612576105ed8160200151826101200151610d47565b610140820152602081015160e08201516106079190610d67565b815260009350610690565b8061010001518160c0015110610658576106358161010001518260e00151610d67565b8152610100810151610647908661082e565b61065190856123f0565b9350610690565b61066b8160c00151826101200151610d47565b61014082015282815260c0810151610683908661082e565b61068d90856123f0565b93505b805161069c90846123f0565b60a0820151600090815260208b905260409020805460808401528251600182015492955090916106cc9190612403565b604083015260608201516101408301516106e69190610843565b61014083018190526060830180516106ff9083906123f0565b9052506101408201511561072157610721898360a00151846101400151610d93565b604082015115801561073557506060820151155b80156107445750608082015115155b15610783576000815542600282015560a0820151608083015160405190815260008051602061254b8339815191529060200160405180910390a261078e565b604082015160018201555b506107c0565b60a0810151600090815260208a905260408120885160e08401516107ba93908790610e65565b50600092505b6107c982612439565b9150506104ae565b955095509592505050565b6000670de0b6b3a76400006107f18385612450565b6107fb919061247d565b90505b92915050565b6000670de0b6b3a764000061081a60028261247d565b6108248486612450565b6107f19190612403565b6000816107f1670de0b6b3a764000085612450565b60008183111561085357816107fb565b5090919050565b81515b60208401511580159061086f57508015155b156109ae57600080610882876001610b37565b925050915060006108938884610c27565b905060006108a18383610804565b905060006108af8688610804565b905060008183106108f8576000965060006108d36108cd8488610d47565b86610843565b90506108df81866123f0565b915080156108f2576108f28c8883610d93565b5061091f565b610902838961082e565b61090c90886123f0565b9650831561091f5761091f8b8786610d93565b600086815260208d90526040902080548061093989610cd5565b83600101546109489190612450565b6109528986612450565b61095c9190612403565b1161098f5760008255426002830155604051818152889060008051602061254b8339815191529060200160405180910390a25b8b602001805161099e90612439565b90525061085d9650505050505050565b95945050505050565b6000806000198301610adb57600080670de0b6b3a76400006109d9818861247d565b6109e39190612450565b9350858414610a88576109f684876123f0565b6001600160a01b038816600090815260038c016020526040812060028101546001909101549295509091610a36916001600160601b039081169116610eef565b905064173eb4c80a8111610a4c57611cdc610a55565b610a5581611013565b600081815260208c905260409020909250610a849089610a758c866110dd565b87610a7f87610cd5565b610e65565b9250505b60408051858152602081018490529081018290526001600160a01b038816907fddd6b496b84171d179d9874158b1cbbe422dd482e5523f1b09cb69ebef2878419060600160405180910390a25050610b22565b839150846001600160a01b03167f91a9dcdd01df8b934f14307641e884e0ea6e414bf05fe8daf8c74a28f69b55ee83604051610b1991815260200190565b60405180910390a25b610b2c88866110f6565b965096945050505050565b60008080611000670de0b6b3a764000082808080805b8615610c1957610b5d878b612403565b93508b846120018110610b7257610b7261249f565b015492508b61200101846120018110610b8d57610b8d61249f565b0154915081600003610ba857610ba38684610804565b610bca565b610bca610bb58388612450565b846a0c097ce7bc90715b34b9f160241b6113fb565b610bd49086612403565b90508a811015610bf357611cdc8411610bee578399508094505b610c0d565b8115610c0657610c0386836107dc565b95505b8098508597505b600187901c9650610b4d565b505050505050509250925092565b6000610c32826124cb565b9150600183836120018110610c4957610c4961249f565b0154915060008060005b858416600003610ccb57610c6784876123f0565b925086836120018110610c7c57610c7c61249f565b015491508661200101836120018110610c9757610c9761249f565b0154905080600003610ca95781610cb3565b610cb38183610804565b610cbd90866123f0565b9450600184901b9350610c53565b5050505092915050565b600080610ce48361103c6124e4565b9050610c9f19811280610cf8575061103c81135b15610d1657604051637edf443b60e11b815260040160405180910390fd5b610d40610d3b610d25836114a9565b610d36670df27a2cdf448000611539565b61161d565b6116e2565b9392505050565b600081610d5560028261247d565b610824670de0b6b3a764000086612450565b600081600181610d7f670de0b6b3a764000087612450565b610d899190612403565b6107f191906123f0565b80600003610db45760405163162908e360e11b815260040160405180910390fd5b610dbd826124cb565b91505b6120008211610e605760008184846120018110610ddf57610ddf61249f565b016000828254610def91906123f0565b925050819055905060008461200101846120018110610e1057610e1061249f565b015490508015610e4457610e248282610804565b610e37610e318585612403565b83610804565b610e4191906123f0565b92505b610e4d8461177e565b610e579085612403565b93505050610dc0565b505050565b6002850154600090428103610e8d5760405163c1e4c5f760e01b815260040160405180910390fd5b610ea487600101548860000154878787600061179d565b915083876001016000828254610eba9190612403565b9091555050865482908890600090610ed3908490612403565b90915550610ee590508782888561181a565b5095945050505050565b600080610f20610eff84426123f0565b610f1190670de0b6b3a7640000612450565b680340aad21b3b700000610d47565b9050600068068155a43676e00000821015610f7457610f4d670de0b6b3a763ffff19610d3660148561247d565b9050610f6185610f5c836116e2565b610804565b610f6d90610100612450565b925061100b565b682d89577d7d40200000821015610fcb57610fb1670de0b6b3a763ffff196078610fa768068155a43676e00000866123f0565b610d36919061247d565b9050610fc085610f5c836116e2565b610f6d906004612450565b610fed670de0b6b3a763ffff19603c610fa7682d89577d7d40200000866123f0565b90506010610ffe86610f5c846116e2565b611008919061247d565b92505b505092915050565b600064173eb4c80a82108061103357506b033f4a75fb6ff29166751a4b82115b1561105157604051635665ba4560e11b815260040160405180910390fd5b600061107561105f84611539565b611070670df27a2cdf448000611539565b611875565b905060006110828261193b565b90506000821280156110a457506706f05b59d3b200006110a283836124e4565b135b156110c7576110bf670de0b6b3a7640000820561103d6124e4565b949350505050565b6110bf670de0b6b3a7640000820561103c6124e4565b60006107fb6110ec8484610c27565b610f5c85856119ad565b6001600160a01b03808216600090815260038085016020908152604080842081516101408101835281548088168083526001600160601b03600160a01b9283900481168488015260018086015480831686890152600160601b908190048c16606087015260028701548084166080880152048b1660a086015297850154808b1660c086019081529390041660e084015260048085015461010085015260059094015461012084015287529189019093529084209051928101805492959194939091169290916111c69084906123f0565b925050819055508160c001516001600160a01b03168160000160008282546111ee9190612403565b90915550508354849060009061120c906001600160601b031661250b565b82546001600160601b039182166101009390930a92830291909202199091161790558354600160601b90046001600160a01b03908116908416148015611261575060018401546001600160a01b038481169116145b1561128a5783546001600160601b031684556001840180546001600160a01b03191690556113b9565b83546001600160a01b03808516600160601b90920416036112ef5760a0820180516001600160a01b039081166000908152600387016020526040902060010180546001600160601b03908116909155915186549116600160601b0291161784556113b9565b60018401546001600160a01b03808516911603611355576060820180516001600160a01b039081166000908152600387016020526040902060020180546001600160601b0316905590516001860180546001600160a01b031916919092'... 9382 more characters,
  deployedBytecode: '0x73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063e47aaa311461003a575b600080fd5b81801561004657600080fd5b5061005a6100553660046122fb565b6100b9565b6040516100b09190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b60405180910390f35b6100f96040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81516001600160a01b031660009081526003890160205260408120600101546001600160601b031690819003610142576040516338e806f160e11b815260040160405180910390fd5b82516001600160a01b031660009081526002808801602090815260409283902083516060810185528154815260018201549281019290925290910154918101919091526203f48061019383426123f0565b111580156101a45750602081015115155b156101c2576040516320560ae760e21b815260040160405180910390fd5b805183526020810180516040850152815160a080860191909152905160808501526101f7908a908a90879085908a01356104a1565b6020878101919091528301528082521580159061021657506020810151155b15610391576000846040015161025283600001518660a00151896020013561023e91906123f0565b6102489190612403565b8860a001356107dc565b61025c9190612403565b9050600061026c8a612000015490565b9050600088600201548d6002015461028c670de0b6b3e2feca0085610804565b6102969190612403565b6102a09190612403565b9050808311156103725760006102cd6102c66102bc84876123f0565b8b60a0013561082e565b8651610843565b90506000831180156102ea57506207e9006102e887426123f0565b105b1561035b5787516001600160a01b0316600090815260038f0160205260409020600501546103188282610843565b915061032482826123f0565b9050808f60030160008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060050181905550505b808560000181815161036d91906123f0565b905250505b83511561038d5761038a8c8c89878c60a0013561085a565b84525b5050505b805160a0840180516103a49083906123f0565b90525060a0808401516103b991870135610804565b60c0840181905284516040519182526001600160a01b0316907fa3788eedc10ef3ec6982384227c562c6666cf2b6af4f6a583b6d5d0f2ba0d2049060200160405180910390a2805160000361043657835160208083015161042f928d928d928d9291610427908c018c612416565b60ff166109b7565b5060208201525b80516020808501919091528101516060840181905260808401805161045c9083906123f0565b90525092516001600160a01b03166000908152600296870160209081526040918290208551815590850151600182015593015192909501919091559695505050505050565b8151602080840151908501515b80158015906104bc57508215155b80156104c757508115155b156107d15761052960405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610534886001610b37565b6101208401525060a0820181905261054d908990610c27565b6060820181905261014082015260a081015161056890610cd5565b60e082015261014081015115610794576105828486610804565b602082015260e08101516105979084906107dc565b60c08201526101208101516101408201516105b29190610804565b61010082018190526020820151118015906105d5575080602001518160c0015110155b15610612576105ed8160200151826101200151610d47565b610140820152602081015160e08201516106079190610d67565b815260009350610690565b8061010001518160c0015110610658576106358161010001518260e00151610d67565b8152610100810151610647908661082e565b61065190856123f0565b9350610690565b61066b8160c00151826101200151610d47565b61014082015282815260c0810151610683908661082e565b61068d90856123f0565b93505b805161069c90846123f0565b60a0820151600090815260208b905260409020805460808401528251600182015492955090916106cc9190612403565b604083015260608201516101408301516106e69190610843565b61014083018190526060830180516106ff9083906123f0565b9052506101408201511561072157610721898360a00151846101400151610d93565b604082015115801561073557506060820151155b80156107445750608082015115155b15610783576000815542600282015560a0820151608083015160405190815260008051602061254b8339815191529060200160405180910390a261078e565b604082015160018201555b506107c0565b60a0810151600090815260208a905260408120885160e08401516107ba93908790610e65565b50600092505b6107c982612439565b9150506104ae565b955095509592505050565b6000670de0b6b3a76400006107f18385612450565b6107fb919061247d565b90505b92915050565b6000670de0b6b3a764000061081a60028261247d565b6108248486612450565b6107f19190612403565b6000816107f1670de0b6b3a764000085612450565b60008183111561085357816107fb565b5090919050565b81515b60208401511580159061086f57508015155b156109ae57600080610882876001610b37565b925050915060006108938884610c27565b905060006108a18383610804565b905060006108af8688610804565b905060008183106108f8576000965060006108d36108cd8488610d47565b86610843565b90506108df81866123f0565b915080156108f2576108f28c8883610d93565b5061091f565b610902838961082e565b61090c90886123f0565b9650831561091f5761091f8b8786610d93565b600086815260208d90526040902080548061093989610cd5565b83600101546109489190612450565b6109528986612450565b61095c9190612403565b1161098f5760008255426002830155604051818152889060008051602061254b8339815191529060200160405180910390a25b8b602001805161099e90612439565b90525061085d9650505050505050565b95945050505050565b6000806000198301610adb57600080670de0b6b3a76400006109d9818861247d565b6109e39190612450565b9350858414610a88576109f684876123f0565b6001600160a01b038816600090815260038c016020526040812060028101546001909101549295509091610a36916001600160601b039081169116610eef565b905064173eb4c80a8111610a4c57611cdc610a55565b610a5581611013565b600081815260208c905260409020909250610a849089610a758c866110dd565b87610a7f87610cd5565b610e65565b9250505b60408051858152602081018490529081018290526001600160a01b038816907fddd6b496b84171d179d9874158b1cbbe422dd482e5523f1b09cb69ebef2878419060600160405180910390a25050610b22565b839150846001600160a01b03167f91a9dcdd01df8b934f14307641e884e0ea6e414bf05fe8daf8c74a28f69b55ee83604051610b1991815260200190565b60405180910390a25b610b2c88866110f6565b965096945050505050565b60008080611000670de0b6b3a764000082808080805b8615610c1957610b5d878b612403565b93508b846120018110610b7257610b7261249f565b015492508b61200101846120018110610b8d57610b8d61249f565b0154915081600003610ba857610ba38684610804565b610bca565b610bca610bb58388612450565b846a0c097ce7bc90715b34b9f160241b6113fb565b610bd49086612403565b90508a811015610bf357611cdc8411610bee578399508094505b610c0d565b8115610c0657610c0386836107dc565b95505b8098508597505b600187901c9650610b4d565b505050505050509250925092565b6000610c32826124cb565b9150600183836120018110610c4957610c4961249f565b0154915060008060005b858416600003610ccb57610c6784876123f0565b925086836120018110610c7c57610c7c61249f565b015491508661200101836120018110610c9757610c9761249f565b0154905080600003610ca95781610cb3565b610cb38183610804565b610cbd90866123f0565b9450600184901b9350610c53565b5050505092915050565b600080610ce48361103c6124e4565b9050610c9f19811280610cf8575061103c81135b15610d1657604051637edf443b60e11b815260040160405180910390fd5b610d40610d3b610d25836114a9565b610d36670df27a2cdf448000611539565b61161d565b6116e2565b9392505050565b600081610d5560028261247d565b610824670de0b6b3a764000086612450565b600081600181610d7f670de0b6b3a764000087612450565b610d899190612403565b6107f191906123f0565b80600003610db45760405163162908e360e11b815260040160405180910390fd5b610dbd826124cb565b91505b6120008211610e605760008184846120018110610ddf57610ddf61249f565b016000828254610def91906123f0565b925050819055905060008461200101846120018110610e1057610e1061249f565b015490508015610e4457610e248282610804565b610e37610e318585612403565b83610804565b610e4191906123f0565b92505b610e4d8461177e565b610e579085612403565b93505050610dc0565b505050565b6002850154600090428103610e8d5760405163c1e4c5f760e01b815260040160405180910390fd5b610ea487600101548860000154878787600061179d565b915083876001016000828254610eba9190612403565b9091555050865482908890600090610ed3908490612403565b90915550610ee590508782888561181a565b5095945050505050565b600080610f20610eff84426123f0565b610f1190670de0b6b3a7640000612450565b680340aad21b3b700000610d47565b9050600068068155a43676e00000821015610f7457610f4d670de0b6b3a763ffff19610d3660148561247d565b9050610f6185610f5c836116e2565b610804565b610f6d90610100612450565b925061100b565b682d89577d7d40200000821015610fcb57610fb1670de0b6b3a763ffff196078610fa768068155a43676e00000866123f0565b610d36919061247d565b9050610fc085610f5c836116e2565b610f6d906004612450565b610fed670de0b6b3a763ffff19603c610fa7682d89577d7d40200000866123f0565b90506010610ffe86610f5c846116e2565b611008919061247d565b92505b505092915050565b600064173eb4c80a82108061103357506b033f4a75fb6ff29166751a4b82115b1561105157604051635665ba4560e11b815260040160405180910390fd5b600061107561105f84611539565b611070670df27a2cdf448000611539565b611875565b905060006110828261193b565b90506000821280156110a457506706f05b59d3b200006110a283836124e4565b135b156110c7576110bf670de0b6b3a7640000820561103d6124e4565b949350505050565b6110bf670de0b6b3a7640000820561103c6124e4565b60006107fb6110ec8484610c27565b610f5c85856119ad565b6001600160a01b03808216600090815260038085016020908152604080842081516101408101835281548088168083526001600160601b03600160a01b9283900481168488015260018086015480831686890152600160601b908190048c16606087015260028701548084166080880152048b1660a086015297850154808b1660c086019081529390041660e084015260048085015461010085015260059094015461012084015287529189019093529084209051928101805492959194939091169290916111c69084906123f0565b925050819055508160c001516001600160a01b03168160000160008282546111ee9190612403565b90915550508354849060009061120c906001600160601b031661250b565b82546001600160601b039182166101009390930a92830291909202199091161790558354600160601b90046001600160a01b03908116908416148015611261575060018401546001600160a01b038481169116145b1561128a5783546001600160601b031684556001840180546001600160a01b03191690556113b9565b83546001600160a01b03808516600160601b90920416036112ef5760a0820180516001600160a01b039081166000908152600387016020526040902060010180546001600160601b03908116909155915186549116600160601b0291161784556113b9565b60018401546001600160a01b03808516911603611355576060820180516001600160a01b039081166000908152600387016020526040902060020180546001600160601b0316905590516001860180546001600160a01b031916919092161790556113b9565b60a0820180516060840180516001600160a01b039081166000908152600389016020526040808220600201805460016001'... 9266 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel\'s lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don\'t need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.\'s \\"Hacker\'s Delight\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\"msb\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // ‚Üí `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // ‚Üí `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton\'s method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result'... 252825 more characters
  }
}
2024-01-08T15:28:32.733Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x6125a061003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063e47aaa311461003a575b600080fd5b81801561004657600080fd5b5061005a6100553660046122fb565b6100b9565b6040516100b09190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b60405180910390f35b6100f96040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81516001600160a01b031660009081526003890160205260408120600101546001600160601b031690819003610142576040516338e806f160e11b815260040160405180910390fd5b82516001600160a01b031660009081526002808801602090815260409283902083516060810185528154815260018201549281019290925290910154918101919091526203f48061019383426123f0565b111580156101a45750602081015115155b156101c2576040516320560ae760e21b815260040160405180910390fd5b805183526020810180516040850152815160a080860191909152905160808501526101f7908a908a90879085908a01356104a1565b6020878101919091528301528082521580159061021657506020810151155b15610391576000846040015161025283600001518660a00151896020013561023e91906123f0565b6102489190612403565b8860a001356107dc565b61025c9190612403565b9050600061026c8a612000015490565b9050600088600201548d6002015461028c670de0b6b3e2feca0085610804565b6102969190612403565b6102a09190612403565b9050808311156103725760006102cd6102c66102bc84876123f0565b8b60a0013561082e565b8651610843565b90506000831180156102ea57506207e9006102e887426123f0565b105b1561035b5787516001600160a01b0316600090815260038f0160205260409020600501546103188282610843565b915061032482826123f0565b9050808f60030160008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060050181905550505b808560000181815161036d91906123f0565b905250505b83511561038d5761038a8c8c89878c60a0013561085a565b84525b5050505b805160a0840180516103a49083906123f0565b90525060a0808401516103b991870135610804565b60c0840181905284516040519182526001600160a01b0316907fa3788eedc10ef3ec6982384227c562c6666cf2b6af4f6a583b6d5d0f2ba0d2049060200160405180910390a2805160000361043657835160208083015161042f928d928d928d9291610427908c018c612416565b60ff166109b7565b5060208201525b80516020808501919091528101516060840181905260808401805161045c9083906123f0565b90525092516001600160a01b03166000908152600296870160209081526040918290208551815590850151600182015593015192909501919091559695505050505050565b8151602080840151908501515b80158015906104bc57508215155b80156104c757508115155b156107d15761052960405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610534886001610b37565b6101208401525060a0820181905261054d908990610c27565b6060820181905261014082015260a081015161056890610cd5565b60e082015261014081015115610794576105828486610804565b602082015260e08101516105979084906107dc565b60c08201526101208101516101408201516105b29190610804565b61010082018190526020820151118015906105d5575080602001518160c0015110155b15610612576105ed8160200151826101200151610d47565b610140820152602081015160e08201516106079190610d67565b815260009350610690565b8061010001518160c0015110610658576106358161010001518260e00151610d67565b8152610100810151610647908661082e565b61065190856123f0565b9350610690565b61066b8160c00151826101200151610d47565b61014082015282815260c0810151610683908661082e565b61068d90856123f0565b93505b805161069c90846123f0565b60a0820151600090815260208b905260409020805460808401528251600182015492955090916106cc9190612403565b604083015260608201516101408301516106e69190610843565b61014083018190526060830180516106ff9083906123f0565b9052506101408201511561072157610721898360a00151846101400151610d93565b604082015115801561073557506060820151155b80156107445750608082015115155b15610783576000815542600282015560a0820151608083015160405190815260008051602061254b8339815191529060200160405180910390a261078e565b604082015160018201555b506107c0565b60a0810151600090815260208a905260408120885160e08401516107ba93908790610e65565b50600092505b6107c982612439565b9150506104ae565b955095509592505050565b6000670de0b6b3a76400006107f18385612450565b6107fb919061247d565b90505b92915050565b6000670de0b6b3a764000061081a60028261247d565b6108248486612450565b6107f19190612403565b6000816107f1670de0b6b3a764000085612450565b60008183111561085357816107fb565b5090919050565b81515b60208401511580159061086f57508015155b156109ae57600080610882876001610b37565b925050915060006108938884610c27565b905060006108a18383610804565b905060006108af8688610804565b905060008183106108f8576000965060006108d36108cd8488610d47565b86610843565b90506108df81866123f0565b915080156108f2576108f28c8883610d93565b5061091f565b610902838961082e565b61090c90886123f0565b9650831561091f5761091f8b8786610d93565b600086815260208d90526040902080548061093989610cd5565b83600101546109489190612450565b6109528986612450565b61095c9190612403565b1161098f5760008255426002830155604051818152889060008051602061254b8339815191529060200160405180910390a25b8b602001805161099e90612439565b90525061085d9650505050505050565b95945050505050565b6000806000198301610adb57600080670de0b6b3a76400006109d9818861247d565b6109e39190612450565b9350858414610a88576109f684876123f0565b6001600160a01b038816600090815260038c016020526040812060028101546001909101549295509091610a36916001600160601b039081169116610eef565b905064173eb4c80a8111610a4c57611cdc610a55565b610a5581611013565b600081815260208c905260409020909250610a849089610a758c866110dd565b87610a7f87610cd5565b610e65565b9250505b60408051858152602081018490529081018290526001600160a01b038816907fddd6b496b84171d179d9874158b1cbbe422dd482e5523f1b09cb69ebef2878419060600160405180910390a25050610b22565b839150846001600160a01b03167f91a9dcdd01df8b934f14307641e884e0ea6e414bf05fe8daf8c74a28f69b55ee83604051610b1991815260200190565b60405180910390a25b610b2c88866110f6565b965096945050505050565b60008080611000670de0b6b3a764000082808080805b8615610c1957610b5d878b612403565b93508b846120018110610b7257610b7261249f565b015492508b61200101846120018110610b8d57610b8d61249f565b0154915081600003610ba857610ba38684610804565b610bca565b610bca610bb58388612450565b846a0c097ce7bc90715b34b9f160241b6113fb565b610bd49086612403565b90508a811015610bf357611cdc8411610bee578399508094505b610c0d565b8115610c0657610c0386836107dc565b95505b8098508597505b600187901c9650610b4d565b505050505050509250925092565b6000610c32826124cb565b9150600183836120018110610c4957610c4961249f565b0154915060008060005b858416600003610ccb57610c6784876123f0565b925086836120018110610c7c57610c7c61249f565b015491508661200101836120018110610c9757610c9761249f565b0154905080600003610ca95781610cb3565b610cb38183610804565b610cbd90866123f0565b9450600184901b9350610c53565b5050505092915050565b600080610ce48361103c6124e4565b9050610c9f19811280610cf8575061103c81135b15610d1657604051637edf443b60e11b815260040160405180910390fd5b610d40610d3b610d25836114a9565b610d36670df27a2cdf448000611539565b61161d565b6116e2565b9392505050565b600081610d5560028261247d565b610824670de0b6b3a764000086612450565b600081600181610d7f670de0b6b3a764000087612450565b610d899190612403565b6107f191906123f0565b80600003610db45760405163162908e360e11b815260040160405180910390fd5b610dbd826124cb565b91505b6120008211610e605760008184846120018110610ddf57610ddf61249f565b016000828254610def91906123f0565b925050819055905060008461200101846120018110610e1057610e1061249f565b015490508015610e4457610e248282610804565b610e37610e318585612403565b83610804565b610e4191906123f0565b92505b610e4d8461177e565b610e579085612403565b93505050610dc0565b505050565b6002850154600090428103610e8d5760405163c1e4c5f760e01b815260040160405180910390fd5b610ea487600101548860000154878787600061179d565b915083876001016000828254610eba9190612403565b9091555050865482908890600090610ed3908490612403565b90915550610ee590508782888561181a565b5095945050505050565b600080610f20610eff84426123f0565b610f1190670de0b6b3a7640000612450565b680340aad21b3b700000610d47565b9050600068068155a43676e00000821015610f7457610f4d670de0b6b3a763ffff19610d3660148561247d565b9050610f6185610f5c836116e2565b610804565b610f6d90610100612450565b925061100b565b682d89577d7d40200000821015610fcb57610fb1670de0b6b3a763ffff196078610fa768068155a43676e00000866123f0565b610d36919061247d565b9050610fc085610f5c836116e2565b610f6d906004612450565b610fed670de0b6b3a763ffff19603c610fa7682d89577d7d40200000866123f0565b90506010610ffe86610f5c846116e2565b611008919061247d565b92505b505092915050565b600064173eb4c80a82108061103357506b033f4a75fb6ff29166751a4b82115b1561105157604051635665ba4560e11b815260040160405180910390fd5b600061107561105f84611539565b611070670df27a2cdf448000611539565b611875565b905060006110828261193b565b90506000821280156110a457506706f05b59d3b200006110a283836124e4565b135b156110c7576110bf670de0b6b3a7640000820561103d6124e4565b949350505050565b6110bf670de0b6b3a7640000820561103c6124e4565b60006107fb6110ec8484610c27565b610f5c85856119ad565b6001600160a01b03808216600090815260038085016020908152604080842081516101408101835281548088168083526001600160601b03600160a01b9283900481168488015260018086015480831686890152600160601b908190048c16606087015260028701548084166080880152048b1660a086015297850154808b1660c086019081529390041660e084015260048085015461010085015260059094015461012084015287529189019093529084209051928101805492959194939091169290916111c69084906123f0565b925050819055508160c001516001600160a01b03168160000160008282546111ee9190612403565b90915550508354849060009061120c906001600160601b031661250b565b82546001600160601b039182166101009390930a92830291909202199091161790558354600160601b90046001600160a01b03908116908416148015611261575060018401546001600160a01b038481169116145b1561128a5783546001600160601b031684556001840180546001600160a01b03191690556113b9565b83546001600160a01b03808516600160601b90920416036112ef5760a0820180516001600160a01b039081166000908152600387016020526040902060010180546001600160601b03908116909155915186549116600160601b0291161784556113b9565b60018401546001600160a01b03808516911603611355576060820180516001600160a01b039081166000908152600387016020526040902060020180546001600160601b0316905590516001860180546001600160a01b031916919092161790556113b9565b60a0820180516060840180516001600160a01b03908116600090815260038901602052604080822060020180546001600160601b03908116600160601b97861688021790915593519551831682529020600101805490921693169091029190911790555b50506001600160a01b03166000908152600391820160205260408120818155600181018290556002810182905591820181905560048201819055600590910155565b60008080600019858709858702925082811083820303915050806000036114355783828161142b5761142b612467565b0492505050610d40565b80841161144157600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156114ee5760405163e608e18b60e01b8152600481018390526024015b60405180910390fd5b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f9082131561152b576040516371f72a3160e01b8152600481018390526024016114e5565b50670de0b6b3a76400000290565b600080821361155e5760405163309fa7dd60e11b8152600481018390526024016114e5565b6000670de0b6b3a7640000831261157757506001611590565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b60006115a5670de0b6b3a76400008505611a1a565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff1981016115cf57505002919050565b6706f05b59d3b200005b600081131561161457670de0b6b3a7640000828002059150671bc16d674ec80000821261160c579384019360019190911d905b60011d6115d9565b50505002919050565b6000600160ff1b8314806116345750600160ff1b82145b1561165257604051630d01a11b60e21b815260040160405180910390fd5b600080600085126116635784611668565b846000035b915060008412611678578361167d565b836000035b9050600061168b8383611af8565b90506001600160ff1b038111156116b85760405163bf79e8d960e01b8152600481018290526024016114e5565b6000198087139086138082186001146116d157826116d6565b826000035b98975050505050505050565b6000808212156117355768033dd1780914b971141982121561170657506000919050565b611712826000036116e2565b6a0c097ce7bc90715b34b9f160241b8161172e5761172e612467565b0592915050565b680a688906bd8b00000082126117615760405163e69458f960e01b8152600481018390526024016114e5565b670de0b6b3a7640000604083901b04610d4081611bbe565b919050565b600081156117795761179560001983186001612403565b909116919050565b6000841580156117ab575086155b156117c1576117ba8484610804565b9050611810565b856000036117d3576117ba8484610804565b61180d866117e18587612450565b6117eb868b612450565b6117fd670de0b6b3a76400008a612450565b6118079190612403565b85612250565b90505b9695505050505050565b801561186f576001600160a01b038216600090815260038501602052604090206001810154841061184d57818155611867565b818160000160008282546118619190612403565b90915550505b426001909101555b50505050565b6000600160ff1b83148061188c5750600160ff1b82145b156118aa5760405163b3c754a360e01b815260040160405180910390fd5b600080600085126118bb57846118c0565b846000035b9150600084126118d057836118d5565b836000035b905060006118ec83670de0b6b3a7640000846122a1565b90506001600160ff1b0381111561191957604051637cb4bef560e01b8152600481018290526024016114e5565b60001980871390861380821860011461193257826116d6565b6116d68361252e565b6000670afdc366fbc00000600160ff1b0382131561196f57604051635399a28560e11b8152600481018390526024016114e5565b670de0b6b3a76400008207600081900361198b578291506119a7565b808303915060008313156119a757670de0b6b3a7640000820191505b50919050565b60006119b8826124cb565b9150670de0b6b3a764000090505b61200082116107fe57600083612001018361200181106119e8576119e861249f565b0154905080156119ff576119fc8282610804565b91505b611a088361177e565b611a129084612403565b9250506119c6565b6000600160801b8210611a3a57608091821c91611a379082612403565b90505b600160401b8210611a5857604091821c91611a559082612403565b90505b600160201b8210611a7657602091821c91611a739082612403565b90505b620100008210611a9357601091821c91611a909082612403565b90505b6101008210611aaf57600891821c91611aac9082612403565b90505b60108210611aca57600491821c91611ac79082612403565b90505b60048210611ae557600291821c91611ae29082612403565b90505b60028210611779576107fe600182612403565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110611b3c5760405163698d9a0160e11b8152600481018290526024016114e5565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff8211905082600003611b7a5780670de0b6b3a76400008504019450505050506107fe565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615611bde5768016a09e667f3bcc9090260401c5b6001603e1b821615611bf9576801306fe0a31b7152df0260401c5b6001603d1b821615611c14576801172b83c7d517adce0260401c5b6001603c1b821615611c2f5768010b5586cf9890f62a0260401c5b6001603b1b821615611c4a576801059b0d31585743ae0260401c5b6001603a1b821615611c6557680102c9a3e778060ee70260401c5b600160391b821615611c805768010163da9fb33356d80260401c5b600160381b821615611c9b57680100b1afa5abcbed610260401c5b600160371b821615611cb65768010058c86da1c09ea20260401c5b600160361b821615611cd1576801002c605e2e8cec500260401c5b600160351b821615611cec57680100162f3904051fa10260401c5b600160341b821615611d07576801000b175effdc76ba0260401c5b600160331b821615611d2257680100058ba01fb9f96d0260401c5b600160321b821615611d3d5768010002c5cc37da94920260401c5b600160311b821615611d58576801000162e525ee05470260401c5b600160301b821615611d735768010000b17255775c040260401c5b6001602f1b821615611d8e576801000058b91b5bc9ae0260401c5b6001602e1b821615611da957680100002c5c89d5ec6d0260401c5b6001602d1b821615611dc45768010000162e43f4f8310260401c5b6001602c1b821615611ddf57680100000b1721bcfc9a0260401c5b6001602b1b821615611dfa5768010000058b90cf1e6e0260401c5b6001602a1b821615611e15576801000002c5c863b73f0260401c5b600160291b821615611e3057680100000162e430e5a20260401c5b600160281b821615611e4b576801000000b1721835510260401c5b600160271b821615611e6657680100000058b90c0b490260401c5b600160261b821615611e815768010000002c5c8601cc0260401c5b600160251b821615611e9c576801000000162e42fff00260401c5b600160241b821615611eb75768010000000b17217fbb0260401c5b600160231b821615611ed2576801000000058b90bfce0260401c5b600160221b821615611eed57680100000002c5c85fe30260401c5b600160211b821615611f085768010000000162e42ff10260401c5b600160201b821615611f2357680100000000b17217f80260401c5b6380000000821615611f3e5768010000000058b90bfc0260401c5b6340000000821615611f59576801000000002c5c85fe0260401c5b6320000000821615611f7457680100000000162e42ff0260401c5b6310000000821615611f8f576801000000000b17217f0260401c5b6308000000821615611faa57680100000000058b90c00260401c5b6304000000821615611fc55768010000000002c5c8600260401c5b6302000000821615611fe0576801000000000162e4300260401c5b6301000000821615611ffb5768010000000000b172180260401c5b62800000821615612015576801000000000058b90c0260401c5b6240000082161561202f57680100000000002c5c860260401c5b622000008216156120495768010000000000162e430260401c5b6210000082161561206357680100000000000b17210260401c5b6208000082161561207d5768010000000000058b910260401c5b62040000821615612097576801000000000002c5c80260401c5b620200008216156120b157680100000000000162e40260401c5b620100008216156120ca5761b172600160401b010260401c5b6180008216156120e2576158b9600160401b010260401c5b6140008216156120fa57612c5d600160401b010260401c5b6120008216156121125761162e600160401b010260401c5b61100082161561212a57610b17600160401b010260401c5b6108008216156121425761058c600160401b010260401c5b61040082161561215a576102c6600160401b010260401c5b61020082161561217257610163600160401b010260401c5b6101008216156121895760b1600160401b010260401c5b608082161561219f576059600160401b010260401c5b60408216156121b557602c600160401b010260401c5b60208216156121cb576016600160401b010260401c5b60108216156121e157600b600160401b010260401c5b60088216156121f7576006600160401b010260401c5b600482161561220d576003600160401b010260401c5b6002821615612223576001600160401b010260401c5b6001821615612239576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b60008061225e8686866113fb565b90506001836002811115612274576122746124b5565b14801561229157506000848061228c5761228c612467565b868809115b156109ae57611810600182612403565b60008080600019858709858702925082811083820303915050806000036122d15783828161142b5761142b612467565b83811061144157604051631dcf306360e21b815260048101829052602481018590526044016114e5565b600080600080600080600087890361022081121561231857600080fd5b8835975060208901359650604089013595506060890135945060808901359350610120609f198201121561234b57600080fd5b60a08901925060606101bf198201121561236457600080fd5b50604051606081016001600160401b038111828210171561239557634e487b7160e01b600052604160045260246000fd5b6040526101c08901356001600160a01b03811681146123b357600080fd5b81526101e08901356020820152610200909801356040890152509497939650919490939192565b634e487b7160e01b600052601160045260246000fd5b818103818111156107fe576107fe6123da565b808201808211156107fe576107fe6123da565b60006020828403121561242857600080fd5b813560ff81168114610d4057600080fd5b600081612448576124486123da565b506000190190565b80820281158282048414176107fe576107fe6123da565b634e487b7160e01b600052601260045260246000fd5b60008261249a57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6000600182016124dd576124dd6123da565b5060010190565b8181036000831280158383131683831282161715612504576125046123da565b5092915050565b60006001600160601b03821680612524576125246123da565b6000190192915050565b6000600160ff1b8201612543576125436123da565b506000039056fe30ee43613aaa48d222b158aab1123c5a29d452f8b1a849e5f815dd355923ba85a26469706673582212206d8a1fd738520b7cdb2b641f8b033a8e0f32230832036ff49b34a4434b8ae43164736f6c63430008120033","args":[],"salt":"AJNA","value":[]}
2024-01-08T15:28:32.734Z cannon:builder comparing states null 9a318c098fbb8ff4002fbba51d3594c1
2024-01-08T15:28:32.734Z cannon:builder run isolated contract.SettlerActions
Executing [contract.SettlerActions]...
2024-01-08T15:28:32.736Z cannon:verbose:builder ctx for step contract.SettlerActions {
  package: {},
  timestamp: '1704727545',
  chainId: 10,
  settings: {
    bwAJNA_ADDRESS: '0x6c518f9D1a163379235816c543E62922a79863Fa',
    salt: 'AJNA'
  },
  contracts: {},
  txns: {},
  imports: {},
  extras: {}
}
2024-01-08T15:28:32.736Z cannon:builder:contract exec {
  artifact: 'SettlerActions',
  salt: 'AJNA',
  create2: true,
  from: '',
  nonce: '',
  value: '',
  abi: ''
}
2024-01-08T15:28:32.736Z cannon:builder:runtime resolve artifact SettlerActions
2024-01-08T15:28:32.736Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:28:40.118Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/SettlerActions.sol': 'SettlerActions' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/SettlerActions.sol': {
      keccak256: '0x05edfe3f72323b7212fbb5134f76211f397138c2ed30ddf0f3683772213c831d',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:28:40.119Z cannon:cli:foundry evm version paris
2024-01-08T15:28:40.125Z cannon:builder:runtime reported contract artifact SettlerActions {
  contractName: 'SettlerActions',
  sourceName: 'src/libraries/external/SettlerActions.sol',
  abi: [
    {
      type: 'event',
      name: 'AuctionNFTSettle',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'AuctionSettle',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'BucketBankruptcy',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'Settle',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'AuctionNotClearable', inputs: [] },
    { type: 'error', name: 'BucketBankruptcyBlock', inputs: [] },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'BucketPriceOutOfBounds', inputs: [] },
    { type: 'error', name: 'InvalidAmount', inputs: [] },
    { type: 'error', name: 'NoAuction', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__CeilOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'PRBMath__MulDivOverflow', inputs: [Array] }
  ],
  bytecode: '0x6125a061003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063e47aaa311461003a575b600080fd5b81801561004657600080fd5b5061005a6100553660046122fb565b6100b9565b6040516100b09190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b60405180910390f35b6100f96040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81516001600160a01b031660009081526003890160205260408120600101546001600160601b031690819003610142576040516338e806f160e11b815260040160405180910390fd5b82516001600160a01b031660009081526002808801602090815260409283902083516060810185528154815260018201549281019290925290910154918101919091526203f48061019383426123f0565b111580156101a45750602081015115155b156101c2576040516320560ae760e21b815260040160405180910390fd5b805183526020810180516040850152815160a080860191909152905160808501526101f7908a908a90879085908a01356104a1565b6020878101919091528301528082521580159061021657506020810151155b15610391576000846040015161025283600001518660a00151896020013561023e91906123f0565b6102489190612403565b8860a001356107dc565b61025c9190612403565b9050600061026c8a612000015490565b9050600088600201548d6002015461028c670de0b6b3e2feca0085610804565b6102969190612403565b6102a09190612403565b9050808311156103725760006102cd6102c66102bc84876123f0565b8b60a0013561082e565b8651610843565b90506000831180156102ea57506207e9006102e887426123f0565b105b1561035b5787516001600160a01b0316600090815260038f0160205260409020600501546103188282610843565b915061032482826123f0565b9050808f60030160008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060050181905550505b808560000181815161036d91906123f0565b905250505b83511561038d5761038a8c8c89878c60a0013561085a565b84525b5050505b805160a0840180516103a49083906123f0565b90525060a0808401516103b991870135610804565b60c0840181905284516040519182526001600160a01b0316907fa3788eedc10ef3ec6982384227c562c6666cf2b6af4f6a583b6d5d0f2ba0d2049060200160405180910390a2805160000361043657835160208083015161042f928d928d928d9291610427908c018c612416565b60ff166109b7565b5060208201525b80516020808501919091528101516060840181905260808401805161045c9083906123f0565b90525092516001600160a01b03166000908152600296870160209081526040918290208551815590850151600182015593015192909501919091559695505050505050565b8151602080840151908501515b80158015906104bc57508215155b80156104c757508115155b156107d15761052960405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610534886001610b37565b6101208401525060a0820181905261054d908990610c27565b6060820181905261014082015260a081015161056890610cd5565b60e082015261014081015115610794576105828486610804565b602082015260e08101516105979084906107dc565b60c08201526101208101516101408201516105b29190610804565b61010082018190526020820151118015906105d5575080602001518160c0015110155b15610612576105ed8160200151826101200151610d47565b610140820152602081015160e08201516106079190610d67565b815260009350610690565b8061010001518160c0015110610658576106358161010001518260e00151610d67565b8152610100810151610647908661082e565b61065190856123f0565b9350610690565b61066b8160c00151826101200151610d47565b61014082015282815260c0810151610683908661082e565b61068d90856123f0565b93505b805161069c90846123f0565b60a0820151600090815260208b905260409020805460808401528251600182015492955090916106cc9190612403565b604083015260608201516101408301516106e69190610843565b61014083018190526060830180516106ff9083906123f0565b9052506101408201511561072157610721898360a00151846101400151610d93565b604082015115801561073557506060820151155b80156107445750608082015115155b15610783576000815542600282015560a0820151608083015160405190815260008051602061254b8339815191529060200160405180910390a261078e565b604082015160018201555b506107c0565b60a0810151600090815260208a905260408120885160e08401516107ba93908790610e65565b50600092505b6107c982612439565b9150506104ae565b955095509592505050565b6000670de0b6b3a76400006107f18385612450565b6107fb919061247d565b90505b92915050565b6000670de0b6b3a764000061081a60028261247d565b6108248486612450565b6107f19190612403565b6000816107f1670de0b6b3a764000085612450565b60008183111561085357816107fb565b5090919050565b81515b60208401511580159061086f57508015155b156109ae57600080610882876001610b37565b925050915060006108938884610c27565b905060006108a18383610804565b905060006108af8688610804565b905060008183106108f8576000965060006108d36108cd8488610d47565b86610843565b90506108df81866123f0565b915080156108f2576108f28c8883610d93565b5061091f565b610902838961082e565b61090c90886123f0565b9650831561091f5761091f8b8786610d93565b600086815260208d90526040902080548061093989610cd5565b83600101546109489190612450565b6109528986612450565b61095c9190612403565b1161098f5760008255426002830155604051818152889060008051602061254b8339815191529060200160405180910390a25b8b602001805161099e90612439565b90525061085d9650505050505050565b95945050505050565b6000806000198301610adb57600080670de0b6b3a76400006109d9818861247d565b6109e39190612450565b9350858414610a88576109f684876123f0565b6001600160a01b038816600090815260038c016020526040812060028101546001909101549295509091610a36916001600160601b039081169116610eef565b905064173eb4c80a8111610a4c57611cdc610a55565b610a5581611013565b600081815260208c905260409020909250610a849089610a758c866110dd565b87610a7f87610cd5565b610e65565b9250505b60408051858152602081018490529081018290526001600160a01b038816907fddd6b496b84171d179d9874158b1cbbe422dd482e5523f1b09cb69ebef2878419060600160405180910390a25050610b22565b839150846001600160a01b03167f91a9dcdd01df8b934f14307641e884e0ea6e414bf05fe8daf8c74a28f69b55ee83604051610b1991815260200190565b60405180910390a25b610b2c88866110f6565b965096945050505050565b60008080611000670de0b6b3a764000082808080805b8615610c1957610b5d878b612403565b93508b846120018110610b7257610b7261249f565b015492508b61200101846120018110610b8d57610b8d61249f565b0154915081600003610ba857610ba38684610804565b610bca565b610bca610bb58388612450565b846a0c097ce7bc90715b34b9f160241b6113fb565b610bd49086612403565b90508a811015610bf357611cdc8411610bee578399508094505b610c0d565b8115610c0657610c0386836107dc565b95505b8098508597505b600187901c9650610b4d565b505050505050509250925092565b6000610c32826124cb565b9150600183836120018110610c4957610c4961249f565b0154915060008060005b858416600003610ccb57610c6784876123f0565b925086836120018110610c7c57610c7c61249f565b015491508661200101836120018110610c9757610c9761249f565b0154905080600003610ca95781610cb3565b610cb38183610804565b610cbd90866123f0565b9450600184901b9350610c53565b5050505092915050565b600080610ce48361103c6124e4565b9050610c9f19811280610cf8575061103c81135b15610d1657604051637edf443b60e11b815260040160405180910390fd5b610d40610d3b610d25836114a9565b610d36670df27a2cdf448000611539565b61161d565b6116e2565b9392505050565b600081610d5560028261247d565b610824670de0b6b3a764000086612450565b600081600181610d7f670de0b6b3a764000087612450565b610d899190612403565b6107f191906123f0565b80600003610db45760405163162908e360e11b815260040160405180910390fd5b610dbd826124cb565b91505b6120008211610e605760008184846120018110610ddf57610ddf61249f565b016000828254610def91906123f0565b925050819055905060008461200101846120018110610e1057610e1061249f565b015490508015610e4457610e248282610804565b610e37610e318585612403565b83610804565b610e4191906123f0565b92505b610e4d8461177e565b610e579085612403565b93505050610dc0565b505050565b6002850154600090428103610e8d5760405163c1e4c5f760e01b815260040160405180910390fd5b610ea487600101548860000154878787600061179d565b915083876001016000828254610eba9190612403565b9091555050865482908890600090610ed3908490612403565b90915550610ee590508782888561181a565b5095945050505050565b600080610f20610eff84426123f0565b610f1190670de0b6b3a7640000612450565b680340aad21b3b700000610d47565b9050600068068155a43676e00000821015610f7457610f4d670de0b6b3a763ffff19610d3660148561247d565b9050610f6185610f5c836116e2565b610804565b610f6d90610100612450565b925061100b565b682d89577d7d40200000821015610fcb57610fb1670de0b6b3a763ffff196078610fa768068155a43676e00000866123f0565b610d36919061247d565b9050610fc085610f5c836116e2565b610f6d906004612450565b610fed670de0b6b3a763ffff19603c610fa7682d89577d7d40200000866123f0565b90506010610ffe86610f5c846116e2565b611008919061247d565b92505b505092915050565b600064173eb4c80a82108061103357506b033f4a75fb6ff29166751a4b82115b1561105157604051635665ba4560e11b815260040160405180910390fd5b600061107561105f84611539565b611070670df27a2cdf448000611539565b611875565b905060006110828261193b565b90506000821280156110a457506706f05b59d3b200006110a283836124e4565b135b156110c7576110bf670de0b6b3a7640000820561103d6124e4565b949350505050565b6110bf670de0b6b3a7640000820561103c6124e4565b60006107fb6110ec8484610c27565b610f5c85856119ad565b6001600160a01b03808216600090815260038085016020908152604080842081516101408101835281548088168083526001600160601b03600160a01b9283900481168488015260018086015480831686890152600160601b908190048c16606087015260028701548084166080880152048b1660a086015297850154808b1660c086019081529390041660e084015260048085015461010085015260059094015461012084015287529189019093529084209051928101805492959194939091169290916111c69084906123f0565b925050819055508160c001516001600160a01b03168160000160008282546111ee9190612403565b90915550508354849060009061120c906001600160601b031661250b565b82546001600160601b039182166101009390930a92830291909202199091161790558354600160601b90046001600160a01b03908116908416148015611261575060018401546001600160a01b038481169116145b1561128a5783546001600160601b031684556001840180546001600160a01b03191690556113b9565b83546001600160a01b03808516600160601b90920416036112ef5760a0820180516001600160a01b039081166000908152600387016020526040902060010180546001600160601b03908116909155915186549116600160601b0291161784556113b9565b60018401546001600160a01b03808516911603611355576060820180516001600160a01b039081166000908152600387016020526040902060020180546001600160601b0316905590516001860180546001600160a01b031916919092'... 9382 more characters,
  deployedBytecode: '0x73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063e47aaa311461003a575b600080fd5b81801561004657600080fd5b5061005a6100553660046122fb565b6100b9565b6040516100b09190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b60405180910390f35b6100f96040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81516001600160a01b031660009081526003890160205260408120600101546001600160601b031690819003610142576040516338e806f160e11b815260040160405180910390fd5b82516001600160a01b031660009081526002808801602090815260409283902083516060810185528154815260018201549281019290925290910154918101919091526203f48061019383426123f0565b111580156101a45750602081015115155b156101c2576040516320560ae760e21b815260040160405180910390fd5b805183526020810180516040850152815160a080860191909152905160808501526101f7908a908a90879085908a01356104a1565b6020878101919091528301528082521580159061021657506020810151155b15610391576000846040015161025283600001518660a00151896020013561023e91906123f0565b6102489190612403565b8860a001356107dc565b61025c9190612403565b9050600061026c8a612000015490565b9050600088600201548d6002015461028c670de0b6b3e2feca0085610804565b6102969190612403565b6102a09190612403565b9050808311156103725760006102cd6102c66102bc84876123f0565b8b60a0013561082e565b8651610843565b90506000831180156102ea57506207e9006102e887426123f0565b105b1561035b5787516001600160a01b0316600090815260038f0160205260409020600501546103188282610843565b915061032482826123f0565b9050808f60030160008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060050181905550505b808560000181815161036d91906123f0565b905250505b83511561038d5761038a8c8c89878c60a0013561085a565b84525b5050505b805160a0840180516103a49083906123f0565b90525060a0808401516103b991870135610804565b60c0840181905284516040519182526001600160a01b0316907fa3788eedc10ef3ec6982384227c562c6666cf2b6af4f6a583b6d5d0f2ba0d2049060200160405180910390a2805160000361043657835160208083015161042f928d928d928d9291610427908c018c612416565b60ff166109b7565b5060208201525b80516020808501919091528101516060840181905260808401805161045c9083906123f0565b90525092516001600160a01b03166000908152600296870160209081526040918290208551815590850151600182015593015192909501919091559695505050505050565b8151602080840151908501515b80158015906104bc57508215155b80156104c757508115155b156107d15761052960405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610534886001610b37565b6101208401525060a0820181905261054d908990610c27565b6060820181905261014082015260a081015161056890610cd5565b60e082015261014081015115610794576105828486610804565b602082015260e08101516105979084906107dc565b60c08201526101208101516101408201516105b29190610804565b61010082018190526020820151118015906105d5575080602001518160c0015110155b15610612576105ed8160200151826101200151610d47565b610140820152602081015160e08201516106079190610d67565b815260009350610690565b8061010001518160c0015110610658576106358161010001518260e00151610d67565b8152610100810151610647908661082e565b61065190856123f0565b9350610690565b61066b8160c00151826101200151610d47565b61014082015282815260c0810151610683908661082e565b61068d90856123f0565b93505b805161069c90846123f0565b60a0820151600090815260208b905260409020805460808401528251600182015492955090916106cc9190612403565b604083015260608201516101408301516106e69190610843565b61014083018190526060830180516106ff9083906123f0565b9052506101408201511561072157610721898360a00151846101400151610d93565b604082015115801561073557506060820151155b80156107445750608082015115155b15610783576000815542600282015560a0820151608083015160405190815260008051602061254b8339815191529060200160405180910390a261078e565b604082015160018201555b506107c0565b60a0810151600090815260208a905260408120885160e08401516107ba93908790610e65565b50600092505b6107c982612439565b9150506104ae565b955095509592505050565b6000670de0b6b3a76400006107f18385612450565b6107fb919061247d565b90505b92915050565b6000670de0b6b3a764000061081a60028261247d565b6108248486612450565b6107f19190612403565b6000816107f1670de0b6b3a764000085612450565b60008183111561085357816107fb565b5090919050565b81515b60208401511580159061086f57508015155b156109ae57600080610882876001610b37565b925050915060006108938884610c27565b905060006108a18383610804565b905060006108af8688610804565b905060008183106108f8576000965060006108d36108cd8488610d47565b86610843565b90506108df81866123f0565b915080156108f2576108f28c8883610d93565b5061091f565b610902838961082e565b61090c90886123f0565b9650831561091f5761091f8b8786610d93565b600086815260208d90526040902080548061093989610cd5565b83600101546109489190612450565b6109528986612450565b61095c9190612403565b1161098f5760008255426002830155604051818152889060008051602061254b8339815191529060200160405180910390a25b8b602001805161099e90612439565b90525061085d9650505050505050565b95945050505050565b6000806000198301610adb57600080670de0b6b3a76400006109d9818861247d565b6109e39190612450565b9350858414610a88576109f684876123f0565b6001600160a01b038816600090815260038c016020526040812060028101546001909101549295509091610a36916001600160601b039081169116610eef565b905064173eb4c80a8111610a4c57611cdc610a55565b610a5581611013565b600081815260208c905260409020909250610a849089610a758c866110dd565b87610a7f87610cd5565b610e65565b9250505b60408051858152602081018490529081018290526001600160a01b038816907fddd6b496b84171d179d9874158b1cbbe422dd482e5523f1b09cb69ebef2878419060600160405180910390a25050610b22565b839150846001600160a01b03167f91a9dcdd01df8b934f14307641e884e0ea6e414bf05fe8daf8c74a28f69b55ee83604051610b1991815260200190565b60405180910390a25b610b2c88866110f6565b965096945050505050565b60008080611000670de0b6b3a764000082808080805b8615610c1957610b5d878b612403565b93508b846120018110610b7257610b7261249f565b015492508b61200101846120018110610b8d57610b8d61249f565b0154915081600003610ba857610ba38684610804565b610bca565b610bca610bb58388612450565b846a0c097ce7bc90715b34b9f160241b6113fb565b610bd49086612403565b90508a811015610bf357611cdc8411610bee578399508094505b610c0d565b8115610c0657610c0386836107dc565b95505b8098508597505b600187901c9650610b4d565b505050505050509250925092565b6000610c32826124cb565b9150600183836120018110610c4957610c4961249f565b0154915060008060005b858416600003610ccb57610c6784876123f0565b925086836120018110610c7c57610c7c61249f565b015491508661200101836120018110610c9757610c9761249f565b0154905080600003610ca95781610cb3565b610cb38183610804565b610cbd90866123f0565b9450600184901b9350610c53565b5050505092915050565b600080610ce48361103c6124e4565b9050610c9f19811280610cf8575061103c81135b15610d1657604051637edf443b60e11b815260040160405180910390fd5b610d40610d3b610d25836114a9565b610d36670df27a2cdf448000611539565b61161d565b6116e2565b9392505050565b600081610d5560028261247d565b610824670de0b6b3a764000086612450565b600081600181610d7f670de0b6b3a764000087612450565b610d899190612403565b6107f191906123f0565b80600003610db45760405163162908e360e11b815260040160405180910390fd5b610dbd826124cb565b91505b6120008211610e605760008184846120018110610ddf57610ddf61249f565b016000828254610def91906123f0565b925050819055905060008461200101846120018110610e1057610e1061249f565b015490508015610e4457610e248282610804565b610e37610e318585612403565b83610804565b610e4191906123f0565b92505b610e4d8461177e565b610e579085612403565b93505050610dc0565b505050565b6002850154600090428103610e8d5760405163c1e4c5f760e01b815260040160405180910390fd5b610ea487600101548860000154878787600061179d565b915083876001016000828254610eba9190612403565b9091555050865482908890600090610ed3908490612403565b90915550610ee590508782888561181a565b5095945050505050565b600080610f20610eff84426123f0565b610f1190670de0b6b3a7640000612450565b680340aad21b3b700000610d47565b9050600068068155a43676e00000821015610f7457610f4d670de0b6b3a763ffff19610d3660148561247d565b9050610f6185610f5c836116e2565b610804565b610f6d90610100612450565b925061100b565b682d89577d7d40200000821015610fcb57610fb1670de0b6b3a763ffff196078610fa768068155a43676e00000866123f0565b610d36919061247d565b9050610fc085610f5c836116e2565b610f6d906004612450565b610fed670de0b6b3a763ffff19603c610fa7682d89577d7d40200000866123f0565b90506010610ffe86610f5c846116e2565b611008919061247d565b92505b505092915050565b600064173eb4c80a82108061103357506b033f4a75fb6ff29166751a4b82115b1561105157604051635665ba4560e11b815260040160405180910390fd5b600061107561105f84611539565b611070670df27a2cdf448000611539565b611875565b905060006110828261193b565b90506000821280156110a457506706f05b59d3b200006110a283836124e4565b135b156110c7576110bf670de0b6b3a7640000820561103d6124e4565b949350505050565b6110bf670de0b6b3a7640000820561103c6124e4565b60006107fb6110ec8484610c27565b610f5c85856119ad565b6001600160a01b03808216600090815260038085016020908152604080842081516101408101835281548088168083526001600160601b03600160a01b9283900481168488015260018086015480831686890152600160601b908190048c16606087015260028701548084166080880152048b1660a086015297850154808b1660c086019081529390041660e084015260048085015461010085015260059094015461012084015287529189019093529084209051928101805492959194939091169290916111c69084906123f0565b925050819055508160c001516001600160a01b03168160000160008282546111ee9190612403565b90915550508354849060009061120c906001600160601b031661250b565b82546001600160601b039182166101009390930a92830291909202199091161790558354600160601b90046001600160a01b03908116908416148015611261575060018401546001600160a01b038481169116145b1561128a5783546001600160601b031684556001840180546001600160a01b03191690556113b9565b83546001600160a01b03808516600160601b90920416036112ef5760a0820180516001600160a01b039081166000908152600387016020526040902060010180546001600160601b03908116909155915186549116600160601b0291161784556113b9565b60018401546001600160a01b03808516911603611355576060820180516001600160a01b039081166000908152600387016020526040902060020180546001600160601b0316905590516001860180546001600160a01b031916919092161790556113b9565b60a0820180516060840180516001600160a01b039081166000908152600389016020526040808220600201805460016001'... 9266 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel\'s lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don\'t need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.\'s \\"Hacker\'s Delight\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\"msb\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // ‚Üí `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // ‚Üí `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton\'s method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result'... 252825 more characters
  }
}
2024-01-08T15:28:40.134Z cannon:cli:rpc eth_chainId

2024-01-08T15:28:40.136Z cannon:cli:rpc eth_getCode

2024-01-08T15:28:40.137Z cannon:builder:contract performing arachnid create2
2024-01-08T15:28:40.139Z cannon:builder:contract create2 address is 0x9EdcD1fEc19E5baA98fa4911C90C2162524750d2
2024-01-08T15:28:40.141Z cannon:cli:rpc eth_chainId

2024-01-08T15:28:40.143Z cannon:cli:rpc eth_getCode

2024-01-08T15:28:40.678Z cannon:cli:rpc anvil_impersonateAccount

2024-01-08T15:28:40.680Z cannon:cli:rpc anvil_setBalance

2024-01-08T15:28:40.682Z cannon:cli:rpc eth_blockNumber

2024-01-08T15:28:40.683Z cannon:cli:rpc eth_chainId

2024-01-08T15:28:40.687Z cannon:cli:rpc eth_chainId

2024-01-08T15:28:40.691Z cannon:cli:rpc eth_estimateGas

2024-01-08T15:28:40.701Z cannon:cli:rpc eth_sendTransaction

2024-01-08T15:28:40.702Z cannon:cli:rpc 
    Transaction: 0x8a41a4cbe5b9c04e6a1475576916c4d7fa7fdcc91df45bc60e0aa8aa33a5074f
    Gas used: 2135769

2024-01-08T15:28:40.703Z cannon:cli:rpc 
    Block Number: 114564389
    Block Hash: 0xace5b320328efaa4cd6fb1536dcc97a4a69f2d2f60139ee22bd881f05231233b
    Block Time: "Mon, 8 Jan 2024 15:28:38 +0000"


2024-01-08T15:28:40.703Z cannon:cli:rpc eth_chainId

2024-01-08T15:28:40.704Z cannon:cli:rpc eth_getTransactionByHash

2024-01-08T15:28:40.712Z cannon:cli:rpc eth_chainId

2024-01-08T15:28:40.714Z cannon:cli:rpc eth_getTransactionReceipt

2024-01-08T15:28:40.716Z cannon:builder:contract arachnid create2 complete {
  to: '0x4e59b44847b379578588920cA78FbF26c0B4956C',
  from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
  contractAddress: null,
  transactionIndex: 0,
  gasUsed: BigNumber { _hex: '0x2096d9', _isBigNumber: true },
  logsBloom: '0x
  blockHash: '0xace5b320328efaa4cd6fb1536dcc97a4a69f2d2f60139ee22bd881f05231233b',
  transactionHash: '0x8a41a4cbe5b9c04e6a1475576916c4d7fa7fdcc91df45bc60e0aa8aa33a5074f',
  logs: [],
  blockNumber: 114564389,
  confirmations: 1,
  cumulativeGasUsed: BigNumber { _hex: '0x2096d9', _isBigNumber: true },
  effectiveGasPrice: BigNumber { _hex: '0x2124ae', _isBigNumber: true },
  status: 1,
  type: 2,
  byzantium: true
}
2024-01-08T15:28:40.716Z cannon:builder:contract contract deployed to address 0x9EdcD1fEc19E5baA98fa4911C90C2162524750d2
  ‚úî Successfully deployed SettlerActions using CREATE2
  Contract Address: 0x9EdcD1fEc19E5baA98fa4911C90C2162524750d2
  Transaction Hash: 0x8a41a4cbe5b9c04e6a1475576916c4d7fa7fdcc91df45bc60e0aa8aa33a5074f
  Transaction Cost: 0.000004639056857982 ETH (2,135,769 gas)

2024-01-08T15:28:40.722Z cannon:builder:runtime resolve artifact SettlerActions
2024-01-08T15:28:40.722Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:28:49.862Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/SettlerActions.sol': 'SettlerActions' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/SettlerActions.sol': {
      keccak256: '0x05edfe3f72323b7212fbb5134f76211f397138c2ed30ddf0f3683772213c831d',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:28:49.863Z cannon:cli:foundry evm version paris
2024-01-08T15:28:49.869Z cannon:builder:runtime reported contract artifact SettlerActions {
  contractName: 'SettlerActions',
  sourceName: 'src/libraries/external/SettlerActions.sol',
  abi: [
    {
      type: 'event',
      name: 'AuctionNFTSettle',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'AuctionSettle',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'BucketBankruptcy',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'Settle',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'AuctionNotClearable', inputs: [] },
    { type: 'error', name: 'BucketBankruptcyBlock', inputs: [] },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'BucketPriceOutOfBounds', inputs: [] },
    { type: 'error', name: 'InvalidAmount', inputs: [] },
    { type: 'error', name: 'NoAuction', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__CeilOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'PRBMath__MulDivOverflow', inputs: [Array] }
  ],
  bytecode: '0x6125a061003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063e47aaa311461003a575b600080fd5b81801561004657600080fd5b5061005a6100553660046122fb565b6100b9565b6040516100b09190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b60405180910390f35b6100f96040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81516001600160a01b031660009081526003890160205260408120600101546001600160601b031690819003610142576040516338e806f160e11b815260040160405180910390fd5b82516001600160a01b031660009081526002808801602090815260409283902083516060810185528154815260018201549281019290925290910154918101919091526203f48061019383426123f0565b111580156101a45750602081015115155b156101c2576040516320560ae760e21b815260040160405180910390fd5b805183526020810180516040850152815160a080860191909152905160808501526101f7908a908a90879085908a01356104a1565b6020878101919091528301528082521580159061021657506020810151155b15610391576000846040015161025283600001518660a00151896020013561023e91906123f0565b6102489190612403565b8860a001356107dc565b61025c9190612403565b9050600061026c8a612000015490565b9050600088600201548d6002015461028c670de0b6b3e2feca0085610804565b6102969190612403565b6102a09190612403565b9050808311156103725760006102cd6102c66102bc84876123f0565b8b60a0013561082e565b8651610843565b90506000831180156102ea57506207e9006102e887426123f0565b105b1561035b5787516001600160a01b0316600090815260038f0160205260409020600501546103188282610843565b915061032482826123f0565b9050808f60030160008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060050181905550505b808560000181815161036d91906123f0565b905250505b83511561038d5761038a8c8c89878c60a0013561085a565b84525b5050505b805160a0840180516103a49083906123f0565b90525060a0808401516103b991870135610804565b60c0840181905284516040519182526001600160a01b0316907fa3788eedc10ef3ec6982384227c562c6666cf2b6af4f6a583b6d5d0f2ba0d2049060200160405180910390a2805160000361043657835160208083015161042f928d928d928d9291610427908c018c612416565b60ff166109b7565b5060208201525b80516020808501919091528101516060840181905260808401805161045c9083906123f0565b90525092516001600160a01b03166000908152600296870160209081526040918290208551815590850151600182015593015192909501919091559695505050505050565b8151602080840151908501515b80158015906104bc57508215155b80156104c757508115155b156107d15761052960405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610534886001610b37565b6101208401525060a0820181905261054d908990610c27565b6060820181905261014082015260a081015161056890610cd5565b60e082015261014081015115610794576105828486610804565b602082015260e08101516105979084906107dc565b60c08201526101208101516101408201516105b29190610804565b61010082018190526020820151118015906105d5575080602001518160c0015110155b15610612576105ed8160200151826101200151610d47565b610140820152602081015160e08201516106079190610d67565b815260009350610690565b8061010001518160c0015110610658576106358161010001518260e00151610d67565b8152610100810151610647908661082e565b61065190856123f0565b9350610690565b61066b8160c00151826101200151610d47565b61014082015282815260c0810151610683908661082e565b61068d90856123f0565b93505b805161069c90846123f0565b60a0820151600090815260208b905260409020805460808401528251600182015492955090916106cc9190612403565b604083015260608201516101408301516106e69190610843565b61014083018190526060830180516106ff9083906123f0565b9052506101408201511561072157610721898360a00151846101400151610d93565b604082015115801561073557506060820151155b80156107445750608082015115155b15610783576000815542600282015560a0820151608083015160405190815260008051602061254b8339815191529060200160405180910390a261078e565b604082015160018201555b506107c0565b60a0810151600090815260208a905260408120885160e08401516107ba93908790610e65565b50600092505b6107c982612439565b9150506104ae565b955095509592505050565b6000670de0b6b3a76400006107f18385612450565b6107fb919061247d565b90505b92915050565b6000670de0b6b3a764000061081a60028261247d565b6108248486612450565b6107f19190612403565b6000816107f1670de0b6b3a764000085612450565b60008183111561085357816107fb565b5090919050565b81515b60208401511580159061086f57508015155b156109ae57600080610882876001610b37565b925050915060006108938884610c27565b905060006108a18383610804565b905060006108af8688610804565b905060008183106108f8576000965060006108d36108cd8488610d47565b86610843565b90506108df81866123f0565b915080156108f2576108f28c8883610d93565b5061091f565b610902838961082e565b61090c90886123f0565b9650831561091f5761091f8b8786610d93565b600086815260208d90526040902080548061093989610cd5565b83600101546109489190612450565b6109528986612450565b61095c9190612403565b1161098f5760008255426002830155604051818152889060008051602061254b8339815191529060200160405180910390a25b8b602001805161099e90612439565b90525061085d9650505050505050565b95945050505050565b6000806000198301610adb57600080670de0b6b3a76400006109d9818861247d565b6109e39190612450565b9350858414610a88576109f684876123f0565b6001600160a01b038816600090815260038c016020526040812060028101546001909101549295509091610a36916001600160601b039081169116610eef565b905064173eb4c80a8111610a4c57611cdc610a55565b610a5581611013565b600081815260208c905260409020909250610a849089610a758c866110dd565b87610a7f87610cd5565b610e65565b9250505b60408051858152602081018490529081018290526001600160a01b038816907fddd6b496b84171d179d9874158b1cbbe422dd482e5523f1b09cb69ebef2878419060600160405180910390a25050610b22565b839150846001600160a01b03167f91a9dcdd01df8b934f14307641e884e0ea6e414bf05fe8daf8c74a28f69b55ee83604051610b1991815260200190565b60405180910390a25b610b2c88866110f6565b965096945050505050565b60008080611000670de0b6b3a764000082808080805b8615610c1957610b5d878b612403565b93508b846120018110610b7257610b7261249f565b015492508b61200101846120018110610b8d57610b8d61249f565b0154915081600003610ba857610ba38684610804565b610bca565b610bca610bb58388612450565b846a0c097ce7bc90715b34b9f160241b6113fb565b610bd49086612403565b90508a811015610bf357611cdc8411610bee578399508094505b610c0d565b8115610c0657610c0386836107dc565b95505b8098508597505b600187901c9650610b4d565b505050505050509250925092565b6000610c32826124cb565b9150600183836120018110610c4957610c4961249f565b0154915060008060005b858416600003610ccb57610c6784876123f0565b925086836120018110610c7c57610c7c61249f565b015491508661200101836120018110610c9757610c9761249f565b0154905080600003610ca95781610cb3565b610cb38183610804565b610cbd90866123f0565b9450600184901b9350610c53565b5050505092915050565b600080610ce48361103c6124e4565b9050610c9f19811280610cf8575061103c81135b15610d1657604051637edf443b60e11b815260040160405180910390fd5b610d40610d3b610d25836114a9565b610d36670df27a2cdf448000611539565b61161d565b6116e2565b9392505050565b600081610d5560028261247d565b610824670de0b6b3a764000086612450565b600081600181610d7f670de0b6b3a764000087612450565b610d899190612403565b6107f191906123f0565b80600003610db45760405163162908e360e11b815260040160405180910390fd5b610dbd826124cb565b91505b6120008211610e605760008184846120018110610ddf57610ddf61249f565b016000828254610def91906123f0565b925050819055905060008461200101846120018110610e1057610e1061249f565b015490508015610e4457610e248282610804565b610e37610e318585612403565b83610804565b610e4191906123f0565b92505b610e4d8461177e565b610e579085612403565b93505050610dc0565b505050565b6002850154600090428103610e8d5760405163c1e4c5f760e01b815260040160405180910390fd5b610ea487600101548860000154878787600061179d565b915083876001016000828254610eba9190612403565b9091555050865482908890600090610ed3908490612403565b90915550610ee590508782888561181a565b5095945050505050565b600080610f20610eff84426123f0565b610f1190670de0b6b3a7640000612450565b680340aad21b3b700000610d47565b9050600068068155a43676e00000821015610f7457610f4d670de0b6b3a763ffff19610d3660148561247d565b9050610f6185610f5c836116e2565b610804565b610f6d90610100612450565b925061100b565b682d89577d7d40200000821015610fcb57610fb1670de0b6b3a763ffff196078610fa768068155a43676e00000866123f0565b610d36919061247d565b9050610fc085610f5c836116e2565b610f6d906004612450565b610fed670de0b6b3a763ffff19603c610fa7682d89577d7d40200000866123f0565b90506010610ffe86610f5c846116e2565b611008919061247d565b92505b505092915050565b600064173eb4c80a82108061103357506b033f4a75fb6ff29166751a4b82115b1561105157604051635665ba4560e11b815260040160405180910390fd5b600061107561105f84611539565b611070670df27a2cdf448000611539565b611875565b905060006110828261193b565b90506000821280156110a457506706f05b59d3b200006110a283836124e4565b135b156110c7576110bf670de0b6b3a7640000820561103d6124e4565b949350505050565b6110bf670de0b6b3a7640000820561103c6124e4565b60006107fb6110ec8484610c27565b610f5c85856119ad565b6001600160a01b03808216600090815260038085016020908152604080842081516101408101835281548088168083526001600160601b03600160a01b9283900481168488015260018086015480831686890152600160601b908190048c16606087015260028701548084166080880152048b1660a086015297850154808b1660c086019081529390041660e084015260048085015461010085015260059094015461012084015287529189019093529084209051928101805492959194939091169290916111c69084906123f0565b925050819055508160c001516001600160a01b03168160000160008282546111ee9190612403565b90915550508354849060009061120c906001600160601b031661250b565b82546001600160601b039182166101009390930a92830291909202199091161790558354600160601b90046001600160a01b03908116908416148015611261575060018401546001600160a01b038481169116145b1561128a5783546001600160601b031684556001840180546001600160a01b03191690556113b9565b83546001600160a01b03808516600160601b90920416036112ef5760a0820180516001600160a01b039081166000908152600387016020526040902060010180546001600160601b03908116909155915186549116600160601b0291161784556113b9565b60018401546001600160a01b03808516911603611355576060820180516001600160a01b039081166000908152600387016020526040902060020180546001600160601b0316905590516001860180546001600160a01b031916919092'... 9382 more characters,
  deployedBytecode: '0x73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063e47aaa311461003a575b600080fd5b81801561004657600080fd5b5061005a6100553660046122fb565b6100b9565b6040516100b09190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b60405180910390f35b6100f96040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81516001600160a01b031660009081526003890160205260408120600101546001600160601b031690819003610142576040516338e806f160e11b815260040160405180910390fd5b82516001600160a01b031660009081526002808801602090815260409283902083516060810185528154815260018201549281019290925290910154918101919091526203f48061019383426123f0565b111580156101a45750602081015115155b156101c2576040516320560ae760e21b815260040160405180910390fd5b805183526020810180516040850152815160a080860191909152905160808501526101f7908a908a90879085908a01356104a1565b6020878101919091528301528082521580159061021657506020810151155b15610391576000846040015161025283600001518660a00151896020013561023e91906123f0565b6102489190612403565b8860a001356107dc565b61025c9190612403565b9050600061026c8a612000015490565b9050600088600201548d6002015461028c670de0b6b3e2feca0085610804565b6102969190612403565b6102a09190612403565b9050808311156103725760006102cd6102c66102bc84876123f0565b8b60a0013561082e565b8651610843565b90506000831180156102ea57506207e9006102e887426123f0565b105b1561035b5787516001600160a01b0316600090815260038f0160205260409020600501546103188282610843565b915061032482826123f0565b9050808f60030160008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060050181905550505b808560000181815161036d91906123f0565b905250505b83511561038d5761038a8c8c89878c60a0013561085a565b84525b5050505b805160a0840180516103a49083906123f0565b90525060a0808401516103b991870135610804565b60c0840181905284516040519182526001600160a01b0316907fa3788eedc10ef3ec6982384227c562c6666cf2b6af4f6a583b6d5d0f2ba0d2049060200160405180910390a2805160000361043657835160208083015161042f928d928d928d9291610427908c018c612416565b60ff166109b7565b5060208201525b80516020808501919091528101516060840181905260808401805161045c9083906123f0565b90525092516001600160a01b03166000908152600296870160209081526040918290208551815590850151600182015593015192909501919091559695505050505050565b8151602080840151908501515b80158015906104bc57508215155b80156104c757508115155b156107d15761052960405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610534886001610b37565b6101208401525060a0820181905261054d908990610c27565b6060820181905261014082015260a081015161056890610cd5565b60e082015261014081015115610794576105828486610804565b602082015260e08101516105979084906107dc565b60c08201526101208101516101408201516105b29190610804565b61010082018190526020820151118015906105d5575080602001518160c0015110155b15610612576105ed8160200151826101200151610d47565b610140820152602081015160e08201516106079190610d67565b815260009350610690565b8061010001518160c0015110610658576106358161010001518260e00151610d67565b8152610100810151610647908661082e565b61065190856123f0565b9350610690565b61066b8160c00151826101200151610d47565b61014082015282815260c0810151610683908661082e565b61068d90856123f0565b93505b805161069c90846123f0565b60a0820151600090815260208b905260409020805460808401528251600182015492955090916106cc9190612403565b604083015260608201516101408301516106e69190610843565b61014083018190526060830180516106ff9083906123f0565b9052506101408201511561072157610721898360a00151846101400151610d93565b604082015115801561073557506060820151155b80156107445750608082015115155b15610783576000815542600282015560a0820151608083015160405190815260008051602061254b8339815191529060200160405180910390a261078e565b604082015160018201555b506107c0565b60a0810151600090815260208a905260408120885160e08401516107ba93908790610e65565b50600092505b6107c982612439565b9150506104ae565b955095509592505050565b6000670de0b6b3a76400006107f18385612450565b6107fb919061247d565b90505b92915050565b6000670de0b6b3a764000061081a60028261247d565b6108248486612450565b6107f19190612403565b6000816107f1670de0b6b3a764000085612450565b60008183111561085357816107fb565b5090919050565b81515b60208401511580159061086f57508015155b156109ae57600080610882876001610b37565b925050915060006108938884610c27565b905060006108a18383610804565b905060006108af8688610804565b905060008183106108f8576000965060006108d36108cd8488610d47565b86610843565b90506108df81866123f0565b915080156108f2576108f28c8883610d93565b5061091f565b610902838961082e565b61090c90886123f0565b9650831561091f5761091f8b8786610d93565b600086815260208d90526040902080548061093989610cd5565b83600101546109489190612450565b6109528986612450565b61095c9190612403565b1161098f5760008255426002830155604051818152889060008051602061254b8339815191529060200160405180910390a25b8b602001805161099e90612439565b90525061085d9650505050505050565b95945050505050565b6000806000198301610adb57600080670de0b6b3a76400006109d9818861247d565b6109e39190612450565b9350858414610a88576109f684876123f0565b6001600160a01b038816600090815260038c016020526040812060028101546001909101549295509091610a36916001600160601b039081169116610eef565b905064173eb4c80a8111610a4c57611cdc610a55565b610a5581611013565b600081815260208c905260409020909250610a849089610a758c866110dd565b87610a7f87610cd5565b610e65565b9250505b60408051858152602081018490529081018290526001600160a01b038816907fddd6b496b84171d179d9874158b1cbbe422dd482e5523f1b09cb69ebef2878419060600160405180910390a25050610b22565b839150846001600160a01b03167f91a9dcdd01df8b934f14307641e884e0ea6e414bf05fe8daf8c74a28f69b55ee83604051610b1991815260200190565b60405180910390a25b610b2c88866110f6565b965096945050505050565b60008080611000670de0b6b3a764000082808080805b8615610c1957610b5d878b612403565b93508b846120018110610b7257610b7261249f565b015492508b61200101846120018110610b8d57610b8d61249f565b0154915081600003610ba857610ba38684610804565b610bca565b610bca610bb58388612450565b846a0c097ce7bc90715b34b9f160241b6113fb565b610bd49086612403565b90508a811015610bf357611cdc8411610bee578399508094505b610c0d565b8115610c0657610c0386836107dc565b95505b8098508597505b600187901c9650610b4d565b505050505050509250925092565b6000610c32826124cb565b9150600183836120018110610c4957610c4961249f565b0154915060008060005b858416600003610ccb57610c6784876123f0565b925086836120018110610c7c57610c7c61249f565b015491508661200101836120018110610c9757610c9761249f565b0154905080600003610ca95781610cb3565b610cb38183610804565b610cbd90866123f0565b9450600184901b9350610c53565b5050505092915050565b600080610ce48361103c6124e4565b9050610c9f19811280610cf8575061103c81135b15610d1657604051637edf443b60e11b815260040160405180910390fd5b610d40610d3b610d25836114a9565b610d36670df27a2cdf448000611539565b61161d565b6116e2565b9392505050565b600081610d5560028261247d565b610824670de0b6b3a764000086612450565b600081600181610d7f670de0b6b3a764000087612450565b610d899190612403565b6107f191906123f0565b80600003610db45760405163162908e360e11b815260040160405180910390fd5b610dbd826124cb565b91505b6120008211610e605760008184846120018110610ddf57610ddf61249f565b016000828254610def91906123f0565b925050819055905060008461200101846120018110610e1057610e1061249f565b015490508015610e4457610e248282610804565b610e37610e318585612403565b83610804565b610e4191906123f0565b92505b610e4d8461177e565b610e579085612403565b93505050610dc0565b505050565b6002850154600090428103610e8d5760405163c1e4c5f760e01b815260040160405180910390fd5b610ea487600101548860000154878787600061179d565b915083876001016000828254610eba9190612403565b9091555050865482908890600090610ed3908490612403565b90915550610ee590508782888561181a565b5095945050505050565b600080610f20610eff84426123f0565b610f1190670de0b6b3a7640000612450565b680340aad21b3b700000610d47565b9050600068068155a43676e00000821015610f7457610f4d670de0b6b3a763ffff19610d3660148561247d565b9050610f6185610f5c836116e2565b610804565b610f6d90610100612450565b925061100b565b682d89577d7d40200000821015610fcb57610fb1670de0b6b3a763ffff196078610fa768068155a43676e00000866123f0565b610d36919061247d565b9050610fc085610f5c836116e2565b610f6d906004612450565b610fed670de0b6b3a763ffff19603c610fa7682d89577d7d40200000866123f0565b90506010610ffe86610f5c846116e2565b611008919061247d565b92505b505092915050565b600064173eb4c80a82108061103357506b033f4a75fb6ff29166751a4b82115b1561105157604051635665ba4560e11b815260040160405180910390fd5b600061107561105f84611539565b611070670df27a2cdf448000611539565b611875565b905060006110828261193b565b90506000821280156110a457506706f05b59d3b200006110a283836124e4565b135b156110c7576110bf670de0b6b3a7640000820561103d6124e4565b949350505050565b6110bf670de0b6b3a7640000820561103c6124e4565b60006107fb6110ec8484610c27565b610f5c85856119ad565b6001600160a01b03808216600090815260038085016020908152604080842081516101408101835281548088168083526001600160601b03600160a01b9283900481168488015260018086015480831686890152600160601b908190048c16606087015260028701548084166080880152048b1660a086015297850154808b1660c086019081529390041660e084015260048085015461010085015260059094015461012084015287529189019093529084209051928101805492959194939091169290916111c69084906123f0565b925050819055508160c001516001600160a01b03168160000160008282546111ee9190612403565b90915550508354849060009061120c906001600160601b031661250b565b82546001600160601b039182166101009390930a92830291909202199091161790558354600160601b90046001600160a01b03908116908416148015611261575060018401546001600160a01b038481169116145b1561128a5783546001600160601b031684556001840180546001600160a01b03191690556113b9565b83546001600160a01b03808516600160601b90920416036112ef5760a0820180516001600160a01b039081166000908152600387016020526040902060010180546001600160601b03908116909155915186549116600160601b0291161784556113b9565b60018401546001600160a01b03808516911603611355576060820180516001600160a01b039081166000908152600387016020526040902060020180546001600160601b0316905590516001860180546001600160a01b031916919092161790556113b9565b60a0820180516060840180516001600160a01b039081166000908152600389016020526040808220600201805460016001'... 9266 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel\'s lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don\'t need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.\'s \\"Hacker\'s Delight\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\"msb\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // ‚Üí `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // ‚Üí `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton\'s method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result'... 252825 more characters
  }
}
2024-01-08T15:28:49.870Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x6125a061003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063e47aaa311461003a575b600080fd5b81801561004657600080fd5b5061005a6100553660046122fb565b6100b9565b6040516100b09190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b60405180910390f35b6100f96040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81516001600160a01b031660009081526003890160205260408120600101546001600160601b031690819003610142576040516338e806f160e11b815260040160405180910390fd5b82516001600160a01b031660009081526002808801602090815260409283902083516060810185528154815260018201549281019290925290910154918101919091526203f48061019383426123f0565b111580156101a45750602081015115155b156101c2576040516320560ae760e21b815260040160405180910390fd5b805183526020810180516040850152815160a080860191909152905160808501526101f7908a908a90879085908a01356104a1565b6020878101919091528301528082521580159061021657506020810151155b15610391576000846040015161025283600001518660a00151896020013561023e91906123f0565b6102489190612403565b8860a001356107dc565b61025c9190612403565b9050600061026c8a612000015490565b9050600088600201548d6002015461028c670de0b6b3e2feca0085610804565b6102969190612403565b6102a09190612403565b9050808311156103725760006102cd6102c66102bc84876123f0565b8b60a0013561082e565b8651610843565b90506000831180156102ea57506207e9006102e887426123f0565b105b1561035b5787516001600160a01b0316600090815260038f0160205260409020600501546103188282610843565b915061032482826123f0565b9050808f60030160008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060050181905550505b808560000181815161036d91906123f0565b905250505b83511561038d5761038a8c8c89878c60a0013561085a565b84525b5050505b805160a0840180516103a49083906123f0565b90525060a0808401516103b991870135610804565b60c0840181905284516040519182526001600160a01b0316907fa3788eedc10ef3ec6982384227c562c6666cf2b6af4f6a583b6d5d0f2ba0d2049060200160405180910390a2805160000361043657835160208083015161042f928d928d928d9291610427908c018c612416565b60ff166109b7565b5060208201525b80516020808501919091528101516060840181905260808401805161045c9083906123f0565b90525092516001600160a01b03166000908152600296870160209081526040918290208551815590850151600182015593015192909501919091559695505050505050565b8151602080840151908501515b80158015906104bc57508215155b80156104c757508115155b156107d15761052960405180610160016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610534886001610b37565b6101208401525060a0820181905261054d908990610c27565b6060820181905261014082015260a081015161056890610cd5565b60e082015261014081015115610794576105828486610804565b602082015260e08101516105979084906107dc565b60c08201526101208101516101408201516105b29190610804565b61010082018190526020820151118015906105d5575080602001518160c0015110155b15610612576105ed8160200151826101200151610d47565b610140820152602081015160e08201516106079190610d67565b815260009350610690565b8061010001518160c0015110610658576106358161010001518260e00151610d67565b8152610100810151610647908661082e565b61065190856123f0565b9350610690565b61066b8160c00151826101200151610d47565b61014082015282815260c0810151610683908661082e565b61068d90856123f0565b93505b805161069c90846123f0565b60a0820151600090815260208b905260409020805460808401528251600182015492955090916106cc9190612403565b604083015260608201516101408301516106e69190610843565b61014083018190526060830180516106ff9083906123f0565b9052506101408201511561072157610721898360a00151846101400151610d93565b604082015115801561073557506060820151155b80156107445750608082015115155b15610783576000815542600282015560a0820151608083015160405190815260008051602061254b8339815191529060200160405180910390a261078e565b604082015160018201555b506107c0565b60a0810151600090815260208a905260408120885160e08401516107ba93908790610e65565b50600092505b6107c982612439565b9150506104ae565b955095509592505050565b6000670de0b6b3a76400006107f18385612450565b6107fb919061247d565b90505b92915050565b6000670de0b6b3a764000061081a60028261247d565b6108248486612450565b6107f19190612403565b6000816107f1670de0b6b3a764000085612450565b60008183111561085357816107fb565b5090919050565b81515b60208401511580159061086f57508015155b156109ae57600080610882876001610b37565b925050915060006108938884610c27565b905060006108a18383610804565b905060006108af8688610804565b905060008183106108f8576000965060006108d36108cd8488610d47565b86610843565b90506108df81866123f0565b915080156108f2576108f28c8883610d93565b5061091f565b610902838961082e565b61090c90886123f0565b9650831561091f5761091f8b8786610d93565b600086815260208d90526040902080548061093989610cd5565b83600101546109489190612450565b6109528986612450565b61095c9190612403565b1161098f5760008255426002830155604051818152889060008051602061254b8339815191529060200160405180910390a25b8b602001805161099e90612439565b90525061085d9650505050505050565b95945050505050565b6000806000198301610adb57600080670de0b6b3a76400006109d9818861247d565b6109e39190612450565b9350858414610a88576109f684876123f0565b6001600160a01b038816600090815260038c016020526040812060028101546001909101549295509091610a36916001600160601b039081169116610eef565b905064173eb4c80a8111610a4c57611cdc610a55565b610a5581611013565b600081815260208c905260409020909250610a849089610a758c866110dd565b87610a7f87610cd5565b610e65565b9250505b60408051858152602081018490529081018290526001600160a01b038816907fddd6b496b84171d179d9874158b1cbbe422dd482e5523f1b09cb69ebef2878419060600160405180910390a25050610b22565b839150846001600160a01b03167f91a9dcdd01df8b934f14307641e884e0ea6e414bf05fe8daf8c74a28f69b55ee83604051610b1991815260200190565b60405180910390a25b610b2c88866110f6565b965096945050505050565b60008080611000670de0b6b3a764000082808080805b8615610c1957610b5d878b612403565b93508b846120018110610b7257610b7261249f565b015492508b61200101846120018110610b8d57610b8d61249f565b0154915081600003610ba857610ba38684610804565b610bca565b610bca610bb58388612450565b846a0c097ce7bc90715b34b9f160241b6113fb565b610bd49086612403565b90508a811015610bf357611cdc8411610bee578399508094505b610c0d565b8115610c0657610c0386836107dc565b95505b8098508597505b600187901c9650610b4d565b505050505050509250925092565b6000610c32826124cb565b9150600183836120018110610c4957610c4961249f565b0154915060008060005b858416600003610ccb57610c6784876123f0565b925086836120018110610c7c57610c7c61249f565b015491508661200101836120018110610c9757610c9761249f565b0154905080600003610ca95781610cb3565b610cb38183610804565b610cbd90866123f0565b9450600184901b9350610c53565b5050505092915050565b600080610ce48361103c6124e4565b9050610c9f19811280610cf8575061103c81135b15610d1657604051637edf443b60e11b815260040160405180910390fd5b610d40610d3b610d25836114a9565b610d36670df27a2cdf448000611539565b61161d565b6116e2565b9392505050565b600081610d5560028261247d565b610824670de0b6b3a764000086612450565b600081600181610d7f670de0b6b3a764000087612450565b610d899190612403565b6107f191906123f0565b80600003610db45760405163162908e360e11b815260040160405180910390fd5b610dbd826124cb565b91505b6120008211610e605760008184846120018110610ddf57610ddf61249f565b016000828254610def91906123f0565b925050819055905060008461200101846120018110610e1057610e1061249f565b015490508015610e4457610e248282610804565b610e37610e318585612403565b83610804565b610e4191906123f0565b92505b610e4d8461177e565b610e579085612403565b93505050610dc0565b505050565b6002850154600090428103610e8d5760405163c1e4c5f760e01b815260040160405180910390fd5b610ea487600101548860000154878787600061179d565b915083876001016000828254610eba9190612403565b9091555050865482908890600090610ed3908490612403565b90915550610ee590508782888561181a565b5095945050505050565b600080610f20610eff84426123f0565b610f1190670de0b6b3a7640000612450565b680340aad21b3b700000610d47565b9050600068068155a43676e00000821015610f7457610f4d670de0b6b3a763ffff19610d3660148561247d565b9050610f6185610f5c836116e2565b610804565b610f6d90610100612450565b925061100b565b682d89577d7d40200000821015610fcb57610fb1670de0b6b3a763ffff196078610fa768068155a43676e00000866123f0565b610d36919061247d565b9050610fc085610f5c836116e2565b610f6d906004612450565b610fed670de0b6b3a763ffff19603c610fa7682d89577d7d40200000866123f0565b90506010610ffe86610f5c846116e2565b611008919061247d565b92505b505092915050565b600064173eb4c80a82108061103357506b033f4a75fb6ff29166751a4b82115b1561105157604051635665ba4560e11b815260040160405180910390fd5b600061107561105f84611539565b611070670df27a2cdf448000611539565b611875565b905060006110828261193b565b90506000821280156110a457506706f05b59d3b200006110a283836124e4565b135b156110c7576110bf670de0b6b3a7640000820561103d6124e4565b949350505050565b6110bf670de0b6b3a7640000820561103c6124e4565b60006107fb6110ec8484610c27565b610f5c85856119ad565b6001600160a01b03808216600090815260038085016020908152604080842081516101408101835281548088168083526001600160601b03600160a01b9283900481168488015260018086015480831686890152600160601b908190048c16606087015260028701548084166080880152048b1660a086015297850154808b1660c086019081529390041660e084015260048085015461010085015260059094015461012084015287529189019093529084209051928101805492959194939091169290916111c69084906123f0565b925050819055508160c001516001600160a01b03168160000160008282546111ee9190612403565b90915550508354849060009061120c906001600160601b031661250b565b82546001600160601b039182166101009390930a92830291909202199091161790558354600160601b90046001600160a01b03908116908416148015611261575060018401546001600160a01b038481169116145b1561128a5783546001600160601b031684556001840180546001600160a01b03191690556113b9565b83546001600160a01b03808516600160601b90920416036112ef5760a0820180516001600160a01b039081166000908152600387016020526040902060010180546001600160601b03908116909155915186549116600160601b0291161784556113b9565b60018401546001600160a01b03808516911603611355576060820180516001600160a01b039081166000908152600387016020526040902060020180546001600160601b0316905590516001860180546001600160a01b031916919092161790556113b9565b60a0820180516060840180516001600160a01b03908116600090815260038901602052604080822060020180546001600160601b03908116600160601b97861688021790915593519551831682529020600101805490921693169091029190911790555b50506001600160a01b03166000908152600391820160205260408120818155600181018290556002810182905591820181905560048201819055600590910155565b60008080600019858709858702925082811083820303915050806000036114355783828161142b5761142b612467565b0492505050610d40565b80841161144157600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156114ee5760405163e608e18b60e01b8152600481018390526024015b60405180910390fd5b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f9082131561152b576040516371f72a3160e01b8152600481018390526024016114e5565b50670de0b6b3a76400000290565b600080821361155e5760405163309fa7dd60e11b8152600481018390526024016114e5565b6000670de0b6b3a7640000831261157757506001611590565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b60006115a5670de0b6b3a76400008505611a1a565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff1981016115cf57505002919050565b6706f05b59d3b200005b600081131561161457670de0b6b3a7640000828002059150671bc16d674ec80000821261160c579384019360019190911d905b60011d6115d9565b50505002919050565b6000600160ff1b8314806116345750600160ff1b82145b1561165257604051630d01a11b60e21b815260040160405180910390fd5b600080600085126116635784611668565b846000035b915060008412611678578361167d565b836000035b9050600061168b8383611af8565b90506001600160ff1b038111156116b85760405163bf79e8d960e01b8152600481018290526024016114e5565b6000198087139086138082186001146116d157826116d6565b826000035b98975050505050505050565b6000808212156117355768033dd1780914b971141982121561170657506000919050565b611712826000036116e2565b6a0c097ce7bc90715b34b9f160241b8161172e5761172e612467565b0592915050565b680a688906bd8b00000082126117615760405163e69458f960e01b8152600481018390526024016114e5565b670de0b6b3a7640000604083901b04610d4081611bbe565b919050565b600081156117795761179560001983186001612403565b909116919050565b6000841580156117ab575086155b156117c1576117ba8484610804565b9050611810565b856000036117d3576117ba8484610804565b61180d866117e18587612450565b6117eb868b612450565b6117fd670de0b6b3a76400008a612450565b6118079190612403565b85612250565b90505b9695505050505050565b801561186f576001600160a01b038216600090815260038501602052604090206001810154841061184d57818155611867565b818160000160008282546118619190612403565b90915550505b426001909101555b50505050565b6000600160ff1b83148061188c5750600160ff1b82145b156118aa5760405163b3c754a360e01b815260040160405180910390fd5b600080600085126118bb57846118c0565b846000035b9150600084126118d057836118d5565b836000035b905060006118ec83670de0b6b3a7640000846122a1565b90506001600160ff1b0381111561191957604051637cb4bef560e01b8152600481018290526024016114e5565b60001980871390861380821860011461193257826116d6565b6116d68361252e565b6000670afdc366fbc00000600160ff1b0382131561196f57604051635399a28560e11b8152600481018390526024016114e5565b670de0b6b3a76400008207600081900361198b578291506119a7565b808303915060008313156119a757670de0b6b3a7640000820191505b50919050565b60006119b8826124cb565b9150670de0b6b3a764000090505b61200082116107fe57600083612001018361200181106119e8576119e861249f565b0154905080156119ff576119fc8282610804565b91505b611a088361177e565b611a129084612403565b9250506119c6565b6000600160801b8210611a3a57608091821c91611a379082612403565b90505b600160401b8210611a5857604091821c91611a559082612403565b90505b600160201b8210611a7657602091821c91611a739082612403565b90505b620100008210611a9357601091821c91611a909082612403565b90505b6101008210611aaf57600891821c91611aac9082612403565b90505b60108210611aca57600491821c91611ac79082612403565b90505b60048210611ae557600291821c91611ae29082612403565b90505b60028210611779576107fe600182612403565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110611b3c5760405163698d9a0160e11b8152600481018290526024016114e5565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff8211905082600003611b7a5780670de0b6b3a76400008504019450505050506107fe565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615611bde5768016a09e667f3bcc9090260401c5b6001603e1b821615611bf9576801306fe0a31b7152df0260401c5b6001603d1b821615611c14576801172b83c7d517adce0260401c5b6001603c1b821615611c2f5768010b5586cf9890f62a0260401c5b6001603b1b821615611c4a576801059b0d31585743ae0260401c5b6001603a1b821615611c6557680102c9a3e778060ee70260401c5b600160391b821615611c805768010163da9fb33356d80260401c5b600160381b821615611c9b57680100b1afa5abcbed610260401c5b600160371b821615611cb65768010058c86da1c09ea20260401c5b600160361b821615611cd1576801002c605e2e8cec500260401c5b600160351b821615611cec57680100162f3904051fa10260401c5b600160341b821615611d07576801000b175effdc76ba0260401c5b600160331b821615611d2257680100058ba01fb9f96d0260401c5b600160321b821615611d3d5768010002c5cc37da94920260401c5b600160311b821615611d58576801000162e525ee05470260401c5b600160301b821615611d735768010000b17255775c040260401c5b6001602f1b821615611d8e576801000058b91b5bc9ae0260401c5b6001602e1b821615611da957680100002c5c89d5ec6d0260401c5b6001602d1b821615611dc45768010000162e43f4f8310260401c5b6001602c1b821615611ddf57680100000b1721bcfc9a0260401c5b6001602b1b821615611dfa5768010000058b90cf1e6e0260401c5b6001602a1b821615611e15576801000002c5c863b73f0260401c5b600160291b821615611e3057680100000162e430e5a20260401c5b600160281b821615611e4b576801000000b1721835510260401c5b600160271b821615611e6657680100000058b90c0b490260401c5b600160261b821615611e815768010000002c5c8601cc0260401c5b600160251b821615611e9c576801000000162e42fff00260401c5b600160241b821615611eb75768010000000b17217fbb0260401c5b600160231b821615611ed2576801000000058b90bfce0260401c5b600160221b821615611eed57680100000002c5c85fe30260401c5b600160211b821615611f085768010000000162e42ff10260401c5b600160201b821615611f2357680100000000b17217f80260401c5b6380000000821615611f3e5768010000000058b90bfc0260401c5b6340000000821615611f59576801000000002c5c85fe0260401c5b6320000000821615611f7457680100000000162e42ff0260401c5b6310000000821615611f8f576801000000000b17217f0260401c5b6308000000821615611faa57680100000000058b90c00260401c5b6304000000821615611fc55768010000000002c5c8600260401c5b6302000000821615611fe0576801000000000162e4300260401c5b6301000000821615611ffb5768010000000000b172180260401c5b62800000821615612015576801000000000058b90c0260401c5b6240000082161561202f57680100000000002c5c860260401c5b622000008216156120495768010000000000162e430260401c5b6210000082161561206357680100000000000b17210260401c5b6208000082161561207d5768010000000000058b910260401c5b62040000821615612097576801000000000002c5c80260401c5b620200008216156120b157680100000000000162e40260401c5b620100008216156120ca5761b172600160401b010260401c5b6180008216156120e2576158b9600160401b010260401c5b6140008216156120fa57612c5d600160401b010260401c5b6120008216156121125761162e600160401b010260401c5b61100082161561212a57610b17600160401b010260401c5b6108008216156121425761058c600160401b010260401c5b61040082161561215a576102c6600160401b010260401c5b61020082161561217257610163600160401b010260401c5b6101008216156121895760b1600160401b010260401c5b608082161561219f576059600160401b010260401c5b60408216156121b557602c600160401b010260401c5b60208216156121cb576016600160401b010260401c5b60108216156121e157600b600160401b010260401c5b60088216156121f7576006600160401b010260401c5b600482161561220d576003600160401b010260401c5b6002821615612223576001600160401b010260401c5b6001821615612239576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b60008061225e8686866113fb565b90506001836002811115612274576122746124b5565b14801561229157506000848061228c5761228c612467565b868809115b156109ae57611810600182612403565b60008080600019858709858702925082811083820303915050806000036122d15783828161142b5761142b612467565b83811061144157604051631dcf306360e21b815260048101829052602481018590526044016114e5565b600080600080600080600087890361022081121561231857600080fd5b8835975060208901359650604089013595506060890135945060808901359350610120609f198201121561234b57600080fd5b60a08901925060606101bf198201121561236457600080fd5b50604051606081016001600160401b038111828210171561239557634e487b7160e01b600052604160045260246000fd5b6040526101c08901356001600160a01b03811681146123b357600080fd5b81526101e08901356020820152610200909801356040890152509497939650919490939192565b634e487b7160e01b600052601160045260246000fd5b818103818111156107fe576107fe6123da565b808201808211156107fe576107fe6123da565b60006020828403121561242857600080fd5b813560ff81168114610d4057600080fd5b600081612448576124486123da565b506000190190565b80820281158282048414176107fe576107fe6123da565b634e487b7160e01b600052601260045260246000fd5b60008261249a57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6000600182016124dd576124dd6123da565b5060010190565b8181036000831280158383131683831282161715612504576125046123da565b5092915050565b60006001600160601b03821680612524576125246123da565b6000190192915050565b6000600160ff1b8201612543576125436123da565b506000039056fe30ee43613aaa48d222b158aab1123c5a29d452f8b1a849e5f815dd355923ba85a26469706673582212206d8a1fd738520b7cdb2b641f8b033a8e0f32230832036ff49b34a4434b8ae43164736f6c63430008120033","args":[],"salt":"AJNA","value":[]}
2024-01-08T15:28:49.872Z cannon:builder:runtime resolve artifact TakerActions
2024-01-08T15:28:49.872Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:28:57.898Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/TakerActions.sol': 'TakerActions' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/SettlerActions.sol': {
      keccak256: '0x05edfe3f72323b7212fbb5134f76211f397138c2ed30ddf0f3683772213c831d',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/TakerActions.sol': {
      keccak256: '0x642ee2cabe710495ccc32c269750578cbfe924af26dcc73b8ce6cdf06adce68e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/RevertsHelper.sol': {
      keccak256: '0xcaff095290172f1b5726d4e887ab9be5f524d9321e94ca0095f99b666381a6f4',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:28:57.899Z cannon:cli:foundry evm version paris
2024-01-08T15:28:57.903Z cannon:builder:runtime reported contract artifact TakerActions {
  contractName: 'TakerActions',
  sourceName: 'src/libraries/external/TakerActions.sol',
  abi: [
    {
      type: 'event',
      name: 'BucketTake',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'BucketTakeLPAwarded',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'ReserveAuction',
      inputs: [Array],
      anonymous: false
    },
    { type: 'event', name: 'Take', inputs: [Array], anonymous: false },
    { type: 'error', name: 'AmountLTMinDebt', inputs: [] },
    { type: 'error', name: 'AuctionNotTakeable', inputs: [] },
    { type: 'error', name: 'AuctionPriceGtBucketPrice', inputs: [] },
    { type: 'error', name: 'BucketBankruptcyBlock', inputs: [] },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'BucketPriceOutOfBounds', inputs: [] },
    {
      type: 'error',
      name: 'CollateralRoundingNeededButNotPossible',
      inputs: []
    },
    { type: 'error', name: 'DustAmountNotExceeded', inputs: [] },
    { type: 'error', name: 'InsufficientCollateral', inputs: [] },
    { type: 'error', name: 'InsufficientLiquidity', inputs: [] },
    { type: 'error', name: 'InvalidAmount', inputs: [] },
    { type: 'error', name: 'InvalidAmount', inputs: [] },
    { type: 'error', name: 'NoAuction', inputs: [] },
    { type: 'error', name: 'NoReservesAuction', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__CeilOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__SqrtNegativeInput',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__SqrtOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'PRBMath__MulDivOverflow', inputs: [Array] },
    { type: 'error', name: 'ZeroDebtToCollateral', inputs: [] }
  ],
  bytecode: '0x613f4e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80630f4a0c2d146100505780632f39ec5c146100865780633c335cf3146100a6575b600080fd5b81801561005c57600080fd5b5061007061006b366004613b59565b6100db565b60405161007d9190613bca565b60405180910390f35b81801561009257600080fd5b506100706100a1366004613c72565b610307565b8180156100b257600080fd5b506100c66100c1366004613cf4565b6104be565b6040805192835260208301919091520161007d565b6100e361395c565b826000036101045760405163162908e360e11b815260040160405180910390fd5b6001600160a01b03841660009081526002808801602090815260409283902083516060810185528154815260018083015493820193909352920154928201929092529060ff16866000015160ff1614801561016a5750670de0b6b3a76400008160200151105b806101845750855160ff1615801561018457506020810151155b156101a257604051633a23d82560e01b815260040160405180910390fd5b80516101408301526020808201516101808401526040805160a080820183526001600160a01b03891682529281018790529188015190820152865160ff166060820152608081018490526000906101fc908c908490610625565b90508060e00151826020018181516102149190613d4c565b9052506101808101516101a082015161022d9190613d4c565b8252610180810151602088018051610246908390613d4c565b905250602087015160a088015161025d91906108a9565b60608801526102718b8b8b8b8b878c6108e6565b6020808801919091526080870191909152901515610120860181905260e080870193909352845161016080880191909152858301516101a0880152918a015160c08701526060808b015160a0880152928401518652908301516040860152610100830151918501919091526102eb578061018001516102f2565b806101a001515b61010084015250909998505050505050505050565b61030f61395c565b6001600160a01b038516600090815260028089016020908152604080842081516060810183528154815260018201549381018490529301549083015290910361036b57604051633a23d82560e01b815260040160405180910390fd5b80600001518261014001818152505080602001518261018001818152505060006103cd8c8c8c856040518060a001604052808d6001600160a01b031681526020018c151581526020018b81526020018e60a0015181526020018a815250610984565b90508060e00151826020018181516103e59190613d4c565b9052506101808101516101a08201516103fe9190613d4c565b8252610180810151602089018051610417908390613d4c565b905250602088015160a089015161042e91906108a9565b60608901526104428c8c8c8c8c878d6108e6565b6020808801919091526080870191909152901515610120860181905260e0808701939093528451610160870152848201516101a0870152908a015160c086015260608a015160a08601529082015184526104a1578061018001516104a8565b806101a001515b61010084015250909a9950505050505050505050565b8254600090819080158015906104e057506203f4806104dd8242613d4c565b11155b156106035760008660020154905060006104fe838960010154610bae565b905061050a8288610c6f565b94506105168686613d75565b6000036105365760405163162908e360e11b815260040160405180910390fd5b6105408582610c86565b9350836000036105635760405163162908e360e11b815260040160405180910390fd5b61056d8583613d4c565b9150818860020181905550600084896004015461058a9190613d89565b60048a0181905560038a0154600081815260068c0160205260409081902060058d0154600182015560028101849055905192935090917f2115712930a0e5047c8904a9cc557d2b1ba5a21876e04f59249843ce1a74d699906105f190879087908690613d9c565b60405180910390a1505050505061061c565b60405163bec2cf4b60e01b815260040160405180910390fd5b50935093915050565b61062d6139cd565b81516001600160a01b039081166000908152600380870160209081526040808420815161014081018352815480881682526001600160601b03600160a01b91829004811695830195909552600183015480861683860152600160601b90819004891660608401526002840154808716608085015204881660a08301529482015496871660c08201529390950490911660e0830152600484015461010083015260058401546101208301528651908601516106e8939190610cb2565b6000196101c0820152670de0b6b3a764000060c08201526020850151909250600160ff1684606001510361073d57610728670de0b6b3a764000082613d75565b61073a90670de0b6b3a7640000613db2565b90505b61075e61074e828660200151610c6f565b8560400151866080015186610db2565b925061076b86838561107e565b606084015160001901610835576000670de0b6b3a76400008460e001516107929190613d75565b6107a490670de0b6b3a7640000613db2565b90508360e001518114610833576107c381670de0b6b3a7640000613d89565b6107d587602001518760200151610c6f565b1061081a576107ec670de0b6b3a764000082613d89565b90506108088460e00151826108019190613d4c565b85516108a9565b61010085015260e08401819052610833565b604051634b6f00d760e01b815260040160405180910390fd5b505b835161016084015160e0850151602080870151610120880151604080519586529285019390935290830152151560608201526001600160a01b03909116907f4591b2dfbebff121b3ccd19ae2407e59a9cefd959b35e12d82752cb5bc6eb7579060800160405180910390a250509392505050565b6000670de0b6b3a76400006108bf600282613d75565b6108c98486613db2565b6108d39190613d89565b6108dd9190613d75565b90505b92915050565b600080600080600061090087600001518960a001516108a9565b9050610917898960600151838b610100015161121d565b6020870151875190935060000361095257600193506109458c8c8c898b602001518d6000015160ff1661128b565b6020890182905290935091505b6109658988888b60e00151881589611404565b6109738a8960600151611521565b945050975097509750979350505050565b61098c6139cd565b81516001600160a01b03908116600090815260038089016020908152604092839020835161014081018552815480871682526001600160601b03600160a01b91829004811694830194909452600183015480851683880152600160601b90819004881660608401526002840154808616608085015204871660a08301529382015495861660c0820152929094041660e08201526004830154610100820152600583015461012082015290840151610a539190610a4790611530565b86516060870151610cb2565b9150610a638584604001516115a2565b6101c08301819052600003610a8b5760405163bb55fd2760e01b815260040160405180910390fd5b60a082015182511115610ab1576040516351522bb560e11b815260040160405180910390fd5b826020015115610ac35760a082015182525b610ad1858460400151611650565b60c0830152602084015160608401516080850151610af192919085610db2565b91508160e00151600003610b185760405163bb55fd2760e01b815260040160405180910390fd5b610b2f8786888487604001518860200151886116bd565b825160408085015161016085015160e086015160208088015161012089015186519586529185019390935293830152606082015290151560808201526001600160a01b03909116907fcb6905a59200cc485bfe6d2168392e96a0f204daf9e3937dff19180cb0d796a49060a00160405180910390a25095945050505050565b600082156108e0576000610bc28442613d4c565b90506000610bd2610e1083613d75565b676765c793fa10079d601b1b901c90506000610c116b0331adfc6b81cf95c39de3b1603c610c02610e1087613dc9565b610c0c9190613d75565b61190d565b905060008515610c3557610c30676765c793fa10079d601b1b87611985565b610c38565b60005b9050676765c793fa10079d601b1b610c5084846119a5565b610c5a9083613db2565b610c649190613d75565b979650505050505050565b600081831115610c7f57816108dd565b5090919050565b6000670de0b6b3a7640000600181610c9e8587613db2565b610ca89190613d89565b6108d39190613d4c565b610cba6139cd565b60408501516001600160601b03166000819003610cea576040516338e806f160e11b815260040160405180910390fd5b428103610d0a5760405163e0e314e960e01b815260040160405180910390fd5b6101a08201849052610d1c84846108a9565b604083015260e086015160808701516001600160601b0391821691610d429116836119be565b835260a083018690526020870180516001600160601b0390811660808601526101008901519151610d8492918491168915610d7d5789611add565b8651611add565b6060840181905296516001600160a01b03166101408401525050600090941215610120850152509192915050565b610dba6139cd565b60006004836060015184608001516005610dd49190613ddd565b610dde9190613e0d565b610de9906003613e34565b610df39190613d75565b8351909150600090610e1690610e1184670de0b6b3a7640000613d4c565b611b7e565b90506000846101200151610e2b578451610e4d565b610e4d8560600151670de0b6b3a7640000610e469190613d4c565b86516108a9565b8551909150600003610e725760405163162908e360e11b815260040160405180910390fd5b600019856101c0015103610e8857600019610ea5565b610ea5610e9f866101c001518760c0015184611b93565b87611c41565b6102008601526000829003610ebc57600019610ed3565b610ed3610ecd866040015184611c58565b87611c70565b610220860181905261020086015111801590610ef457508785610200015111155b15610f5e5761020085015160e086018190528551610f1291906108a9565b61016086015260e0850151610f28908389611b93565b85610180018181525050610f53856101c00151610f4e8760e00151848960c00151611b93565b610c6f565b6101e086015261100e565b8785610220015111610fc65761022085015160e086018190526101a086015161018087015260c0860151610f9491908390611b93565b6101e086015260e0850151610fbb9083610fb686670de0b6b3a7640000613d4c565b611b93565b61016086015261100e565b60e08501889052610fd8888389611b93565b61018086015260c0850151610ff09089908390611b93565b6101e086015260e0850151855161100791906108a9565b6101608601525b611022856101800151866101a00151610c6f565b61018086015261012085015115611050576110468561016001518660600151611b7e565b6020860152611072565b61106c856101600151866060015161106790613e54565b610c86565b60208601525b50929695505050505050565b80610120015115611143576110968160200151611c9f565b6003830180546000906110b39084906001600160a01b0316613e70565b92506101000a8154816001600160a01b0302191690836001600160a01b0316021790555080602001518360040160008361014001516001600160a01b03166001600160a01b03168152602001908152602001600020600101600082825461111a9190613d89565b90915550506020810151600284018054600090611138908490613d89565b909155506112189050565b60038201546020820151611160916001600160a01b031690610c6f565b6020820181905261117090611c9f565b60038301805460009061118d9084906001600160a01b0316613e90565b92506101000a8154816001600160a01b0302191690836001600160a01b0316021790555080602001518360040160008361014001516001600160a01b03166001600160a01b0316815260200190815260200160002060010160008282546111f49190613d4c565b90915550506020810151600284018054600090611212908490613d4c565b90915550505b505050565b81156112855780821015611244576040516345b3f65d60e01b815260040160405180910390fd5b600061124f85611d11565b9050600a8110611283576112638482611d22565b83101561128357604051635b85919f60e11b815260040160405180910390fd5b505b50505050565b60008060001983016113a857600080670de0b6b3a76400006112ad8188613d75565b6112b79190613db2565b935085841461135c576112ca8487613d4c565b6001600160a01b038816600090815260038c01602052604081206002810154600190910154929550909161130a916001600160601b0390811691166119be565b905064173eb4c80a811161132057611cdc611329565b61132981611d4d565b600081815260208c90526040902090925061135890896113498c86611e12565b876113'... 22530 more characters,
  deployedBytecode: '0x730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80630f4a0c2d146100505780632f39ec5c146100865780633c335cf3146100a6575b600080fd5b81801561005c57600080fd5b5061007061006b366004613b59565b6100db565b60405161007d9190613bca565b60405180910390f35b81801561009257600080fd5b506100706100a1366004613c72565b610307565b8180156100b257600080fd5b506100c66100c1366004613cf4565b6104be565b6040805192835260208301919091520161007d565b6100e361395c565b826000036101045760405163162908e360e11b815260040160405180910390fd5b6001600160a01b03841660009081526002808801602090815260409283902083516060810185528154815260018083015493820193909352920154928201929092529060ff16866000015160ff1614801561016a5750670de0b6b3a76400008160200151105b806101845750855160ff1615801561018457506020810151155b156101a257604051633a23d82560e01b815260040160405180910390fd5b80516101408301526020808201516101808401526040805160a080820183526001600160a01b03891682529281018790529188015190820152865160ff166060820152608081018490526000906101fc908c908490610625565b90508060e00151826020018181516102149190613d4c565b9052506101808101516101a082015161022d9190613d4c565b8252610180810151602088018051610246908390613d4c565b905250602087015160a088015161025d91906108a9565b60608801526102718b8b8b8b8b878c6108e6565b6020808801919091526080870191909152901515610120860181905260e080870193909352845161016080880191909152858301516101a0880152918a015160c08701526060808b015160a0880152928401518652908301516040860152610100830151918501919091526102eb578061018001516102f2565b806101a001515b61010084015250909998505050505050505050565b61030f61395c565b6001600160a01b038516600090815260028089016020908152604080842081516060810183528154815260018201549381018490529301549083015290910361036b57604051633a23d82560e01b815260040160405180910390fd5b80600001518261014001818152505080602001518261018001818152505060006103cd8c8c8c856040518060a001604052808d6001600160a01b031681526020018c151581526020018b81526020018e60a0015181526020018a815250610984565b90508060e00151826020018181516103e59190613d4c565b9052506101808101516101a08201516103fe9190613d4c565b8252610180810151602089018051610417908390613d4c565b905250602088015160a089015161042e91906108a9565b60608901526104428c8c8c8c8c878d6108e6565b6020808801919091526080870191909152901515610120860181905260e0808701939093528451610160870152848201516101a0870152908a015160c086015260608a015160a08601529082015184526104a1578061018001516104a8565b806101a001515b61010084015250909a9950505050505050505050565b8254600090819080158015906104e057506203f4806104dd8242613d4c565b11155b156106035760008660020154905060006104fe838960010154610bae565b905061050a8288610c6f565b94506105168686613d75565b6000036105365760405163162908e360e11b815260040160405180910390fd5b6105408582610c86565b9350836000036105635760405163162908e360e11b815260040160405180910390fd5b61056d8583613d4c565b9150818860020181905550600084896004015461058a9190613d89565b60048a0181905560038a0154600081815260068c0160205260409081902060058d0154600182015560028101849055905192935090917f2115712930a0e5047c8904a9cc557d2b1ba5a21876e04f59249843ce1a74d699906105f190879087908690613d9c565b60405180910390a1505050505061061c565b60405163bec2cf4b60e01b815260040160405180910390fd5b50935093915050565b61062d6139cd565b81516001600160a01b039081166000908152600380870160209081526040808420815161014081018352815480881682526001600160601b03600160a01b91829004811695830195909552600183015480861683860152600160601b90819004891660608401526002840154808716608085015204881660a08301529482015496871660c08201529390950490911660e0830152600484015461010083015260058401546101208301528651908601516106e8939190610cb2565b6000196101c0820152670de0b6b3a764000060c08201526020850151909250600160ff1684606001510361073d57610728670de0b6b3a764000082613d75565b61073a90670de0b6b3a7640000613db2565b90505b61075e61074e828660200151610c6f565b8560400151866080015186610db2565b925061076b86838561107e565b606084015160001901610835576000670de0b6b3a76400008460e001516107929190613d75565b6107a490670de0b6b3a7640000613db2565b90508360e001518114610833576107c381670de0b6b3a7640000613d89565b6107d587602001518760200151610c6f565b1061081a576107ec670de0b6b3a764000082613d89565b90506108088460e00151826108019190613d4c565b85516108a9565b61010085015260e08401819052610833565b604051634b6f00d760e01b815260040160405180910390fd5b505b835161016084015160e0850151602080870151610120880151604080519586529285019390935290830152151560608201526001600160a01b03909116907f4591b2dfbebff121b3ccd19ae2407e59a9cefd959b35e12d82752cb5bc6eb7579060800160405180910390a250509392505050565b6000670de0b6b3a76400006108bf600282613d75565b6108c98486613db2565b6108d39190613d89565b6108dd9190613d75565b90505b92915050565b600080600080600061090087600001518960a001516108a9565b9050610917898960600151838b610100015161121d565b6020870151875190935060000361095257600193506109458c8c8c898b602001518d6000015160ff1661128b565b6020890182905290935091505b6109658988888b60e00151881589611404565b6109738a8960600151611521565b945050975097509750979350505050565b61098c6139cd565b81516001600160a01b03908116600090815260038089016020908152604092839020835161014081018552815480871682526001600160601b03600160a01b91829004811694830194909452600183015480851683880152600160601b90819004881660608401526002840154808616608085015204871660a08301529382015495861660c0820152929094041660e08201526004830154610100820152600583015461012082015290840151610a539190610a4790611530565b86516060870151610cb2565b9150610a638584604001516115a2565b6101c08301819052600003610a8b5760405163bb55fd2760e01b815260040160405180910390fd5b60a082015182511115610ab1576040516351522bb560e11b815260040160405180910390fd5b826020015115610ac35760a082015182525b610ad1858460400151611650565b60c0830152602084015160608401516080850151610af192919085610db2565b91508160e00151600003610b185760405163bb55fd2760e01b815260040160405180910390fd5b610b2f8786888487604001518860200151886116bd565b825160408085015161016085015160e086015160208088015161012089015186519586529185019390935293830152606082015290151560808201526001600160a01b03909116907fcb6905a59200cc485bfe6d2168392e96a0f204daf9e3937dff19180cb0d796a49060a00160405180910390a25095945050505050565b600082156108e0576000610bc28442613d4c565b90506000610bd2610e1083613d75565b676765c793fa10079d601b1b901c90506000610c116b0331adfc6b81cf95c39de3b1603c610c02610e1087613dc9565b610c0c9190613d75565b61190d565b905060008515610c3557610c30676765c793fa10079d601b1b87611985565b610c38565b60005b9050676765c793fa10079d601b1b610c5084846119a5565b610c5a9083613db2565b610c649190613d75565b979650505050505050565b600081831115610c7f57816108dd565b5090919050565b6000670de0b6b3a7640000600181610c9e8587613db2565b610ca89190613d89565b6108d39190613d4c565b610cba6139cd565b60408501516001600160601b03166000819003610cea576040516338e806f160e11b815260040160405180910390fd5b428103610d0a5760405163e0e314e960e01b815260040160405180910390fd5b6101a08201849052610d1c84846108a9565b604083015260e086015160808701516001600160601b0391821691610d429116836119be565b835260a083018690526020870180516001600160601b0390811660808601526101008901519151610d8492918491168915610d7d5789611add565b8651611add565b6060840181905296516001600160a01b03166101408401525050600090941215610120850152509192915050565b610dba6139cd565b60006004836060015184608001516005610dd49190613ddd565b610dde9190613e0d565b610de9906003613e34565b610df39190613d75565b8351909150600090610e1690610e1184670de0b6b3a7640000613d4c565b611b7e565b90506000846101200151610e2b578451610e4d565b610e4d8560600151670de0b6b3a7640000610e469190613d4c565b86516108a9565b8551909150600003610e725760405163162908e360e11b815260040160405180910390fd5b600019856101c0015103610e8857600019610ea5565b610ea5610e9f866101c001518760c0015184611b93565b87611c41565b6102008601526000829003610ebc57600019610ed3565b610ed3610ecd866040015184611c58565b87611c70565b610220860181905261020086015111801590610ef457508785610200015111155b15610f5e5761020085015160e086018190528551610f1291906108a9565b61016086015260e0850151610f28908389611b93565b85610180018181525050610f53856101c00151610f4e8760e00151848960c00151611b93565b610c6f565b6101e086015261100e565b8785610220015111610fc65761022085015160e086018190526101a086015161018087015260c0860151610f9491908390611b93565b6101e086015260e0850151610fbb9083610fb686670de0b6b3a7640000613d4c565b611b93565b61016086015261100e565b60e08501889052610fd8888389611b93565b61018086015260c0850151610ff09089908390611b93565b6101e086015260e0850151855161100791906108a9565b6101608601525b611022856101800151866101a00151610c6f565b61018086015261012085015115611050576110468561016001518660600151611b7e565b6020860152611072565b61106c856101600151866060015161106790613e54565b610c86565b60208601525b50929695505050505050565b80610120015115611143576110968160200151611c9f565b6003830180546000906110b39084906001600160a01b0316613e70565b92506101000a8154816001600160a01b0302191690836001600160a01b0316021790555080602001518360040160008361014001516001600160a01b03166001600160a01b03168152602001908152602001600020600101600082825461111a9190613d89565b90915550506020810151600284018054600090611138908490613d89565b909155506112189050565b60038201546020820151611160916001600160a01b031690610c6f565b6020820181905261117090611c9f565b60038301805460009061118d9084906001600160a01b0316613e90565b92506101000a8154816001600160a01b0302191690836001600160a01b0316021790555080602001518360040160008361014001516001600160a01b03166001600160a01b0316815260200190815260200160002060010160008282546111f49190613d4c565b90915550506020810151600284018054600090611212908490613d4c565b90915550505b505050565b81156112855780821015611244576040516345b3f65d60e01b815260040160405180910390fd5b600061124f85611d11565b9050600a8110611283576112638482611d22565b83101561128357604051635b85919f60e11b815260040160405180910390fd5b505b50505050565b60008060001983016113a857600080670de0b6b3a76400006112ad8188613d75565b6112b79190613db2565b935085841461135c576112ca8487613d4c565b6001600160a01b038816600090815260038c01602052604081206002810154600190910154929550909161130a916001600160601b0390811691166119be565b905064173eb4c80a811161132057611cdc611329565b61132981611d4d565b600081815260208c90526040902090925061135890896113498c86611e12565b8761135387611530565b611e2b565b9250505b866001600160a01b03167fddd6b496b84171d179d9874158b1cbbe422dd482e5523f1b09cb69ebef2878'... 22414 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel\'s lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don\'t need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.\'s \\"Hacker\'s Delight\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\"msb\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // ‚Üí `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // ‚Üí `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton\'s method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result'... 294675 more characters
  }
}
2024-01-08T15:28:57.904Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x613f4e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80630f4a0c2d146100505780632f39ec5c146100865780633c335cf3146100a6575b600080fd5b81801561005c57600080fd5b5061007061006b366004613b59565b6100db565b60405161007d9190613bca565b60405180910390f35b81801561009257600080fd5b506100706100a1366004613c72565b610307565b8180156100b257600080fd5b506100c66100c1366004613cf4565b6104be565b6040805192835260208301919091520161007d565b6100e361395c565b826000036101045760405163162908e360e11b815260040160405180910390fd5b6001600160a01b03841660009081526002808801602090815260409283902083516060810185528154815260018083015493820193909352920154928201929092529060ff16866000015160ff1614801561016a5750670de0b6b3a76400008160200151105b806101845750855160ff1615801561018457506020810151155b156101a257604051633a23d82560e01b815260040160405180910390fd5b80516101408301526020808201516101808401526040805160a080820183526001600160a01b03891682529281018790529188015190820152865160ff166060820152608081018490526000906101fc908c908490610625565b90508060e00151826020018181516102149190613d4c565b9052506101808101516101a082015161022d9190613d4c565b8252610180810151602088018051610246908390613d4c565b905250602087015160a088015161025d91906108a9565b60608801526102718b8b8b8b8b878c6108e6565b6020808801919091526080870191909152901515610120860181905260e080870193909352845161016080880191909152858301516101a0880152918a015160c08701526060808b015160a0880152928401518652908301516040860152610100830151918501919091526102eb578061018001516102f2565b806101a001515b61010084015250909998505050505050505050565b61030f61395c565b6001600160a01b038516600090815260028089016020908152604080842081516060810183528154815260018201549381018490529301549083015290910361036b57604051633a23d82560e01b815260040160405180910390fd5b80600001518261014001818152505080602001518261018001818152505060006103cd8c8c8c856040518060a001604052808d6001600160a01b031681526020018c151581526020018b81526020018e60a0015181526020018a815250610984565b90508060e00151826020018181516103e59190613d4c565b9052506101808101516101a08201516103fe9190613d4c565b8252610180810151602089018051610417908390613d4c565b905250602088015160a089015161042e91906108a9565b60608901526104428c8c8c8c8c878d6108e6565b6020808801919091526080870191909152901515610120860181905260e0808701939093528451610160870152848201516101a0870152908a015160c086015260608a015160a08601529082015184526104a1578061018001516104a8565b806101a001515b61010084015250909a9950505050505050505050565b8254600090819080158015906104e057506203f4806104dd8242613d4c565b11155b156106035760008660020154905060006104fe838960010154610bae565b905061050a8288610c6f565b94506105168686613d75565b6000036105365760405163162908e360e11b815260040160405180910390fd5b6105408582610c86565b9350836000036105635760405163162908e360e11b815260040160405180910390fd5b61056d8583613d4c565b9150818860020181905550600084896004015461058a9190613d89565b60048a0181905560038a0154600081815260068c0160205260409081902060058d0154600182015560028101849055905192935090917f2115712930a0e5047c8904a9cc557d2b1ba5a21876e04f59249843ce1a74d699906105f190879087908690613d9c565b60405180910390a1505050505061061c565b60405163bec2cf4b60e01b815260040160405180910390fd5b50935093915050565b61062d6139cd565b81516001600160a01b039081166000908152600380870160209081526040808420815161014081018352815480881682526001600160601b03600160a01b91829004811695830195909552600183015480861683860152600160601b90819004891660608401526002840154808716608085015204881660a08301529482015496871660c08201529390950490911660e0830152600484015461010083015260058401546101208301528651908601516106e8939190610cb2565b6000196101c0820152670de0b6b3a764000060c08201526020850151909250600160ff1684606001510361073d57610728670de0b6b3a764000082613d75565b61073a90670de0b6b3a7640000613db2565b90505b61075e61074e828660200151610c6f565b8560400151866080015186610db2565b925061076b86838561107e565b606084015160001901610835576000670de0b6b3a76400008460e001516107929190613d75565b6107a490670de0b6b3a7640000613db2565b90508360e001518114610833576107c381670de0b6b3a7640000613d89565b6107d587602001518760200151610c6f565b1061081a576107ec670de0b6b3a764000082613d89565b90506108088460e00151826108019190613d4c565b85516108a9565b61010085015260e08401819052610833565b604051634b6f00d760e01b815260040160405180910390fd5b505b835161016084015160e0850151602080870151610120880151604080519586529285019390935290830152151560608201526001600160a01b03909116907f4591b2dfbebff121b3ccd19ae2407e59a9cefd959b35e12d82752cb5bc6eb7579060800160405180910390a250509392505050565b6000670de0b6b3a76400006108bf600282613d75565b6108c98486613db2565b6108d39190613d89565b6108dd9190613d75565b90505b92915050565b600080600080600061090087600001518960a001516108a9565b9050610917898960600151838b610100015161121d565b6020870151875190935060000361095257600193506109458c8c8c898b602001518d6000015160ff1661128b565b6020890182905290935091505b6109658988888b60e00151881589611404565b6109738a8960600151611521565b945050975097509750979350505050565b61098c6139cd565b81516001600160a01b03908116600090815260038089016020908152604092839020835161014081018552815480871682526001600160601b03600160a01b91829004811694830194909452600183015480851683880152600160601b90819004881660608401526002840154808616608085015204871660a08301529382015495861660c0820152929094041660e08201526004830154610100820152600583015461012082015290840151610a539190610a4790611530565b86516060870151610cb2565b9150610a638584604001516115a2565b6101c08301819052600003610a8b5760405163bb55fd2760e01b815260040160405180910390fd5b60a082015182511115610ab1576040516351522bb560e11b815260040160405180910390fd5b826020015115610ac35760a082015182525b610ad1858460400151611650565b60c0830152602084015160608401516080850151610af192919085610db2565b91508160e00151600003610b185760405163bb55fd2760e01b815260040160405180910390fd5b610b2f8786888487604001518860200151886116bd565b825160408085015161016085015160e086015160208088015161012089015186519586529185019390935293830152606082015290151560808201526001600160a01b03909116907fcb6905a59200cc485bfe6d2168392e96a0f204daf9e3937dff19180cb0d796a49060a00160405180910390a25095945050505050565b600082156108e0576000610bc28442613d4c565b90506000610bd2610e1083613d75565b676765c793fa10079d601b1b901c90506000610c116b0331adfc6b81cf95c39de3b1603c610c02610e1087613dc9565b610c0c9190613d75565b61190d565b905060008515610c3557610c30676765c793fa10079d601b1b87611985565b610c38565b60005b9050676765c793fa10079d601b1b610c5084846119a5565b610c5a9083613db2565b610c649190613d75565b979650505050505050565b600081831115610c7f57816108dd565b5090919050565b6000670de0b6b3a7640000600181610c9e8587613db2565b610ca89190613d89565b6108d39190613d4c565b610cba6139cd565b60408501516001600160601b03166000819003610cea576040516338e806f160e11b815260040160405180910390fd5b428103610d0a5760405163e0e314e960e01b815260040160405180910390fd5b6101a08201849052610d1c84846108a9565b604083015260e086015160808701516001600160601b0391821691610d429116836119be565b835260a083018690526020870180516001600160601b0390811660808601526101008901519151610d8492918491168915610d7d5789611add565b8651611add565b6060840181905296516001600160a01b03166101408401525050600090941215610120850152509192915050565b610dba6139cd565b60006004836060015184608001516005610dd49190613ddd565b610dde9190613e0d565b610de9906003613e34565b610df39190613d75565b8351909150600090610e1690610e1184670de0b6b3a7640000613d4c565b611b7e565b90506000846101200151610e2b578451610e4d565b610e4d8560600151670de0b6b3a7640000610e469190613d4c565b86516108a9565b8551909150600003610e725760405163162908e360e11b815260040160405180910390fd5b600019856101c0015103610e8857600019610ea5565b610ea5610e9f866101c001518760c0015184611b93565b87611c41565b6102008601526000829003610ebc57600019610ed3565b610ed3610ecd866040015184611c58565b87611c70565b610220860181905261020086015111801590610ef457508785610200015111155b15610f5e5761020085015160e086018190528551610f1291906108a9565b61016086015260e0850151610f28908389611b93565b85610180018181525050610f53856101c00151610f4e8760e00151848960c00151611b93565b610c6f565b6101e086015261100e565b8785610220015111610fc65761022085015160e086018190526101a086015161018087015260c0860151610f9491908390611b93565b6101e086015260e0850151610fbb9083610fb686670de0b6b3a7640000613d4c565b611b93565b61016086015261100e565b60e08501889052610fd8888389611b93565b61018086015260c0850151610ff09089908390611b93565b6101e086015260e0850151855161100791906108a9565b6101608601525b611022856101800151866101a00151610c6f565b61018086015261012085015115611050576110468561016001518660600151611b7e565b6020860152611072565b61106c856101600151866060015161106790613e54565b610c86565b60208601525b50929695505050505050565b80610120015115611143576110968160200151611c9f565b6003830180546000906110b39084906001600160a01b0316613e70565b92506101000a8154816001600160a01b0302191690836001600160a01b0316021790555080602001518360040160008361014001516001600160a01b03166001600160a01b03168152602001908152602001600020600101600082825461111a9190613d89565b90915550506020810151600284018054600090611138908490613d89565b909155506112189050565b60038201546020820151611160916001600160a01b031690610c6f565b6020820181905261117090611c9f565b60038301805460009061118d9084906001600160a01b0316613e90565b92506101000a8154816001600160a01b0302191690836001600160a01b0316021790555080602001518360040160008361014001516001600160a01b03166001600160a01b0316815260200190815260200160002060010160008282546111f49190613d4c565b90915550506020810151600284018054600090611212908490613d4c565b90915550505b505050565b81156112855780821015611244576040516345b3f65d60e01b815260040160405180910390fd5b600061124f85611d11565b9050600a8110611283576112638482611d22565b83101561128357604051635b85919f60e11b815260040160405180910390fd5b505b50505050565b60008060001983016113a857600080670de0b6b3a76400006112ad8188613d75565b6112b79190613db2565b935085841461135c576112ca8487613d4c565b6001600160a01b038816600090815260038c01602052604081206002810154600190910154929550909161130a916001600160601b0390811691166119be565b905064173eb4c80a811161132057611cdc611329565b61132981611d4d565b600081815260208c90526040902090925061135890896113498c86611e12565b8761135387611530565b611e2b565b9250505b866001600160a01b03167fddd6b496b84171d179d9874158b1cbbe422dd482e5523f1b09cb69ebef28784185848460405161139993929190613d9c565b60405180910390a250506113ef565b839150846001600160a01b03167f91a9dcdd01df8b934f14307641e884e0ea6e414bf05fe8daf8c74a28f69b55ee836040516113e691815260200190565b60405180910390a25b6113f98886611eb5565b965096945050505050565b84516000901580159061141a5750602086015115155b905060008161142a57600061143c565b61143c87600001518860200151611985565b9050836114b1576001600160a01b0386166000908152600189016020526040902054821561149e578160000361148557604051639f7e164b60e01b815260040160405180910390fd5b611499898883611494866121ba565b612222565b6114af565b80156114af576114af8988836122f7565b505b82156114e45760026114c28661243b565b6114cc9190613d75565b6114de90670de0b6b3a7640000613d89565b60408801525b505050506001600160a01b039190911660009081526002938401602090815260409182902084518155908401516001820155920151919092015550565b60006108dd61153084846124b1565b60008061153f8361103c613e0d565b9050610c9f19811280611553575061103c81135b1561157157604051637edf443b60e11b815260040160405180910390fd5b61159b611596611580836124c7565b611591670df27a2cdf448000612552565b612636565b6126fb565b9392505050565b60006115ad82613eb0565b91506001838361200181106115c4576115c4613ec9565b0154915060008060005b858416600003611646576115e28487613d4c565b9250868361200181106115f7576115f7613ec9565b01549150866120010183612001811061161257611612613ec9565b0154905080600003611624578161162e565b61162e81836108a9565b6116389086613d4c565b9450600184901b93506115ce565b5050505092915050565b600061165b82613eb0565b9150670de0b6b3a764000090505b61200082116108e0576000836120010183612001811061168b5761168b613ec9565b0154905080156116a25761169f82826108a9565b91505b6116ab83612797565b6116b59084613d89565b925050611669565b600083815260208690526040812060028101546101c084015160c0850151929391926116e991906108a9565b90506000806000876117415761173086600101548760000154866117248b60e001518c600001518d60a0015161171f9190613d4c565b6108a9565b8b60a0015160006127b6565b915081925061174186863385612821565b8661012001511561178f5761176b86600101548760000154868a602001518b60a0015160006127b6565b90506117778184613d89565b925061178a868689610140015184612821565b611864565b60038a015460208801516117ac916001600160a01b031690610c6f565b602088018190526117bc90611c9f565b60038b0180546000906117d99084906001600160a01b0316613e90565b92506101000a8154816001600160a01b0302191690836001600160a01b0316021790555086602001518d60040160008961014001516001600160a01b03166001600160a01b0316815260200190815260200160002060010160008282546118409190613d4c565b9091555050602087015160028e01805460009061185e908490613d4c565b90915550505b6118748c8a896101e0015161287b565b8215611894578286600001600082825461188e9190613d89565b90915550505b8660e001518660010160008282546118ac9190613d89565b909155505061014087015160408051848152602081018490526001600160a01b039092169133917fd43d7a2b808648e0814e6795ea3a9b723df6eae4046a7e279a036458f38bc644910160405180910390a350505050505050505050505050565b600061191a600283613dc9565b60000361193257676765c793fa10079d601b1b611934565b825b9050611941600283613d75565b91505b81156108e05761195483846119a5565b9250611961600283613dc9565b156119735761197081846119a5565b90505b61197e600283613d75565b9150611944565b600081611993600282613d75565b6108c9670de0b6b3a764000086613db2565b6000676765c793fa10079d601b1b6108bf600282613d75565b6000806119ef6119ce8442613d4c565b6119e090670de0b6b3a7640000613db2565b680340aad21b3b700000611985565b9050600068068155a43676e00000821015611a3e57611a1c670de0b6b3a763ffff19611591601485613d75565b9050611a2b8561171f836126fb565b611a3790610100613db2565b9250611ad5565b682d89577d7d40200000821015611a9557611a7b670de0b6b3a763ffff196078611a7168068155a43676e0000086613d4c565b6115919190613d75565b9050611a8a8561171f836126fb565b611a37906004613db2565b611ab7670de0b6b3a763ffff19603c611a71682d89577d7d4020000086613d4c565b90506010611ac88661171f846126fb565b611ad29190613d75565b92505b505092915050565b60008084861015611b2e57611b27670de0b6b3a7640000611b22670de0b6b3a763ffff19611b1d611b0e888b613e0d565b611b188c8c613e0d565b612948565b612a0e565b612a1e565b9050611b6a565b6000611b3a8487613e0d565b90506000811215611b5657670de0b6b3a763ffff199150611b68565b8015611b6857670de0b6b3a764000091505b505b611b748482612636565b9695505050505050565b6000670de0b6b3a76400006108d38385613db2565b6000808060001985870985870292508281108382030391505080600003611bcd57838281611bc357611bc3613d5f565b049250505061159b565b808411611bd957600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b600081611c4e8185613d75565b6108dd9190613db2565b600081600181610c9e670de0b6b3a764000087613db2565b6000611c7c8284613dc9565b600003611c8a5750816108e0565b81611c958484611c41565b6108dd9190613d89565b60006001600160a01b03821115611d0d5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663630206269747360c81b60648201526084015b60405180910390fd5b5090565b80546000906108e090600190613d4c565b600081156108e0576108dd611d3f84611d3a85612a2e565b611985565b678ac7230489e80000611985565b600064173eb4c80a821080611d6d57506b033f4a75fb6ff29166751a4b82115b15611d8b57604051635665ba4560e11b815260040160405180910390fd5b6000611daa611d9984612552565b611b18670df27a2cdf448000612552565b90506000611db782612a42565b9050600082128015611dd957506706f05b59d3b20000611dd78383613e0d565b135b15611dfc57611df4670de0b6b3a7640000820561103d613e0d565b949350505050565b611df4670de0b6b3a7640000820561103c613e0d565b60006108dd611e2184846115a2565b61171f8585611650565b6002850154600090428103611e535760405163c1e4c5f760e01b815260040160405180910390fd5b611e6a876001015488600001548787876000612ab4565b915083876001016000828254611e809190613d89565b9091555050865482908890600090611e99908490613d89565b90915550611eab905087828885612821565b5095945050505050565b6001600160a01b03808216600090815260038085016020908152604080842081516101408101835281548088168083526001600160601b03600160a01b9283900481168488015260018086015480831686890152600160601b908190048c16606087015260028701548084166080880152048b1660a086015297850154808b1660c086019081529390041660e08401526004808501546101008501526005909401546101208401528752918901909352908420905192810180549295919493909116929091611f85908490613d4c565b925050819055508160c001516001600160a01b0316816000016000828254611fad9190613d89565b909155505083548490600090611fcb906001600160601b0316613edf565b82546001600160601b039182166101009390930a92830291909202199091161790558354600160601b90046001600160a01b03908116908416148015612020575060018401546001600160a01b038481169116145b156120495783546001600160601b031684556001840180546001600160a01b0319169055612178565b83546001600160a01b03808516600160601b90920416036120ae5760a0820180516001600160a01b039081166000908152600387016020526040902060010180546001600160601b03908116909155915186549116600160601b029116178455612178565b60018401546001600160a01b03808516911603612114576060820180516001600160a01b039081166000908152600387016020526040902060020180546001600160601b0316905590516001860180546001600160a01b03191691909216179055612178565b60a0820180516060840180516001600160a01b03908116600090815260038901602052604080822060020180546001600160601b03908116600160601b97861688021790915593519551831682529020600101805490921693169091029190911790555b50506001600160a01b03166000908152600391820160205260408120818155600181018290556002810182905591820181905560048201819055600590910155565b60006001600160601b03821115611d0d5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b6064820152608401611d04565b81156122c557600084600001838154811061223f5761223f613ec9565b6000918252602091829020604080518082019091529101546001600160a01b03811682526001600160601b03600160a01b9091048116928201839052909250831610156122a5576001600160601b03821660208201526122a0858285612af8565b6122bf565b6001600160601b03821660208201526122bf858285612c83565b50611285565b604080518082019091526001600160a01b03841681526001600160601b03821660208201528454611285918691612c83565b6001600160a01b038216600090815260018085016020526040822082905584546123219190613d4c565b905080820361235857835484908061233b5761233b613f02565b600082815260208120820160001990810191909155019055611285565b600084600001828154811061236f5761236f613ec9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b03169181019190915285549091508590806123be576123be613f02565b6000828152602081208201600019908101919091550190556123e1858285612c83565b611283858660000185815481106123fa576123fa613ec9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b03169181019190915285612af8565b6000808212156124615760405163608c83ff60e11b815260048101839052602401611d04565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f9082131561249e57604051632c482c3960e01b815260048101839052602401611d04565b6108e0670de0b6b3a76400008302612d60565b60006124bd8383612ece565b5090949350505050565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156125075760405163e608e18b60e01b815260048101839052602401611d04565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315612544576040516371f72a3160e01b815260048101839052602401611d04565b50670de0b6b3a76400000290565b60008082136125775760405163309fa7dd60e11b815260048101839052602401611d04565b6000670de0b6b3a76400008312612590575060016125a9565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b60006125be670de0b6b3a76400008505612fbe565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff1981016125e857505002919050565b6706f05b59d3b200005b600081131561262d57670de0b6b3a7640000828002059150671bc16d674ec800008212612625579384019360019190911d905b60011d6125f2565b50505002919050565b6000600160ff1b83148061264d5750600160ff1b82145b1561266b57604051630d01a11b60e21b815260040160405180910390fd5b6000806000851261267c5784612681565b846000035b9150600084126126915783612696565b836000035b905060006126a4838361309c565b90506001600160ff1b038111156126d15760405163bf79e8d960e01b815260048101829052602401611d04565b6000198087139086138082186001146126ea57826126ef565b826000035b98975050505050505050565b60008082121561274e5768033dd1780914b971141982121561271f57506000919050565b61272b826000036126fb565b6a0c097ce7bc90715b34b9f160241b8161274757612747613d5f565b0592915050565b680a688906bd8b000000821261277a5760405163e69458f960e01b815260048101839052602401611d04565b670de0b6b3a7640000604083901b0461159b81613162565b919050565b60008115612792576127ae60001983186001613d89565b909116919050565b6000841580156127c4575086155b156127d0575082611b74565b856000036127df575082611b74565b610c64866127f5670de0b6b3a764000087613db2565b6127ff868b613db2565b612811670de0b6b3a76400008a613db2565b61281b9190613d89565b856137f4565b8015611285576001600160a01b03821660009081526003850160205260409020600181015484106128545781815561286e565b818160000160008282546128689190613d89565b90915550505b4260019091015550505050565b8060000361289c5760405163162908e360e11b815260040160405180910390fd5b6128a582613eb0565b91505b612000821161121857600081848461200181106128c7576128c7613ec9565b0160008282546128d79190613d4c565b9250508190559050600084612001018461200181106128f8576128f8613ec9565b01549050801561292c5761290c82826108a9565b61291f6129198585613d89565b836108a9565b6129299190613d4c565b92505b61293584612797565b61293f9085613d89565b935050506128a8565b6000600160ff1b83148061295f5750600160ff1b82145b1561297d5760405163b3c754a360e01b815260040160405180910390fd5b6000806000851261298e5784612993565b846000035b9150600084126129a357836129a8565b836000035b905060006129bf83670de0b6b3a764000084613851565b90506001600160ff1b038111156129ec57604051637cb4bef560e01b815260048101829052602401611d04565b600019808713908613808218600114612a0557826126ef565b6126ef83613e54565b600081831215610c7f57816108dd565b600081831315610c7f57816108dd565b60006108e0670de0b6b3a764000083613db2565b6000670afdc366fbc00000600160ff1b03821315612a7657604051635399a28560e11b815260048101839052602401611d04565b670de0b6b3a764000082076000819003612a9257829150612aae565b80830391506000831315612aae57670de0b6b3a7640000820191505b50919050565b600084158015612ac2575086155b15612ad857612ad184846108a9565b9050611b74565b85600003612aea57612ad184846108a9565b610c64866127f58587613db2565b6000612b05826002613db2565b8454909150818111612b2257612b1d858585846138ab565b611283565b6000856000018381548110612b3957612b39613ec9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091529050612b81836001613d89565b82118015612bd2575060208101516001600160601b031686612ba4856001613d89565b81548110612bb457612bb4613ec9565b600091825260209091200154600160a01b90046001600160601b0316115b15612c325785612be184613eb0565b93508381548110612bf457612bf4613ec9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b03169181019190915290505b84602001516001600160601b031681602001516001600160601b031611612c6457612c5f868686856138ab565b612c7b565b612c70868286856138ab565b612c7b868685612af8565b505050505050565b82546001821480612cd3575083612c9b600284613d75565b81548110612cab57612cab613ec9565b60009182526020918290200154908401516001600160601b03600160a01b9092048216911611155b15612ce957612ce4848484846138ab565b611285565b612d4b8480612cf9600286613d75565b81548110612d0957612d09613ec9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b03169181019190915284846138ab565b6112858484612d5b600286613d75565b612c83565b600081600003612d7257506000919050565b50600181600160801b8110612d8c5760409190911b9060801c5b600160401b8110612da25760209190911b9060401c5b600160201b8110612db85760109190911b9060201c5b620100008110612dcd5760089190911b9060101c5b6101008110612de15760049190911b9060081c5b60108110612df45760029190911b9060041c5b60088110612e0457600182901b91505b6001828481612e1557612e15613d5f565b048301901c91506001828481612e2d57612e2d613d5f565b048301901c91506001828481612e4557612e45613d5f565b048301901c91506001828481612e5d57612e5d613d5f565b048301901c91506001828481612e7557612e75613d5f565b048301901c91506001828481612e8d57612e8d613d5f565b048301901c91506001828481612ea557612ea5613d5f565b048301901c91506000828481612ebd57612ebd613d5f565b0490508083101561159b5782611df4565b60008080611000670de0b6b3a764000082808080805b8615612fb057612ef4878b613d89565b93508b846120018110612f0957612f09613ec9565b015492508b61200101846120018110612f2457612f24613ec9565b0154915081600003612f3f57612f3a86846108a9565b612f61565b612f61612f4c8388613db2565b846a0c097ce7bc90715b34b9f160241b611b93565b612f6b9086613d89565b90508a811015612f8a57611cdc8411612f85578399508094505b612fa4565b8115612f9d57612f9a8683611b7e565b95505b8098508597505b600187901c9650612ee4565b505050505050509250925092565b6000600160801b8210612fde57608091821c91612fdb9082613d89565b90505b600160401b8210612ffc57604091821c91612ff99082613d89565b90505b600160201b821061301a57602091821c916130179082613d89565b90505b62010000821061303757601091821c916130349082613d89565b90505b610100821061305357600891821c916130509082613d89565b90505b6010821061306e57600491821c9161306b9082613d89565b90505b6004821061308957600291821c916130869082613d89565b90505b60028210612792576108e0600182613d89565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106130e05760405163698d9a0160e11b815260048101829052602401611d04565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff821190508260000361311e5780670de0b6b3a76400008504019450505050506108e0565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b8216156131825768016a09e667f3bcc9090260401c5b6001603e1b82161561319d576801306fe0a31b7152df0260401c5b6001603d1b8216156131b8576801172b83c7d517adce0260401c5b6001603c1b8216156131d35768010b5586cf9890f62a0260401c5b6001603b1b8216156131ee576801059b0d31585743ae0260401c5b6001603a1b82161561320957680102c9a3e778060ee70260401c5b600160391b8216156132245768010163da9fb33356d80260401c5b600160381b82161561323f57680100b1afa5abcbed610260401c5b600160371b82161561325a5768010058c86da1c09ea20260401c5b600160361b821615613275576801002c605e2e8cec500260401c5b600160351b82161561329057680100162f3904051fa10260401c5b600160341b8216156132ab576801000b175effdc76ba0260401c5b600160331b8216156132c657680100058ba01fb9f96d0260401c5b600160321b8216156132e15768010002c5cc37da94920260401c5b600160311b8216156132fc576801000162e525ee05470260401c5b600160301b8216156133175768010000b17255775c040260401c5b6001602f1b821615613332576801000058b91b5bc9ae0260401c5b6001602e1b82161561334d57680100002c5c89d5ec6d0260401c5b6001602d1b8216156133685768010000162e43f4f8310260401c5b6001602c1b82161561338357680100000b1721bcfc9a0260401c5b6001602b1b82161561339e5768010000058b90cf1e6e0260401c5b6001602a1b8216156133b9576801000002c5c863b73f0260401c5b600160291b8216156133d457680100000162e430e5a20260401c5b600160281b8216156133ef576801000000b1721835510260401c5b600160271b82161561340a57680100000058b90c0b490260401c5b600160261b8216156134255768010000002c5c8601cc0260401c5b600160251b821615613440576801000000162e42fff00260401c5b600160241b82161561345b5768010000000b17217fbb0260401c5b600160231b821615613476576801000000058b90bfce0260401c5b600160221b82161561349157680100000002c5c85fe30260401c5b600160211b8216156134ac5768010000000162e42ff10260401c5b600160201b8216156134c757680100000000b17217f80260401c5b63800000008216156134e25768010000000058b90bfc0260401c5b63400000008216156134fd576801000000002c5c85fe0260401c5b632000000082161561351857680100000000162e42ff0260401c5b6310000000821615613533576801000000000b17217f0260401c5b630800000082161561354e57680100000000058b90c00260401c5b63040000008216156135695768010000000002c5c8600260401c5b6302000000821615613584576801000000000162e4300260401c5b630100000082161561359f5768010000000000b172180260401c5b628000008216156135b9576801000000000058b90c0260401c5b624000008216156135d357680100000000002c5c860260401c5b622000008216156135ed5768010000000000162e430260401c5b6210000082161561360757680100000000000b17210260401c5b620800008216156136215768010000000000058b910260401c5b6204000082161561363b576801000000000002c5c80260401c5b6202000082161561365557680100000000000162e40260401c5b6201000082161561366e5761b172600160401b010260401c5b618000821615613686576158b9600160401b010260401c5b61400082161561369e57612c5d600160401b010260401c5b6120008216156136b65761162e600160401b010260401c5b6110008216156136ce57610b17600160401b010260401c5b6108008216156136e65761058c600160401b010260401c5b6104008216156136fe576102c6600160401b010260401c5b61020082161561371657610163600160401b010260401c5b61010082161561372d5760b1600160401b010260401c5b6080821615613743576059600160401b010260401c5b604082161561375957602c600160401b010260401c5b602082161561376f576016600160401b010260401c5b601082161561378557600b600160401b010260401c5b600882161561379b576006600160401b010260401c5b60048216156137b1576003600160401b010260401c5b60028216156137c7576001600160401b010260401c5b60018216156137dd576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b600080613802868686611b93565b9050600183600281111561381857613818613d20565b14801561383557506000848061383057613830613d5f565b868809115b1561384857613845600182613d89565b90505b95945050505050565b600080806000198587098587029250828110838203039150508060000361388157838281611bc357611bc3613d5f565b838110611bd957604051631dcf306360e21b81526004810182905260248101859052604401611d04565b8082036138f157835460018101855560008581526020908190208551918601516001600160601b0316600160a01b026001600160a01b039092169190911791015561393b565b8284600001838154811061390757613907613ec9565b6000918252602091829020835193909201516001600160601b0316600160a01b026001600160a01b03909316929092179101555b5090516001600160a01b031660009081526001909201602052604090912055565b604051806101c00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600015158152602001600081526020016000815260200160008152602001600081525090565b60405180610240016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405161012081016001600160401b0381118282101715613a9457634e487b7160e01b600052604160045260246000fd5b60405290565b803560ff8116811461279257600080fd5b8035801515811461279257600080fd5b60006101208284031215613ace57600080fd5b613ad6613a63565b9050613ae182613a9a565b81526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a0820152613b2160c08301613aab565b60c082015260e082013560e082015261010080830135818301525092915050565b80356001600160a01b038116811461279257600080fd5b600080600080600080600080610200898b031215613b7657600080fd5b88359750602089013596506040890135955060608901359450613b9c8a60808b01613abb565b9350613bab6101a08a01613b42565b92506101c089013591506101e089013590509295985092959890939650565b60006101c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151613c3d8285018215159052565b50506101408381015190830152610160808401519083015261018080840151908301526101a092830151929091019190915290565b60008060008060008060008060006102208a8c031215613c9157600080fd5b8935985060208a0135975060408a0135965060608a01359550613cb78b60808c01613abb565b9450613cc66101a08b01613b42565b9350613cd56101c08b01613aab565b92506101e08a013591506102008a013590509295985092959850929598565b600080600060608486031215613d0957600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156108e0576108e0613d36565b634e487b7160e01b600052601260045260246000fd5b600082613d8457613d84613d5f565b500490565b808201808211156108e0576108e0613d36565b9283526020830191909152604082015260600190565b80820281158282048414176108e0576108e0613d36565b600082613dd857613dd8613d5f565b500690565b80820260008212600160ff1b84141615613df957613df9613d36565b81810583148215176108e0576108e0613d36565b8181036000831280158383131683831282161715613e2d57613e2d613d36565b5092915050565b8082018281126000831280158216821582161715611ad557611ad5613d36565b6000600160ff1b8201613e6957613e69613d36565b5060000390565b6001600160a01b03818116838216019080821115613e2d57613e2d613d36565b6001600160a01b03828116828216039080821115613e2d57613e2d613d36565b600060018201613ec257613ec2613d36565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60006001600160601b03821680613ef857613ef8613d36565b6000190192915050565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c283a28169d198bf9cb1afbbb08c346cba66f28ce391928601ee49cdc218638e64736f6c63430008120033","args":[],"salt":"AJNA","value":[]}
2024-01-08T15:28:57.905Z cannon:builder comparing states null 3205f29e1f094581cb346750133b715b
2024-01-08T15:28:57.905Z cannon:builder run isolated contract.TakerActions
Executing [contract.TakerActions]...
2024-01-08T15:28:57.906Z cannon:verbose:builder ctx for step contract.TakerActions {
  package: {},
  timestamp: '1704727545',
  chainId: 10,
  settings: {
    bwAJNA_ADDRESS: '0x6c518f9D1a163379235816c543E62922a79863Fa',
    salt: 'AJNA'
  },
  contracts: {},
  txns: {},
  imports: {},
  extras: {}
}
2024-01-08T15:28:57.906Z cannon:builder:contract exec {
  artifact: 'TakerActions',
  salt: 'AJNA',
  create2: true,
  from: '',
  nonce: '',
  value: '',
  abi: ''
}
2024-01-08T15:28:57.906Z cannon:builder:runtime resolve artifact TakerActions
2024-01-08T15:28:57.906Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:29:05.839Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/TakerActions.sol': 'TakerActions' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/SettlerActions.sol': {
      keccak256: '0x05edfe3f72323b7212fbb5134f76211f397138c2ed30ddf0f3683772213c831d',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/TakerActions.sol': {
      keccak256: '0x642ee2cabe710495ccc32c269750578cbfe924af26dcc73b8ce6cdf06adce68e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/RevertsHelper.sol': {
      keccak256: '0xcaff095290172f1b5726d4e887ab9be5f524d9321e94ca0095f99b666381a6f4',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:29:05.840Z cannon:cli:foundry evm version paris
2024-01-08T15:29:05.849Z cannon:builder:runtime reported contract artifact TakerActions {
  contractName: 'TakerActions',
  sourceName: 'src/libraries/external/TakerActions.sol',
  abi: [
    {
      type: 'event',
      name: 'BucketTake',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'BucketTakeLPAwarded',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'ReserveAuction',
      inputs: [Array],
      anonymous: false
    },
    { type: 'event', name: 'Take', inputs: [Array], anonymous: false },
    { type: 'error', name: 'AmountLTMinDebt', inputs: [] },
    { type: 'error', name: 'AuctionNotTakeable', inputs: [] },
    { type: 'error', name: 'AuctionPriceGtBucketPrice', inputs: [] },
    { type: 'error', name: 'BucketBankruptcyBlock', inputs: [] },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'BucketPriceOutOfBounds', inputs: [] },
    {
      type: 'error',
      name: 'CollateralRoundingNeededButNotPossible',
      inputs: []
    },
    { type: 'error', name: 'DustAmountNotExceeded', inputs: [] },
    { type: 'error', name: 'InsufficientCollateral', inputs: [] },
    { type: 'error', name: 'InsufficientLiquidity', inputs: [] },
    { type: 'error', name: 'InvalidAmount', inputs: [] },
    { type: 'error', name: 'InvalidAmount', inputs: [] },
    { type: 'error', name: 'NoAuction', inputs: [] },
    { type: 'error', name: 'NoReservesAuction', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__CeilOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__SqrtNegativeInput',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__SqrtOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'PRBMath__MulDivOverflow', inputs: [Array] },
    { type: 'error', name: 'ZeroDebtToCollateral', inputs: [] }
  ],
  bytecode: '0x613f4e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80630f4a0c2d146100505780632f39ec5c146100865780633c335cf3146100a6575b600080fd5b81801561005c57600080fd5b5061007061006b366004613b59565b6100db565b60405161007d9190613bca565b60405180910390f35b81801561009257600080fd5b506100706100a1366004613c72565b610307565b8180156100b257600080fd5b506100c66100c1366004613cf4565b6104be565b6040805192835260208301919091520161007d565b6100e361395c565b826000036101045760405163162908e360e11b815260040160405180910390fd5b6001600160a01b03841660009081526002808801602090815260409283902083516060810185528154815260018083015493820193909352920154928201929092529060ff16866000015160ff1614801561016a5750670de0b6b3a76400008160200151105b806101845750855160ff1615801561018457506020810151155b156101a257604051633a23d82560e01b815260040160405180910390fd5b80516101408301526020808201516101808401526040805160a080820183526001600160a01b03891682529281018790529188015190820152865160ff166060820152608081018490526000906101fc908c908490610625565b90508060e00151826020018181516102149190613d4c565b9052506101808101516101a082015161022d9190613d4c565b8252610180810151602088018051610246908390613d4c565b905250602087015160a088015161025d91906108a9565b60608801526102718b8b8b8b8b878c6108e6565b6020808801919091526080870191909152901515610120860181905260e080870193909352845161016080880191909152858301516101a0880152918a015160c08701526060808b015160a0880152928401518652908301516040860152610100830151918501919091526102eb578061018001516102f2565b806101a001515b61010084015250909998505050505050505050565b61030f61395c565b6001600160a01b038516600090815260028089016020908152604080842081516060810183528154815260018201549381018490529301549083015290910361036b57604051633a23d82560e01b815260040160405180910390fd5b80600001518261014001818152505080602001518261018001818152505060006103cd8c8c8c856040518060a001604052808d6001600160a01b031681526020018c151581526020018b81526020018e60a0015181526020018a815250610984565b90508060e00151826020018181516103e59190613d4c565b9052506101808101516101a08201516103fe9190613d4c565b8252610180810151602089018051610417908390613d4c565b905250602088015160a089015161042e91906108a9565b60608901526104428c8c8c8c8c878d6108e6565b6020808801919091526080870191909152901515610120860181905260e0808701939093528451610160870152848201516101a0870152908a015160c086015260608a015160a08601529082015184526104a1578061018001516104a8565b806101a001515b61010084015250909a9950505050505050505050565b8254600090819080158015906104e057506203f4806104dd8242613d4c565b11155b156106035760008660020154905060006104fe838960010154610bae565b905061050a8288610c6f565b94506105168686613d75565b6000036105365760405163162908e360e11b815260040160405180910390fd5b6105408582610c86565b9350836000036105635760405163162908e360e11b815260040160405180910390fd5b61056d8583613d4c565b9150818860020181905550600084896004015461058a9190613d89565b60048a0181905560038a0154600081815260068c0160205260409081902060058d0154600182015560028101849055905192935090917f2115712930a0e5047c8904a9cc557d2b1ba5a21876e04f59249843ce1a74d699906105f190879087908690613d9c565b60405180910390a1505050505061061c565b60405163bec2cf4b60e01b815260040160405180910390fd5b50935093915050565b61062d6139cd565b81516001600160a01b039081166000908152600380870160209081526040808420815161014081018352815480881682526001600160601b03600160a01b91829004811695830195909552600183015480861683860152600160601b90819004891660608401526002840154808716608085015204881660a08301529482015496871660c08201529390950490911660e0830152600484015461010083015260058401546101208301528651908601516106e8939190610cb2565b6000196101c0820152670de0b6b3a764000060c08201526020850151909250600160ff1684606001510361073d57610728670de0b6b3a764000082613d75565b61073a90670de0b6b3a7640000613db2565b90505b61075e61074e828660200151610c6f565b8560400151866080015186610db2565b925061076b86838561107e565b606084015160001901610835576000670de0b6b3a76400008460e001516107929190613d75565b6107a490670de0b6b3a7640000613db2565b90508360e001518114610833576107c381670de0b6b3a7640000613d89565b6107d587602001518760200151610c6f565b1061081a576107ec670de0b6b3a764000082613d89565b90506108088460e00151826108019190613d4c565b85516108a9565b61010085015260e08401819052610833565b604051634b6f00d760e01b815260040160405180910390fd5b505b835161016084015160e0850151602080870151610120880151604080519586529285019390935290830152151560608201526001600160a01b03909116907f4591b2dfbebff121b3ccd19ae2407e59a9cefd959b35e12d82752cb5bc6eb7579060800160405180910390a250509392505050565b6000670de0b6b3a76400006108bf600282613d75565b6108c98486613db2565b6108d39190613d89565b6108dd9190613d75565b90505b92915050565b600080600080600061090087600001518960a001516108a9565b9050610917898960600151838b610100015161121d565b6020870151875190935060000361095257600193506109458c8c8c898b602001518d6000015160ff1661128b565b6020890182905290935091505b6109658988888b60e00151881589611404565b6109738a8960600151611521565b945050975097509750979350505050565b61098c6139cd565b81516001600160a01b03908116600090815260038089016020908152604092839020835161014081018552815480871682526001600160601b03600160a01b91829004811694830194909452600183015480851683880152600160601b90819004881660608401526002840154808616608085015204871660a08301529382015495861660c0820152929094041660e08201526004830154610100820152600583015461012082015290840151610a539190610a4790611530565b86516060870151610cb2565b9150610a638584604001516115a2565b6101c08301819052600003610a8b5760405163bb55fd2760e01b815260040160405180910390fd5b60a082015182511115610ab1576040516351522bb560e11b815260040160405180910390fd5b826020015115610ac35760a082015182525b610ad1858460400151611650565b60c0830152602084015160608401516080850151610af192919085610db2565b91508160e00151600003610b185760405163bb55fd2760e01b815260040160405180910390fd5b610b2f8786888487604001518860200151886116bd565b825160408085015161016085015160e086015160208088015161012089015186519586529185019390935293830152606082015290151560808201526001600160a01b03909116907fcb6905a59200cc485bfe6d2168392e96a0f204daf9e3937dff19180cb0d796a49060a00160405180910390a25095945050505050565b600082156108e0576000610bc28442613d4c565b90506000610bd2610e1083613d75565b676765c793fa10079d601b1b901c90506000610c116b0331adfc6b81cf95c39de3b1603c610c02610e1087613dc9565b610c0c9190613d75565b61190d565b905060008515610c3557610c30676765c793fa10079d601b1b87611985565b610c38565b60005b9050676765c793fa10079d601b1b610c5084846119a5565b610c5a9083613db2565b610c649190613d75565b979650505050505050565b600081831115610c7f57816108dd565b5090919050565b6000670de0b6b3a7640000600181610c9e8587613db2565b610ca89190613d89565b6108d39190613d4c565b610cba6139cd565b60408501516001600160601b03166000819003610cea576040516338e806f160e11b815260040160405180910390fd5b428103610d0a5760405163e0e314e960e01b815260040160405180910390fd5b6101a08201849052610d1c84846108a9565b604083015260e086015160808701516001600160601b0391821691610d429116836119be565b835260a083018690526020870180516001600160601b0390811660808601526101008901519151610d8492918491168915610d7d5789611add565b8651611add565b6060840181905296516001600160a01b03166101408401525050600090941215610120850152509192915050565b610dba6139cd565b60006004836060015184608001516005610dd49190613ddd565b610dde9190613e0d565b610de9906003613e34565b610df39190613d75565b8351909150600090610e1690610e1184670de0b6b3a7640000613d4c565b611b7e565b90506000846101200151610e2b578451610e4d565b610e4d8560600151670de0b6b3a7640000610e469190613d4c565b86516108a9565b8551909150600003610e725760405163162908e360e11b815260040160405180910390fd5b600019856101c0015103610e8857600019610ea5565b610ea5610e9f866101c001518760c0015184611b93565b87611c41565b6102008601526000829003610ebc57600019610ed3565b610ed3610ecd866040015184611c58565b87611c70565b610220860181905261020086015111801590610ef457508785610200015111155b15610f5e5761020085015160e086018190528551610f1291906108a9565b61016086015260e0850151610f28908389611b93565b85610180018181525050610f53856101c00151610f4e8760e00151848960c00151611b93565b610c6f565b6101e086015261100e565b8785610220015111610fc65761022085015160e086018190526101a086015161018087015260c0860151610f9491908390611b93565b6101e086015260e0850151610fbb9083610fb686670de0b6b3a7640000613d4c565b611b93565b61016086015261100e565b60e08501889052610fd8888389611b93565b61018086015260c0850151610ff09089908390611b93565b6101e086015260e0850151855161100791906108a9565b6101608601525b611022856101800151866101a00151610c6f565b61018086015261012085015115611050576110468561016001518660600151611b7e565b6020860152611072565b61106c856101600151866060015161106790613e54565b610c86565b60208601525b50929695505050505050565b80610120015115611143576110968160200151611c9f565b6003830180546000906110b39084906001600160a01b0316613e70565b92506101000a8154816001600160a01b0302191690836001600160a01b0316021790555080602001518360040160008361014001516001600160a01b03166001600160a01b03168152602001908152602001600020600101600082825461111a9190613d89565b90915550506020810151600284018054600090611138908490613d89565b909155506112189050565b60038201546020820151611160916001600160a01b031690610c6f565b6020820181905261117090611c9f565b60038301805460009061118d9084906001600160a01b0316613e90565b92506101000a8154816001600160a01b0302191690836001600160a01b0316021790555080602001518360040160008361014001516001600160a01b03166001600160a01b0316815260200190815260200160002060010160008282546111f49190613d4c565b90915550506020810151600284018054600090611212908490613d4c565b90915550505b505050565b81156112855780821015611244576040516345b3f65d60e01b815260040160405180910390fd5b600061124f85611d11565b9050600a8110611283576112638482611d22565b83101561128357604051635b85919f60e11b815260040160405180910390fd5b505b50505050565b60008060001983016113a857600080670de0b6b3a76400006112ad8188613d75565b6112b79190613db2565b935085841461135c576112ca8487613d4c565b6001600160a01b038816600090815260038c01602052604081206002810154600190910154929550909161130a916001600160601b0390811691166119be565b905064173eb4c80a811161132057611cdc611329565b61132981611d4d565b600081815260208c90526040902090925061135890896113498c86611e12565b876113'... 22530 more characters,
  deployedBytecode: ''... 22414 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel\'s lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don\'t need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.\'s \\"Hacker\'s Delight\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\"msb\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // ‚Üí `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // ‚Üí `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton\'s method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result'... 294675 more characters
  }
}
duplicate definition - InvalidAmount()
2024-01-08T15:29:05.861Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:05.862Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:05.863Z cannon:builder:contract performing arachnid create2
2024-01-08T15:29:05.866Z cannon:builder:contract create2 address is 0xb127207d673977e14f31f52a14AD07e6a512c5fA
2024-01-08T15:29:05.868Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:05.870Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:06.376Z cannon:cli:rpc anvil_impersonateAccount

2024-01-08T15:29:06.377Z cannon:cli:rpc anvil_setBalance

2024-01-08T15:29:06.379Z cannon:cli:rpc eth_blockNumber

2024-01-08T15:29:06.381Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:06.382Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:06.387Z cannon:cli:rpc eth_estimateGas

2024-01-08T15:29:06.404Z cannon:cli:rpc eth_sendTransaction

2024-01-08T15:29:06.406Z cannon:cli:rpc 
    Transaction: 0x24588ac27cea4c4b9080124841c3d378ff5954332948fd042694e445e525ab41
    Gas used: 3558325


2024-01-08T15:29:06.406Z cannon:cli:rpc     Block Number: 114564390
    Block Hash: 0x445b3a6185c1c1c935ade22323c57b8b3de961bbfcca8582b87bdac2f8874c0f
    Block Time: "Mon, 8 Jan 2024 15:29:04 +0000"


2024-01-08T15:29:06.406Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:06.408Z cannon:cli:rpc eth_getTransactionByHash

2024-01-08T15:29:06.416Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:06.418Z cannon:cli:rpc eth_getTransactionReceipt

2024-01-08T15:29:06.419Z cannon:builder:contract arachnid create2 complete {
  to: '0x4e59b44847b379578588920cA78FbF26c0B4956C',
  from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
  contractAddress: null,
  transactionIndex: 0,
  gasUsed: BigNumber { _hex: '0x364bb5', _isBigNumber: true },
  logsBloom: '0x
  blockHash: '0x445b3a6185c1c1c935ade22323c57b8b3de961bbfcca8582b87bdac2f8874c0f',
  transactionHash: '0x24588ac27cea4c4b9080124841c3d378ff5954332948fd042694e445e525ab41',
  logs: [],
  blockNumber: 114564390,
  confirmations: 1,
  cumulativeGasUsed: BigNumber { _hex: '0x364bb5', _isBigNumber: true },
  effectiveGasPrice: BigNumber { _hex: '0x1d971c', _isBigNumber: true },
  status: 1,
  type: 2,
  byzantium: true
}
2024-01-08T15:29:06.419Z cannon:builder:contract contract deployed to address 0xb127207d673977e14f31f52a14AD07e6a512c5fA
  ‚úî Successfully deployed TakerActions using CREATE2
  Contract Address: 0xb127207d673977e14f31f52a14AD07e6a512c5fA
  Transaction Hash: 0x24588ac27cea4c4b9080124841c3d378ff5954332948fd042694e445e525ab41
  Transaction Cost: 0.0000069004034731 ETH (3,558,325 gas)

2024-01-08T15:29:06.423Z cannon:builder:runtime resolve artifact TakerActions
2024-01-08T15:29:06.423Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:29:14.178Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/libraries/external/TakerActions.sol': 'TakerActions' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/SettlerActions.sol': {
      keccak256: '0x05edfe3f72323b7212fbb5134f76211f397138c2ed30ddf0f3683772213c831d',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/TakerActions.sol': {
      keccak256: '0x642ee2cabe710495ccc32c269750578cbfe924af26dcc73b8ce6cdf06adce68e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/RevertsHelper.sol': {
      keccak256: '0xcaff095290172f1b5726d4e887ab9be5f524d9321e94ca0095f99b666381a6f4',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:29:14.179Z cannon:cli:foundry evm version paris
2024-01-08T15:29:14.183Z cannon:builder:runtime reported contract artifact TakerActions {
  contractName: 'TakerActions',
  sourceName: 'src/libraries/external/TakerActions.sol',
  abi: [
    {
      type: 'event',
      name: 'BucketTake',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'BucketTakeLPAwarded',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'ReserveAuction',
      inputs: [Array],
      anonymous: false
    },
    { type: 'event', name: 'Take', inputs: [Array], anonymous: false },
    { type: 'error', name: 'AmountLTMinDebt', inputs: [] },
    { type: 'error', name: 'AuctionNotTakeable', inputs: [] },
    { type: 'error', name: 'AuctionPriceGtBucketPrice', inputs: [] },
    { type: 'error', name: 'BucketBankruptcyBlock', inputs: [] },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'BucketPriceOutOfBounds', inputs: [] },
    {
      type: 'error',
      name: 'CollateralRoundingNeededButNotPossible',
      inputs: []
    },
    { type: 'error', name: 'DustAmountNotExceeded', inputs: [] },
    { type: 'error', name: 'InsufficientCollateral', inputs: [] },
    { type: 'error', name: 'InsufficientLiquidity', inputs: [] },
    { type: 'error', name: 'InvalidAmount', inputs: [] },
    { type: 'error', name: 'InvalidAmount', inputs: [] },
    { type: 'error', name: 'NoAuction', inputs: [] },
    { type: 'error', name: 'NoReservesAuction', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__CeilOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__SqrtNegativeInput',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__SqrtOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'PRBMath__MulDivOverflow', inputs: [Array] },
    { type: 'error', name: 'ZeroDebtToCollateral', inputs: [] }
  ],
  bytecode: '0x613f4e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80630f4a0c2d146100505780632f39ec5c146100865780633c335cf3146100a6575b600080fd5b81801561005c57600080fd5b5061007061006b366004613b59565b6100db565b60405161007d9190613bca565b60405180910390f35b81801561009257600080fd5b506100706100a1366004613c72565b610307565b8180156100b257600080fd5b506100c66100c1366004613cf4565b6104be565b6040805192835260208301919091520161007d565b6100e361395c565b826000036101045760405163162908e360e11b815260040160405180910390fd5b6001600160a01b03841660009081526002808801602090815260409283902083516060810185528154815260018083015493820193909352920154928201929092529060ff16866000015160ff1614801561016a5750670de0b6b3a76400008160200151105b806101845750855160ff1615801561018457506020810151155b156101a257604051633a23d82560e01b815260040160405180910390fd5b80516101408301526020808201516101808401526040805160a080820183526001600160a01b03891682529281018790529188015190820152865160ff166060820152608081018490526000906101fc908c908490610625565b90508060e00151826020018181516102149190613d4c565b9052506101808101516101a082015161022d9190613d4c565b8252610180810151602088018051610246908390613d4c565b905250602087015160a088015161025d91906108a9565b60608801526102718b8b8b8b8b878c6108e6565b6020808801919091526080870191909152901515610120860181905260e080870193909352845161016080880191909152858301516101a0880152918a015160c08701526060808b015160a0880152928401518652908301516040860152610100830151918501919091526102eb578061018001516102f2565b806101a001515b61010084015250909998505050505050505050565b61030f61395c565b6001600160a01b038516600090815260028089016020908152604080842081516060810183528154815260018201549381018490529301549083015290910361036b57604051633a23d82560e01b815260040160405180910390fd5b80600001518261014001818152505080602001518261018001818152505060006103cd8c8c8c856040518060a001604052808d6001600160a01b031681526020018c151581526020018b81526020018e60a0015181526020018a815250610984565b90508060e00151826020018181516103e59190613d4c565b9052506101808101516101a08201516103fe9190613d4c565b8252610180810151602089018051610417908390613d4c565b905250602088015160a089015161042e91906108a9565b60608901526104428c8c8c8c8c878d6108e6565b6020808801919091526080870191909152901515610120860181905260e0808701939093528451610160870152848201516101a0870152908a015160c086015260608a015160a08601529082015184526104a1578061018001516104a8565b806101a001515b61010084015250909a9950505050505050505050565b8254600090819080158015906104e057506203f4806104dd8242613d4c565b11155b156106035760008660020154905060006104fe838960010154610bae565b905061050a8288610c6f565b94506105168686613d75565b6000036105365760405163162908e360e11b815260040160405180910390fd5b6105408582610c86565b9350836000036105635760405163162908e360e11b815260040160405180910390fd5b61056d8583613d4c565b9150818860020181905550600084896004015461058a9190613d89565b60048a0181905560038a0154600081815260068c0160205260409081902060058d0154600182015560028101849055905192935090917f2115712930a0e5047c8904a9cc557d2b1ba5a21876e04f59249843ce1a74d699906105f190879087908690613d9c565b60405180910390a1505050505061061c565b60405163bec2cf4b60e01b815260040160405180910390fd5b50935093915050565b61062d6139cd565b81516001600160a01b039081166000908152600380870160209081526040808420815161014081018352815480881682526001600160601b03600160a01b91829004811695830195909552600183015480861683860152600160601b90819004891660608401526002840154808716608085015204881660a08301529482015496871660c08201529390950490911660e0830152600484015461010083015260058401546101208301528651908601516106e8939190610cb2565b6000196101c0820152670de0b6b3a764000060c08201526020850151909250600160ff1684606001510361073d57610728670de0b6b3a764000082613d75565b61073a90670de0b6b3a7640000613db2565b90505b61075e61074e828660200151610c6f565b8560400151866080015186610db2565b925061076b86838561107e565b606084015160001901610835576000670de0b6b3a76400008460e001516107929190613d75565b6107a490670de0b6b3a7640000613db2565b90508360e001518114610833576107c381670de0b6b3a7640000613d89565b6107d587602001518760200151610c6f565b1061081a576107ec670de0b6b3a764000082613d89565b90506108088460e00151826108019190613d4c565b85516108a9565b61010085015260e08401819052610833565b604051634b6f00d760e01b815260040160405180910390fd5b505b835161016084015160e0850151602080870151610120880151604080519586529285019390935290830152151560608201526001600160a01b03909116907f4591b2dfbebff121b3ccd19ae2407e59a9cefd959b35e12d82752cb5bc6eb7579060800160405180910390a250509392505050565b6000670de0b6b3a76400006108bf600282613d75565b6108c98486613db2565b6108d39190613d89565b6108dd9190613d75565b90505b92915050565b600080600080600061090087600001518960a001516108a9565b9050610917898960600151838b610100015161121d565b6020870151875190935060000361095257600193506109458c8c8c898b602001518d6000015160ff1661128b565b6020890182905290935091505b6109658988888b60e00151881589611404565b6109738a8960600151611521565b945050975097509750979350505050565b61098c6139cd565b81516001600160a01b03908116600090815260038089016020908152604092839020835161014081018552815480871682526001600160601b03600160a01b91829004811694830194909452600183015480851683880152600160601b90819004881660608401526002840154808616608085015204871660a08301529382015495861660c0820152929094041660e08201526004830154610100820152600583015461012082015290840151610a539190610a4790611530565b86516060870151610cb2565b9150610a638584604001516115a2565b6101c08301819052600003610a8b5760405163bb55fd2760e01b815260040160405180910390fd5b60a082015182511115610ab1576040516351522bb560e11b815260040160405180910390fd5b826020015115610ac35760a082015182525b610ad1858460400151611650565b60c0830152602084015160608401516080850151610af192919085610db2565b91508160e00151600003610b185760405163bb55fd2760e01b815260040160405180910390fd5b610b2f8786888487604001518860200151886116bd565b825160408085015161016085015160e086015160208088015161012089015186519586529185019390935293830152606082015290151560808201526001600160a01b03909116907fcb6905a59200cc485bfe6d2168392e96a0f204daf9e3937dff19180cb0d796a49060a00160405180910390a25095945050505050565b600082156108e0576000610bc28442613d4c565b90506000610bd2610e1083613d75565b676765c793fa10079d601b1b901c90506000610c116b0331adfc6b81cf95c39de3b1603c610c02610e1087613dc9565b610c0c9190613d75565b61190d565b905060008515610c3557610c30676765c793fa10079d601b1b87611985565b610c38565b60005b9050676765c793fa10079d601b1b610c5084846119a5565b610c5a9083613db2565b610c649190613d75565b979650505050505050565b600081831115610c7f57816108dd565b5090919050565b6000670de0b6b3a7640000600181610c9e8587613db2565b610ca89190613d89565b6108d39190613d4c565b610cba6139cd565b60408501516001600160601b03166000819003610cea576040516338e806f160e11b815260040160405180910390fd5b428103610d0a5760405163e0e314e960e01b815260040160405180910390fd5b6101a08201849052610d1c84846108a9565b604083015260e086015160808701516001600160601b0391821691610d429116836119be565b835260a083018690526020870180516001600160601b0390811660808601526101008901519151610d8492918491168915610d7d5789611add565b8651611add565b6060840181905296516001600160a01b03166101408401525050600090941215610120850152509192915050565b610dba6139cd565b60006004836060015184608001516005610dd49190613ddd565b610dde9190613e0d565b610de9906003613e34565b610df39190613d75565b8351909150600090610e1690610e1184670de0b6b3a7640000613d4c565b611b7e565b90506000846101200151610e2b578451610e4d565b610e4d8560600151670de0b6b3a7640000610e469190613d4c565b86516108a9565b8551909150600003610e725760405163162908e360e11b815260040160405180910390fd5b600019856101c0015103610e8857600019610ea5565b610ea5610e9f866101c001518760c0015184611b93565b87611c41565b6102008601526000829003610ebc57600019610ed3565b610ed3610ecd866040015184611c58565b87611c70565b610220860181905261020086015111801590610ef457508785610200015111155b15610f5e5761020085015160e086018190528551610f1291906108a9565b61016086015260e0850151610f28908389611b93565b85610180018181525050610f53856101c00151610f4e8760e00151848960c00151611b93565b610c6f565b6101e086015261100e565b8785610220015111610fc65761022085015160e086018190526101a086015161018087015260c0860151610f9491908390611b93565b6101e086015260e0850151610fbb9083610fb686670de0b6b3a7640000613d4c565b611b93565b61016086015261100e565b60e08501889052610fd8888389611b93565b61018086015260c0850151610ff09089908390611b93565b6101e086015260e0850151855161100791906108a9565b6101608601525b611022856101800151866101a00151610c6f565b61018086015261012085015115611050576110468561016001518660600151611b7e565b6020860152611072565b61106c856101600151866060015161106790613e54565b610c86565b60208601525b50929695505050505050565b80610120015115611143576110968160200151611c9f565b6003830180546000906110b39084906001600160a01b0316613e70565b92506101000a8154816001600160a01b0302191690836001600160a01b0316021790555080602001518360040160008361014001516001600160a01b03166001600160a01b03168152602001908152602001600020600101600082825461111a9190613d89565b90915550506020810151600284018054600090611138908490613d89565b909155506112189050565b60038201546020820151611160916001600160a01b031690610c6f565b6020820181905261117090611c9f565b60038301805460009061118d9084906001600160a01b0316613e90565b92506101000a8154816001600160a01b0302191690836001600160a01b0316021790555080602001518360040160008361014001516001600160a01b03166001600160a01b0316815260200190815260200160002060010160008282546111f49190613d4c565b90915550506020810151600284018054600090611212908490613d4c565b90915550505b505050565b81156112855780821015611244576040516345b3f65d60e01b815260040160405180910390fd5b600061124f85611d11565b9050600a8110611283576112638482611d22565b83101561128357604051635b85919f60e11b815260040160405180910390fd5b505b50505050565b60008060001983016113a857600080670de0b6b3a76400006112ad8188613d75565b6112b79190613db2565b935085841461135c576112ca8487613d4c565b6001600160a01b038816600090815260038c01602052604081206002810154600190910154929550909161130a916001600160601b0390811691166119be565b905064173eb4c80a811161132057611cdc611329565b61132981611d4d565b600081815260208c90526040902090925061135890896113498c86611e12565b876113'... 22530 more characters,
  deployedBytecode: ''... 22414 more characters,
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel\'s lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don\'t need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.\'s \\"Hacker\'s Delight\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\"msb\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // ‚Üí `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // ‚Üí `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton\'s method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result'... 294675 more characters
  }
}
2024-01-08T15:29:14.184Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x613f4e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80630f4a0c2d146100505780632f39ec5c146100865780633c335cf3146100a6575b600080fd5b81801561005c57600080fd5b5061007061006b366004613b59565b6100db565b60405161007d9190613bca565b60405180910390f35b81801561009257600080fd5b506100706100a1366004613c72565b610307565b8180156100b257600080fd5b506100c66100c1366004613cf4565b6104be565b6040805192835260208301919091520161007d565b6100e361395c565b826000036101045760405163162908e360e11b815260040160405180910390fd5b6001600160a01b03841660009081526002808801602090815260409283902083516060810185528154815260018083015493820193909352920154928201929092529060ff16866000015160ff1614801561016a5750670de0b6b3a76400008160200151105b806101845750855160ff1615801561018457506020810151155b156101a257604051633a23d82560e01b815260040160405180910390fd5b80516101408301526020808201516101808401526040805160a080820183526001600160a01b03891682529281018790529188015190820152865160ff166060820152608081018490526000906101fc908c908490610625565b90508060e00151826020018181516102149190613d4c565b9052506101808101516101a082015161022d9190613d4c565b8252610180810151602088018051610246908390613d4c565b905250602087015160a088015161025d91906108a9565b60608801526102718b8b8b8b8b878c6108e6565b6020808801919091526080870191909152901515610120860181905260e080870193909352845161016080880191909152858301516101a0880152918a015160c08701526060808b015160a0880152928401518652908301516040860152610100830151918501919091526102eb578061018001516102f2565b806101a001515b61010084015250909998505050505050505050565b61030f61395c565b6001600160a01b038516600090815260028089016020908152604080842081516060810183528154815260018201549381018490529301549083015290910361036b57604051633a23d82560e01b815260040160405180910390fd5b80600001518261014001818152505080602001518261018001818152505060006103cd8c8c8c856040518060a001604052808d6001600160a01b031681526020018c151581526020018b81526020018e60a0015181526020018a815250610984565b90508060e00151826020018181516103e59190613d4c565b9052506101808101516101a08201516103fe9190613d4c565b8252610180810151602089018051610417908390613d4c565b905250602088015160a089015161042e91906108a9565b60608901526104428c8c8c8c8c878d6108e6565b6020808801919091526080870191909152901515610120860181905260e0808701939093528451610160870152848201516101a0870152908a015160c086015260608a015160a08601529082015184526104a1578061018001516104a8565b806101a001515b61010084015250909a9950505050505050505050565b8254600090819080158015906104e057506203f4806104dd8242613d4c565b11155b156106035760008660020154905060006104fe838960010154610bae565b905061050a8288610c6f565b94506105168686613d75565b6000036105365760405163162908e360e11b815260040160405180910390fd5b6105408582610c86565b9350836000036105635760405163162908e360e11b815260040160405180910390fd5b61056d8583613d4c565b9150818860020181905550600084896004015461058a9190613d89565b60048a0181905560038a0154600081815260068c0160205260409081902060058d0154600182015560028101849055905192935090917f2115712930a0e5047c8904a9cc557d2b1ba5a21876e04f59249843ce1a74d699906105f190879087908690613d9c565b60405180910390a1505050505061061c565b60405163bec2cf4b60e01b815260040160405180910390fd5b50935093915050565b61062d6139cd565b81516001600160a01b039081166000908152600380870160209081526040808420815161014081018352815480881682526001600160601b03600160a01b91829004811695830195909552600183015480861683860152600160601b90819004891660608401526002840154808716608085015204881660a08301529482015496871660c08201529390950490911660e0830152600484015461010083015260058401546101208301528651908601516106e8939190610cb2565b6000196101c0820152670de0b6b3a764000060c08201526020850151909250600160ff1684606001510361073d57610728670de0b6b3a764000082613d75565b61073a90670de0b6b3a7640000613db2565b90505b61075e61074e828660200151610c6f565b8560400151866080015186610db2565b925061076b86838561107e565b606084015160001901610835576000670de0b6b3a76400008460e001516107929190613d75565b6107a490670de0b6b3a7640000613db2565b90508360e001518114610833576107c381670de0b6b3a7640000613d89565b6107d587602001518760200151610c6f565b1061081a576107ec670de0b6b3a764000082613d89565b90506108088460e00151826108019190613d4c565b85516108a9565b61010085015260e08401819052610833565b604051634b6f00d760e01b815260040160405180910390fd5b505b835161016084015160e0850151602080870151610120880151604080519586529285019390935290830152151560608201526001600160a01b03909116907f4591b2dfbebff121b3ccd19ae2407e59a9cefd959b35e12d82752cb5bc6eb7579060800160405180910390a250509392505050565b6000670de0b6b3a76400006108bf600282613d75565b6108c98486613db2565b6108d39190613d89565b6108dd9190613d75565b90505b92915050565b600080600080600061090087600001518960a001516108a9565b9050610917898960600151838b610100015161121d565b6020870151875190935060000361095257600193506109458c8c8c898b602001518d6000015160ff1661128b565b6020890182905290935091505b6109658988888b60e00151881589611404565b6109738a8960600151611521565b945050975097509750979350505050565b61098c6139cd565b81516001600160a01b03908116600090815260038089016020908152604092839020835161014081018552815480871682526001600160601b03600160a01b91829004811694830194909452600183015480851683880152600160601b90819004881660608401526002840154808616608085015204871660a08301529382015495861660c0820152929094041660e08201526004830154610100820152600583015461012082015290840151610a539190610a4790611530565b86516060870151610cb2565b9150610a638584604001516115a2565b6101c08301819052600003610a8b5760405163bb55fd2760e01b815260040160405180910390fd5b60a082015182511115610ab1576040516351522bb560e11b815260040160405180910390fd5b826020015115610ac35760a082015182525b610ad1858460400151611650565b60c0830152602084015160608401516080850151610af192919085610db2565b91508160e00151600003610b185760405163bb55fd2760e01b815260040160405180910390fd5b610b2f8786888487604001518860200151886116bd565b825160408085015161016085015160e086015160208088015161012089015186519586529185019390935293830152606082015290151560808201526001600160a01b03909116907fcb6905a59200cc485bfe6d2168392e96a0f204daf9e3937dff19180cb0d796a49060a00160405180910390a25095945050505050565b600082156108e0576000610bc28442613d4c565b90506000610bd2610e1083613d75565b676765c793fa10079d601b1b901c90506000610c116b0331adfc6b81cf95c39de3b1603c610c02610e1087613dc9565b610c0c9190613d75565b61190d565b905060008515610c3557610c30676765c793fa10079d601b1b87611985565b610c38565b60005b9050676765c793fa10079d601b1b610c5084846119a5565b610c5a9083613db2565b610c649190613d75565b979650505050505050565b600081831115610c7f57816108dd565b5090919050565b6000670de0b6b3a7640000600181610c9e8587613db2565b610ca89190613d89565b6108d39190613d4c565b610cba6139cd565b60408501516001600160601b03166000819003610cea576040516338e806f160e11b815260040160405180910390fd5b428103610d0a5760405163e0e314e960e01b815260040160405180910390fd5b6101a08201849052610d1c84846108a9565b604083015260e086015160808701516001600160601b0391821691610d429116836119be565b835260a083018690526020870180516001600160601b0390811660808601526101008901519151610d8492918491168915610d7d5789611add565b8651611add565b6060840181905296516001600160a01b03166101408401525050600090941215610120850152509192915050565b610dba6139cd565b60006004836060015184608001516005610dd49190613ddd565b610dde9190613e0d565b610de9906003613e34565b610df39190613d75565b8351909150600090610e1690610e1184670de0b6b3a7640000613d4c565b611b7e565b90506000846101200151610e2b578451610e4d565b610e4d8560600151670de0b6b3a7640000610e469190613d4c565b86516108a9565b8551909150600003610e725760405163162908e360e11b815260040160405180910390fd5b600019856101c0015103610e8857600019610ea5565b610ea5610e9f866101c001518760c0015184611b93565b87611c41565b6102008601526000829003610ebc57600019610ed3565b610ed3610ecd866040015184611c58565b87611c70565b610220860181905261020086015111801590610ef457508785610200015111155b15610f5e5761020085015160e086018190528551610f1291906108a9565b61016086015260e0850151610f28908389611b93565b85610180018181525050610f53856101c00151610f4e8760e00151848960c00151611b93565b610c6f565b6101e086015261100e565b8785610220015111610fc65761022085015160e086018190526101a086015161018087015260c0860151610f9491908390611b93565b6101e086015260e0850151610fbb9083610fb686670de0b6b3a7640000613d4c565b611b93565b61016086015261100e565b60e08501889052610fd8888389611b93565b61018086015260c0850151610ff09089908390611b93565b6101e086015260e0850151855161100791906108a9565b6101608601525b611022856101800151866101a00151610c6f565b61018086015261012085015115611050576110468561016001518660600151611b7e565b6020860152611072565b61106c856101600151866060015161106790613e54565b610c86565b60208601525b50929695505050505050565b80610120015115611143576110968160200151611c9f565b6003830180546000906110b39084906001600160a01b0316613e70565b92506101000a8154816001600160a01b0302191690836001600160a01b0316021790555080602001518360040160008361014001516001600160a01b03166001600160a01b03168152602001908152602001600020600101600082825461111a9190613d89565b90915550506020810151600284018054600090611138908490613d89565b909155506112189050565b60038201546020820151611160916001600160a01b031690610c6f565b6020820181905261117090611c9f565b60038301805460009061118d9084906001600160a01b0316613e90565b92506101000a8154816001600160a01b0302191690836001600160a01b0316021790555080602001518360040160008361014001516001600160a01b03166001600160a01b0316815260200190815260200160002060010160008282546111f49190613d4c565b90915550506020810151600284018054600090611212908490613d4c565b90915550505b505050565b81156112855780821015611244576040516345b3f65d60e01b815260040160405180910390fd5b600061124f85611d11565b9050600a8110611283576112638482611d22565b83101561128357604051635b85919f60e11b815260040160405180910390fd5b505b50505050565b60008060001983016113a857600080670de0b6b3a76400006112ad8188613d75565b6112b79190613db2565b935085841461135c576112ca8487613d4c565b6001600160a01b038816600090815260038c01602052604081206002810154600190910154929550909161130a916001600160601b0390811691166119be565b905064173eb4c80a811161132057611cdc611329565b61132981611d4d565b600081815260208c90526040902090925061135890896113498c86611e12565b8761135387611530565b611e2b565b9250505b866001600160a01b03167fddd6b496b84171d179d9874158b1cbbe422dd482e5523f1b09cb69ebef28784185848460405161139993929190613d9c565b60405180910390a250506113ef565b839150846001600160a01b03167f91a9dcdd01df8b934f14307641e884e0ea6e414bf05fe8daf8c74a28f69b55ee836040516113e691815260200190565b60405180910390a25b6113f98886611eb5565b965096945050505050565b84516000901580159061141a5750602086015115155b905060008161142a57600061143c565b61143c87600001518860200151611985565b9050836114b1576001600160a01b0386166000908152600189016020526040902054821561149e578160000361148557604051639f7e164b60e01b815260040160405180910390fd5b611499898883611494866121ba565b612222565b6114af565b80156114af576114af8988836122f7565b505b82156114e45760026114c28661243b565b6114cc9190613d75565b6114de90670de0b6b3a7640000613d89565b60408801525b505050506001600160a01b039190911660009081526002938401602090815260409182902084518155908401516001820155920151919092015550565b60006108dd61153084846124b1565b60008061153f8361103c613e0d565b9050610c9f19811280611553575061103c81135b1561157157604051637edf443b60e11b815260040160405180910390fd5b61159b611596611580836124c7565b611591670df27a2cdf448000612552565b612636565b6126fb565b9392505050565b60006115ad82613eb0565b91506001838361200181106115c4576115c4613ec9565b0154915060008060005b858416600003611646576115e28487613d4c565b9250868361200181106115f7576115f7613ec9565b01549150866120010183612001811061161257611612613ec9565b0154905080600003611624578161162e565b61162e81836108a9565b6116389086613d4c565b9450600184901b93506115ce565b5050505092915050565b600061165b82613eb0565b9150670de0b6b3a764000090505b61200082116108e0576000836120010183612001811061168b5761168b613ec9565b0154905080156116a25761169f82826108a9565b91505b6116ab83612797565b6116b59084613d89565b925050611669565b600083815260208690526040812060028101546101c084015160c0850151929391926116e991906108a9565b90506000806000876117415761173086600101548760000154866117248b60e001518c600001518d60a0015161171f9190613d4c565b6108a9565b8b60a0015160006127b6565b915081925061174186863385612821565b8661012001511561178f5761176b86600101548760000154868a602001518b60a0015160006127b6565b90506117778184613d89565b925061178a868689610140015184612821565b611864565b60038a015460208801516117ac916001600160a01b031690610c6f565b602088018190526117bc90611c9f565b60038b0180546000906117d99084906001600160a01b0316613e90565b92506101000a8154816001600160a01b0302191690836001600160a01b0316021790555086602001518d60040160008961014001516001600160a01b03166001600160a01b0316815260200190815260200160002060010160008282546118409190613d4c565b9091555050602087015160028e01805460009061185e908490613d4c565b90915550505b6118748c8a896101e0015161287b565b8215611894578286600001600082825461188e9190613d89565b90915550505b8660e001518660010160008282546118ac9190613d89565b909155505061014087015160408051848152602081018490526001600160a01b039092169133917fd43d7a2b808648e0814e6795ea3a9b723df6eae4046a7e279a036458f38bc644910160405180910390a350505050505050505050505050565b600061191a600283613dc9565b60000361193257676765c793fa10079d601b1b611934565b825b9050611941600283613d75565b91505b81156108e05761195483846119a5565b9250611961600283613dc9565b156119735761197081846119a5565b90505b61197e600283613d75565b9150611944565b600081611993600282613d75565b6108c9670de0b6b3a764000086613db2565b6000676765c793fa10079d601b1b6108bf600282613d75565b6000806119ef6119ce8442613d4c565b6119e090670de0b6b3a7640000613db2565b680340aad21b3b700000611985565b9050600068068155a43676e00000821015611a3e57611a1c670de0b6b3a763ffff19611591601485613d75565b9050611a2b8561171f836126fb565b611a3790610100613db2565b9250611ad5565b682d89577d7d40200000821015611a9557611a7b670de0b6b3a763ffff196078611a7168068155a43676e0000086613d4c565b6115919190613d75565b9050611a8a8561171f836126fb565b611a37906004613db2565b611ab7670de0b6b3a763ffff19603c611a71682d89577d7d4020000086613d4c565b90506010611ac88661171f846126fb565b611ad29190613d75565b92505b505092915050565b60008084861015611b2e57611b27670de0b6b3a7640000611b22670de0b6b3a763ffff19611b1d611b0e888b613e0d565b611b188c8c613e0d565b612948565b612a0e565b612a1e565b9050611b6a565b6000611b3a8487613e0d565b90506000811215611b5657670de0b6b3a763ffff199150611b68565b8015611b6857670de0b6b3a764000091505b505b611b748482612636565b9695505050505050565b6000670de0b6b3a76400006108d38385613db2565b6000808060001985870985870292508281108382030391505080600003611bcd57838281611bc357611bc3613d5f565b049250505061159b565b808411611bd957600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b600081611c4e8185613d75565b6108dd9190613db2565b600081600181610c9e670de0b6b3a764000087613db2565b6000611c7c8284613dc9565b600003611c8a5750816108e0565b81611c958484611c41565b6108dd9190613d89565b60006001600160a01b03821115611d0d5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663630206269747360c81b60648201526084015b60405180910390fd5b5090565b80546000906108e090600190613d4c565b600081156108e0576108dd611d3f84611d3a85612a2e565b611985565b678ac7230489e80000611985565b600064173eb4c80a821080611d6d57506b033f4a75fb6ff29166751a4b82115b15611d8b57604051635665ba4560e11b815260040160405180910390fd5b6000611daa611d9984612552565b611b18670df27a2cdf448000612552565b90506000611db782612a42565b9050600082128015611dd957506706f05b59d3b20000611dd78383613e0d565b135b15611dfc57611df4670de0b6b3a7640000820561103d613e0d565b949350505050565b611df4670de0b6b3a7640000820561103c613e0d565b60006108dd611e2184846115a2565b61171f8585611650565b6002850154600090428103611e535760405163c1e4c5f760e01b815260040160405180910390fd5b611e6a876001015488600001548787876000612ab4565b915083876001016000828254611e809190613d89565b9091555050865482908890600090611e99908490613d89565b90915550611eab905087828885612821565b5095945050505050565b6001600160a01b03808216600090815260038085016020908152604080842081516101408101835281548088168083526001600160601b03600160a01b9283900481168488015260018086015480831686890152600160601b908190048c16606087015260028701548084166080880152048b1660a086015297850154808b1660c086019081529390041660e08401526004808501546101008501526005909401546101208401528752918901909352908420905192810180549295919493909116929091611f85908490613d4c565b925050819055508160c001516001600160a01b0316816000016000828254611fad9190613d89565b909155505083548490600090611fcb906001600160601b0316613edf565b82546001600160601b039182166101009390930a92830291909202199091161790558354600160601b90046001600160a01b03908116908416148015612020575060018401546001600160a01b038481169116145b156120495783546001600160601b031684556001840180546001600160a01b0319169055612178565b83546001600160a01b03808516600160601b90920416036120ae5760a0820180516001600160a01b039081166000908152600387016020526040902060010180546001600160601b03908116909155915186549116600160601b029116178455612178565b60018401546001600160a01b03808516911603612114576060820180516001600160a01b039081166000908152600387016020526040902060020180546001600160601b0316905590516001860180546001600160a01b03191691909216179055612178565b60a0820180516060840180516001600160a01b03908116600090815260038901602052604080822060020180546001600160601b03908116600160601b97861688021790915593519551831682529020600101805490921693169091029190911790555b50506001600160a01b03166000908152600391820160205260408120818155600181018290556002810182905591820181905560048201819055600590910155565b60006001600160601b03821115611d0d5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b6064820152608401611d04565b81156122c557600084600001838154811061223f5761223f613ec9565b6000918252602091829020604080518082019091529101546001600160a01b03811682526001600160601b03600160a01b9091048116928201839052909250831610156122a5576001600160601b03821660208201526122a0858285612af8565b6122bf565b6001600160601b03821660208201526122bf858285612c83565b50611285565b604080518082019091526001600160a01b03841681526001600160601b03821660208201528454611285918691612c83565b6001600160a01b038216600090815260018085016020526040822082905584546123219190613d4c565b905080820361235857835484908061233b5761233b613f02565b600082815260208120820160001990810191909155019055611285565b600084600001828154811061236f5761236f613ec9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b03169181019190915285549091508590806123be576123be613f02565b6000828152602081208201600019908101919091550190556123e1858285612c83565b611283858660000185815481106123fa576123fa613ec9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b03169181019190915285612af8565b6000808212156124615760405163608c83ff60e11b815260048101839052602401611d04565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f9082131561249e57604051632c482c3960e01b815260048101839052602401611d04565b6108e0670de0b6b3a76400008302612d60565b60006124bd8383612ece565b5090949350505050565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156125075760405163e608e18b60e01b815260048101839052602401611d04565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315612544576040516371f72a3160e01b815260048101839052602401611d04565b50670de0b6b3a76400000290565b60008082136125775760405163309fa7dd60e11b815260048101839052602401611d04565b6000670de0b6b3a76400008312612590575060016125a9565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b60006125be670de0b6b3a76400008505612fbe565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff1981016125e857505002919050565b6706f05b59d3b200005b600081131561262d57670de0b6b3a7640000828002059150671bc16d674ec800008212612625579384019360019190911d905b60011d6125f2565b50505002919050565b6000600160ff1b83148061264d5750600160ff1b82145b1561266b57604051630d01a11b60e21b815260040160405180910390fd5b6000806000851261267c5784612681565b846000035b9150600084126126915783612696565b836000035b905060006126a4838361309c565b90506001600160ff1b038111156126d15760405163bf79e8d960e01b815260048101829052602401611d04565b6000198087139086138082186001146126ea57826126ef565b826000035b98975050505050505050565b60008082121561274e5768033dd1780914b971141982121561271f57506000919050565b61272b826000036126fb565b6a0c097ce7bc90715b34b9f160241b8161274757612747613d5f565b0592915050565b680a688906bd8b000000821261277a5760405163e69458f960e01b815260048101839052602401611d04565b670de0b6b3a7640000604083901b0461159b81613162565b919050565b60008115612792576127ae60001983186001613d89565b909116919050565b6000841580156127c4575086155b156127d0575082611b74565b856000036127df575082611b74565b610c64866127f5670de0b6b3a764000087613db2565b6127ff868b613db2565b612811670de0b6b3a76400008a613db2565b61281b9190613d89565b856137f4565b8015611285576001600160a01b03821660009081526003850160205260409020600181015484106128545781815561286e565b818160000160008282546128689190613d89565b90915550505b4260019091015550505050565b8060000361289c5760405163162908e360e11b815260040160405180910390fd5b6128a582613eb0565b91505b612000821161121857600081848461200181106128c7576128c7613ec9565b0160008282546128d79190613d4c565b9250508190559050600084612001018461200181106128f8576128f8613ec9565b01549050801561292c5761290c82826108a9565b61291f6129198585613d89565b836108a9565b6129299190613d4c565b92505b61293584612797565b61293f9085613d89565b935050506128a8565b6000600160ff1b83148061295f5750600160ff1b82145b1561297d5760405163b3c754a360e01b815260040160405180910390fd5b6000806000851261298e5784612993565b846000035b9150600084126129a357836129a8565b836000035b905060006129bf83670de0b6b3a764000084613851565b90506001600160ff1b038111156129ec57604051637cb4bef560e01b815260048101829052602401611d04565b600019808713908613808218600114612a0557826126ef565b6126ef83613e54565b600081831215610c7f57816108dd565b600081831315610c7f57816108dd565b60006108e0670de0b6b3a764000083613db2565b6000670afdc366fbc00000600160ff1b03821315612a7657604051635399a28560e11b815260048101839052602401611d04565b670de0b6b3a764000082076000819003612a9257829150612aae565b80830391506000831315612aae57670de0b6b3a7640000820191505b50919050565b600084158015612ac2575086155b15612ad857612ad184846108a9565b9050611b74565b85600003612aea57612ad184846108a9565b610c64866127f58587613db2565b6000612b05826002613db2565b8454909150818111612b2257612b1d858585846138ab565b611283565b6000856000018381548110612b3957612b39613ec9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091529050612b81836001613d89565b82118015612bd2575060208101516001600160601b031686612ba4856001613d89565b81548110612bb457612bb4613ec9565b600091825260209091200154600160a01b90046001600160601b0316115b15612c325785612be184613eb0565b93508381548110612bf457612bf4613ec9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b03169181019190915290505b84602001516001600160601b031681602001516001600160601b031611612c6457612c5f868686856138ab565b612c7b565b612c70868286856138ab565b612c7b868685612af8565b505050505050565b82546001821480612cd3575083612c9b600284613d75565b81548110612cab57612cab613ec9565b60009182526020918290200154908401516001600160601b03600160a01b9092048216911611155b15612ce957612ce4848484846138ab565b611285565b612d4b8480612cf9600286613d75565b81548110612d0957612d09613ec9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b03169181019190915284846138ab565b6112858484612d5b600286613d75565b612c83565b600081600003612d7257506000919050565b50600181600160801b8110612d8c5760409190911b9060801c5b600160401b8110612da25760209190911b9060401c5b600160201b8110612db85760109190911b9060201c5b620100008110612dcd5760089190911b9060101c5b6101008110612de15760049190911b9060081c5b60108110612df45760029190911b9060041c5b60088110612e0457600182901b91505b6001828481612e1557612e15613d5f565b048301901c91506001828481612e2d57612e2d613d5f565b048301901c91506001828481612e4557612e45613d5f565b048301901c91506001828481612e5d57612e5d613d5f565b048301901c91506001828481612e7557612e75613d5f565b048301901c91506001828481612e8d57612e8d613d5f565b048301901c91506001828481612ea557612ea5613d5f565b048301901c91506000828481612ebd57612ebd613d5f565b0490508083101561159b5782611df4565b60008080611000670de0b6b3a764000082808080805b8615612fb057612ef4878b613d89565b93508b846120018110612f0957612f09613ec9565b015492508b61200101846120018110612f2457612f24613ec9565b0154915081600003612f3f57612f3a86846108a9565b612f61565b612f61612f4c8388613db2565b846a0c097ce7bc90715b34b9f160241b611b93565b612f6b9086613d89565b90508a811015612f8a57611cdc8411612f85578399508094505b612fa4565b8115612f9d57612f9a8683611b7e565b95505b8098508597505b600187901c9650612ee4565b505050505050509250925092565b6000600160801b8210612fde57608091821c91612fdb9082613d89565b90505b600160401b8210612ffc57604091821c91612ff99082613d89565b90505b600160201b821061301a57602091821c916130179082613d89565b90505b62010000821061303757601091821c916130349082613d89565b90505b610100821061305357600891821c916130509082613d89565b90505b6010821061306e57600491821c9161306b9082613d89565b90505b6004821061308957600291821c916130869082613d89565b90505b60028210612792576108e0600182613d89565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106130e05760405163698d9a0160e11b815260048101829052602401611d04565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff821190508260000361311e5780670de0b6b3a76400008504019450505050506108e0565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b8216156131825768016a09e667f3bcc9090260401c5b6001603e1b82161561319d576801306fe0a31b7152df0260401c5b6001603d1b8216156131b8576801172b83c7d517adce0260401c5b6001603c1b8216156131d35768010b5586cf9890f62a0260401c5b6001603b1b8216156131ee576801059b0d31585743ae0260401c5b6001603a1b82161561320957680102c9a3e778060ee70260401c5b600160391b8216156132245768010163da9fb33356d80260401c5b600160381b82161561323f57680100b1afa5abcbed610260401c5b600160371b82161561325a5768010058c86da1c09ea20260401c5b600160361b821615613275576801002c605e2e8cec500260401c5b600160351b82161561329057680100162f3904051fa10260401c5b600160341b8216156132ab576801000b175effdc76ba0260401c5b600160331b8216156132c657680100058ba01fb9f96d0260401c5b600160321b8216156132e15768010002c5cc37da94920260401c5b600160311b8216156132fc576801000162e525ee05470260401c5b600160301b8216156133175768010000b17255775c040260401c5b6001602f1b821615613332576801000058b91b5bc9ae0260401c5b6001602e1b82161561334d57680100002c5c89d5ec6d0260401c5b6001602d1b8216156133685768010000162e43f4f8310260401c5b6001602c1b82161561338357680100000b1721bcfc9a0260401c5b6001602b1b82161561339e5768010000058b90cf1e6e0260401c5b6001602a1b8216156133b9576801000002c5c863b73f0260401c5b600160291b8216156133d457680100000162e430e5a20260401c5b600160281b8216156133ef576801000000b1721835510260401c5b600160271b82161561340a57680100000058b90c0b490260401c5b600160261b8216156134255768010000002c5c8601cc0260401c5b600160251b821615613440576801000000162e42fff00260401c5b600160241b82161561345b5768010000000b17217fbb0260401c5b600160231b821615613476576801000000058b90bfce0260401c5b600160221b82161561349157680100000002c5c85fe30260401c5b600160211b8216156134ac5768010000000162e42ff10260401c5b600160201b8216156134c757680100000000b17217f80260401c5b63800000008216156134e25768010000000058b90bfc0260401c5b63400000008216156134fd576801000000002c5c85fe0260401c5b632000000082161561351857680100000000162e42ff0260401c5b6310000000821615613533576801000000000b17217f0260401c5b630800000082161561354e57680100000000058b90c00260401c5b63040000008216156135695768010000000002c5c8600260401c5b6302000000821615613584576801000000000162e4300260401c5b630100000082161561359f5768010000000000b172180260401c5b628000008216156135b9576801000000000058b90c0260401c5b624000008216156135d357680100000000002c5c860260401c5b622000008216156135ed5768010000000000162e430260401c5b6210000082161561360757680100000000000b17210260401c5b620800008216156136215768010000000000058b910260401c5b6204000082161561363b576801000000000002c5c80260401c5b6202000082161561365557680100000000000162e40260401c5b6201000082161561366e5761b172600160401b010260401c5b618000821615613686576158b9600160401b010260401c5b61400082161561369e57612c5d600160401b010260401c5b6120008216156136b65761162e600160401b010260401c5b6110008216156136ce57610b17600160401b010260401c5b6108008216156136e65761058c600160401b010260401c5b6104008216156136fe576102c6600160401b010260401c5b61020082161561371657610163600160401b010260401c5b61010082161561372d5760b1600160401b010260401c5b6080821615613743576059600160401b010260401c5b604082161561375957602c600160401b010260401c5b602082161561376f576016600160401b010260401c5b601082161561378557600b600160401b010260401c5b600882161561379b576006600160401b010260401c5b60048216156137b1576003600160401b010260401c5b60028216156137c7576001600160401b010260401c5b60018216156137dd576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b600080613802868686611b93565b9050600183600281111561381857613818613d20565b14801561383557506000848061383057613830613d5f565b868809115b1561384857613845600182613d89565b90505b95945050505050565b600080806000198587098587029250828110838203039150508060000361388157838281611bc357611bc3613d5f565b838110611bd957604051631dcf306360e21b81526004810182905260248101859052604401611d04565b8082036138f157835460018101855560008581526020908190208551918601516001600160601b0316600160a01b026001600160a01b039092169190911791015561393b565b8284600001838154811061390757613907613ec9565b6000918252602091829020835193909201516001600160601b0316600160a01b026001600160a01b03909316929092179101555b5090516001600160a01b031660009081526001909201602052604090912055565b604051806101c00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600015158152602001600081526020016000815260200160008152602001600081525090565b60405180610240016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405161012081016001600160401b0381118282101715613a9457634e487b7160e01b600052604160045260246000fd5b60405290565b803560ff8116811461279257600080fd5b8035801515811461279257600080fd5b60006101208284031215613ace57600080fd5b613ad6613a63565b9050613ae182613a9a565b81526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a0820152613b2160c08301613aab565b60c082015260e082013560e082015261010080830135818301525092915050565b80356001600160a01b038116811461279257600080fd5b600080600080600080600080610200898b031215613b7657600080fd5b88359750602089013596506040890135955060608901359450613b9c8a60808b01613abb565b9350613bab6101a08a01613b42565b92506101c089013591506101e089013590509295985092959890939650565b60006101c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151613c3d8285018215159052565b50506101408381015190830152610160808401519083015261018080840151908301526101a092830151929091019190915290565b60008060008060008060008060006102208a8c031215613c9157600080fd5b8935985060208a0135975060408a0135965060608a01359550613cb78b60808c01613abb565b9450613cc66101a08b01613b42565b9350613cd56101c08b01613aab565b92506101e08a013591506102008a013590509295985092959850929598565b600080600060608486031215613d0957600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156108e0576108e0613d36565b634e487b7160e01b600052601260045260246000fd5b600082613d8457613d84613d5f565b500490565b808201808211156108e0576108e0613d36565b9283526020830191909152604082015260600190565b80820281158282048414176108e0576108e0613d36565b600082613dd857613dd8613d5f565b500690565b80820260008212600160ff1b84141615613df957613df9613d36565b81810583148215176108e0576108e0613d36565b8181036000831280158383131683831282161715613e2d57613e2d613d36565b5092915050565b8082018281126000831280158216821582161715611ad557611ad5613d36565b6000600160ff1b8201613e6957613e69613d36565b5060000390565b6001600160a01b03818116838216019080821115613e2d57613e2d613d36565b6001600160a01b03828116828216039080821115613e2d57613e2d613d36565b600060018201613ec257613ec2613d36565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60006001600160601b03821680613ef857613ef8613d36565b6000190192915050565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c283a28169d198bf9cb1afbbb08c346cba66f28ce391928601ee49cdc218638e64736f6c63430008120033","args":[],"salt":"AJNA","value":[]}
2024-01-08T15:29:14.190Z cannon:builder:runtime resolve artifact ERC20PoolFactory
2024-01-08T15:29:14.190Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:29:21.768Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/ERC20PoolFactory.sol': 'ERC20PoolFactory' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/clones-with-immutable-args/src/Clone.sol': {
      keccak256: '0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545',
      urls: [Array],
      license: 'BSD'
    },
    'lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol': {
      keccak256: '0xcb7cbb68b8a90e6eff9c7a29f5b7d5964e0cedc0ad8133f5bcb3ec3a9aeb391c',
      urls: [Array],
      license: 'BSD'
    },
    'lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol': {
      keccak256: '0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol': {
      keccak256: '0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol': {
      keccak256: '0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol': {
      keccak256: '0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Address.sol': {
      keccak256: '0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Multicall.sol': {
      keccak256: '0x35e30a35e23f856cbcee3558b7efdd83f6017a8f1b419710645143d98e892463',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathUD60x18.sol': {
      keccak256: '0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/ERC20Pool.sol': {
      keccak256: '0xe372d950d3ace12bae8ee8a495a6f44c6521778ff56e9b25f3ccdbf266aea0d6',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/ERC20PoolFactory.sol': {
      keccak256: '0xdd7c1e42906f6a7693bf72014b39f36c692e0f4a17e7593d7f887ec84b697c85',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/FlashloanablePool.sol': {
      keccak256: '0x1f3767f4d27c13ef2c53bcf49c1d5917c77b2d3fb7a28576f0c2a131a8377f6f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/Pool.sol': {
      keccak256: '0x87159e77eeee256f1501035738bb015a1d4d360fab31ea077f4ddcaff4e54d22',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/PoolDeployer.sol': {
      keccak256: '0x81b87acb71ecdbb00a37f4b0b23d21554692bde445fbc19871353bcce128d53e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPoolFactory.sol': {
      keccak256: '0x53d72e58a4b0d6a5e8aeb23a2f40262636c823170037179220ec29ca403dae76',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20Pool.sol': {
      keccak256: '0xac0fc147804f48919ee17416dd6659eb77aed7d5c1b192f2e9f86862363346d4',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolBorrowerActions.sol': {
      keccak256: '0xe7bcfa2227cdb6249ad214d83a82935f0eb048472c277a599ba67c31f3d191b2',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolEvents.sol': {
      keccak256: '0xeccea62ed02e93376371d0ad723f0f94d390363fc836720170f018a5e928046c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolFactory.sol': {
      keccak256: '0x010cb58b359152dea4534951089b55dad96f8e9bf4b2815ff33b73a38e62d5ef',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolImmutables.sol': {
      keccak256: '0x54c17faa7d4eccf84d8923d9531725e266d27b8a5ef2cbc59475749ad44a5834',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolLenderActions.sol': {
      keccak256: '0xdf8d1b579da0ae2d47c938f5e262658ceb7d807d2e245b9a6e4a3f6febe9a0cc',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20Taker.sol': {
      keccak256: '0x3ddd154139854a83d3f46adb95dea763569f55dbf702cfcdc0abcc588bf7bea0',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/BorrowerActions.sol': {
      keccak256: '0xecf8ce41a4034aa174c72bab7e558d788c1cc052ee77b2151f4acee4691be839',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/KickerActions.sol': {
      keccak256: '0xa486e9c9091c1cc8966f13b2b6bb9f9b7eeaf26d539b990c3904befd7a2a25fe',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/LPActions.sol': {
      keccak256: '0x4def554bc6414a7a4a575b8fced4fd334b28c484f09e5f616a0c228cbf875c85',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/LenderActions.sol': {
      keccak256: '0x04b37827f21db736b668fb27393b6c8b968b4cb24abf338b0a658090a173e0dd',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/PoolCommons.sol': {
      keccak256: '0x1dd40766b71468dade905c41a90783dad18761fe998f1a85acd79e8a0bb32ed3',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/SettlerActions.sol': {
      keccak256: '0x05edfe3f72323b7212fbb5134f76211f397138c2ed30ddf0f3683772213c831d',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/TakerActions.sol': {
      keccak256: '0x642ee2cabe710495ccc32c269750578cbfe924af26dcc73b8ce6cdf06adce68e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/RevertsHelper.sol': {
      keccak256: '0xcaff095290172f1b5726d4e887ab9be5f524d9321e94ca0095f99b666381a6f4',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:29:21.769Z cannon:cli:foundry evm version paris
2024-01-08T15:29:21.777Z cannon:builder:runtime reported contract artifact ERC20PoolFactory {
  contractName: 'ERC20PoolFactory',
  sourceName: 'src/ERC20PoolFactory.sol',
  abi: [
    {
      type: 'constructor',
      inputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'ERC20_NON_SUBSET_HASH',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'MAX_RATE',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'MIN_RATE',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'ajna',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'deployPool',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'deployedPools',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'deployedPoolsList',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getDeployedPoolsList',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getNumberOfDeployedPools',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'implementation',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'event',
      name: 'PoolCreated',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'CreateFail', inputs: [] },
    { type: 'error', name: 'DecimalsNotCompliant', inputs: [] },
    {
      type: 'error',
      name: 'DeployQuoteCollateralSameToken',
      inputs: []
    },
    { type: 'error', name: 'DeployWithZeroAddress', inputs: [] },
    { type: 'error', name: 'PoolAlreadyExists', inputs: [Array] },
    { type: 'error', name: 'PoolInterestRateInvalid', inputs: [] }
  ],
  bytecode: '0x608060405234801561001057600080fd5b5060405161678738038061678783398101604081905261002f916100cd565b6001600160a01b0381166100565760405163104aee1f60e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b03831617905560405161007d906100c0565b604051809103906000f080158015610099573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055506100fd565b615c5380610b3483390190565b6000602082840312156100df57600080fd5b81516001600160a01b03811681146100f657600080fd5b9392505050565b610a288061010c6000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c80632b6983af146100935780635c60da1b146100b15780637f165b0b146100d1578063a3232bf31461010b578063a387245c1461011e578063b3d4cfa414610131578063bb6da0dd14610143578063c24dbebd14610156578063c38dc7fc14610165578063d819bfef1461017a575b600080fd5b61009b610188565b6040516100a89190610710565b60405180910390f35b6003546100c4906001600160a01b031681565b6040516100a8919061075d565b6100c46100df366004610788565b60016020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6100c46101193660046107c4565b6101ea565b6100c461012c366004610800565b610517565b6002545b6040519081526020016100a8565b6000546100c4906001600160a01b031681565b61013567016345785d8a000081565b6101356000805160206109d383398151915281565b610135662386f26fc1000081565b606060028054806020026020016040519081016040528092919081815260200182805480156101e057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101c2575b5050505050905090565b6000838383816001600160a01b0316836001600160a01b0316036102215760405163bcbac68960e01b815260040160405180910390fd5b6001600160a01b038316158061023e57506001600160a01b038216155b1561025c5760405163104aee1f60e01b815260040160405180910390fd5b80662386f26fc100001180610278575067016345785d8a000081115b156102965760405163462f085f60e01b815260040160405180910390fd5b6001600160a01b0380881660009081527fb581f7ccad64982c9898d358d7c5c86a0e89d6586f43d39b74347caf2ae08b60602090815260408083208a85168452909152902054168015610307578060405163fb8debc160e01b81526004016102fe919061075d565b60405180910390fd5b600061031288610541565b9050600061031f8a610541565b60008054604051929350909161034d9183916001600160a01b03909116908e908e9088908890602001610819565b60408051601f19818403018152919052600354909150600090610379906001600160a01b0316836105fe565b905080985088600160006000805160206109d3833981519152815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002899080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055507fee1fe091a5213b321c2662b35c0b7cd0d35d10dbcab52b3c9b8768983c67bce3896000805160206109d38339815191526040516104a69291906001600160a01b03929092168252602082015260400190565b60405180910390a160405163fe4b84df60e01b8152600481018b90526001600160a01b0382169063fe4b84df90602401600060405180830381600087803b1580156104f057600080fd5b505af1158015610504573d6000803e3d6000fd5b5050505050505050505050509392505050565b6002818154811061052757600080fd5b6000918252602090912001546001600160a01b0316905081565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561059d575060408051601f3d908101601f1916820190925261059a91810190610880565b60015b6105ba576040516333ae908b60e01b815260040160405180910390fd5b60128160ff1611156105df576040516333ae908b60e01b815260040160405180910390fd5b6105ea8160126108c0565b6105f590600a6109c3565b9150505b919050565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b60348401526000939260438401929186019084604182015b602082106106b45783518152602093840193601f199092019101610695565b835160001960208490036101000a0119908116825260f088901b91830191825286846000f098506001600160a01b03891661070257604051631d7fde3160e31b815260040160405180910390fd5b505050505050505092915050565b6020808252825182820181905260009190848201906040850190845b818110156107515783516001600160a01b03168352928401929184019160010161072c565b50909695505050505050565b6001600160a01b0391909116815260200190565b80356001600160a01b03811681146105f957600080fd5b60008060006060848603121561079d57600080fd5b833592506107ad60208501610771565b91506107bb60408501610771565b90509250925092565b6000806000606084860312156107d957600080fd5b6107e284610771565b92506107f060208501610771565b9150604084013590509250925092565b60006020828403121561081257600080fd5b5035919050565b60006002881061083957634e487b7160e01b600052602160045260246000fd5b5060f89690961b86526001600160601b0319606095861b8116600188015293851b841660158701529190931b9091166029840152603d830191909152605d820152607d0190565b60006020828403121561089257600080fd5b815160ff811681146108a357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b60ff82811682821603908111156108d9576108d96108aa565b92915050565b600181815b8085111561091a578160001904821115610900576109006108aa565b8085161561090d57918102915b93841c93908002906108e4565b509250929050565b600082610931575060016108d9565b8161093e575060006108d9565b8160018114610954576002811461095e5761097a565b60019150506108d9565b60ff84111561096f5761096f6108aa565b50506001821b6108d9565b5060208310610133831016604e8410600b841016171561099d575081810a6108d9565b6109a783836108df565b80600019048211156109bb576109bb6108aa565b029392505050565b60006108a360ff84168361092256fe2263c4378b4920f0bef611a3ff22c506afa4745b3319c50b6d704a874990b8b2a2646970667358221220d2d51b7f29eca10b0d8763feeb7d0a80e95cb6e92d95f7efff0b18420771696f64736f6c63430008120033608060405234801561001057600080fd5b506001600055615c2d80620000266000396000f3fe608060405234801561001057600080fd5b50600436106102b35760003560e01c8062cdcefb146102b85780630203d8fb146102ee5780630448e51a14610303578063063d829f146103e757806306e47f261461040a5780630729f62c1461041d57806315afd4091461043057806316f8a463146104585780632c7b2e0614610479578063307ee3b5146104b6578063329d1a8b146104bf578063332c0e43146104d25780633884cd88146104e55780633a0c8f07146105125780633ab96ec51461051a5780633fa8fdbb1461052d57806342302a9a14610535578063483cd1871461054857806348d399e71461058c5780634ab1fc36146105a15780634d966198146105aa5780634efe8af7146105c2578063540c1433146105d55780635a3b4477146105e85780635a422b921461060d5780635cffe9de146106155780635d3637e714610638578063613255ab1461064157806366ae5880146106545780636a9b1891146106675780637323f8531461067a5780637b3f8655146106ab5780637f8baa37146106b35780638349d6be146106c6578063870c764a146106e7578063987165ed146106f0578063a749f1a614610703578063a83de3ec14610716578063a918058d14610729578063a9ff9f771461073c578063ac9650d81461074f578063b1dd61b61461076f578063b1f0724714610789578063bad346201461079c578063bcb630d7146107a4578063c861c6e6146107b5578063ca103d15146107c8578063ce4396d7146107ff578063cfa8ff0314610807578063d14827911461081a578063d39d813f14610822578063d53e2b1b14610835578063d9606e0814610848578063d9d98ce414610877578063da7951a91461088a578063e512c0611461089d578063ec0bdcfc146108b2578063eca48706146108ba578063f78b0cce146108cd578063fe4b84df146108e0575b600080fd5b614011546001600160d01b03811690600160d01b900465ffffffffffff165b6040516102e5929190614849565b60405180910390f35b6103016102fc36600461486c565b6108f3565b005b61038a610311366004614898565b6001600160a01b03908116600090815260046020819052604090912080546003820154600180840154600285015494909501549054838716976001600160601b03600160a01b9586900481169885811698828116988381169890970490921695600160601b948590048216949081900482169392041690565b604080516001600160a01b039b8c168152602081019a909a528901979097526060880195909552608087019390935260a086019190915260c0850152841660e08401528316610100830152909116610120820152610140016102e5565b61400b546001600160d01b03811690600160d01b900465ffffffffffff166102d7565b6103016104183660046148f9565b610a00565b61030161042b36600461495b565b610aa8565b61044361043e36600461486c565b610b6e565b604080519283529015156020830152016102e5565b61046b61046636600461499c565b610c6d565b6040519081526020016102e5565b6104a761048736600461499c565b600090815261402060205260409020805460018201546002909201549092565b6040516102e5939291906149b5565b6140175461046b565b61046b6104cd36600461499c565b610ca8565b6104a76104e03660046149cb565b610cbb565b6104ed610e12565b604080516001600160a01b0390941684526020840192909252908201526060016102e5565b61046b610e51565b61046b61052836600461499c565b610ece565b61046b610eed565b61046b61054336600461499c565b610ef9565b61046b6105563660046149fd565b6001600160a01b039081166000908152614023602090815260408083209490931682529283528181209381529290915290205490565b610594611034565b6040516102e59190614a3f565b61401d5461046b565b6105b2611040565b6040516102e59493929190614a53565b6103016105d0366004614a6e565b611142565b61046b6105e336600461499c565b6111d2565b60035461401c5461401a5461401b5461401f545b6040516102e5959493929190614ad2565b6103016111dd565b610628610623366004614b36565b6112ad565b60405190151581526020016102e5565b6140195461046b565b61046b61064f366004614898565b611363565b61046b610662366004614ba8565b6113e0565b6102d7610675366004614bfd565b611574565b6102d7610688366004614898565b6001600160a01b0316600090815260056020526040902080546001909101549091565b61046b6116a7565b6103016106c1366004614c1f565b6116b3565b6106d96106d436600461499c565b611732565b6040516102e5929190614c60565b6140185461046b565b6103016106fe366004614c79565b611760565b6102d7610711366004614cea565b61180e565b6105fc61072436600461499c565b611858565b610301610737366004614c79565b6118b7565b61046b61074a366004614d1a565b611924565b61076261075d366004614c1f565b611acf565b6040516102e59190614dbc565b610777611bc3565b60405160ff90911681526020016102e5565b6102d7610797366004614bfd565b611bcf565b610594611cf3565b6001546001600160601b031661046b565b61046b6107c3366004614e1e565b611cff565b6104a76107d6366004614898565b6001600160a01b0316600090815261400a60205260409020805460018201546002909201549092565b610301611e52565b610301610815366004614e4a565b611f02565b6103016120a5565b61030161083036600461'... 43008 more characters,
  deployedBytecode: '0x608060405234801561001057600080fd5b506004361061008e5760003560e01c80632b6983af146100935780635c60da1b146100b15780637f165b0b146100d1578063a3232bf31461010b578063a387245c1461011e578063b3d4cfa414610131578063bb6da0dd14610143578063c24dbebd14610156578063c38dc7fc14610165578063d819bfef1461017a575b600080fd5b61009b610188565b6040516100a89190610710565b60405180910390f35b6003546100c4906001600160a01b031681565b6040516100a8919061075d565b6100c46100df366004610788565b60016020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6100c46101193660046107c4565b6101ea565b6100c461012c366004610800565b610517565b6002545b6040519081526020016100a8565b6000546100c4906001600160a01b031681565b61013567016345785d8a000081565b6101356000805160206109d383398151915281565b610135662386f26fc1000081565b606060028054806020026020016040519081016040528092919081815260200182805480156101e057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101c2575b5050505050905090565b6000838383816001600160a01b0316836001600160a01b0316036102215760405163bcbac68960e01b815260040160405180910390fd5b6001600160a01b038316158061023e57506001600160a01b038216155b1561025c5760405163104aee1f60e01b815260040160405180910390fd5b80662386f26fc100001180610278575067016345785d8a000081115b156102965760405163462f085f60e01b815260040160405180910390fd5b6001600160a01b0380881660009081527fb581f7ccad64982c9898d358d7c5c86a0e89d6586f43d39b74347caf2ae08b60602090815260408083208a85168452909152902054168015610307578060405163fb8debc160e01b81526004016102fe919061075d565b60405180910390fd5b600061031288610541565b9050600061031f8a610541565b60008054604051929350909161034d9183916001600160a01b03909116908e908e9088908890602001610819565b60408051601f19818403018152919052600354909150600090610379906001600160a01b0316836105fe565b905080985088600160006000805160206109d3833981519152815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002899080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055507fee1fe091a5213b321c2662b35c0b7cd0d35d10dbcab52b3c9b8768983c67bce3896000805160206109d38339815191526040516104a69291906001600160a01b03929092168252602082015260400190565b60405180910390a160405163fe4b84df60e01b8152600481018b90526001600160a01b0382169063fe4b84df90602401600060405180830381600087803b1580156104f057600080fd5b505af1158015610504573d6000803e3d6000fd5b5050505050505050505050509392505050565b6002818154811061052757600080fd5b6000918252602090912001546001600160a01b0316905081565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561059d575060408051601f3d908101601f1916820190925261059a91810190610880565b60015b6105ba576040516333ae908b60e01b815260040160405180910390fd5b60128160ff1611156105df576040516333ae908b60e01b815260040160405180910390fd5b6105ea8160126108c0565b6105f590600a6109c3565b9150505b919050565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b60348401526000939260438401929186019084604182015b602082106106b45783518152602093840193601f199092019101610695565b835160001960208490036101000a0119908116825260f088901b91830191825286846000f098506001600160a01b03891661070257604051631d7fde3160e31b815260040160405180910390fd5b505050505050505092915050565b6020808252825182820181905260009190848201906040850190845b818110156107515783516001600160a01b03168352928401929184019160010161072c565b50909695505050505050565b6001600160a01b0391909116815260200190565b80356001600160a01b03811681146105f957600080fd5b60008060006060848603121561079d57600080fd5b833592506107ad60208501610771565b91506107bb60408501610771565b90509250925092565b6000806000606084860312156107d957600080fd5b6107e284610771565b92506107f060208501610771565b9150604084013590509250925092565b60006020828403121561081257600080fd5b5035919050565b60006002881061083957634e487b7160e01b600052602160045260246000fd5b5060f89690961b86526001600160601b0319606095861b8116600188015293851b841660158701529190931b9091166029840152603d830191909152605d820152607d0190565b60006020828403121561089257600080fd5b815160ff811681146108a357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b60ff82811682821603908111156108d9576108d96108aa565b92915050565b600181815b8085111561091a578160001904821115610900576109006108aa565b8085161561090d57918102915b93841c93908002906108e4565b509250929050565b600082610931575060016108d9565b8161093e575060006108d9565b8160018114610954576002811461095e5761097a565b60019150506108d9565b60ff84111561096f5761096f6108aa565b50506001821b6108d9565b5060208310610133831016604e8410600b841016171561099d575081810a6108d9565b6109a783836108df565b80600019048211156109bb576109bb6108aa565b029392505050565b60006108a360ff84168361092256fe2263c4378b4920f0bef611a3ff22c506afa4745b3319c50b6d704a874990b8b2a2646970667358221220d2d51b7f29eca10b0d8763feeb7d0a80e95cb6e92d95f7efff0b18420771696f64736f6c63430008120033',
  linkReferences: {
    'src/libraries/external/BorrowerActions.sol': { BorrowerActions: [Array] },
    'src/libraries/external/KickerActions.sol': { KickerActions: [Array] },
    'src/libraries/external/LPActions.sol': { LPActions: [Array] },
    'src/libraries/external/LenderActions.sol': { LenderActions: [Array] },
    'src/libraries/external/PoolCommons.sol': { PoolCommons: [Array] },
    'src/libraries/external/SettlerActions.sol': { SettlerActions: [Array] },
    'src/libraries/external/TakerActions.sol': { TakerActions: [Array] }
  },
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/clones-with-immutable-args/src/Clone.sol":{"content":"// SPDX-License-Identifier: BSD\\npragma solidity ^0.8.4;\\n\\n/// @title Clone\\n/// @author zefram.eth\\n/// @notice Provides helper functions for reading immutable args from calldata\\ncontract Clone {\\n    /// @notice Reads an immutable arg with type address\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgAddress(uint256 argOffset)\\n        internal\\n        pure\\n        returns (address arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0x60, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint256\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint256(uint256 argOffset)\\n        internal\\n        pure\\n        returns (uint256 arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := calldataload(add(offset, argOffset))\\n        }\\n    }\\n\\n    /// @notice Reads a uint256 array stored in the immutable args.\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @param arrLen Number of elements in the array\\n    /// @return arr The array\\n    function _getArgUint256Array(uint256 argOffset, uint64 arrLen)\\n        internal\\n        pure\\n      returns (uint256[] memory arr)\\n    {\\n      uint256 offset = _getImmutableArgsOffset();\\n      uint256 el;\\n      arr = new uint256[](arrLen);\\n      for (uint64 i = 0; i < arrLen; i++) {\\n        assembly {\\n          // solhint-disable-next-line no-inline-assembly\\n          el := calldataload(add(add(offset, argOffset), mul(i, 32)))\\n        }\\n        arr[i] = el;\\n      }\\n      return arr;\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint64\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint64(uint256 argOffset)\\n        internal\\n        pure\\n        returns (uint64 arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0xc0, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint8\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint8(uint256 argOffset) internal pure returns (uint8 arg) {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0xf8, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @return offset The offset of the packed immutable args in calldata\\n    function _getImmutableArgsOffset() internal pure returns (uint256 offset) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            offset := sub(\\n                calldatasize(),\\n                add(shr(240, calldataload(sub(calldatasize(), 2))), 2)\\n            )\\n        }\\n    }\\n}\\n"},"lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol":{"content":"// SPDX-License-Identifier: BSD\\n\\npragma solidity ^0.8.4;\\n\\n/// @title ClonesWithImmutableArgs\\n/// @author wighawag, zefram.eth\\n/// @notice Enables creating clone contracts with immutable args\\nlibrary ClonesWithImmutableArgs {\\n    error CreateFail();\\n\\n    /// @notice Creates a clone proxy of the implementation contract, with immutable args\\n    /// @dev data cannot exceed 65535 bytes, since 2 bytes are used to store the data length\\n    /// @param implementation The implementation contract to clone\\n    /// @param data Encoded immutable args\\n    /// @return instance The address of the created clone\\n    function clone(address implementation, bytes memory data)\\n        internal\\n        returns (address payable instance)\\n    {\\n        // unrealistic for memory ptr or data length to exceed 256 bits\\n        unchecked {\\n            uint256 extraLength = data.length + 2; // +2 bytes for telling how much data there is appended to the call\\n            uint256 creationSize = 0x41 + extraLength;\\n            uint256 runSize = creationSize - 10;\\n            uint256 dataPtr;\\n            uint256 ptr;\\n            // solhint-disable-next-line no-inline-assembly\\n            assembly {\\n                ptr := mload(0x40)\\n\\n                // -------------------------------------------------------------------------------------------------------------\\n                // CREATION (10 bytes)\\n                // -------------------------------------------------------------------------------------------------------------\\n\\n                // 61 runtime  | PUSH2 runtime (r)     | r                       | ‚Äì\\n                mstore(\\n                    ptr,\\n                    0x6100000000000000000000000000000000000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x01), shl(240, runSize)) // size of the contract running bytecode (16 bits)\\n\\n                // creation size = 0a\\n                // 3d          | RETURNDATASIZE        | 0 r                     | ‚Äì\\n                // 81          | DUP2                  | r 0 r                   | ‚Äì\\n                // 60 creation | PUSH1 creation (c)    | c r 0 r                 | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 c r 0 r               | ‚Äì\\n                // 39          | CODECOPY              | 0 r                     | [0-runSize): runtime code\\n                // f3          | RETURN                |                         | [0-runSize): runtime code\\n\\n                // -------------------------------------------------------------------------------------------------------------\\n                // RUNTIME (55 bytes + extraLength)\\n                // -------------------------------------------------------------------------------------------------------------\\n\\n                // 3d          | RETURNDATASIZE        | 0                       | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0                     | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0 0                   | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0 0 0                 | ‚Äì\\n                // 36          | CALLDATASIZE          | cds 0 0 0 0             | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 cds 0 0 0 0           | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0 cds 0 0 0 0         | ‚Äì\\n                // 37          | CALLDATACOPY          | 0 0 0 0                 | [0, cds) = calldata\\n                // 61          | PUSH2 extra           | extra 0 0 0 0           | [0, cds) = calldata\\n                mstore(\\n                    add(ptr, 0x03),\\n                    0x3d81600a3d39f33d3d3d3d363d3d376100000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x13), shl(240, extraLength))\\n\\n                // 60 0x37     | PUSH1 0x37            | 0x37 extra 0 0 0 0      | [0, cds) = calldata // 0x37 (55) is runtime size - data\\n                // 36          | CALLDATASIZE          | cds 0x37 extra 0 0 0 0  | [0, cds) = calldata\\n                // 39          | CODECOPY              | 0 0 0 0                 | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 36          | CALLDATASIZE          | cds 0 0 0 0             | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 61 extra    | PUSH2 extra           | extra cds 0 0 0 0       | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                mstore(\\n                    add(ptr, 0x15),\\n                    0x6037363936610000000000000000000000000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x1b), shl(240, extraLength))\\n\\n                // 01          | ADD                   | cds+extra 0 0 0 0       | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3d          | RETURNDATASIZE        | 0 cds 0 0 0 0           | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 73 addr     | PUSH20 0x123‚Ä¶         | addr 0 cds 0 0 0 0      | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                mstore(\\n                    add(ptr, 0x1d),\\n                    0x013d730000000000000000000000000000000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x20), shl(0x60, implementation))\\n\\n                // 5a          | GAS                   | gas addr 0 cds 0 0 0 0  | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // f4          | DELEGATECALL          | success 0 0             | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3d          | RETURNDATASIZE        | rds success 0 0         | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3d          | RETURNDATASIZE        | rds rds success 0 0     | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 93          | SWAP4                 | 0 rds success 0 rds     | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 80          | DUP1                  | 0 0 rds success 0 rds   | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3e          | RETURNDATACOPY        | success 0 rds           | [0, rds) = return data (there might be some irrelevant leftovers in memory [rds, cds+0x37) when rds < cds+0x37)\\n                // 60 0x35     | PUSH1 0x35            | 0x35 sucess 0 rds       | [0, rds) = return data\\n                // 57          | JUMPI                 | 0 rds        '... 530731 more characters
  }
}
2024-01-08T15:29:21.778Z cannon:builder:contract lib ref BorrowerActions 0x422d470fb02206733Bb770D2A27d6d98f493af64
2024-01-08T15:29:21.779Z cannon:builder:contract lib ref KickerActions 0xf419056B545783BbFfEAB4d0aA057a52FbA4F4fd
2024-01-08T15:29:21.779Z cannon:builder:contract lib ref LPActions 0xb257A98a3549a0B36b9001d0eDc9e75d313d5c8e
2024-01-08T15:29:21.779Z cannon:builder:contract lib ref LenderActions 0x7456CF19C121842FE2C3a888075A11d51ED63b98
2024-01-08T15:29:21.780Z cannon:builder:contract lib ref PoolCommons 0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540
2024-01-08T15:29:21.780Z cannon:builder:contract lib ref SettlerActions 0x9EdcD1fEc19E5baA98fa4911C90C2162524750d2
2024-01-08T15:29:21.780Z cannon:builder:contract lib ref TakerActions 0xb127207d673977e14f31f52a14AD07e6a512c5fA
2024-01-08T15:29:21.780Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x608060405234801561001057600080fd5b5060405161678738038061678783398101604081905261002f916100cd565b6001600160a01b0381166100565760405163104aee1f60e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b03831617905560405161007d906100c0565b604051809103906000f080158015610099573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055506100fd565b615c5380610b3483390190565b6000602082840312156100df57600080fd5b81516001600160a01b03811681146100f657600080fd5b9392505050565b610a288061010c6000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c80632b6983af146100935780635c60da1b146100b15780637f165b0b146100d1578063a3232bf31461010b578063a387245c1461011e578063b3d4cfa414610131578063bb6da0dd14610143578063c24dbebd14610156578063c38dc7fc14610165578063d819bfef1461017a575b600080fd5b61009b610188565b6040516100a89190610710565b60405180910390f35b6003546100c4906001600160a01b031681565b6040516100a8919061075d565b6100c46100df366004610788565b60016020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6100c46101193660046107c4565b6101ea565b6100c461012c366004610800565b610517565b6002545b6040519081526020016100a8565b6000546100c4906001600160a01b031681565b61013567016345785d8a000081565b6101356000805160206109d383398151915281565b610135662386f26fc1000081565b606060028054806020026020016040519081016040528092919081815260200182805480156101e057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101c2575b5050505050905090565b6000838383816001600160a01b0316836001600160a01b0316036102215760405163bcbac68960e01b815260040160405180910390fd5b6001600160a01b038316158061023e57506001600160a01b038216155b1561025c5760405163104aee1f60e01b815260040160405180910390fd5b80662386f26fc100001180610278575067016345785d8a000081115b156102965760405163462f085f60e01b815260040160405180910390fd5b6001600160a01b0380881660009081527fb581f7ccad64982c9898d358d7c5c86a0e89d6586f43d39b74347caf2ae08b60602090815260408083208a85168452909152902054168015610307578060405163fb8debc160e01b81526004016102fe919061075d565b60405180910390fd5b600061031288610541565b9050600061031f8a610541565b60008054604051929350909161034d9183916001600160a01b03909116908e908e9088908890602001610819565b60408051601f19818403018152919052600354909150600090610379906001600160a01b0316836105fe565b905080985088600160006000805160206109d3833981519152815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002899080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055507fee1fe091a5213b321c2662b35c0b7cd0d35d10dbcab52b3c9b8768983c67bce3896000805160206109d38339815191526040516104a69291906001600160a01b03929092168252602082015260400190565b60405180910390a160405163fe4b84df60e01b8152600481018b90526001600160a01b0382169063fe4b84df90602401600060405180830381600087803b1580156104f057600080fd5b505af1158015610504573d6000803e3d6000fd5b5050505050505050505050509392505050565b6002818154811061052757600080fd5b6000918252602090912001546001600160a01b0316905081565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561059d575060408051601f3d908101601f1916820190925261059a91810190610880565b60015b6105ba576040516333ae908b60e01b815260040160405180910390fd5b60128160ff1611156105df576040516333ae908b60e01b815260040160405180910390fd5b6105ea8160126108c0565b6105f590600a6109c3565b9150505b919050565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b60348401526000939260438401929186019084604182015b602082106106b45783518152602093840193601f199092019101610695565b835160001960208490036101000a0119908116825260f088901b91830191825286846000f098506001600160a01b03891661070257604051631d7fde3160e31b815260040160405180910390fd5b505050505050505092915050565b6020808252825182820181905260009190848201906040850190845b818110156107515783516001600160a01b03168352928401929184019160010161072c565b50909695505050505050565b6001600160a01b0391909116815260200190565b80356001600160a01b03811681146105f957600080fd5b60008060006060848603121561079d57600080fd5b833592506107ad60208501610771565b91506107bb60408501610771565b90509250925092565b6000806000606084860312156107d957600080fd5b6107e284610771565b92506107f060208501610771565b9150604084013590509250925092565b60006020828403121561081257600080fd5b5035919050565b60006002881061083957634e487b7160e01b600052602160045260246000fd5b5060f89690961b86526001600160601b0319606095861b8116600188015293851b841660158701529190931b9091166029840152603d830191909152605d820152607d0190565b60006020828403121561089257600080fd5b815160ff811681146108a357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b60ff82811682821603908111156108d9576108d96108aa565b92915050565b600181815b8085111561091a578160001904821115610900576109006108aa565b8085161561090d57918102915b93841c93908002906108e4565b509250929050565b600082610931575060016108d9565b8161093e575060006108d9565b8160018114610954576002811461095e5761097a565b60019150506108d9565b60ff84111561096f5761096f6108aa565b50506001821b6108d9565b5060208310610133831016604e8410600b841016171561099d575081810a6108d9565b6109a783836108df565b80600019048211156109bb576109bb6108aa565b029392505050565b60006108a360ff84168361092256fe2263c4378b4920f0bef611a3ff22c506afa4745b3319c50b6d704a874990b8b2a2646970667358221220d2d51b7f29eca10b0d8763feeb7d0a80e95cb6e92d95f7efff0b18420771696f64736f6c63430008120033608060405234801561001057600080fd5b506001600055615c2d80620000266000396000f3fe608060405234801561001057600080fd5b50600436106102b35760003560e01c8062cdcefb146102b85780630203d8fb146102ee5780630448e51a14610303578063063d829f146103e757806306e47f261461040a5780630729f62c1461041d57806315afd4091461043057806316f8a463146104585780632c7b2e0614610479578063307ee3b5146104b6578063329d1a8b146104bf578063332c0e43146104d25780633884cd88146104e55780633a0c8f07146105125780633ab96ec51461051a5780633fa8fdbb1461052d57806342302a9a14610535578063483cd1871461054857806348d399e71461058c5780634ab1fc36146105a15780634d966198146105aa5780634efe8af7146105c2578063540c1433146105d55780635a3b4477146105e85780635a422b921461060d5780635cffe9de146106155780635d3637e714610638578063613255ab1461064157806366ae5880146106545780636a9b1891146106675780637323f8531461067a5780637b3f8655146106ab5780637f8baa37146106b35780638349d6be146106c6578063870c764a146106e7578063987165ed146106f0578063a749f1a614610703578063a83de3ec14610716578063a918058d14610729578063a9ff9f771461073c578063ac9650d81461074f578063b1dd61b61461076f578063b1f0724714610789578063bad346201461079c578063bcb630d7146107a4578063c861c6e6146107b5578063ca103d15146107c8578063ce4396d7146107ff578063cfa8ff0314610807578063d14827911461081a578063d39d813f14610822578063d53e2b1b14610835578063d9606e0814610848578063d9d98ce414610877578063da7951a91461088a578063e512c0611461089d578063ec0bdcfc146108b2578063eca48706146108ba578063f78b0cce146108cd578063fe4b84df146108e0575b600080fd5b614011546001600160d01b03811690600160d01b900465ffffffffffff165b6040516102e5929190614849565b60405180910390f35b6103016102fc36600461486c565b6108f3565b005b61038a610311366004614898565b6001600160a01b03908116600090815260046020819052604090912080546003820154600180840154600285015494909501549054838716976001600160601b03600160a01b9586900481169885811698828116988381169890970490921695600160601b948590048216949081900482169392041690565b604080516001600160a01b039b8c168152602081019a909a528901979097526060880195909552608087019390935260a086019190915260c0850152841660e08401528316610100830152909116610120820152610140016102e5565b61400b546001600160d01b03811690600160d01b900465ffffffffffff166102d7565b6103016104183660046148f9565b610a00565b61030161042b36600461495b565b610aa8565b61044361043e36600461486c565b610b6e565b604080519283529015156020830152016102e5565b61046b61046636600461499c565b610c6d565b6040519081526020016102e5565b6104a761048736600461499c565b600090815261402060205260409020805460018201546002909201549092565b6040516102e5939291906149b5565b6140175461046b565b61046b6104cd36600461499c565b610ca8565b6104a76104e03660046149cb565b610cbb565b6104ed610e12565b604080516001600160a01b0390941684526020840192909252908201526060016102e5565b61046b610e51565b61046b61052836600461499c565b610ece565b61046b610eed565b61046b61054336600461499c565b610ef9565b61046b6105563660046149fd565b6001600160a01b039081166000908152614023602090815260408083209490931682529283528181209381529290915290205490565b610594611034565b6040516102e59190614a3f565b61401d5461046b565b6105b2611040565b6040516102e59493929190614a53565b6103016105d0366004614a6e565b611142565b61046b6105e336600461499c565b6111d2565b60035461401c5461401a5461401b5461401f545b6040516102e5959493929190614ad2565b6103016111dd565b610628610623366004614b36565b6112ad565b60405190151581526020016102e5565b6140195461046b565b61046b61064f366004614898565b611363565b61046b610662366004614ba8565b6113e0565b6102d7610675366004614bfd565b611574565b6102d7610688366004614898565b6001600160a01b0316600090815260056020526040902080546001909101549091565b61046b6116a7565b6103016106c1366004614c1f565b6116b3565b6106d96106d436600461499c565b611732565b6040516102e5929190614c60565b6140185461046b565b6103016106fe366004614c79565b611760565b6102d7610711366004614cea565b61180e565b6105fc61072436600461499c565b611858565b610301610737366004614c79565b6118b7565b61046b61074a366004614d1a565b611924565b61076261075d366004614c1f565b611acf565b6040516102e59190614dbc565b610777611bc3565b60405160ff90911681526020016102e5565b6102d7610797366004614bfd565b611bcf565b610594611cf3565b6001546001600160601b031661046b565b61046b6107c3366004614e1e565b611cff565b6104a76107d6366004614898565b6001600160a01b0316600090815261400a60205260409020805460018201546002909201549092565b610301611e52565b610301610815366004614e4a565b611f02565b6103016120a5565b610301610830366004614c1f565b6120d7565b61046b61084336600461486c565b612122565b610628610856366004614e85565b61402460209081526000928352604080842090915290825290205460ff1681565b61046b61088536600461486c565b6121cc565b61046b61089836600461499c565b6121fd565b61400e5461400f5461400c5461400d546105b2565b61046b61220a565b6103016108c8366004614bfd565b612216565b6102d76108db366004614e1e565b612275565b6103016108ee36600461499c565b612382565b6108fb612433565b6000610905612491565b9050600073f419056B545783BbFfEAB4d0aA057a52FbA4F4fd632de27df2600160066140088689896040518763ffffffff1660e01b815260040161094e96959493929190614f12565b608060405180830381865af415801561096b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098f9190615003565b90508060200151826040018181516109a7919061508c565b905250602081015160408201516109c291906000908161267b565b60408201516140185560608101516109db908390612706565b8051156109f0576109f033826000015161281a565b50506109fc6001600055565b5050565b610a08612433565b336000908152614023602090815260408083206001600160a01b038716845290915290819020905163d3f900a360e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e9163d3f900a391610a6991908790879087906004016150d1565b60006040518083038186803b158015610a8157600080fd5b505af4158015610a95573d6000803e3d6000fd5b50505050610aa36001600055565b505050565b610ab0612433565b6000610aba612491565b9050600073b127207d673977e14f31f52a14AD07e6a512c5fA632f39ec5c60016140216006614008878b8b8b610af0605d612841565b6040518a63ffffffff1660e01b8152600401610b14999897969594939291906150fc565b6101c060405180830381865af4158015610b32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b569190615166565b9050610b628183612857565b5050610aa36001600055565b600080610b79612433565b6000610b83612491565b90506000739EdcD1fEc19E5baA98fa4911C90C2162524750d263e47aaa316001614021600661400861401a8860405180606001604052808f6001600160a01b031681526020018e8152602001610bd76128f8565b8152506040518863ffffffff1660e01b8152600401610bfc979695949392919061521e565b60e060405180830381865af4158015610c19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3d9190615282565b9050610c498183612984565b80608001519350806020015160001492505050610c666001600055565b9250929050565b60008181526140216020526040812060018101548154610ca19190610c93600687612a1a565b610c9c87612a33565b612a9e565b9392505050565b6000610cb5600683612ac2565b92915050565b6000806000610cc8612433565b610cd184612ad8565b610cde6001614008612afc565b610ce9600186612ba8565b6000610cf3612491565b9050610d0a60068260400151898460a00151612c25565b610d356040518060800160405280600081526020016000815260200160008152602001600081525090565b6020810189905287815260408101879052610d51614008612c5d565b602001516001600160601b03166060820152604051633806e8ef60e01b8152600090737456CF19C121842FE2C3a888075A11d51ED63b9890633806e8ef90610da6906140219060069088908890600401615339565b608060405180830381865af4158015610dc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de79190615363565b92985090965094509050610dfb8382612706565b505050610e086001600055565b9450945094915050565b600080600080610e23614008612c5d565b905080600001518160200151610e3a614008612c70565b91966001600160601b039091169550909350915050565b604051630fc99bab60e41b815261400c600482015260009073e77bfEeB83CD09bD9b598a90f7Ce7faE02c715409063fc99bab090602401602060405180830381865af4158015610ea5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec99190615399565b905090565b6000612007826120018110610ee557610ee56153b2565b015492915050565b6000610ec96006612c81565b6000610f03612433565b600073b127207d673977e14f31f52a14AD07e6a512c5fA633c335cf361401a85610f2d603d612841565b6040518463ffffffff1660e01b8152600401610f4b939291906149b5565b6040805180830381865af4158015610f67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8b91906153c8565b9092509050610fb1333083610fa06001612c8c565b6001600160a01b0316929190612ca5565b610fbb6001612c8c565b6001600160a01b03166342966c68826040518263ffffffff1660e01b8152600401610fe891815260200190565b600060405180830381600087803b15801561100257600080fd5b505af1158015611016573d6000803e3d6000fd5b505050506110243383612d10565b5061102f6001600055565b919050565b6000610ec96015612c8c565b60405163f6eb5f8560e01b815261401754600482015261401854602482015261401954604482015261400b546001600160d01b03808216606484015260d091821c60848401526140115490811660a4840152901c60c48201526140125460e48201526140135461010482015261401454610124820152614015546101448201526140165461016482015260009081908190819073e77bfEeB83CD09bD9b598a90f7Ce7faE02c715409063f6eb5f859061018401608060405180830381865af4158015611110573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111349190615363565b935093509350935090919293565b61114a612433565b60405162b06a6b60e71b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e90635835358090611192906140219061402390614024908a908a908a908a906004016153ec565b60006040518083038186803b1580156111aa57600080fd5b505af41580156111be573d6000803e3d6000fd5b505050506111cc6001600055565b50505050565b6000610cb582612d42565b6111e5612433565b6111ef6001612d6d565b73f419056B545783BbFfEAB4d0aA057a52FbA4F4fd63f88050b7600161401a60405180608001604052806112236006612c81565b81526140195460208201526040016112396128f8565b815261400b546001600160d01b03166020909101526040516001600160e01b031960e086901b1681526112719392919060040161543a565b60006040518083038186803b15801561128957600080fd5b505af415801561129d573d6000803e3d6000fd5b505050506112ab6001600055565b565b60006112b7612433565b6112c085612d96565b6112dd57604051633cc7579b60e11b815260040160405180910390fd5b6040516369f958a560e11b815273e77bfEeB83CD09bD9b598a90f7Ce7faE02c715409063d3f2b14a9061131c908990899089908990899060040161547e565b60006040518083038186803b15801561133457600080fd5b505af4158015611348573d6000803e3d6000fd5b505050506001905061135a6001600055565b95945050505050565b600061136e82612d96565b1561102f576040516370a0823160e01b81526001600160a01b038316906370a082319061139f903090600401614a3f565b602060405180830381865afa1580156113bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb59190615399565b60006113ea612433565b60006113f4612491565b90506000611402605d612841565b905061140e8782612de0565b9650600073b127207d673977e14f31f52a14AD07e6a512c5fA630f4a0c2d60016140216006614008888f8f8a6040518963ffffffff1660e01b815260040161145d9897969594939291906154b2565b6101c060405180830381865af415801561147b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149f9190615166565b90506114b48160400151846101000151612df7565b60408201526114c38184612857565b805193506114d18785612e26565b8415611559576001600160a01b038716634bbd32d56114f0848761551e565b8561010001518460400151611505919061551e565b89896040518563ffffffff1660e01b81526004016115269493929190615532565b600060405180830381600087803b15801561154057600080fd5b505af1158015611554573d6000803e3d6000fd5b505050505b61156733826040015161281a565b50505061135a6001600055565b60008061157f612433565b61158c6001614008612afc565b6000611596612491565b90506115ab856115a6605d612841565b612de0565b9450737456CF19C121842FE2C3a888075A11d51ED63b986380f2fcd061402160066115d588612d42565b89896040518663ffffffff1660e01b81526004016115f7959493929190614ad2565b6040805180830381865af4158015611613573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163791906153c8565b6040519194509250849033907f90895bc82397742e0cea4685e72279103862a03bee6bbe1d71265c7aeb111527906116729087908790614849565b60405180910390a36116928161168d60068460600151612e48565b612706565b61169c3384612e26565b50610c666001600055565b6000610ec9603d612841565b3360009081526140246020526040908190209051634b740e8f60e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e91634b740e8f916116fe919086908690600401615552565b60006040518083038186803b15801561171657600080fd5b505af415801561172a573d6000803e3d6000fd5b505050505050565b600080600061174361400885612e5c565b805160209091015190956001600160601b03909116945092505050565b611768612433565b336000908152614023602090815260408083206001600160a01b038916845290915290819020905163e817b3fb60e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e9163e817b3fb916117cd9190899089908990899089906004016155aa565b60006040518083038186803b1580156117e557600080fd5b505af41580156117f9573d6000803e3d6000fd5b505050506118076001600055565b5050505050565b6000828152614021602090815260408083206001600160a01b0385168452600381019092528220600181015460028301549092919083111561184f57805493505b50509250929050565b60008060008060008061186c600688612edc565b60008881526140216020526040902080546001820154600283015493945091929091906118a38561189e60068e612f49565b612ff7565b929b919a5098509096509194509092505050565b6118bf612433565b336000908152614023602090815260408083206001600160a01b0389168452909152908190209051633110094360e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e916331100943916117cd9190899089908990899089906004016155aa565b600061192e612433565b6000611938612491565b905060001986146119555761195286826101000151612de0565b95505b611963856115a6605d612841565b9450600073422d470fb02206733Bb770D2A27d6d98f493af646382c9345160016006614008868d8d8d8c6040518963ffffffff1660e01b81526004016119b09897969594939291906155e8565b61014060405180830381865af41580156119ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f2919061563e565b60a0810151604080830151606086015260808084015160208088019190915284015190860152825190519195509192506001600160a01b038a16917fef9d6dc34b1e6893b8746b03ac07fd084909654a5cedab240265a8d1bd584dc291611a5d9187918b91906149b5565b60405180910390a2611a838160c001518260e0015183610100015184610120015161267b565b611a91828260000151612706565b8215611aaa57602082015161401955611aaa338461281a565b8515611ac357608082015161401755611ac38587612e26565b505061135a6001600055565b6060816001600160401b03811115611ae957611ae9614f54565b604051908082528060200260200182016040528015611b1c57816020015b6060815260200190600190039081611b075790505b50905060005b82811015611bbc57611b8c30858584818110611b4057611b406153b2565b9050602002810190611b5291906156c5565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061302b92505050565b828281518110611b9e57611b9e6153b2565b60200260200101819052508080611bb49061570b565b915050611b22565b5092915050565b6000610ec96000613050565b600080611bda612433565b611be76001614008612afc565b6000611bf1612491565b9050611c0860068260400151868460a00151612c25565b6000737456CF19C121842FE2C3a888075A11d51ED63b98635086572061402160068560405180606001604052808b8152602001611c4c8d611c47613069565b6130a7565b8152602001611c5c614008612c5d565b602001516001600160601b03168152506040518563ffffffff1660e01b8152600401611c8b9493929190615724565b606060405180830381865af4158015611ca8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ccc9190615767565b91955093509050611cdd8282612706565b611ce73385612d10565b5050610c666001600055565b6000610ec96029612c8c565b6000611d09612433565b611d1282612ad8565b6000611d1c612491565b90508415801590611d345750611d3184612d42565b85105b15611d52576040516345b3f65d60e01b815260040160405180910390fd5b611d60856115a6605d612841565b604051631752f09d60e31b8152909550737456CF19C121842FE2C3a888075A11d51ED63b989063ba9784e890611da390614021906006908a908a90600401614a53565b602060405180830381865af4158015611dc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de49190615399565b915083336001600160a01b03167fa9387d09ded47dbc173eb751964c0c7b7e0a1165939b958fafc8109337597f948785604051611e22929190614849565b60405180910390a3611e3d8161168d60068460600151612e48565b611e4733866130be565b50610ca16001600055565b611e5a612433565b6000611e64612491565b9050600073422d470fb02206733Bb770D2A27d6d98f493af64634700688d60016006614008866040518563ffffffff1660e01b8152600401611ea99493929190615795565b602060405180830381865af4158015611ec6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eea9190615399565b9050611ef68282612706565b50506112ab6001600055565b611f0a612433565b6000611f14612491565b9050611f2584826101000151612de0565b9350611f35826115a6605d612841565b9150600073422d470fb02206733Bb770D2A27d6d98f493af6463ea067a576001600661400886611f63613069565b8c8c8c8c6040518a63ffffffff1660e01b8152600401611f8b999897969594939291906157b8565b61012060405180830381865af4158015611fa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fcd9190615814565b9050856001600160a01b03167f49a2aab2f4f7ca5c6ba6d413b46a0a09d91d10188fd94b8e23c3225362d12b5086858460000151604051612010939291906149b5565b60405180910390a2604081015160608301526080808201516020808501919091528201519083015260a081015160c082015160e08301516101008401516120599392919061267b565b612067828260000151612706565b82156120805760808201516140175561208033846130be565b8415612099576020820151614019556120993386612d10565b50506111cc6001600055565b6120ad612433565b60006120b7612491565b90506120cc8161168d60068460600151612e48565b506112ab6001600055565b336000908152614024602052604090819020905163296bff2560e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e9163296bff25916116fe919086908690600401615552565b600061212c612433565b6040516347a7428b60e11b8152600160048201526001600160a01b03841660248201526044810183905273f419056B545783BbFfEAB4d0aA057a52FbA4F4fd90638f4e851690606401602060405180830381865af4158015612192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b69190615399565b90506121c28382612d10565b610cb56001600055565b60006121d783612d96565b6121f457604051633cc7579b60e11b815260040160405180910390fd5b50600092915050565b6000610cb56006836130e0565b6000610ec9605d612841565b61221e612433565b6000612228612491565b9050600073f419056B545783BbFfEAB4d0aA057a52FbA4F4fd63062f2dea60016006614021614008878a8a6040518863ffffffff1660e01b815260040161094e979695949392919061588f565b600080612280612433565b61228983612ad8565b6122966001614008612afc565b6122a1600185612ba8565b60006122ab612491565b90506122bc86826101000151612de0565b604080518082018252828152602081018890529051632f9fa10360e01b8152919750600091737456CF19C121842FE2C3a888075A11d51ED63b9891632f9fa10391612312916140219160069188916004016158d1565b606060405180830381865af415801561232f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123539190615767565b919550935090506123648282612706565b61236e338861281a565b505061237a6001600055565b935093915050565b6140225460ff16156123a65760405162dc149f60e41b815260040160405180910390fd5b65ffffffffffff4216600160d01b02670de0b6b3a7640000811761400b556001600160d01b0382161761401155612422614008604080518082019091526000808252602080830182815284546001810186559483529120915190516001600160601b0316600160a01b026001600160a01b039190911617910155565b50614022805460ff19166001179055565b60026000540361248a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055565b6124e5604051806101200160405280600060ff168152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b61401954602082015261401854604082015261401754608082015261400b546001600160d01b0390811660a0830152614011541660e08201526125286000613050565b60ff168152612537603d612841565b6101008201526020810151156126785761255981602001518260a00151612ff7565b606082015261400b5460009061257e90600160d01b900465ffffffffffff1642615909565b8015801560c08501529091506126765773e77bfEeB83CD09bD9b598a90f7Ce7faE02c71540639b5bef8661400c6006856125b9614008612c5d565b60200151866040518663ffffffff1660e01b81526004016125de95949392919061591c565b6040805180830381865af4925050508015612616575060408051601f3d908101601f19168201909252612613918101906153c8565b60015b61263d57600060c08301819052604051600080516020615bb18339815191529190a1612676565b60a0840182905260208401516126539083612ff7565b606085015261401f805482919060009061266e90849061508c565b909155505050505b505b90565b60008260000361268c5760006126a2565b82612698600287615a3a565b6126a2919061551e565b90506000826000036126b55760006126cb565b826126c1600287615a3a565b6126cb919061551e565b9050811515806126da57508015155b1561172a57614014546126ed828261508c565b90506126f98382615909565b6140145550505050505050565b604051635676e1ff60e01b815273e77bfEeB83CD09bD9b598a90f7Ce7faE02c7154090635676e1ff9061274a906140119061400c9060069088908890600401615a49565b60006040518083038186803b15801561276257600080fd5b505af4925050508015612773575060015b61278f57604051600080516020615bb183398151915290600090a15b6040805180820190915261400b546001600160d01b0381168252600160d01b900465ffffffffffff16602082015260009081906127cd9085906131eb565b61400b80546001600160d01b0319166001600160d01b038416179055909250905080156111cc57505061400b80546001600160d01b0316600160d01b4265ffffffffffff16021790555050565b600061282f8261282a603d612841565b61326b565b9050610aa3833083610fa06029612c8c565b60008061284c613284565b929092013592915050565b60a0820151606082015260c08201516020820152610100820151604082018051612882908390615909565b90525060208201518251612896919061508c565b816080018181516128a79190615909565b905250610120820151156128cd576128cd60008361016001516000856101a0015161267b565b60208101516140195560408101516140185560808101516140175560e08201516109fc908290612706565b6000612904603d612841565b61290e6029612c8c565b6001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016129399190614a3f565b602060405180830381865afa158015612956573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061297a9190615399565b610ec99190615a7d565b8160c001518160600181815161299a9190615909565b90525060a08201516020820180516129b3908390615909565b90525060a08201516040820180516129cc908390615909565b90525060808083015190820180516129e5908390615909565b90525060208101516140195560408101516140185560808101516140175560608101516109fc90829061168d90600690612e48565b6000610ca1612a298484612f49565b61189e8585612edc565b600080612a428361103c615a94565b9050610c9f19811280612a56575061103c81135b15612a7457604051637edf443b60e11b815260040160405180910390fd5b610ca1612a99612a8383613295565b612a94670df27a2cdf448000613320565b613404565b6134c9565b6000612ab7858585670de0b6b3a7640000866001613560565b90505b949350505050565b6000612ace83836135d8565b5090949350505050565b80421115612af9576040516338e5e54b60e21b815260040160405180910390fd5b50565b8154600160601b90046001600160a01b031660008181526003840160205260409020600101546001600160601b031680156111cc576203f480612b3f8242615909565b1115612b5e576040516335bdb41f60e01b815260040160405180910390fd5b6001600160a01b03821660009081526002840160205260409020805415801590612b8a57506001810154155b15611807576040516335bdb41f60e01b815260040160405180910390fd5b8154600160601b90046001600160a01b03168015610aa3576001600160a01b038116600090815260038401602052604081206002810154600190910154612bfb916001600160601b0390811691166136c8565b905080612c0784612a33565b106111cc576040516322c7e87760e11b815260040160405180910390fd5b82156111cc57612c3e84612c398584612ff7565b612ac2565b82116111cc5760405163dd47b04360e01b815260040160405180910390fd5b612c65614832565b610cb5826001612e5c565b8054600090610cb590600190615909565b600081612000610ee5565b600080612c97613284565b929092013560601c92915050565b6040516001600160a01b03808516602483015283166044820152606481018290526111cc9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526137e7565b6109fc82612d1e603d612841565b612d28908461551e565b612d326029612c8c565b6001600160a01b031691906138b9565b600080612d4e836138d8565b9050610ca1612d5d605d612841565b612d6883600a615ab4565b613936565b80546001600160601b031615612af9576040516359bfb80360e11b815260040160405180910390fd5b6000612da26029612c8c565b6001600160a01b0316826001600160a01b03161480610cb55750612dc66015612c8c565b6001600160a01b0316826001600160a01b03161492915050565b600081612ded818561551e565b610ca19190615a7d565b6000612e038284615ac0565b600003612e11575081610cb5565b81612e1c8484612de0565b610ca1919061508c565b6109fc82612e34605d612841565b612e3e908461551e565b612d326015612c8c565b6000610ca1612e578484612ac2565b612a33565b612e64614832565b82548210612e85576040805180820190915260008082526020820152610ca1565b826000018281548110612e9a57612e9a6153b2565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091529392505050565b6000612ee78261570b565b9150670de0b6b3a764000090505b6120008211610cb55760008361200101836120018110612f1757612f176153b2565b015490508015612f2e57612f2b8282612ff7565b91505b612f3783613946565b612f41908461508c565b925050612ef5565b6000612f548261570b565b9150600183836120018110612f6b57612f6b6153b2565b0154915060008060005b858416600003612fed57612f898487615909565b925086836120018110612f9e57612f9e6153b2565b015491508661200101836120018110612fb957612fb96153b2565b0154905080600003612fcb5781612fd5565b612fd58183612ff7565b612fdf9086615909565b9450600184901b9350612f75565b5050505092915050565b6000670de0b6b3a764000061300d60028261551e565b6130178486615a7d565b613021919061508c565b610ca1919061551e565b6060610ca18383604051806060016040528060278152602001615bd160279139613965565b60008061305b613284565b929092013560f81c92915050565b6000806130746128f8565b61401c5460035491925060009161308b919061508c565b9050808211156130a25761309f8183615909565b92505b505090565b6000818311156130b75781610ca1565b5090919050565b60006130ce8261282a605d612841565b9050610aa3833083610fa06015612c8c565b60006130eb8261570b565b9150670de0b6b3a764000061200060008061310586613946565b905060005b8184106131e05761311b848461508c565b9050612000811161310a576000886120010182612001811061313f5761313f6153b2565b01549050878516156131c057600089836120018110613160576131606153b2565b015490508160000361317b576131768782612ff7565b61319d565b61319d6131888389615a7d565b826a0c097ce7bc90715b34b9f160241b6139d3565b6131a7908961508c565b97508294508885036131ba5750506131e0565b506131d3565b80156131d3576131d08682613a82565b95505b600185901c94505061310a565b505050505092915050565b805160c083015160009015613212576132078460a00151613a97565b915060019050610c66565b836060015160000361322f57613207670de0b6b3a7640000613a97565b82516001600160d01b0316670de0b6b3a764000014801561325c575042836020015165ffffffffffff1614155b15610c66575060019250929050565b600081600161327a828661508c565b6130219190615909565b600119368181013560f01c90030190565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156132d55760405163e608e18b60e01b815260048101839052602401612481565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315613312576040516371f72a3160e01b815260048101839052602401612481565b50670de0b6b3a76400000290565b60008082136133455760405163309fa7dd60e11b815260048101839052602401612481565b6000670de0b6b3a7640000831261335e57506001613377565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b600061338c670de0b6b3a76400008505613b00565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff1981016133b657505002919050565b6706f05b59d3b200005b60008113156133fb57670de0b6b3a7640000828002059150671bc16d674ec8000082126133f3579384019360019190911d905b60011d6133c0565b50505002919050565b6000600160ff1b83148061341b5750600160ff1b82145b1561343957604051630d01a11b60e21b815260040160405180910390fd5b6000806000851261344a578461344f565b846000035b91506000841261345f5783613464565b836000035b905060006134728383613bde565b90506001600160ff1b0381111561349f5760405163bf79e8d960e01b815260048101829052602401612481565b6000198087139086138082186001146134b857826134bd565b826000035b98975050505050505050565b60008082121561351c5768033dd1780914b97114198212156134ed57506000919050565b6134f9826000036134c9565b6a0c097ce7bc90715b34b9f160241b8161351557613515615508565b0592915050565b680a688906bd8b00000082126135485760405163e69458f960e01b815260048101839052602401612481565b670de0b6b3a7640000604083901b04610ca181613ca4565b60008415801561356e575086155b1561357a5750826135ce565b856000036135895750826135ce565b6135cb6135968489615a7d565b6135a8670de0b6b3a764000088615a7d565b6135b2919061508c565b856135c5670de0b6b3a76400008a615a7d565b85614336565b90505b9695505050505050565b60008080611000670de0b6b3a764000082808080805b86156136ba576135fe878b61508c565b93508b846120018110613613576136136153b2565b015492508b6120010184612001811061362e5761362e6153b2565b0154915081600003613649576136448684612ff7565b61366b565b61366b6136568388615a7d565b846a0c097ce7bc90715b34b9f160241b6139d3565b613675908661508c565b90508a81101561369457611cdc841161368f578399508094505b6136ae565b81156136a7576136a48683613a82565b95505b8098508597505b600187901c96506135ee565b505050505050509250925092565b6000806136f96136d88442615909565b6136ea90670de0b6b3a7640000615a7d565b680340aad21b3b700000614387565b9050600068068155a43676e0000082101561374857613726670de0b6b3a763ffff19612a9460148561551e565b90506137358561189e836134c9565b61374190610100615a7d565b92506137df565b682d89577d7d4020000082101561379f57613785670de0b6b3a763ffff19607861377b68068155a43676e0000086615909565b612a94919061551e565b90506137948561189e836134c9565b613741906004615a7d565b6137c1670de0b6b3a763ffff19603c61377b682d89577d7d4020000086615909565b905060106137d28661189e846134c9565b6137dc919061551e565b92505b505092915050565b600061383c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166143a79092919063ffffffff16565b805190915015610aa3578080602001905181019061385a9190615ad4565b610aa35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401612481565b610aa38363a9059cbb60e01b8484604051602401612cd9929190614c60565b6000610f3c82111561102f5760006138f2610f3c84615909565b9050600061392261391d61390e84670de0b6b3a7640000615af1565b6801f399b1438a1000006143b6565b61447c565b9050612aba670de0b6b3a764000082615b21565b6000818310156130b75781610ca1565b6000811561102f5761395d6000198318600161508c565b909116919050565b6060600080856001600160a01b0316856040516139829190615b4f565b600060405180830381855af49150503d80600081146139bd576040519150601f19603f3d011682016040523d82523d6000602084013e6139c2565b606091505b50915091506135ce868383876144f2565b6000808060001985870985870292508281108382030391505080600003613a0d57838281613a0357613a03615508565b0492505050610ca1565b808411613a1957600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000670de0b6b3a76400006130218385615a7d565b60006001600160d01b038211156126765760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663038206269747360c81b6064820152608401612481565b6000600160801b8210613b2057608091821c91613b1d908261508c565b90505b600160401b8210613b3e57604091821c91613b3b908261508c565b90505b600160201b8210613b5c57602091821c91613b59908261508c565b90505b620100008210613b7957601091821c91613b76908261508c565b90505b6101008210613b9557600891821c91613b92908261508c565b90505b60108210613bb057600491821c91613bad908261508c565b90505b60048210613bcb57600291821c91613bc8908261508c565b90505b6002821061102f57610cb560018261508c565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110613c225760405163698d9a0160e11b815260048101829052602401612481565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff8211905082600003613c605780670de0b6b3a7640000850401945050505050610cb5565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615613cc45768016a09e667f3bcc9090260401c5b6001603e1b821615613cdf576801306fe0a31b7152df0260401c5b6001603d1b821615613cfa576801172b83c7d517adce0260401c5b6001603c1b821615613d155768010b5586cf9890f62a0260401c5b6001603b1b821615613d30576801059b0d31585743ae0260401c5b6001603a1b821615613d4b57680102c9a3e778060ee70260401c5b600160391b821615613d665768010163da9fb33356d80260401c5b600160381b821615613d8157680100b1afa5abcbed610260401c5b600160371b821615613d9c5768010058c86da1c09ea20260401c5b600160361b821615613db7576801002c605e2e8cec500260401c5b600160351b821615613dd257680100162f3904051fa10260401c5b600160341b821615613ded576801000b175effdc76ba0260401c5b600160331b821615613e0857680100058ba01fb9f96d0260401c5b600160321b821615613e235768010002c5cc37da94920260401c5b600160311b821615613e3e576801000162e525ee05470260401c5b600160301b821615613e595768010000b17255775c040260401c5b6001602f1b821615613e74576801000058b91b5bc9ae0260401c5b6001602e1b821615613e8f57680100002c5c89d5ec6d0260401c5b6001602d1b821615613eaa5768010000162e43f4f8310260401c5b6001602c1b821615613ec557680100000b1721bcfc9a0260401c5b6001602b1b821615613ee05768010000058b90cf1e6e0260401c5b6001602a1b821615613efb576801000002c5c863b73f0260401c5b600160291b821615613f1657680100000162e430e5a20260401c5b600160281b821615613f31576801000000b1721835510260401c5b600160271b821615613f4c57680100000058b90c0b490260401c5b600160261b821615613f675768010000002c5c8601cc0260401c5b600160251b821615613f82576801000000162e42fff00260401c5b600160241b821615613f9d5768010000000b17217fbb0260401c5b600160231b821615613fb8576801000000058b90bfce0260401c5b600160221b821615613fd357680100000002c5c85fe30260401c5b600160211b821615613fee5768010000000162e42ff10260401c5b600160201b82161561400957680100000000b17217f80260401c5b63800000008216156140245768010000000058b90bfc0260401c5b634000000082161561403f576801000000002c5c85fe0260401c5b632000000082161561405a57680100000000162e42ff0260401c5b6310000000821615614075576801000000000b17217f0260401c5b630800000082161561409057680100000000058b90c00260401c5b63040000008216156140ab5768010000000002c5c8600260401c5b63020000008216156140c6576801000000000162e4300260401c5b63010000008216156140e15768010000000000b172180260401c5b628000008216156140fb576801000000000058b90c0260401c5b6240000082161561411557680100000000002c5c860260401c5b6220000082161561412f5768010000000000162e430260401c5b6210000082161561414957680100000000000b17210260401c5b620800008216156141635768010000000000058b910260401c5b6204000082161561417d576801000000000002c5c80260401c5b6202000082161561419757680100000000000162e40260401c5b620100008216156141b05761b172600160401b010260401c5b6180008216156141c8576158b9600160401b010260401c5b6140008216156141e057612c5d600160401b010260401c5b6120008216156141f85761162e600160401b010260401c5b61100082161561421057610b17600160401b010260401c5b6108008216156142285761058c600160401b010260401c5b610400821615614240576102c6600160401b010260401c5b61020082161561425857610163600160401b010260401c5b61010082161561426f5760b1600160401b010260401c5b6080821615614285576059600160401b010260401c5b604082161561429b57602c600160401b010260401c5b60208216156142b1576016600160401b010260401c5b60108216156142c757600b600160401b010260401c5b60088216156142dd576006600160401b010260401c5b60048216156142f3576003600160401b010260401c5b6002821615614309576001600160401b010260401c5b600182161561431f576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6000806143448686866139d3565b9050600183600281111561435a5761435a615b6b565b14801561437757506000848061437257614372615508565b868809115b15612ab7576135ce60018261508c565b60008161439560028261551e565b613017670de0b6b3a764000086615a7d565b6060612aba848460008561456b565b6000600160ff1b8314806143cd5750600160ff1b82145b156143eb5760405163b3c754a360e01b815260040160405180910390fd5b600080600085126143fc5784614401565b846000035b9150600084126144115783614416565b836000035b9050600061442d83670de0b6b3a764000084614646565b90506001600160ff1b0381111561445a57604051637cb4bef560e01b815260048101829052602401612481565b60001980871390861380821860011461447357826134bd565b6134bd83615b81565b6000808212156144a25760405163608c83ff60e11b815260048101839052602401612481565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f908213156144df57604051632c482c3960e01b815260048101839052602401612481565b610cb5670de0b6b3a7640000830261469a565b6060831561456157825160000361455a576001600160a01b0385163b61455a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401612481565b5081612aba565b612aba8383614808565b6060824710156145cc5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401612481565b600080866001600160a01b031685876040516145e89190615b4f565b60006040518083038185875af1925050503d8060008114614625576040519150601f19603f3d011682016040523d82523d6000602084013e61462a565b606091505b509150915061463b878383876144f2565b979650505050505050565b600080806000198587098587029250828110838203039150508060000361467657838281613a0357613a03615508565b838110613a19578084604051631dcf306360e21b8152600401612481929190614849565b6000816000036146ac57506000919050565b50600181600160801b81106146c65760409190911b9060801c5b600160401b81106146dc5760209190911b9060401c5b600160201b81106146f25760109190911b9060201c5b6201000081106147075760089190911b9060101c5b610100811061471b5760049190911b9060081c5b6010811061472e5760029190911b9060041c5b6008811061473e57600182901b91505b600182848161474f5761474f615508565b048301901c9150600182848161476757614767615508565b048301901c9150600182848161477f5761477f615508565b048301901c9150600182848161479757614797615508565b048301901c915060018284816147af576147af615508565b048301901c915060018284816147c7576147c7615508565b048301901c915060018284816147df576147df615508565b048301901c915060008284816147f7576147f7615508565b04905080831015610ca15782612aba565b8151156148185781518083602001fd5b8060405162461bcd60e51b81526004016124819190615b9d565b604080518082019091526000808252602082015290565b918252602082015260400190565b6001600160a01b0381168114612af957600080fd5b6000806040838503121561487f57600080fd5b823561488a81614857565b946020939093013593505050565b6000602082840312156148aa57600080fd5b8135610ca181614857565b60008083601f8401126148c757600080fd5b5081356001600160401b038111156148de57600080fd5b6020830191508360208260051b8501011115610c6657600080fd5b60008060006040848603121561490e57600080fd5b833561491981614857565b925060208401356001600160401b0381111561493457600080fd5b614940868287016148b5565b9497909650939450505050565b8015158114612af957600080fd5b60008060006060848603121561497057600080fd5b833561497b81614857565b9250602084013561498b8161494d565b929592945050506040919091013590565b6000602082840312156149ae57600080fd5b5035919050565b9283526020830191909152604082015260600190565b600080600080608085870312156149e157600080fd5b5050823594602084013594506040840135936060013592509050565b600080600060608486031215614a1257600080fd5b833592506020840135614a2481614857565b91506040840135614a3481614857565b809150509250925092565b6001600160a01b0391909116815260200190565b93845260208401929092526040830152606082015260800190565b60008060008060608587031215614a8457600080fd5b8435614a8f81614857565b93506020850135614a9f81614857565b925060408501356001600160401b03811115614aba57600080fd5b614ac6878288016148b5565b95989497509550505050565b948552602085019390935260408401919091526060830152608082015260a00190565b60008083601f840112614b0757600080fd5b5081356001600160401b03811115614b1e57600080fd5b602083019150836020828501011115610c6657600080fd5b600080600080600060808688031215614b4e57600080fd5b8535614b5981614857565b94506020860135614b6981614857565b93506040860135925060608601356001600160401b03811115614b8b57600080fd5b614b9788828901614af5565b969995985093965092949392505050565b600080600080600060808688031215614bc057600080fd5b8535614bcb81614857565b9450602086013593506040860135614be281614857565b925060608601356001600160401b03811115614b8b57600080fd5b60008060408385031215614c1057600080fd5b50508035926020909101359150565b60008060208385031215614c3257600080fd5b82356001600160401b03811115614c4857600080fd5b614c54858286016148b5565b90969095509350505050565b6001600160a01b03929092168252602082015260400190565b600080600080600060608688031215614c9157600080fd5b8535614c9c81614857565b945060208601356001600160401b0380821115614cb857600080fd5b614cc489838a016148b5565b90965094506040880135915080821115614cdd57600080fd5b50614b97888289016148b5565b60008060408385031215614cfd57600080fd5b823591506020830135614d0f81614857565b809150509250929050565b600080600080600060a08688031215614d3257600080fd5b8535614d3d81614857565b945060208601359350604086013592506060860135614d5b81614857565b949793965091946080013592915050565b60005b83811015614d87578181015183820152602001614d6f565b50506000910152565b60008151808452614da8816020860160208601614d6c565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614e1157603f19888603018452614dff858351614d90565b94509285019290850190600101614de3565b5092979650505050505050565b600080600060608486031215614e3357600080fd5b505081359360208301359350604090920135919050565b60008060008060808587031215614e6057600080fd5b8435614e6b81614857565b966020860135965060408601359560600135945092505050565b60008060408385031215614e9857600080fd5b8235614ea381614857565b91506020830135614d0f81614857565b60ff81511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c0810151151560c083015260e081015160e08301526101008082015181840152505050565b86815260208101869052604081018590526101c08101614f356060830186614eb3565b6001600160a01b03939093166101808201526101a00152949350505050565b634e487b7160e01b600052604160045260246000fd5b6040516101c081016001600160401b0381118282101715614f9b57634e487b7160e01b600052604160045260246000fd5b60405290565b60405161014081016001600160401b0381118282101715614f9b57634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715614f9b57634e487b7160e01b600052604160045260246000fd5b60006080828403121561501557600080fd5b604051608081016001600160401b038111828210171561504557634e487b7160e01b600052604160045260246000fd5b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610cb557610cb5615076565b81835260006001600160fb1b038311156150b857600080fd5b8260051b80836020870137939093016020019392505050565b8481526001600160a01b03841660208201526060604082018190526000906135ce908301848661509f565b6000610220820190508a82528960208301528860408301528760608301526151276080830188614eb3565b6001600160a01b03959095166101a08201529215156101c08401526101e08301919091526102009091015295945050505050565b805161102f8161494d565b60006101c0828403121561517957600080fd5b615181614f6a565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101206151e581850161515b565b908201526101408381015190820152610160808401519082015261018080840151908201526101a0928301519281019290925250919050565b60006102208201905088825287602083015286604083015285606083015284608083015261524f60a0830185614eb3565b82516001600160a01b03166101c083015260208301516101e0830152604090920151610200909101529695505050505050565b600060e0828403121561529457600080fd5b60405160e081016001600160401b03811182821017156152c457634e487b7160e01b600052604160045260246000fd5b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b805182526020810151602083015260408101516040830152606081015160608301525050565b848152602081018490526101e081016153556040830185614eb3565b61135a610160830184615313565b6000806000806080858703121561537957600080fd5b505082516020840151604085015160609095015191969095509092509050565b6000602082840312156153ab57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600080604083850312156153db57600080fd5b505080516020909101519092909150565b87815260208101879052604081018690526001600160a01b0385811660608301528416608082015260c060a0820181905260009061542d908301848661509f565b9998505050505050505050565b8381526020810183905260c08101612aba6040830184615313565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b03868116825285166020820152604081018490526080606082018190526000906135cb9083018486615455565b6000610200820190508982528860208301528760408301528660608301526154dd6080830187614eb3565b6001600160a01b03949094166101a08201526101c08101929092526101e09091015295945050505050565b634e487b7160e01b600052601260045260246000fd5b60008261552d5761552d615508565b500490565b8481528360208201526060604082015260006135ce606083018486615455565b83815260406020808301829052908201839052600090849060608401835b8681101561559e57833561558381614857565b6001600160a01b031682529282019290820190600101615570565b50979650505050505050565b8681526001600160a01b03861660208201526080604082018190526000906155d5908301868861509f565b828103606084015261542d81858761509f565b8881526020810188905260408101879052610200810161560b6060830188614eb3565b6001600160a01b03959095166101808201526101a08101939093526101c08301919091526101e090910152949350505050565b6000610140828403121561565157600080fd5b615659614fa1565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152508091505092915050565b6000808335601e198436030181126156dc57600080fd5b8301803591506001600160401b038211156156f657600080fd5b602001915036819003821315610c6657600080fd5b60006001820161571d5761571d615076565b5060010190565b848152602081018490526101c081016157406040830185614eb3565b8251610160830152602083015161018083015260408301516101a083015295945050505050565b60008060006060848603121561577c57600080fd5b8351925060208401519150604084015190509250925092565b8481526020810184905260408101839052610180810161135a6060830184614eb3565b898152602081018990526040810188905261022081016157db6060830189614eb3565b6101808201969096526001600160a01b03949094166101a08501526101c08401929092526101e083015261020090910152949350505050565b6000610120828403121561582757600080fd5b61582f614fd2565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152508091505092915050565b60006101e0820190508882528760208301528660408301528560608301526158ba6080830186614eb3565b6101a08201939093526101c0015295945050505050565b848152602081018490526101a081016158ed6040830185614eb3565b8251610160830152602083015161018083015295945050505050565b81810381811115610cb557610cb5615076565b858152602081018590526101a081016159386040830186614eb3565b6001600160601b039390931661016082015261018001529392505050565b600181815b8085111561599157816000190482111561597757615977615076565b8085161561598457918102915b93841c939080029061595b565b509250929050565b6000826159a857506001610cb5565b816159b557506000610cb5565b81600181146159cb57600281146159d5576159f1565b6001915050610cb5565b60ff8411156159e6576159e6615076565b50506001821b610cb5565b5060208310610133831016604e8410600b8410161715615a14575081810a610cb5565b615a1e8383615956565b8060001904821115615a3257615a32615076565b029392505050565b6000610ca160ff841683615999565b85815260208101859052604081018490526101a08101615a6c6060830185614eb3565b826101808301529695505050505050565b8082028115828204841417610cb557610cb5615076565b8181036000831280158383131683831282161715611bbc57611bbc615076565b6000610ca18383615999565b600082615acf57615acf615508565b500690565b600060208284031215615ae657600080fd5b8151610ca18161494d565b80820260008212600160ff1b84141615615b0d57615b0d615076565b8181058314821517610cb557610cb5615076565b600082615b3057615b30615508565b600160ff1b821460001984141615615b4a57615b4a615076565b500590565b60008251615b61818460208701614d6c565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b6000600160ff1b8201615b9657615b96615076565b5060000390565b602081526000610ca16020830184614d9056fe84da056cd0ff5380ec35a74f131057a96626a24305fa137c235bdbe1b414a396416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122020fcca66fe829c6344c335dbcbe77ca99f0a28fd638c8a8da5a6986449bb08c064736f6c63430008120033","args":["0x6c518f9D1a163379235816c543E62922a79863Fa"],"salt":"AJNA","value":[]}
2024-01-08T15:29:21.781Z cannon:builder comparing states null a0e2efed80da4baf6a453e19fad68e01
2024-01-08T15:29:21.781Z cannon:builder run isolated contract.ERC20PoolFactory
Executing [contract.ERC20PoolFactory]...
2024-01-08T15:29:21.783Z cannon:verbose:builder ctx for step contract.ERC20PoolFactory {
  package: {},
  timestamp: '1704727545',
  chainId: 10,
  settings: {
    bwAJNA_ADDRESS: '0x6c518f9D1a163379235816c543E62922a79863Fa',
    salt: 'AJNA'
  },
  contracts: {
    BorrowerActions: {
      address: '0x422d470fb02206733Bb770D2A27d6d98f493af64',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0xd69579d47bd5c8723115bec074929864a19201645004e7bdbb5c2cb41f904e2f',
      sourceName: 'src/libraries/external/BorrowerActions.sol',
      contractName: 'BorrowerActions',
      deployedOn: 'contract.BorrowerActions',
      highlight: undefined,
      gasUsed: 2100149,
      gasCost: '4275955'
    },
    LenderActions: {
      address: '0x7456CF19C121842FE2C3a888075A11d51ED63b98',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0x9b4f17ee54f9802c9ac92cd6b4eebc449e22b215183590328583b9b596dba208',
      sourceName: 'src/libraries/external/LenderActions.sol',
      contractName: 'LenderActions',
      deployedOn: 'contract.LenderActions',
      highlight: undefined,
      gasUsed: 2329033,
      gasCost: '3001992'
    },
    LPActions: {
      address: '0xb257A98a3549a0B36b9001d0eDc9e75d313d5c8e',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0xf87dedfa9197400f141a7dde71e6096290cc2f6eb4179e437cbd9466988d753d',
      sourceName: 'src/libraries/external/LPActions.sol',
      contractName: 'LPActions',
      deployedOn: 'contract.LPActions',
      highlight: undefined,
      gasUsed: 692518,
      gasCost: '3408368'
    },
    KickerActions: {
      address: '0xf419056B545783BbFfEAB4d0aA057a52FbA4F4fd',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0x6b94aa77f3d25a3b8a8735230426dba65b7160855256b3dfc5f5213a67fc0a68',
      sourceName: 'src/libraries/external/KickerActions.sol',
      contractName: 'KickerActions',
      deployedOn: 'contract.KickerActions',
      highlight: undefined,
      gasUsed: 2173039,
      gasCost: '3816296'
    },
    SettlerActions: {
      address: '0x9EdcD1fEc19E5baA98fa4911C90C2162524750d2',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0x8a41a4cbe5b9c04e6a1475576916c4d7fa7fdcc91df45bc60e0aa8aa33a5074f',
      sourceName: 'src/libraries/external/SettlerActions.sol',
      contractName: 'SettlerActions',
      deployedOn: 'contract.SettlerActions',
      highlight: undefined,
      gasUsed: 2135769,
      gasCost: '2172078'
    },
    TakerActions: {
      address: '0xb127207d673977e14f31f52a14AD07e6a512c5fA',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0x24588ac27cea4c4b9080124841c3d378ff5954332948fd042694e445e525ab41',
      sourceName: 'src/libraries/external/TakerActions.sol',
      contractName: 'TakerActions',
      deployedOn: 'contract.TakerActions',
      highlight: undefined,
      gasUsed: 3558325,
      gasCost: '1939228'
    },
    PoolCommons: {
      address: '0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0x9ee2e160d6eff90f8f284668026974bc66484709a99d7fce7cd7e3f527bdbfb1',
      sourceName: 'src/libraries/external/PoolCommons.sol',
      contractName: 'PoolCommons',
      deployedOn: 'contract.PoolCommons',
      highlight: undefined,
      gasUsed: 2546476,
      gasCost: '2685008'
    }
  },
  txns: {},
  imports: {},
  extras: {}
}
2024-01-08T15:29:21.783Z cannon:builder:contract exec {
  artifact: 'ERC20PoolFactory',
  args: [ '0x6c518f9D1a163379235816c543E62922a79863Fa' ],
  libraries: {
    BorrowerActions: '0x422d470fb02206733Bb770D2A27d6d98f493af64',
    LenderActions: '0x7456CF19C121842FE2C3a888075A11d51ED63b98',
    LPActions: '0xb257A98a3549a0B36b9001d0eDc9e75d313d5c8e',
    KickerActions: '0xf419056B545783BbFfEAB4d0aA057a52FbA4F4fd',
    SettlerActions: '0x9EdcD1fEc19E5baA98fa4911C90C2162524750d2',
    TakerActions: '0xb127207d673977e14f31f52a14AD07e6a512c5fA',
    PoolCommons: '0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540'
  },
  salt: 'AJNA',
  create2: true,
  from: '',
  nonce: '',
  value: '',
  abi: ''
}
2024-01-08T15:29:21.785Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:21.786Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:21.791Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:21.792Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:21.798Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:21.799Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:21.801Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:21.802Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:21.806Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:21.808Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:21.813Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:21.814Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:21.821Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:21.822Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:21.826Z cannon:builder:runtime resolve artifact ERC20PoolFactory
2024-01-08T15:29:21.826Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:29:29.627Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/ERC20PoolFactory.sol': 'ERC20PoolFactory' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/clones-with-immutable-args/src/Clone.sol': {
      keccak256: '0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545',
      urls: [Array],
      license: 'BSD'
    },
    'lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol': {
      keccak256: '0xcb7cbb68b8a90e6eff9c7a29f5b7d5964e0cedc0ad8133f5bcb3ec3a9aeb391c',
      urls: [Array],
      license: 'BSD'
    },
    'lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol': {
      keccak256: '0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol': {
      keccak256: '0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol': {
      keccak256: '0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol': {
      keccak256: '0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Address.sol': {
      keccak256: '0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Multicall.sol': {
      keccak256: '0x35e30a35e23f856cbcee3558b7efdd83f6017a8f1b419710645143d98e892463',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathUD60x18.sol': {
      keccak256: '0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/ERC20Pool.sol': {
      keccak256: '0xe372d950d3ace12bae8ee8a495a6f44c6521778ff56e9b25f3ccdbf266aea0d6',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/ERC20PoolFactory.sol': {
      keccak256: '0xdd7c1e42906f6a7693bf72014b39f36c692e0f4a17e7593d7f887ec84b697c85',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/FlashloanablePool.sol': {
      keccak256: '0x1f3767f4d27c13ef2c53bcf49c1d5917c77b2d3fb7a28576f0c2a131a8377f6f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/Pool.sol': {
      keccak256: '0x87159e77eeee256f1501035738bb015a1d4d360fab31ea077f4ddcaff4e54d22',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/PoolDeployer.sol': {
      keccak256: '0x81b87acb71ecdbb00a37f4b0b23d21554692bde445fbc19871353bcce128d53e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPoolFactory.sol': {
      keccak256: '0x53d72e58a4b0d6a5e8aeb23a2f40262636c823170037179220ec29ca403dae76',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20Pool.sol': {
      keccak256: '0xac0fc147804f48919ee17416dd6659eb77aed7d5c1b192f2e9f86862363346d4',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolBorrowerActions.sol': {
      keccak256: '0xe7bcfa2227cdb6249ad214d83a82935f0eb048472c277a599ba67c31f3d191b2',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolEvents.sol': {
      keccak256: '0xeccea62ed02e93376371d0ad723f0f94d390363fc836720170f018a5e928046c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolFactory.sol': {
      keccak256: '0x010cb58b359152dea4534951089b55dad96f8e9bf4b2815ff33b73a38e62d5ef',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolImmutables.sol': {
      keccak256: '0x54c17faa7d4eccf84d8923d9531725e266d27b8a5ef2cbc59475749ad44a5834',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolLenderActions.sol': {
      keccak256: '0xdf8d1b579da0ae2d47c938f5e262658ceb7d807d2e245b9a6e4a3f6febe9a0cc',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20Taker.sol': {
      keccak256: '0x3ddd154139854a83d3f46adb95dea763569f55dbf702cfcdc0abcc588bf7bea0',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/BorrowerActions.sol': {
      keccak256: '0xecf8ce41a4034aa174c72bab7e558d788c1cc052ee77b2151f4acee4691be839',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/KickerActions.sol': {
      keccak256: '0xa486e9c9091c1cc8966f13b2b6bb9f9b7eeaf26d539b990c3904befd7a2a25fe',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/LPActions.sol': {
      keccak256: '0x4def554bc6414a7a4a575b8fced4fd334b28c484f09e5f616a0c228cbf875c85',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/LenderActions.sol': {
      keccak256: '0x04b37827f21db736b668fb27393b6c8b968b4cb24abf338b0a658090a173e0dd',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/PoolCommons.sol': {
      keccak256: '0x1dd40766b71468dade905c41a90783dad18761fe998f1a85acd79e8a0bb32ed3',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/SettlerActions.sol': {
      keccak256: '0x05edfe3f72323b7212fbb5134f76211f397138c2ed30ddf0f3683772213c831d',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/TakerActions.sol': {
      keccak256: '0x642ee2cabe710495ccc32c269750578cbfe924af26dcc73b8ce6cdf06adce68e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/RevertsHelper.sol': {
      keccak256: '0xcaff095290172f1b5726d4e887ab9be5f524d9321e94ca0095f99b666381a6f4',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:29:29.628Z cannon:cli:foundry evm version paris
2024-01-08T15:29:29.642Z cannon:builder:runtime reported contract artifact ERC20PoolFactory {
  contractName: 'ERC20PoolFactory',
  sourceName: 'src/ERC20PoolFactory.sol',
  abi: [
    {
      type: 'constructor',
      inputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'ERC20_NON_SUBSET_HASH',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'MAX_RATE',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'MIN_RATE',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'ajna',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'deployPool',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'deployedPools',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'deployedPoolsList',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getDeployedPoolsList',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getNumberOfDeployedPools',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'implementation',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'event',
      name: 'PoolCreated',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'CreateFail', inputs: [] },
    { type: 'error', name: 'DecimalsNotCompliant', inputs: [] },
    {
      type: 'error',
      name: 'DeployQuoteCollateralSameToken',
      inputs: []
    },
    { type: 'error', name: 'DeployWithZeroAddress', inputs: [] },
    { type: 'error', name: 'PoolAlreadyExists', inputs: [Array] },
    { type: 'error', name: 'PoolInterestRateInvalid', inputs: [] }
  ],
  bytecode: '0x608060405234801561001057600080fd5b5060405161678738038061678783398101604081905261002f916100cd565b6001600160a01b0381166100565760405163104aee1f60e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b03831617905560405161007d906100c0565b604051809103906000f080158015610099573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055506100fd565b615c5380610b3483390190565b6000602082840312156100df57600080fd5b81516001600160a01b03811681146100f657600080fd5b9392505050565b610a288061010c6000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c80632b6983af146100935780635c60da1b146100b15780637f165b0b146100d1578063a3232bf31461010b578063a387245c1461011e578063b3d4cfa414610131578063bb6da0dd14610143578063c24dbebd14610156578063c38dc7fc14610165578063d819bfef1461017a575b600080fd5b61009b610188565b6040516100a89190610710565b60405180910390f35b6003546100c4906001600160a01b031681565b6040516100a8919061075d565b6100c46100df366004610788565b60016020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6100c46101193660046107c4565b6101ea565b6100c461012c366004610800565b610517565b6002545b6040519081526020016100a8565b6000546100c4906001600160a01b031681565b61013567016345785d8a000081565b6101356000805160206109d383398151915281565b610135662386f26fc1000081565b606060028054806020026020016040519081016040528092919081815260200182805480156101e057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101c2575b5050505050905090565b6000838383816001600160a01b0316836001600160a01b0316036102215760405163bcbac68960e01b815260040160405180910390fd5b6001600160a01b038316158061023e57506001600160a01b038216155b1561025c5760405163104aee1f60e01b815260040160405180910390fd5b80662386f26fc100001180610278575067016345785d8a000081115b156102965760405163462f085f60e01b815260040160405180910390fd5b6001600160a01b0380881660009081527fb581f7ccad64982c9898d358d7c5c86a0e89d6586f43d39b74347caf2ae08b60602090815260408083208a85168452909152902054168015610307578060405163fb8debc160e01b81526004016102fe919061075d565b60405180910390fd5b600061031288610541565b9050600061031f8a610541565b60008054604051929350909161034d9183916001600160a01b03909116908e908e9088908890602001610819565b60408051601f19818403018152919052600354909150600090610379906001600160a01b0316836105fe565b905080985088600160006000805160206109d3833981519152815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002899080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055507fee1fe091a5213b321c2662b35c0b7cd0d35d10dbcab52b3c9b8768983c67bce3896000805160206109d38339815191526040516104a69291906001600160a01b03929092168252602082015260400190565b60405180910390a160405163fe4b84df60e01b8152600481018b90526001600160a01b0382169063fe4b84df90602401600060405180830381600087803b1580156104f057600080fd5b505af1158015610504573d6000803e3d6000fd5b5050505050505050505050509392505050565b6002818154811061052757600080fd5b6000918252602090912001546001600160a01b0316905081565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561059d575060408051601f3d908101601f1916820190925261059a91810190610880565b60015b6105ba576040516333ae908b60e01b815260040160405180910390fd5b60128160ff1611156105df576040516333ae908b60e01b815260040160405180910390fd5b6105ea8160126108c0565b6105f590600a6109c3565b9150505b919050565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b60348401526000939260438401929186019084604182015b602082106106b45783518152602093840193601f199092019101610695565b835160001960208490036101000a0119908116825260f088901b91830191825286846000f098506001600160a01b03891661070257604051631d7fde3160e31b815260040160405180910390fd5b505050505050505092915050565b6020808252825182820181905260009190848201906040850190845b818110156107515783516001600160a01b03168352928401929184019160010161072c565b50909695505050505050565b6001600160a01b0391909116815260200190565b80356001600160a01b03811681146105f957600080fd5b60008060006060848603121561079d57600080fd5b833592506107ad60208501610771565b91506107bb60408501610771565b90509250925092565b6000806000606084860312156107d957600080fd5b6107e284610771565b92506107f060208501610771565b9150604084013590509250925092565b60006020828403121561081257600080fd5b5035919050565b60006002881061083957634e487b7160e01b600052602160045260246000fd5b5060f89690961b86526001600160601b0319606095861b8116600188015293851b841660158701529190931b9091166029840152603d830191909152605d820152607d0190565b60006020828403121561089257600080fd5b815160ff811681146108a357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b60ff82811682821603908111156108d9576108d96108aa565b92915050565b600181815b8085111561091a578160001904821115610900576109006108aa565b8085161561090d57918102915b93841c93908002906108e4565b509250929050565b600082610931575060016108d9565b8161093e575060006108d9565b8160018114610954576002811461095e5761097a565b60019150506108d9565b60ff84111561096f5761096f6108aa565b50506001821b6108d9565b5060208310610133831016604e8410600b841016171561099d575081810a6108d9565b6109a783836108df565b80600019048211156109bb576109bb6108aa565b029392505050565b60006108a360ff84168361092256fe2263c4378b4920f0bef611a3ff22c506afa4745b3319c50b6d704a874990b8b2a2646970667358221220d2d51b7f29eca10b0d8763feeb7d0a80e95cb6e92d95f7efff0b18420771696f64736f6c63430008120033608060405234801561001057600080fd5b506001600055615c2d80620000266000396000f3fe608060405234801561001057600080fd5b50600436106102b35760003560e01c8062cdcefb146102b85780630203d8fb146102ee5780630448e51a14610303578063063d829f146103e757806306e47f261461040a5780630729f62c1461041d57806315afd4091461043057806316f8a463146104585780632c7b2e0614610479578063307ee3b5146104b6578063329d1a8b146104bf578063332c0e43146104d25780633884cd88146104e55780633a0c8f07146105125780633ab96ec51461051a5780633fa8fdbb1461052d57806342302a9a14610535578063483cd1871461054857806348d399e71461058c5780634ab1fc36146105a15780634d966198146105aa5780634efe8af7146105c2578063540c1433146105d55780635a3b4477146105e85780635a422b921461060d5780635cffe9de146106155780635d3637e714610638578063613255ab1461064157806366ae5880146106545780636a9b1891146106675780637323f8531461067a5780637b3f8655146106ab5780637f8baa37146106b35780638349d6be146106c6578063870c764a146106e7578063987165ed146106f0578063a749f1a614610703578063a83de3ec14610716578063a918058d14610729578063a9ff9f771461073c578063ac9650d81461074f578063b1dd61b61461076f578063b1f0724714610789578063bad346201461079c578063bcb630d7146107a4578063c861c6e6146107b5578063ca103d15146107c8578063ce4396d7146107ff578063cfa8ff0314610807578063d14827911461081a578063d39d813f14610822578063d53e2b1b14610835578063d9606e0814610848578063d9d98ce414610877578063da7951a91461088a578063e512c0611461089d578063ec0bdcfc146108b2578063eca48706146108ba578063f78b0cce146108cd578063fe4b84df146108e0575b600080fd5b614011546001600160d01b03811690600160d01b900465ffffffffffff165b6040516102e5929190614849565b60405180910390f35b6103016102fc36600461486c565b6108f3565b005b61038a610311366004614898565b6001600160a01b03908116600090815260046020819052604090912080546003820154600180840154600285015494909501549054838716976001600160601b03600160a01b9586900481169885811698828116988381169890970490921695600160601b948590048216949081900482169392041690565b604080516001600160a01b039b8c168152602081019a909a528901979097526060880195909552608087019390935260a086019190915260c0850152841660e08401528316610100830152909116610120820152610140016102e5565b61400b546001600160d01b03811690600160d01b900465ffffffffffff166102d7565b6103016104183660046148f9565b610a00565b61030161042b36600461495b565b610aa8565b61044361043e36600461486c565b610b6e565b604080519283529015156020830152016102e5565b61046b61046636600461499c565b610c6d565b6040519081526020016102e5565b6104a761048736600461499c565b600090815261402060205260409020805460018201546002909201549092565b6040516102e5939291906149b5565b6140175461046b565b61046b6104cd36600461499c565b610ca8565b6104a76104e03660046149cb565b610cbb565b6104ed610e12565b604080516001600160a01b0390941684526020840192909252908201526060016102e5565b61046b610e51565b61046b61052836600461499c565b610ece565b61046b610eed565b61046b61054336600461499c565b610ef9565b61046b6105563660046149fd565b6001600160a01b039081166000908152614023602090815260408083209490931682529283528181209381529290915290205490565b610594611034565b6040516102e59190614a3f565b61401d5461046b565b6105b2611040565b6040516102e59493929190614a53565b6103016105d0366004614a6e565b611142565b61046b6105e336600461499c565b6111d2565b60035461401c5461401a5461401b5461401f545b6040516102e5959493929190614ad2565b6103016111dd565b610628610623366004614b36565b6112ad565b60405190151581526020016102e5565b6140195461046b565b61046b61064f366004614898565b611363565b61046b610662366004614ba8565b6113e0565b6102d7610675366004614bfd565b611574565b6102d7610688366004614898565b6001600160a01b0316600090815260056020526040902080546001909101549091565b61046b6116a7565b6103016106c1366004614c1f565b6116b3565b6106d96106d436600461499c565b611732565b6040516102e5929190614c60565b6140185461046b565b6103016106fe366004614c79565b611760565b6102d7610711366004614cea565b61180e565b6105fc61072436600461499c565b611858565b610301610737366004614c79565b6118b7565b61046b61074a366004614d1a565b611924565b61076261075d366004614c1f565b611acf565b6040516102e59190614dbc565b610777611bc3565b60405160ff90911681526020016102e5565b6102d7610797366004614bfd565b611bcf565b610594611cf3565b6001546001600160601b031661046b565b61046b6107c3366004614e1e565b611cff565b6104a76107d6366004614898565b6001600160a01b0316600090815261400a60205260409020805460018201546002909201549092565b610301611e52565b610301610815366004614e4a565b611f02565b6103016120a5565b61030161083036600461'... 43008 more characters,
  deployedBytecode: '0x608060405234801561001057600080fd5b506004361061008e5760003560e01c80632b6983af146100935780635c60da1b146100b15780637f165b0b146100d1578063a3232bf31461010b578063a387245c1461011e578063b3d4cfa414610131578063bb6da0dd14610143578063c24dbebd14610156578063c38dc7fc14610165578063d819bfef1461017a575b600080fd5b61009b610188565b6040516100a89190610710565b60405180910390f35b6003546100c4906001600160a01b031681565b6040516100a8919061075d565b6100c46100df366004610788565b60016020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6100c46101193660046107c4565b6101ea565b6100c461012c366004610800565b610517565b6002545b6040519081526020016100a8565b6000546100c4906001600160a01b031681565b61013567016345785d8a000081565b6101356000805160206109d383398151915281565b610135662386f26fc1000081565b606060028054806020026020016040519081016040528092919081815260200182805480156101e057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101c2575b5050505050905090565b6000838383816001600160a01b0316836001600160a01b0316036102215760405163bcbac68960e01b815260040160405180910390fd5b6001600160a01b038316158061023e57506001600160a01b038216155b1561025c5760405163104aee1f60e01b815260040160405180910390fd5b80662386f26fc100001180610278575067016345785d8a000081115b156102965760405163462f085f60e01b815260040160405180910390fd5b6001600160a01b0380881660009081527fb581f7ccad64982c9898d358d7c5c86a0e89d6586f43d39b74347caf2ae08b60602090815260408083208a85168452909152902054168015610307578060405163fb8debc160e01b81526004016102fe919061075d565b60405180910390fd5b600061031288610541565b9050600061031f8a610541565b60008054604051929350909161034d9183916001600160a01b03909116908e908e9088908890602001610819565b60408051601f19818403018152919052600354909150600090610379906001600160a01b0316836105fe565b905080985088600160006000805160206109d3833981519152815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002899080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055507fee1fe091a5213b321c2662b35c0b7cd0d35d10dbcab52b3c9b8768983c67bce3896000805160206109d38339815191526040516104a69291906001600160a01b03929092168252602082015260400190565b60405180910390a160405163fe4b84df60e01b8152600481018b90526001600160a01b0382169063fe4b84df90602401600060405180830381600087803b1580156104f057600080fd5b505af1158015610504573d6000803e3d6000fd5b5050505050505050505050509392505050565b6002818154811061052757600080fd5b6000918252602090912001546001600160a01b0316905081565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561059d575060408051601f3d908101601f1916820190925261059a91810190610880565b60015b6105ba576040516333ae908b60e01b815260040160405180910390fd5b60128160ff1611156105df576040516333ae908b60e01b815260040160405180910390fd5b6105ea8160126108c0565b6105f590600a6109c3565b9150505b919050565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b60348401526000939260438401929186019084604182015b602082106106b45783518152602093840193601f199092019101610695565b835160001960208490036101000a0119908116825260f088901b91830191825286846000f098506001600160a01b03891661070257604051631d7fde3160e31b815260040160405180910390fd5b505050505050505092915050565b6020808252825182820181905260009190848201906040850190845b818110156107515783516001600160a01b03168352928401929184019160010161072c565b50909695505050505050565b6001600160a01b0391909116815260200190565b80356001600160a01b03811681146105f957600080fd5b60008060006060848603121561079d57600080fd5b833592506107ad60208501610771565b91506107bb60408501610771565b90509250925092565b6000806000606084860312156107d957600080fd5b6107e284610771565b92506107f060208501610771565b9150604084013590509250925092565b60006020828403121561081257600080fd5b5035919050565b60006002881061083957634e487b7160e01b600052602160045260246000fd5b5060f89690961b86526001600160601b0319606095861b8116600188015293851b841660158701529190931b9091166029840152603d830191909152605d820152607d0190565b60006020828403121561089257600080fd5b815160ff811681146108a357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b60ff82811682821603908111156108d9576108d96108aa565b92915050565b600181815b8085111561091a578160001904821115610900576109006108aa565b8085161561090d57918102915b93841c93908002906108e4565b509250929050565b600082610931575060016108d9565b8161093e575060006108d9565b8160018114610954576002811461095e5761097a565b60019150506108d9565b60ff84111561096f5761096f6108aa565b50506001821b6108d9565b5060208310610133831016604e8410600b841016171561099d575081810a6108d9565b6109a783836108df565b80600019048211156109bb576109bb6108aa565b029392505050565b60006108a360ff84168361092256fe2263c4378b4920f0bef611a3ff22c506afa4745b3319c50b6d704a874990b8b2a2646970667358221220d2d51b7f29eca10b0d8763feeb7d0a80e95cb6e92d95f7efff0b18420771696f64736f6c63430008120033',
  linkReferences: {
    'src/libraries/external/BorrowerActions.sol': { BorrowerActions: [Array] },
    'src/libraries/external/KickerActions.sol': { KickerActions: [Array] },
    'src/libraries/external/LPActions.sol': { LPActions: [Array] },
    'src/libraries/external/LenderActions.sol': { LenderActions: [Array] },
    'src/libraries/external/PoolCommons.sol': { PoolCommons: [Array] },
    'src/libraries/external/SettlerActions.sol': { SettlerActions: [Array] },
    'src/libraries/external/TakerActions.sol': { TakerActions: [Array] }
  },
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/clones-with-immutable-args/src/Clone.sol":{"content":"// SPDX-License-Identifier: BSD\\npragma solidity ^0.8.4;\\n\\n/// @title Clone\\n/// @author zefram.eth\\n/// @notice Provides helper functions for reading immutable args from calldata\\ncontract Clone {\\n    /// @notice Reads an immutable arg with type address\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgAddress(uint256 argOffset)\\n        internal\\n        pure\\n        returns (address arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0x60, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint256\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint256(uint256 argOffset)\\n        internal\\n        pure\\n        returns (uint256 arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := calldataload(add(offset, argOffset))\\n        }\\n    }\\n\\n    /// @notice Reads a uint256 array stored in the immutable args.\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @param arrLen Number of elements in the array\\n    /// @return arr The array\\n    function _getArgUint256Array(uint256 argOffset, uint64 arrLen)\\n        internal\\n        pure\\n      returns (uint256[] memory arr)\\n    {\\n      uint256 offset = _getImmutableArgsOffset();\\n      uint256 el;\\n      arr = new uint256[](arrLen);\\n      for (uint64 i = 0; i < arrLen; i++) {\\n        assembly {\\n          // solhint-disable-next-line no-inline-assembly\\n          el := calldataload(add(add(offset, argOffset), mul(i, 32)))\\n        }\\n        arr[i] = el;\\n      }\\n      return arr;\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint64\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint64(uint256 argOffset)\\n        internal\\n        pure\\n        returns (uint64 arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0xc0, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint8\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint8(uint256 argOffset) internal pure returns (uint8 arg) {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0xf8, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @return offset The offset of the packed immutable args in calldata\\n    function _getImmutableArgsOffset() internal pure returns (uint256 offset) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            offset := sub(\\n                calldatasize(),\\n                add(shr(240, calldataload(sub(calldatasize(), 2))), 2)\\n            )\\n        }\\n    }\\n}\\n"},"lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol":{"content":"// SPDX-License-Identifier: BSD\\n\\npragma solidity ^0.8.4;\\n\\n/// @title ClonesWithImmutableArgs\\n/// @author wighawag, zefram.eth\\n/// @notice Enables creating clone contracts with immutable args\\nlibrary ClonesWithImmutableArgs {\\n    error CreateFail();\\n\\n    /// @notice Creates a clone proxy of the implementation contract, with immutable args\\n    /// @dev data cannot exceed 65535 bytes, since 2 bytes are used to store the data length\\n    /// @param implementation The implementation contract to clone\\n    /// @param data Encoded immutable args\\n    /// @return instance The address of the created clone\\n    function clone(address implementation, bytes memory data)\\n        internal\\n        returns (address payable instance)\\n    {\\n        // unrealistic for memory ptr or data length to exceed 256 bits\\n        unchecked {\\n            uint256 extraLength = data.length + 2; // +2 bytes for telling how much data there is appended to the call\\n            uint256 creationSize = 0x41 + extraLength;\\n            uint256 runSize = creationSize - 10;\\n            uint256 dataPtr;\\n            uint256 ptr;\\n            // solhint-disable-next-line no-inline-assembly\\n            assembly {\\n                ptr := mload(0x40)\\n\\n                // -------------------------------------------------------------------------------------------------------------\\n                // CREATION (10 bytes)\\n                // -------------------------------------------------------------------------------------------------------------\\n\\n                // 61 runtime  | PUSH2 runtime (r)     | r                       | ‚Äì\\n                mstore(\\n                    ptr,\\n                    0x6100000000000000000000000000000000000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x01), shl(240, runSize)) // size of the contract running bytecode (16 bits)\\n\\n                // creation size = 0a\\n                // 3d          | RETURNDATASIZE        | 0 r                     | ‚Äì\\n                // 81          | DUP2                  | r 0 r                   | ‚Äì\\n                // 60 creation | PUSH1 creation (c)    | c r 0 r                 | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 c r 0 r               | ‚Äì\\n                // 39          | CODECOPY              | 0 r                     | [0-runSize): runtime code\\n                // f3          | RETURN                |                         | [0-runSize): runtime code\\n\\n                // -------------------------------------------------------------------------------------------------------------\\n                // RUNTIME (55 bytes + extraLength)\\n                // -------------------------------------------------------------------------------------------------------------\\n\\n                // 3d          | RETURNDATASIZE        | 0                       | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0                     | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0 0                   | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0 0 0                 | ‚Äì\\n                // 36          | CALLDATASIZE          | cds 0 0 0 0             | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 cds 0 0 0 0           | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0 cds 0 0 0 0         | ‚Äì\\n                // 37          | CALLDATACOPY          | 0 0 0 0                 | [0, cds) = calldata\\n                // 61          | PUSH2 extra           | extra 0 0 0 0           | [0, cds) = calldata\\n                mstore(\\n                    add(ptr, 0x03),\\n                    0x3d81600a3d39f33d3d3d3d363d3d376100000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x13), shl(240, extraLength))\\n\\n                // 60 0x37     | PUSH1 0x37            | 0x37 extra 0 0 0 0      | [0, cds) = calldata // 0x37 (55) is runtime size - data\\n                // 36          | CALLDATASIZE          | cds 0x37 extra 0 0 0 0  | [0, cds) = calldata\\n                // 39          | CODECOPY              | 0 0 0 0                 | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 36          | CALLDATASIZE          | cds 0 0 0 0             | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 61 extra    | PUSH2 extra           | extra cds 0 0 0 0       | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                mstore(\\n                    add(ptr, 0x15),\\n                    0x6037363936610000000000000000000000000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x1b), shl(240, extraLength))\\n\\n                // 01          | ADD                   | cds+extra 0 0 0 0       | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3d          | RETURNDATASIZE        | 0 cds 0 0 0 0           | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 73 addr     | PUSH20 0x123‚Ä¶         | addr 0 cds 0 0 0 0      | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                mstore(\\n                    add(ptr, 0x1d),\\n                    0x013d730000000000000000000000000000000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x20), shl(0x60, implementation))\\n\\n                // 5a          | GAS                   | gas addr 0 cds 0 0 0 0  | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // f4          | DELEGATECALL          | success 0 0             | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3d          | RETURNDATASIZE        | rds success 0 0         | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3d          | RETURNDATASIZE        | rds rds success 0 0     | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 93          | SWAP4                 | 0 rds success 0 rds     | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 80          | DUP1                  | 0 0 rds success 0 rds   | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3e          | RETURNDATACOPY        | success 0 rds           | [0, rds) = return data (there might be some irrelevant leftovers in memory [rds, cds+0x37) when rds < cds+0x37)\\n                // 60 0x35     | PUSH1 0x35            | 0x35 sucess 0 rds       | [0, rds) = return data\\n                // 57          | JUMPI                 | 0 rds        '... 530731 more characters
  }
}
2024-01-08T15:29:29.643Z cannon:builder:contract lib ref BorrowerActions 0x422d470fb02206733Bb770D2A27d6d98f493af64
2024-01-08T15:29:29.644Z cannon:builder:contract lib ref KickerActions 0xf419056B545783BbFfEAB4d0aA057a52FbA4F4fd
2024-01-08T15:29:29.644Z cannon:builder:contract lib ref LPActions 0xb257A98a3549a0B36b9001d0eDc9e75d313d5c8e
2024-01-08T15:29:29.644Z cannon:builder:contract lib ref LenderActions 0x7456CF19C121842FE2C3a888075A11d51ED63b98
2024-01-08T15:29:29.645Z cannon:builder:contract lib ref PoolCommons 0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540
2024-01-08T15:29:29.645Z cannon:builder:contract lib ref SettlerActions 0x9EdcD1fEc19E5baA98fa4911C90C2162524750d2
2024-01-08T15:29:29.645Z cannon:builder:contract lib ref TakerActions 0xb127207d673977e14f31f52a14AD07e6a512c5fA
2024-01-08T15:29:29.669Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:29.671Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:29.672Z cannon:builder:contract performing arachnid create2
2024-01-08T15:29:29.679Z cannon:builder:contract create2 address is 0x7689dF0522143E657DF4df373542637aA52A001F
2024-01-08T15:29:29.682Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:29.683Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:30.206Z cannon:cli:rpc anvil_impersonateAccount

2024-01-08T15:29:30.208Z cannon:cli:rpc anvil_setBalance

2024-01-08T15:29:30.209Z cannon:cli:rpc eth_blockNumber

2024-01-08T15:29:30.211Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:30.213Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:30.219Z cannon:cli:rpc eth_estimateGas

2024-01-08T15:29:30.643Z cannon:cli:rpc eth_sendTransaction

2024-01-08T15:29:30.646Z cannon:cli:rpc 
    Transaction: 0xeaeecb982e0fca77779ffef670dd447c9d6926c253716660dafcc1db1ccba524
    Gas used: 5831338

    Block Number: 114564391

2024-01-08T15:29:30.646Z cannon:cli:rpc     Block Hash: 0x46f9e194762bbfa4a05b886dddbe0a9a88188ee67c1d13e78a834c0174f770e2
    Block Time: "Mon, 8 Jan 2024 15:29:28 +0000"

eth_chainId

2024-01-08T15:29:30.647Z cannon:cli:rpc eth_getTransactionByHash

2024-01-08T15:29:30.660Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:30.663Z cannon:cli:rpc eth_getTransactionReceipt

2024-01-08T15:29:30.665Z cannon:builder:contract arachnid create2 complete {
  to: '0x4e59b44847b379578588920cA78FbF26c0B4956C',
  from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
  contractAddress: null,
  transactionIndex: 0,
  gasUsed: BigNumber { _hex: '0x58faaa', _isBigNumber: true },
  logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  blockHash: '0x46f9e194762bbfa4a05b886dddbe0a9a88188ee67c1d13e78a834c0174f770e2',
  transactionHash: '0xeaeecb982e0fca77779ffef670dd447c9d6926c253716660dafcc1db1ccba524',
  logs: [],
  blockNumber: 114564391,
  confirmations: 1,
  cumulativeGasUsed: BigNumber { _hex: '0x58faaa', _isBigNumber: true },
  effectiveGasPrice: BigNumber { _hex: '0x1ac4d8', _isBigNumber: true },
  status: 1,
  type: 2,
  byzantium: true
}
2024-01-08T15:29:30.665Z cannon:builder:contract contract deployed to address 0x7689dF0522143E657DF4df373542637aA52A001F
  ‚úî Successfully deployed ERC20PoolFactory using CREATE2
  Contract Address: 0x7689dF0522143E657DF4df373542637aA52A001F
  Transaction Hash: 0xeaeecb982e0fca77779ffef670dd447c9d6926c253716660dafcc1db1ccba524
  Transaction Cost: 0.000010230079530864 ETH (5,831,338 gas)

2024-01-08T15:29:30.677Z cannon:builder:runtime resolve artifact ERC20PoolFactory
2024-01-08T15:29:30.677Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:29:40.324Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/ERC20PoolFactory.sol': 'ERC20PoolFactory' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/clones-with-immutable-args/src/Clone.sol': {
      keccak256: '0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545',
      urls: [Array],
      license: 'BSD'
    },
    'lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol': {
      keccak256: '0xcb7cbb68b8a90e6eff9c7a29f5b7d5964e0cedc0ad8133f5bcb3ec3a9aeb391c',
      urls: [Array],
      license: 'BSD'
    },
    'lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol': {
      keccak256: '0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol': {
      keccak256: '0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol': {
      keccak256: '0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol': {
      keccak256: '0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Address.sol': {
      keccak256: '0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Multicall.sol': {
      keccak256: '0x35e30a35e23f856cbcee3558b7efdd83f6017a8f1b419710645143d98e892463',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathUD60x18.sol': {
      keccak256: '0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/ERC20Pool.sol': {
      keccak256: '0xe372d950d3ace12bae8ee8a495a6f44c6521778ff56e9b25f3ccdbf266aea0d6',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/ERC20PoolFactory.sol': {
      keccak256: '0xdd7c1e42906f6a7693bf72014b39f36c692e0f4a17e7593d7f887ec84b697c85',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/FlashloanablePool.sol': {
      keccak256: '0x1f3767f4d27c13ef2c53bcf49c1d5917c77b2d3fb7a28576f0c2a131a8377f6f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/Pool.sol': {
      keccak256: '0x87159e77eeee256f1501035738bb015a1d4d360fab31ea077f4ddcaff4e54d22',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/PoolDeployer.sol': {
      keccak256: '0x81b87acb71ecdbb00a37f4b0b23d21554692bde445fbc19871353bcce128d53e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPoolFactory.sol': {
      keccak256: '0x53d72e58a4b0d6a5e8aeb23a2f40262636c823170037179220ec29ca403dae76',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20Pool.sol': {
      keccak256: '0xac0fc147804f48919ee17416dd6659eb77aed7d5c1b192f2e9f86862363346d4',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolBorrowerActions.sol': {
      keccak256: '0xe7bcfa2227cdb6249ad214d83a82935f0eb048472c277a599ba67c31f3d191b2',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolEvents.sol': {
      keccak256: '0xeccea62ed02e93376371d0ad723f0f94d390363fc836720170f018a5e928046c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolFactory.sol': {
      keccak256: '0x010cb58b359152dea4534951089b55dad96f8e9bf4b2815ff33b73a38e62d5ef',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolImmutables.sol': {
      keccak256: '0x54c17faa7d4eccf84d8923d9531725e266d27b8a5ef2cbc59475749ad44a5834',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolLenderActions.sol': {
      keccak256: '0xdf8d1b579da0ae2d47c938f5e262658ceb7d807d2e245b9a6e4a3f6febe9a0cc',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20Taker.sol': {
      keccak256: '0x3ddd154139854a83d3f46adb95dea763569f55dbf702cfcdc0abcc588bf7bea0',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/BorrowerActions.sol': {
      keccak256: '0xecf8ce41a4034aa174c72bab7e558d788c1cc052ee77b2151f4acee4691be839',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/KickerActions.sol': {
      keccak256: '0xa486e9c9091c1cc8966f13b2b6bb9f9b7eeaf26d539b990c3904befd7a2a25fe',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/LPActions.sol': {
      keccak256: '0x4def554bc6414a7a4a575b8fced4fd334b28c484f09e5f616a0c228cbf875c85',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/LenderActions.sol': {
      keccak256: '0x04b37827f21db736b668fb27393b6c8b968b4cb24abf338b0a658090a173e0dd',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/PoolCommons.sol': {
      keccak256: '0x1dd40766b71468dade905c41a90783dad18761fe998f1a85acd79e8a0bb32ed3',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/SettlerActions.sol': {
      keccak256: '0x05edfe3f72323b7212fbb5134f76211f397138c2ed30ddf0f3683772213c831d',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/TakerActions.sol': {
      keccak256: '0x642ee2cabe710495ccc32c269750578cbfe924af26dcc73b8ce6cdf06adce68e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/RevertsHelper.sol': {
      keccak256: '0xcaff095290172f1b5726d4e887ab9be5f524d9321e94ca0095f99b666381a6f4',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:29:40.325Z cannon:cli:foundry evm version paris
2024-01-08T15:29:40.332Z cannon:builder:runtime reported contract artifact ERC20PoolFactory {
  contractName: 'ERC20PoolFactory',
  sourceName: 'src/ERC20PoolFactory.sol',
  abi: [
    {
      type: 'constructor',
      inputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'ERC20_NON_SUBSET_HASH',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'MAX_RATE',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'MIN_RATE',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'ajna',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'deployPool',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'deployedPools',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'deployedPoolsList',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getDeployedPoolsList',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getNumberOfDeployedPools',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'implementation',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'event',
      name: 'PoolCreated',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'CreateFail', inputs: [] },
    { type: 'error', name: 'DecimalsNotCompliant', inputs: [] },
    {
      type: 'error',
      name: 'DeployQuoteCollateralSameToken',
      inputs: []
    },
    { type: 'error', name: 'DeployWithZeroAddress', inputs: [] },
    { type: 'error', name: 'PoolAlreadyExists', inputs: [Array] },
    { type: 'error', name: 'PoolInterestRateInvalid', inputs: [] }
  ],
  bytecode: '0x608060405234801561001057600080fd5b5060405161678738038061678783398101604081905261002f916100cd565b6001600160a01b0381166100565760405163104aee1f60e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b03831617905560405161007d906100c0565b604051809103906000f080158015610099573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055506100fd565b615c5380610b3483390190565b6000602082840312156100df57600080fd5b81516001600160a01b03811681146100f657600080fd5b9392505050565b610a288061010c6000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c80632b6983af146100935780635c60da1b146100b15780637f165b0b146100d1578063a3232bf31461010b578063a387245c1461011e578063b3d4cfa414610131578063bb6da0dd14610143578063c24dbebd14610156578063c38dc7fc14610165578063d819bfef1461017a575b600080fd5b61009b610188565b6040516100a89190610710565b60405180910390f35b6003546100c4906001600160a01b031681565b6040516100a8919061075d565b6100c46100df366004610788565b60016020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6100c46101193660046107c4565b6101ea565b6100c461012c366004610800565b610517565b6002545b6040519081526020016100a8565b6000546100c4906001600160a01b031681565b61013567016345785d8a000081565b6101356000805160206109d383398151915281565b610135662386f26fc1000081565b606060028054806020026020016040519081016040528092919081815260200182805480156101e057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101c2575b5050505050905090565b6000838383816001600160a01b0316836001600160a01b0316036102215760405163bcbac68960e01b815260040160405180910390fd5b6001600160a01b038316158061023e57506001600160a01b038216155b1561025c5760405163104aee1f60e01b815260040160405180910390fd5b80662386f26fc100001180610278575067016345785d8a000081115b156102965760405163462f085f60e01b815260040160405180910390fd5b6001600160a01b0380881660009081527fb581f7ccad64982c9898d358d7c5c86a0e89d6586f43d39b74347caf2ae08b60602090815260408083208a85168452909152902054168015610307578060405163fb8debc160e01b81526004016102fe919061075d565b60405180910390fd5b600061031288610541565b9050600061031f8a610541565b60008054604051929350909161034d9183916001600160a01b03909116908e908e9088908890602001610819565b60408051601f19818403018152919052600354909150600090610379906001600160a01b0316836105fe565b905080985088600160006000805160206109d3833981519152815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002899080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055507fee1fe091a5213b321c2662b35c0b7cd0d35d10dbcab52b3c9b8768983c67bce3896000805160206109d38339815191526040516104a69291906001600160a01b03929092168252602082015260400190565b60405180910390a160405163fe4b84df60e01b8152600481018b90526001600160a01b0382169063fe4b84df90602401600060405180830381600087803b1580156104f057600080fd5b505af1158015610504573d6000803e3d6000fd5b5050505050505050505050509392505050565b6002818154811061052757600080fd5b6000918252602090912001546001600160a01b0316905081565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561059d575060408051601f3d908101601f1916820190925261059a91810190610880565b60015b6105ba576040516333ae908b60e01b815260040160405180910390fd5b60128160ff1611156105df576040516333ae908b60e01b815260040160405180910390fd5b6105ea8160126108c0565b6105f590600a6109c3565b9150505b919050565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b60348401526000939260438401929186019084604182015b602082106106b45783518152602093840193601f199092019101610695565b835160001960208490036101000a0119908116825260f088901b91830191825286846000f098506001600160a01b03891661070257604051631d7fde3160e31b815260040160405180910390fd5b505050505050505092915050565b6020808252825182820181905260009190848201906040850190845b818110156107515783516001600160a01b03168352928401929184019160010161072c565b50909695505050505050565b6001600160a01b0391909116815260200190565b80356001600160a01b03811681146105f957600080fd5b60008060006060848603121561079d57600080fd5b833592506107ad60208501610771565b91506107bb60408501610771565b90509250925092565b6000806000606084860312156107d957600080fd5b6107e284610771565b92506107f060208501610771565b9150604084013590509250925092565b60006020828403121561081257600080fd5b5035919050565b60006002881061083957634e487b7160e01b600052602160045260246000fd5b5060f89690961b86526001600160601b0319606095861b8116600188015293851b841660158701529190931b9091166029840152603d830191909152605d820152607d0190565b60006020828403121561089257600080fd5b815160ff811681146108a357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b60ff82811682821603908111156108d9576108d96108aa565b92915050565b600181815b8085111561091a578160001904821115610900576109006108aa565b8085161561090d57918102915b93841c93908002906108e4565b509250929050565b600082610931575060016108d9565b8161093e575060006108d9565b8160018114610954576002811461095e5761097a565b60019150506108d9565b60ff84111561096f5761096f6108aa565b50506001821b6108d9565b5060208310610133831016604e8410600b841016171561099d575081810a6108d9565b6109a783836108df565b80600019048211156109bb576109bb6108aa565b029392505050565b60006108a360ff84168361092256fe2263c4378b4920f0bef611a3ff22c506afa4745b3319c50b6d704a874990b8b2a2646970667358221220d2d51b7f29eca10b0d8763feeb7d0a80e95cb6e92d95f7efff0b18420771696f64736f6c63430008120033608060405234801561001057600080fd5b506001600055615c2d80620000266000396000f3fe608060405234801561001057600080fd5b50600436106102b35760003560e01c8062cdcefb146102b85780630203d8fb146102ee5780630448e51a14610303578063063d829f146103e757806306e47f261461040a5780630729f62c1461041d57806315afd4091461043057806316f8a463146104585780632c7b2e0614610479578063307ee3b5146104b6578063329d1a8b146104bf578063332c0e43146104d25780633884cd88146104e55780633a0c8f07146105125780633ab96ec51461051a5780633fa8fdbb1461052d57806342302a9a14610535578063483cd1871461054857806348d399e71461058c5780634ab1fc36146105a15780634d966198146105aa5780634efe8af7146105c2578063540c1433146105d55780635a3b4477146105e85780635a422b921461060d5780635cffe9de146106155780635d3637e714610638578063613255ab1461064157806366ae5880146106545780636a9b1891146106675780637323f8531461067a5780637b3f8655146106ab5780637f8baa37146106b35780638349d6be146106c6578063870c764a146106e7578063987165ed146106f0578063a749f1a614610703578063a83de3ec14610716578063a918058d14610729578063a9ff9f771461073c578063ac9650d81461074f578063b1dd61b61461076f578063b1f0724714610789578063bad346201461079c578063bcb630d7146107a4578063c861c6e6146107b5578063ca103d15146107c8578063ce4396d7146107ff578063cfa8ff0314610807578063d14827911461081a578063d39d813f14610822578063d53e2b1b14610835578063d9606e0814610848578063d9d98ce414610877578063da7951a91461088a578063e512c0611461089d578063ec0bdcfc146108b2578063eca48706146108ba578063f78b0cce146108cd578063fe4b84df146108e0575b600080fd5b614011546001600160d01b03811690600160d01b900465ffffffffffff165b6040516102e5929190614849565b60405180910390f35b6103016102fc36600461486c565b6108f3565b005b61038a610311366004614898565b6001600160a01b03908116600090815260046020819052604090912080546003820154600180840154600285015494909501549054838716976001600160601b03600160a01b9586900481169885811698828116988381169890970490921695600160601b948590048216949081900482169392041690565b604080516001600160a01b039b8c168152602081019a909a528901979097526060880195909552608087019390935260a086019190915260c0850152841660e08401528316610100830152909116610120820152610140016102e5565b61400b546001600160d01b03811690600160d01b900465ffffffffffff166102d7565b6103016104183660046148f9565b610a00565b61030161042b36600461495b565b610aa8565b61044361043e36600461486c565b610b6e565b604080519283529015156020830152016102e5565b61046b61046636600461499c565b610c6d565b6040519081526020016102e5565b6104a761048736600461499c565b600090815261402060205260409020805460018201546002909201549092565b6040516102e5939291906149b5565b6140175461046b565b61046b6104cd36600461499c565b610ca8565b6104a76104e03660046149cb565b610cbb565b6104ed610e12565b604080516001600160a01b0390941684526020840192909252908201526060016102e5565b61046b610e51565b61046b61052836600461499c565b610ece565b61046b610eed565b61046b61054336600461499c565b610ef9565b61046b6105563660046149fd565b6001600160a01b039081166000908152614023602090815260408083209490931682529283528181209381529290915290205490565b610594611034565b6040516102e59190614a3f565b61401d5461046b565b6105b2611040565b6040516102e59493929190614a53565b6103016105d0366004614a6e565b611142565b61046b6105e336600461499c565b6111d2565b60035461401c5461401a5461401b5461401f545b6040516102e5959493929190614ad2565b6103016111dd565b610628610623366004614b36565b6112ad565b60405190151581526020016102e5565b6140195461046b565b61046b61064f366004614898565b611363565b61046b610662366004614ba8565b6113e0565b6102d7610675366004614bfd565b611574565b6102d7610688366004614898565b6001600160a01b0316600090815260056020526040902080546001909101549091565b61046b6116a7565b6103016106c1366004614c1f565b6116b3565b6106d96106d436600461499c565b611732565b6040516102e5929190614c60565b6140185461046b565b6103016106fe366004614c79565b611760565b6102d7610711366004614cea565b61180e565b6105fc61072436600461499c565b611858565b610301610737366004614c79565b6118b7565b61046b61074a366004614d1a565b611924565b61076261075d366004614c1f565b611acf565b6040516102e59190614dbc565b610777611bc3565b60405160ff90911681526020016102e5565b6102d7610797366004614bfd565b611bcf565b610594611cf3565b6001546001600160601b031661046b565b61046b6107c3366004614e1e565b611cff565b6104a76107d6366004614898565b6001600160a01b0316600090815261400a60205260409020805460018201546002909201549092565b610301611e52565b610301610815366004614e4a565b611f02565b6103016120a5565b61030161083036600461'... 43008 more characters,
  deployedBytecode: '0x608060405234801561001057600080fd5b506004361061008e5760003560e01c80632b6983af146100935780635c60da1b146100b15780637f165b0b146100d1578063a3232bf31461010b578063a387245c1461011e578063b3d4cfa414610131578063bb6da0dd14610143578063c24dbebd14610156578063c38dc7fc14610165578063d819bfef1461017a575b600080fd5b61009b610188565b6040516100a89190610710565b60405180910390f35b6003546100c4906001600160a01b031681565b6040516100a8919061075d565b6100c46100df366004610788565b60016020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6100c46101193660046107c4565b6101ea565b6100c461012c366004610800565b610517565b6002545b6040519081526020016100a8565b6000546100c4906001600160a01b031681565b61013567016345785d8a000081565b6101356000805160206109d383398151915281565b610135662386f26fc1000081565b606060028054806020026020016040519081016040528092919081815260200182805480156101e057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101c2575b5050505050905090565b6000838383816001600160a01b0316836001600160a01b0316036102215760405163bcbac68960e01b815260040160405180910390fd5b6001600160a01b038316158061023e57506001600160a01b038216155b1561025c5760405163104aee1f60e01b815260040160405180910390fd5b80662386f26fc100001180610278575067016345785d8a000081115b156102965760405163462f085f60e01b815260040160405180910390fd5b6001600160a01b0380881660009081527fb581f7ccad64982c9898d358d7c5c86a0e89d6586f43d39b74347caf2ae08b60602090815260408083208a85168452909152902054168015610307578060405163fb8debc160e01b81526004016102fe919061075d565b60405180910390fd5b600061031288610541565b9050600061031f8a610541565b60008054604051929350909161034d9183916001600160a01b03909116908e908e9088908890602001610819565b60408051601f19818403018152919052600354909150600090610379906001600160a01b0316836105fe565b905080985088600160006000805160206109d3833981519152815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002899080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055507fee1fe091a5213b321c2662b35c0b7cd0d35d10dbcab52b3c9b8768983c67bce3896000805160206109d38339815191526040516104a69291906001600160a01b03929092168252602082015260400190565b60405180910390a160405163fe4b84df60e01b8152600481018b90526001600160a01b0382169063fe4b84df90602401600060405180830381600087803b1580156104f057600080fd5b505af1158015610504573d6000803e3d6000fd5b5050505050505050505050509392505050565b6002818154811061052757600080fd5b6000918252602090912001546001600160a01b0316905081565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561059d575060408051601f3d908101601f1916820190925261059a91810190610880565b60015b6105ba576040516333ae908b60e01b815260040160405180910390fd5b60128160ff1611156105df576040516333ae908b60e01b815260040160405180910390fd5b6105ea8160126108c0565b6105f590600a6109c3565b9150505b919050565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b60348401526000939260438401929186019084604182015b602082106106b45783518152602093840193601f199092019101610695565b835160001960208490036101000a0119908116825260f088901b91830191825286846000f098506001600160a01b03891661070257604051631d7fde3160e31b815260040160405180910390fd5b505050505050505092915050565b6020808252825182820181905260009190848201906040850190845b818110156107515783516001600160a01b03168352928401929184019160010161072c565b50909695505050505050565b6001600160a01b0391909116815260200190565b80356001600160a01b03811681146105f957600080fd5b60008060006060848603121561079d57600080fd5b833592506107ad60208501610771565b91506107bb60408501610771565b90509250925092565b6000806000606084860312156107d957600080fd5b6107e284610771565b92506107f060208501610771565b9150604084013590509250925092565b60006020828403121561081257600080fd5b5035919050565b60006002881061083957634e487b7160e01b600052602160045260246000fd5b5060f89690961b86526001600160601b0319606095861b8116600188015293851b841660158701529190931b9091166029840152603d830191909152605d820152607d0190565b60006020828403121561089257600080fd5b815160ff811681146108a357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b60ff82811682821603908111156108d9576108d96108aa565b92915050565b600181815b8085111561091a578160001904821115610900576109006108aa565b8085161561090d57918102915b93841c93908002906108e4565b509250929050565b600082610931575060016108d9565b8161093e575060006108d9565b8160018114610954576002811461095e5761097a565b60019150506108d9565b60ff84111561096f5761096f6108aa565b50506001821b6108d9565b5060208310610133831016604e8410600b841016171561099d575081810a6108d9565b6109a783836108df565b80600019048211156109bb576109bb6108aa565b029392505050565b60006108a360ff84168361092256fe2263c4378b4920f0bef611a3ff22c506afa4745b3319c50b6d704a874990b8b2a2646970667358221220d2d51b7f29eca10b0d8763feeb7d0a80e95cb6e92d95f7efff0b18420771696f64736f6c63430008120033',
  linkReferences: {
    'src/libraries/external/BorrowerActions.sol': { BorrowerActions: [Array] },
    'src/libraries/external/KickerActions.sol': { KickerActions: [Array] },
    'src/libraries/external/LPActions.sol': { LPActions: [Array] },
    'src/libraries/external/LenderActions.sol': { LenderActions: [Array] },
    'src/libraries/external/PoolCommons.sol': { PoolCommons: [Array] },
    'src/libraries/external/SettlerActions.sol': { SettlerActions: [Array] },
    'src/libraries/external/TakerActions.sol': { TakerActions: [Array] }
  },
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/clones-with-immutable-args/src/Clone.sol":{"content":"// SPDX-License-Identifier: BSD\\npragma solidity ^0.8.4;\\n\\n/// @title Clone\\n/// @author zefram.eth\\n/// @notice Provides helper functions for reading immutable args from calldata\\ncontract Clone {\\n    /// @notice Reads an immutable arg with type address\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgAddress(uint256 argOffset)\\n        internal\\n        pure\\n        returns (address arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0x60, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint256\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint256(uint256 argOffset)\\n        internal\\n        pure\\n        returns (uint256 arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := calldataload(add(offset, argOffset))\\n        }\\n    }\\n\\n    /// @notice Reads a uint256 array stored in the immutable args.\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @param arrLen Number of elements in the array\\n    /// @return arr The array\\n    function _getArgUint256Array(uint256 argOffset, uint64 arrLen)\\n        internal\\n        pure\\n      returns (uint256[] memory arr)\\n    {\\n      uint256 offset = _getImmutableArgsOffset();\\n      uint256 el;\\n      arr = new uint256[](arrLen);\\n      for (uint64 i = 0; i < arrLen; i++) {\\n        assembly {\\n          // solhint-disable-next-line no-inline-assembly\\n          el := calldataload(add(add(offset, argOffset), mul(i, 32)))\\n        }\\n        arr[i] = el;\\n      }\\n      return arr;\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint64\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint64(uint256 argOffset)\\n        internal\\n        pure\\n        returns (uint64 arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0xc0, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint8\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint8(uint256 argOffset) internal pure returns (uint8 arg) {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0xf8, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @return offset The offset of the packed immutable args in calldata\\n    function _getImmutableArgsOffset() internal pure returns (uint256 offset) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            offset := sub(\\n                calldatasize(),\\n                add(shr(240, calldataload(sub(calldatasize(), 2))), 2)\\n            )\\n        }\\n    }\\n}\\n"},"lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol":{"content":"// SPDX-License-Identifier: BSD\\n\\npragma solidity ^0.8.4;\\n\\n/// @title ClonesWithImmutableArgs\\n/// @author wighawag, zefram.eth\\n/// @notice Enables creating clone contracts with immutable args\\nlibrary ClonesWithImmutableArgs {\\n    error CreateFail();\\n\\n    /// @notice Creates a clone proxy of the implementation contract, with immutable args\\n    /// @dev data cannot exceed 65535 bytes, since 2 bytes are used to store the data length\\n    /// @param implementation The implementation contract to clone\\n    /// @param data Encoded immutable args\\n    /// @return instance The address of the created clone\\n    function clone(address implementation, bytes memory data)\\n        internal\\n        returns (address payable instance)\\n    {\\n        // unrealistic for memory ptr or data length to exceed 256 bits\\n        unchecked {\\n            uint256 extraLength = data.length + 2; // +2 bytes for telling how much data there is appended to the call\\n            uint256 creationSize = 0x41 + extraLength;\\n            uint256 runSize = creationSize - 10;\\n            uint256 dataPtr;\\n            uint256 ptr;\\n            // solhint-disable-next-line no-inline-assembly\\n            assembly {\\n                ptr := mload(0x40)\\n\\n                // -------------------------------------------------------------------------------------------------------------\\n                // CREATION (10 bytes)\\n                // -------------------------------------------------------------------------------------------------------------\\n\\n                // 61 runtime  | PUSH2 runtime (r)     | r                       | ‚Äì\\n                mstore(\\n                    ptr,\\n                    0x6100000000000000000000000000000000000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x01), shl(240, runSize)) // size of the contract running bytecode (16 bits)\\n\\n                // creation size = 0a\\n                // 3d          | RETURNDATASIZE        | 0 r                     | ‚Äì\\n                // 81          | DUP2                  | r 0 r                   | ‚Äì\\n                // 60 creation | PUSH1 creation (c)    | c r 0 r                 | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 c r 0 r               | ‚Äì\\n                // 39          | CODECOPY              | 0 r                     | [0-runSize): runtime code\\n                // f3          | RETURN                |                         | [0-runSize): runtime code\\n\\n                // -------------------------------------------------------------------------------------------------------------\\n                // RUNTIME (55 bytes + extraLength)\\n                // -------------------------------------------------------------------------------------------------------------\\n\\n                // 3d          | RETURNDATASIZE        | 0                       | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0                     | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0 0                   | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0 0 0                 | ‚Äì\\n                // 36          | CALLDATASIZE          | cds 0 0 0 0             | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 cds 0 0 0 0           | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0 cds 0 0 0 0         | ‚Äì\\n                // 37          | CALLDATACOPY          | 0 0 0 0                 | [0, cds) = calldata\\n                // 61          | PUSH2 extra           | extra 0 0 0 0           | [0, cds) = calldata\\n                mstore(\\n                    add(ptr, 0x03),\\n                    0x3d81600a3d39f33d3d3d3d363d3d376100000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x13), shl(240, extraLength))\\n\\n                // 60 0x37     | PUSH1 0x37            | 0x37 extra 0 0 0 0      | [0, cds) = calldata // 0x37 (55) is runtime size - data\\n                // 36          | CALLDATASIZE          | cds 0x37 extra 0 0 0 0  | [0, cds) = calldata\\n                // 39          | CODECOPY              | 0 0 0 0                 | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 36          | CALLDATASIZE          | cds 0 0 0 0             | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 61 extra    | PUSH2 extra           | extra cds 0 0 0 0       | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                mstore(\\n                    add(ptr, 0x15),\\n                    0x6037363936610000000000000000000000000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x1b), shl(240, extraLength))\\n\\n                // 01          | ADD                   | cds+extra 0 0 0 0       | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3d          | RETURNDATASIZE        | 0 cds 0 0 0 0           | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 73 addr     | PUSH20 0x123‚Ä¶         | addr 0 cds 0 0 0 0      | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                mstore(\\n                    add(ptr, 0x1d),\\n                    0x013d730000000000000000000000000000000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x20), shl(0x60, implementation))\\n\\n                // 5a          | GAS                   | gas addr 0 cds 0 0 0 0  | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // f4          | DELEGATECALL          | success 0 0             | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3d          | RETURNDATASIZE        | rds success 0 0         | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3d          | RETURNDATASIZE        | rds rds success 0 0     | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 93          | SWAP4                 | 0 rds success 0 rds     | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 80          | DUP1                  | 0 0 rds success 0 rds   | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3e          | RETURNDATACOPY        | success 0 rds           | [0, rds) = return data (there might be some irrelevant leftovers in memory [rds, cds+0x37) when rds < cds+0x37)\\n                // 60 0x35     | PUSH1 0x35            | 0x35 sucess 0 rds       | [0, rds) = return data\\n                // 57          | JUMPI                 | 0 rds        '... 530731 more characters
  }
}
2024-01-08T15:29:40.332Z cannon:builder:contract lib ref BorrowerActions 0x422d470fb02206733Bb770D2A27d6d98f493af64
2024-01-08T15:29:40.333Z cannon:builder:contract lib ref KickerActions 0xf419056B545783BbFfEAB4d0aA057a52FbA4F4fd
2024-01-08T15:29:40.333Z cannon:builder:contract lib ref LPActions 0xb257A98a3549a0B36b9001d0eDc9e75d313d5c8e
2024-01-08T15:29:40.333Z cannon:builder:contract lib ref LenderActions 0x7456CF19C121842FE2C3a888075A11d51ED63b98
2024-01-08T15:29:40.333Z cannon:builder:contract lib ref PoolCommons 0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540
2024-01-08T15:29:40.333Z cannon:builder:contract lib ref SettlerActions 0x9EdcD1fEc19E5baA98fa4911C90C2162524750d2
2024-01-08T15:29:40.333Z cannon:builder:contract lib ref TakerActions 0xb127207d673977e14f31f52a14AD07e6a512c5fA
2024-01-08T15:29:40.334Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x608060405234801561001057600080fd5b5060405161678738038061678783398101604081905261002f916100cd565b6001600160a01b0381166100565760405163104aee1f60e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b03831617905560405161007d906100c0565b604051809103906000f080158015610099573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055506100fd565b615c5380610b3483390190565b6000602082840312156100df57600080fd5b81516001600160a01b03811681146100f657600080fd5b9392505050565b610a288061010c6000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c80632b6983af146100935780635c60da1b146100b15780637f165b0b146100d1578063a3232bf31461010b578063a387245c1461011e578063b3d4cfa414610131578063bb6da0dd14610143578063c24dbebd14610156578063c38dc7fc14610165578063d819bfef1461017a575b600080fd5b61009b610188565b6040516100a89190610710565b60405180910390f35b6003546100c4906001600160a01b031681565b6040516100a8919061075d565b6100c46100df366004610788565b60016020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6100c46101193660046107c4565b6101ea565b6100c461012c366004610800565b610517565b6002545b6040519081526020016100a8565b6000546100c4906001600160a01b031681565b61013567016345785d8a000081565b6101356000805160206109d383398151915281565b610135662386f26fc1000081565b606060028054806020026020016040519081016040528092919081815260200182805480156101e057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101c2575b5050505050905090565b6000838383816001600160a01b0316836001600160a01b0316036102215760405163bcbac68960e01b815260040160405180910390fd5b6001600160a01b038316158061023e57506001600160a01b038216155b1561025c5760405163104aee1f60e01b815260040160405180910390fd5b80662386f26fc100001180610278575067016345785d8a000081115b156102965760405163462f085f60e01b815260040160405180910390fd5b6001600160a01b0380881660009081527fb581f7ccad64982c9898d358d7c5c86a0e89d6586f43d39b74347caf2ae08b60602090815260408083208a85168452909152902054168015610307578060405163fb8debc160e01b81526004016102fe919061075d565b60405180910390fd5b600061031288610541565b9050600061031f8a610541565b60008054604051929350909161034d9183916001600160a01b03909116908e908e9088908890602001610819565b60408051601f19818403018152919052600354909150600090610379906001600160a01b0316836105fe565b905080985088600160006000805160206109d3833981519152815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002899080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055507fee1fe091a5213b321c2662b35c0b7cd0d35d10dbcab52b3c9b8768983c67bce3896000805160206109d38339815191526040516104a69291906001600160a01b03929092168252602082015260400190565b60405180910390a160405163fe4b84df60e01b8152600481018b90526001600160a01b0382169063fe4b84df90602401600060405180830381600087803b1580156104f057600080fd5b505af1158015610504573d6000803e3d6000fd5b5050505050505050505050509392505050565b6002818154811061052757600080fd5b6000918252602090912001546001600160a01b0316905081565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561059d575060408051601f3d908101601f1916820190925261059a91810190610880565b60015b6105ba576040516333ae908b60e01b815260040160405180910390fd5b60128160ff1611156105df576040516333ae908b60e01b815260040160405180910390fd5b6105ea8160126108c0565b6105f590600a6109c3565b9150505b919050565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b60348401526000939260438401929186019084604182015b602082106106b45783518152602093840193601f199092019101610695565b835160001960208490036101000a0119908116825260f088901b91830191825286846000f098506001600160a01b03891661070257604051631d7fde3160e31b815260040160405180910390fd5b505050505050505092915050565b6020808252825182820181905260009190848201906040850190845b818110156107515783516001600160a01b03168352928401929184019160010161072c565b50909695505050505050565b6001600160a01b0391909116815260200190565b80356001600160a01b03811681146105f957600080fd5b60008060006060848603121561079d57600080fd5b833592506107ad60208501610771565b91506107bb60408501610771565b90509250925092565b6000806000606084860312156107d957600080fd5b6107e284610771565b92506107f060208501610771565b9150604084013590509250925092565b60006020828403121561081257600080fd5b5035919050565b60006002881061083957634e487b7160e01b600052602160045260246000fd5b5060f89690961b86526001600160601b0319606095861b8116600188015293851b841660158701529190931b9091166029840152603d830191909152605d820152607d0190565b60006020828403121561089257600080fd5b815160ff811681146108a357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b60ff82811682821603908111156108d9576108d96108aa565b92915050565b600181815b8085111561091a578160001904821115610900576109006108aa565b8085161561090d57918102915b93841c93908002906108e4565b509250929050565b600082610931575060016108d9565b8161093e575060006108d9565b8160018114610954576002811461095e5761097a565b60019150506108d9565b60ff84111561096f5761096f6108aa565b50506001821b6108d9565b5060208310610133831016604e8410600b841016171561099d575081810a6108d9565b6109a783836108df565b80600019048211156109bb576109bb6108aa565b029392505050565b60006108a360ff84168361092256fe2263c4378b4920f0bef611a3ff22c506afa4745b3319c50b6d704a874990b8b2a2646970667358221220d2d51b7f29eca10b0d8763feeb7d0a80e95cb6e92d95f7efff0b18420771696f64736f6c63430008120033608060405234801561001057600080fd5b506001600055615c2d80620000266000396000f3fe608060405234801561001057600080fd5b50600436106102b35760003560e01c8062cdcefb146102b85780630203d8fb146102ee5780630448e51a14610303578063063d829f146103e757806306e47f261461040a5780630729f62c1461041d57806315afd4091461043057806316f8a463146104585780632c7b2e0614610479578063307ee3b5146104b6578063329d1a8b146104bf578063332c0e43146104d25780633884cd88146104e55780633a0c8f07146105125780633ab96ec51461051a5780633fa8fdbb1461052d57806342302a9a14610535578063483cd1871461054857806348d399e71461058c5780634ab1fc36146105a15780634d966198146105aa5780634efe8af7146105c2578063540c1433146105d55780635a3b4477146105e85780635a422b921461060d5780635cffe9de146106155780635d3637e714610638578063613255ab1461064157806366ae5880146106545780636a9b1891146106675780637323f8531461067a5780637b3f8655146106ab5780637f8baa37146106b35780638349d6be146106c6578063870c764a146106e7578063987165ed146106f0578063a749f1a614610703578063a83de3ec14610716578063a918058d14610729578063a9ff9f771461073c578063ac9650d81461074f578063b1dd61b61461076f578063b1f0724714610789578063bad346201461079c578063bcb630d7146107a4578063c861c6e6146107b5578063ca103d15146107c8578063ce4396d7146107ff578063cfa8ff0314610807578063d14827911461081a578063d39d813f14610822578063d53e2b1b14610835578063d9606e0814610848578063d9d98ce414610877578063da7951a91461088a578063e512c0611461089d578063ec0bdcfc146108b2578063eca48706146108ba578063f78b0cce146108cd578063fe4b84df146108e0575b600080fd5b614011546001600160d01b03811690600160d01b900465ffffffffffff165b6040516102e5929190614849565b60405180910390f35b6103016102fc36600461486c565b6108f3565b005b61038a610311366004614898565b6001600160a01b03908116600090815260046020819052604090912080546003820154600180840154600285015494909501549054838716976001600160601b03600160a01b9586900481169885811698828116988381169890970490921695600160601b948590048216949081900482169392041690565b604080516001600160a01b039b8c168152602081019a909a528901979097526060880195909552608087019390935260a086019190915260c0850152841660e08401528316610100830152909116610120820152610140016102e5565b61400b546001600160d01b03811690600160d01b900465ffffffffffff166102d7565b6103016104183660046148f9565b610a00565b61030161042b36600461495b565b610aa8565b61044361043e36600461486c565b610b6e565b604080519283529015156020830152016102e5565b61046b61046636600461499c565b610c6d565b6040519081526020016102e5565b6104a761048736600461499c565b600090815261402060205260409020805460018201546002909201549092565b6040516102e5939291906149b5565b6140175461046b565b61046b6104cd36600461499c565b610ca8565b6104a76104e03660046149cb565b610cbb565b6104ed610e12565b604080516001600160a01b0390941684526020840192909252908201526060016102e5565b61046b610e51565b61046b61052836600461499c565b610ece565b61046b610eed565b61046b61054336600461499c565b610ef9565b61046b6105563660046149fd565b6001600160a01b039081166000908152614023602090815260408083209490931682529283528181209381529290915290205490565b610594611034565b6040516102e59190614a3f565b61401d5461046b565b6105b2611040565b6040516102e59493929190614a53565b6103016105d0366004614a6e565b611142565b61046b6105e336600461499c565b6111d2565b60035461401c5461401a5461401b5461401f545b6040516102e5959493929190614ad2565b6103016111dd565b610628610623366004614b36565b6112ad565b60405190151581526020016102e5565b6140195461046b565b61046b61064f366004614898565b611363565b61046b610662366004614ba8565b6113e0565b6102d7610675366004614bfd565b611574565b6102d7610688366004614898565b6001600160a01b0316600090815260056020526040902080546001909101549091565b61046b6116a7565b6103016106c1366004614c1f565b6116b3565b6106d96106d436600461499c565b611732565b6040516102e5929190614c60565b6140185461046b565b6103016106fe366004614c79565b611760565b6102d7610711366004614cea565b61180e565b6105fc61072436600461499c565b611858565b610301610737366004614c79565b6118b7565b61046b61074a366004614d1a565b611924565b61076261075d366004614c1f565b611acf565b6040516102e59190614dbc565b610777611bc3565b60405160ff90911681526020016102e5565b6102d7610797366004614bfd565b611bcf565b610594611cf3565b6001546001600160601b031661046b565b61046b6107c3366004614e1e565b611cff565b6104a76107d6366004614898565b6001600160a01b0316600090815261400a60205260409020805460018201546002909201549092565b610301611e52565b610301610815366004614e4a565b611f02565b6103016120a5565b610301610830366004614c1f565b6120d7565b61046b61084336600461486c565b612122565b610628610856366004614e85565b61402460209081526000928352604080842090915290825290205460ff1681565b61046b61088536600461486c565b6121cc565b61046b61089836600461499c565b6121fd565b61400e5461400f5461400c5461400d546105b2565b61046b61220a565b6103016108c8366004614bfd565b612216565b6102d76108db366004614e1e565b612275565b6103016108ee36600461499c565b612382565b6108fb612433565b6000610905612491565b9050600073f419056B545783BbFfEAB4d0aA057a52FbA4F4fd632de27df2600160066140088689896040518763ffffffff1660e01b815260040161094e96959493929190614f12565b608060405180830381865af415801561096b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098f9190615003565b90508060200151826040018181516109a7919061508c565b905250602081015160408201516109c291906000908161267b565b60408201516140185560608101516109db908390612706565b8051156109f0576109f033826000015161281a565b50506109fc6001600055565b5050565b610a08612433565b336000908152614023602090815260408083206001600160a01b038716845290915290819020905163d3f900a360e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e9163d3f900a391610a6991908790879087906004016150d1565b60006040518083038186803b158015610a8157600080fd5b505af4158015610a95573d6000803e3d6000fd5b50505050610aa36001600055565b505050565b610ab0612433565b6000610aba612491565b9050600073b127207d673977e14f31f52a14AD07e6a512c5fA632f39ec5c60016140216006614008878b8b8b610af0605d612841565b6040518a63ffffffff1660e01b8152600401610b14999897969594939291906150fc565b6101c060405180830381865af4158015610b32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b569190615166565b9050610b628183612857565b5050610aa36001600055565b600080610b79612433565b6000610b83612491565b90506000739EdcD1fEc19E5baA98fa4911C90C2162524750d263e47aaa316001614021600661400861401a8860405180606001604052808f6001600160a01b031681526020018e8152602001610bd76128f8565b8152506040518863ffffffff1660e01b8152600401610bfc979695949392919061521e565b60e060405180830381865af4158015610c19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3d9190615282565b9050610c498183612984565b80608001519350806020015160001492505050610c666001600055565b9250929050565b60008181526140216020526040812060018101548154610ca19190610c93600687612a1a565b610c9c87612a33565b612a9e565b9392505050565b6000610cb5600683612ac2565b92915050565b6000806000610cc8612433565b610cd184612ad8565b610cde6001614008612afc565b610ce9600186612ba8565b6000610cf3612491565b9050610d0a60068260400151898460a00151612c25565b610d356040518060800160405280600081526020016000815260200160008152602001600081525090565b6020810189905287815260408101879052610d51614008612c5d565b602001516001600160601b03166060820152604051633806e8ef60e01b8152600090737456CF19C121842FE2C3a888075A11d51ED63b9890633806e8ef90610da6906140219060069088908890600401615339565b608060405180830381865af4158015610dc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de79190615363565b92985090965094509050610dfb8382612706565b505050610e086001600055565b9450945094915050565b600080600080610e23614008612c5d565b905080600001518160200151610e3a614008612c70565b91966001600160601b039091169550909350915050565b604051630fc99bab60e41b815261400c600482015260009073e77bfEeB83CD09bD9b598a90f7Ce7faE02c715409063fc99bab090602401602060405180830381865af4158015610ea5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec99190615399565b905090565b6000612007826120018110610ee557610ee56153b2565b015492915050565b6000610ec96006612c81565b6000610f03612433565b600073b127207d673977e14f31f52a14AD07e6a512c5fA633c335cf361401a85610f2d603d612841565b6040518463ffffffff1660e01b8152600401610f4b939291906149b5565b6040805180830381865af4158015610f67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8b91906153c8565b9092509050610fb1333083610fa06001612c8c565b6001600160a01b0316929190612ca5565b610fbb6001612c8c565b6001600160a01b03166342966c68826040518263ffffffff1660e01b8152600401610fe891815260200190565b600060405180830381600087803b15801561100257600080fd5b505af1158015611016573d6000803e3d6000fd5b505050506110243383612d10565b5061102f6001600055565b919050565b6000610ec96015612c8c565b60405163f6eb5f8560e01b815261401754600482015261401854602482015261401954604482015261400b546001600160d01b03808216606484015260d091821c60848401526140115490811660a4840152901c60c48201526140125460e48201526140135461010482015261401454610124820152614015546101448201526140165461016482015260009081908190819073e77bfEeB83CD09bD9b598a90f7Ce7faE02c715409063f6eb5f859061018401608060405180830381865af4158015611110573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111349190615363565b935093509350935090919293565b61114a612433565b60405162b06a6b60e71b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e90635835358090611192906140219061402390614024908a908a908a908a906004016153ec565b60006040518083038186803b1580156111aa57600080fd5b505af41580156111be573d6000803e3d6000fd5b505050506111cc6001600055565b50505050565b6000610cb582612d42565b6111e5612433565b6111ef6001612d6d565b73f419056B545783BbFfEAB4d0aA057a52FbA4F4fd63f88050b7600161401a60405180608001604052806112236006612c81565b81526140195460208201526040016112396128f8565b815261400b546001600160d01b03166020909101526040516001600160e01b031960e086901b1681526112719392919060040161543a565b60006040518083038186803b15801561128957600080fd5b505af415801561129d573d6000803e3d6000fd5b505050506112ab6001600055565b565b60006112b7612433565b6112c085612d96565b6112dd57604051633cc7579b60e11b815260040160405180910390fd5b6040516369f958a560e11b815273e77bfEeB83CD09bD9b598a90f7Ce7faE02c715409063d3f2b14a9061131c908990899089908990899060040161547e565b60006040518083038186803b15801561133457600080fd5b505af4158015611348573d6000803e3d6000fd5b505050506001905061135a6001600055565b95945050505050565b600061136e82612d96565b1561102f576040516370a0823160e01b81526001600160a01b038316906370a082319061139f903090600401614a3f565b602060405180830381865afa1580156113bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb59190615399565b60006113ea612433565b60006113f4612491565b90506000611402605d612841565b905061140e8782612de0565b9650600073b127207d673977e14f31f52a14AD07e6a512c5fA630f4a0c2d60016140216006614008888f8f8a6040518963ffffffff1660e01b815260040161145d9897969594939291906154b2565b6101c060405180830381865af415801561147b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149f9190615166565b90506114b48160400151846101000151612df7565b60408201526114c38184612857565b805193506114d18785612e26565b8415611559576001600160a01b038716634bbd32d56114f0848761551e565b8561010001518460400151611505919061551e565b89896040518563ffffffff1660e01b81526004016115269493929190615532565b600060405180830381600087803b15801561154057600080fd5b505af1158015611554573d6000803e3d6000fd5b505050505b61156733826040015161281a565b50505061135a6001600055565b60008061157f612433565b61158c6001614008612afc565b6000611596612491565b90506115ab856115a6605d612841565b612de0565b9450737456CF19C121842FE2C3a888075A11d51ED63b986380f2fcd061402160066115d588612d42565b89896040518663ffffffff1660e01b81526004016115f7959493929190614ad2565b6040805180830381865af4158015611613573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163791906153c8565b6040519194509250849033907f90895bc82397742e0cea4685e72279103862a03bee6bbe1d71265c7aeb111527906116729087908790614849565b60405180910390a36116928161168d60068460600151612e48565b612706565b61169c3384612e26565b50610c666001600055565b6000610ec9603d612841565b3360009081526140246020526040908190209051634b740e8f60e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e91634b740e8f916116fe919086908690600401615552565b60006040518083038186803b15801561171657600080fd5b505af415801561172a573d6000803e3d6000fd5b505050505050565b600080600061174361400885612e5c565b805160209091015190956001600160601b03909116945092505050565b611768612433565b336000908152614023602090815260408083206001600160a01b038916845290915290819020905163e817b3fb60e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e9163e817b3fb916117cd9190899089908990899089906004016155aa565b60006040518083038186803b1580156117e557600080fd5b505af41580156117f9573d6000803e3d6000fd5b505050506118076001600055565b5050505050565b6000828152614021602090815260408083206001600160a01b0385168452600381019092528220600181015460028301549092919083111561184f57805493505b50509250929050565b60008060008060008061186c600688612edc565b60008881526140216020526040902080546001820154600283015493945091929091906118a38561189e60068e612f49565b612ff7565b929b919a5098509096509194509092505050565b6118bf612433565b336000908152614023602090815260408083206001600160a01b0389168452909152908190209051633110094360e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e916331100943916117cd9190899089908990899089906004016155aa565b600061192e612433565b6000611938612491565b905060001986146119555761195286826101000151612de0565b95505b611963856115a6605d612841565b9450600073422d470fb02206733Bb770D2A27d6d98f493af646382c9345160016006614008868d8d8d8c6040518963ffffffff1660e01b81526004016119b09897969594939291906155e8565b61014060405180830381865af41580156119ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f2919061563e565b60a0810151604080830151606086015260808084015160208088019190915284015190860152825190519195509192506001600160a01b038a16917fef9d6dc34b1e6893b8746b03ac07fd084909654a5cedab240265a8d1bd584dc291611a5d9187918b91906149b5565b60405180910390a2611a838160c001518260e0015183610100015184610120015161267b565b611a91828260000151612706565b8215611aaa57602082015161401955611aaa338461281a565b8515611ac357608082015161401755611ac38587612e26565b505061135a6001600055565b6060816001600160401b03811115611ae957611ae9614f54565b604051908082528060200260200182016040528015611b1c57816020015b6060815260200190600190039081611b075790505b50905060005b82811015611bbc57611b8c30858584818110611b4057611b406153b2565b9050602002810190611b5291906156c5565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061302b92505050565b828281518110611b9e57611b9e6153b2565b60200260200101819052508080611bb49061570b565b915050611b22565b5092915050565b6000610ec96000613050565b600080611bda612433565b611be76001614008612afc565b6000611bf1612491565b9050611c0860068260400151868460a00151612c25565b6000737456CF19C121842FE2C3a888075A11d51ED63b98635086572061402160068560405180606001604052808b8152602001611c4c8d611c47613069565b6130a7565b8152602001611c5c614008612c5d565b602001516001600160601b03168152506040518563ffffffff1660e01b8152600401611c8b9493929190615724565b606060405180830381865af4158015611ca8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ccc9190615767565b91955093509050611cdd8282612706565b611ce73385612d10565b5050610c666001600055565b6000610ec96029612c8c565b6000611d09612433565b611d1282612ad8565b6000611d1c612491565b90508415801590611d345750611d3184612d42565b85105b15611d52576040516345b3f65d60e01b815260040160405180910390fd5b611d60856115a6605d612841565b604051631752f09d60e31b8152909550737456CF19C121842FE2C3a888075A11d51ED63b989063ba9784e890611da390614021906006908a908a90600401614a53565b602060405180830381865af4158015611dc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de49190615399565b915083336001600160a01b03167fa9387d09ded47dbc173eb751964c0c7b7e0a1165939b958fafc8109337597f948785604051611e22929190614849565b60405180910390a3611e3d8161168d60068460600151612e48565b611e4733866130be565b50610ca16001600055565b611e5a612433565b6000611e64612491565b9050600073422d470fb02206733Bb770D2A27d6d98f493af64634700688d60016006614008866040518563ffffffff1660e01b8152600401611ea99493929190615795565b602060405180830381865af4158015611ec6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eea9190615399565b9050611ef68282612706565b50506112ab6001600055565b611f0a612433565b6000611f14612491565b9050611f2584826101000151612de0565b9350611f35826115a6605d612841565b9150600073422d470fb02206733Bb770D2A27d6d98f493af6463ea067a576001600661400886611f63613069565b8c8c8c8c6040518a63ffffffff1660e01b8152600401611f8b999897969594939291906157b8565b61012060405180830381865af4158015611fa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fcd9190615814565b9050856001600160a01b03167f49a2aab2f4f7ca5c6ba6d413b46a0a09d91d10188fd94b8e23c3225362d12b5086858460000151604051612010939291906149b5565b60405180910390a2604081015160608301526080808201516020808501919091528201519083015260a081015160c082015160e08301516101008401516120599392919061267b565b612067828260000151612706565b82156120805760808201516140175561208033846130be565b8415612099576020820151614019556120993386612d10565b50506111cc6001600055565b6120ad612433565b60006120b7612491565b90506120cc8161168d60068460600151612e48565b506112ab6001600055565b336000908152614024602052604090819020905163296bff2560e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e9163296bff25916116fe919086908690600401615552565b600061212c612433565b6040516347a7428b60e11b8152600160048201526001600160a01b03841660248201526044810183905273f419056B545783BbFfEAB4d0aA057a52FbA4F4fd90638f4e851690606401602060405180830381865af4158015612192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b69190615399565b90506121c28382612d10565b610cb56001600055565b60006121d783612d96565b6121f457604051633cc7579b60e11b815260040160405180910390fd5b50600092915050565b6000610cb56006836130e0565b6000610ec9605d612841565b61221e612433565b6000612228612491565b9050600073f419056B545783BbFfEAB4d0aA057a52FbA4F4fd63062f2dea60016006614021614008878a8a6040518863ffffffff1660e01b815260040161094e979695949392919061588f565b600080612280612433565b61228983612ad8565b6122966001614008612afc565b6122a1600185612ba8565b60006122ab612491565b90506122bc86826101000151612de0565b604080518082018252828152602081018890529051632f9fa10360e01b8152919750600091737456CF19C121842FE2C3a888075A11d51ED63b9891632f9fa10391612312916140219160069188916004016158d1565b606060405180830381865af415801561232f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123539190615767565b919550935090506123648282612706565b61236e338861281a565b505061237a6001600055565b935093915050565b6140225460ff16156123a65760405162dc149f60e41b815260040160405180910390fd5b65ffffffffffff4216600160d01b02670de0b6b3a7640000811761400b556001600160d01b0382161761401155612422614008604080518082019091526000808252602080830182815284546001810186559483529120915190516001600160601b0316600160a01b026001600160a01b039190911617910155565b50614022805460ff19166001179055565b60026000540361248a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055565b6124e5604051806101200160405280600060ff168152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b61401954602082015261401854604082015261401754608082015261400b546001600160d01b0390811660a0830152614011541660e08201526125286000613050565b60ff168152612537603d612841565b6101008201526020810151156126785761255981602001518260a00151612ff7565b606082015261400b5460009061257e90600160d01b900465ffffffffffff1642615909565b8015801560c08501529091506126765773e77bfEeB83CD09bD9b598a90f7Ce7faE02c71540639b5bef8661400c6006856125b9614008612c5d565b60200151866040518663ffffffff1660e01b81526004016125de95949392919061591c565b6040805180830381865af4925050508015612616575060408051601f3d908101601f19168201909252612613918101906153c8565b60015b61263d57600060c08301819052604051600080516020615bb18339815191529190a1612676565b60a0840182905260208401516126539083612ff7565b606085015261401f805482919060009061266e90849061508c565b909155505050505b505b90565b60008260000361268c5760006126a2565b82612698600287615a3a565b6126a2919061551e565b90506000826000036126b55760006126cb565b826126c1600287615a3a565b6126cb919061551e565b9050811515806126da57508015155b1561172a57614014546126ed828261508c565b90506126f98382615909565b6140145550505050505050565b604051635676e1ff60e01b815273e77bfEeB83CD09bD9b598a90f7Ce7faE02c7154090635676e1ff9061274a906140119061400c9060069088908890600401615a49565b60006040518083038186803b15801561276257600080fd5b505af4925050508015612773575060015b61278f57604051600080516020615bb183398151915290600090a15b6040805180820190915261400b546001600160d01b0381168252600160d01b900465ffffffffffff16602082015260009081906127cd9085906131eb565b61400b80546001600160d01b0319166001600160d01b038416179055909250905080156111cc57505061400b80546001600160d01b0316600160d01b4265ffffffffffff16021790555050565b600061282f8261282a603d612841565b61326b565b9050610aa3833083610fa06029612c8c565b60008061284c613284565b929092013592915050565b60a0820151606082015260c08201516020820152610100820151604082018051612882908390615909565b90525060208201518251612896919061508c565b816080018181516128a79190615909565b905250610120820151156128cd576128cd60008361016001516000856101a0015161267b565b60208101516140195560408101516140185560808101516140175560e08201516109fc908290612706565b6000612904603d612841565b61290e6029612c8c565b6001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016129399190614a3f565b602060405180830381865afa158015612956573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061297a9190615399565b610ec99190615a7d565b8160c001518160600181815161299a9190615909565b90525060a08201516020820180516129b3908390615909565b90525060a08201516040820180516129cc908390615909565b90525060808083015190820180516129e5908390615909565b90525060208101516140195560408101516140185560808101516140175560608101516109fc90829061168d90600690612e48565b6000610ca1612a298484612f49565b61189e8585612edc565b600080612a428361103c615a94565b9050610c9f19811280612a56575061103c81135b15612a7457604051637edf443b60e11b815260040160405180910390fd5b610ca1612a99612a8383613295565b612a94670df27a2cdf448000613320565b613404565b6134c9565b6000612ab7858585670de0b6b3a7640000866001613560565b90505b949350505050565b6000612ace83836135d8565b5090949350505050565b80421115612af9576040516338e5e54b60e21b815260040160405180910390fd5b50565b8154600160601b90046001600160a01b031660008181526003840160205260409020600101546001600160601b031680156111cc576203f480612b3f8242615909565b1115612b5e576040516335bdb41f60e01b815260040160405180910390fd5b6001600160a01b03821660009081526002840160205260409020805415801590612b8a57506001810154155b15611807576040516335bdb41f60e01b815260040160405180910390fd5b8154600160601b90046001600160a01b03168015610aa3576001600160a01b038116600090815260038401602052604081206002810154600190910154612bfb916001600160601b0390811691166136c8565b905080612c0784612a33565b106111cc576040516322c7e87760e11b815260040160405180910390fd5b82156111cc57612c3e84612c398584612ff7565b612ac2565b82116111cc5760405163dd47b04360e01b815260040160405180910390fd5b612c65614832565b610cb5826001612e5c565b8054600090610cb590600190615909565b600081612000610ee5565b600080612c97613284565b929092013560601c92915050565b6040516001600160a01b03808516602483015283166044820152606481018290526111cc9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526137e7565b6109fc82612d1e603d612841565b612d28908461551e565b612d326029612c8c565b6001600160a01b031691906138b9565b600080612d4e836138d8565b9050610ca1612d5d605d612841565b612d6883600a615ab4565b613936565b80546001600160601b031615612af9576040516359bfb80360e11b815260040160405180910390fd5b6000612da26029612c8c565b6001600160a01b0316826001600160a01b03161480610cb55750612dc66015612c8c565b6001600160a01b0316826001600160a01b03161492915050565b600081612ded818561551e565b610ca19190615a7d565b6000612e038284615ac0565b600003612e11575081610cb5565b81612e1c8484612de0565b610ca1919061508c565b6109fc82612e34605d612841565b612e3e908461551e565b612d326015612c8c565b6000610ca1612e578484612ac2565b612a33565b612e64614832565b82548210612e85576040805180820190915260008082526020820152610ca1565b826000018281548110612e9a57612e9a6153b2565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091529392505050565b6000612ee78261570b565b9150670de0b6b3a764000090505b6120008211610cb55760008361200101836120018110612f1757612f176153b2565b015490508015612f2e57612f2b8282612ff7565b91505b612f3783613946565b612f41908461508c565b925050612ef5565b6000612f548261570b565b9150600183836120018110612f6b57612f6b6153b2565b0154915060008060005b858416600003612fed57612f898487615909565b925086836120018110612f9e57612f9e6153b2565b015491508661200101836120018110612fb957612fb96153b2565b0154905080600003612fcb5781612fd5565b612fd58183612ff7565b612fdf9086615909565b9450600184901b9350612f75565b5050505092915050565b6000670de0b6b3a764000061300d60028261551e565b6130178486615a7d565b613021919061508c565b610ca1919061551e565b6060610ca18383604051806060016040528060278152602001615bd160279139613965565b60008061305b613284565b929092013560f81c92915050565b6000806130746128f8565b61401c5460035491925060009161308b919061508c565b9050808211156130a25761309f8183615909565b92505b505090565b6000818311156130b75781610ca1565b5090919050565b60006130ce8261282a605d612841565b9050610aa3833083610fa06015612c8c565b60006130eb8261570b565b9150670de0b6b3a764000061200060008061310586613946565b905060005b8184106131e05761311b848461508c565b9050612000811161310a576000886120010182612001811061313f5761313f6153b2565b01549050878516156131c057600089836120018110613160576131606153b2565b015490508160000361317b576131768782612ff7565b61319d565b61319d6131888389615a7d565b826a0c097ce7bc90715b34b9f160241b6139d3565b6131a7908961508c565b97508294508885036131ba5750506131e0565b506131d3565b80156131d3576131d08682613a82565b95505b600185901c94505061310a565b505050505092915050565b805160c083015160009015613212576132078460a00151613a97565b915060019050610c66565b836060015160000361322f57613207670de0b6b3a7640000613a97565b82516001600160d01b0316670de0b6b3a764000014801561325c575042836020015165ffffffffffff1614155b15610c66575060019250929050565b600081600161327a828661508c565b6130219190615909565b600119368181013560f01c90030190565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156132d55760405163e608e18b60e01b815260048101839052602401612481565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315613312576040516371f72a3160e01b815260048101839052602401612481565b50670de0b6b3a76400000290565b60008082136133455760405163309fa7dd60e11b815260048101839052602401612481565b6000670de0b6b3a7640000831261335e57506001613377565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b600061338c670de0b6b3a76400008505613b00565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff1981016133b657505002919050565b6706f05b59d3b200005b60008113156133fb57670de0b6b3a7640000828002059150671bc16d674ec8000082126133f3579384019360019190911d905b60011d6133c0565b50505002919050565b6000600160ff1b83148061341b5750600160ff1b82145b1561343957604051630d01a11b60e21b815260040160405180910390fd5b6000806000851261344a578461344f565b846000035b91506000841261345f5783613464565b836000035b905060006134728383613bde565b90506001600160ff1b0381111561349f5760405163bf79e8d960e01b815260048101829052602401612481565b6000198087139086138082186001146134b857826134bd565b826000035b98975050505050505050565b60008082121561351c5768033dd1780914b97114198212156134ed57506000919050565b6134f9826000036134c9565b6a0c097ce7bc90715b34b9f160241b8161351557613515615508565b0592915050565b680a688906bd8b00000082126135485760405163e69458f960e01b815260048101839052602401612481565b670de0b6b3a7640000604083901b04610ca181613ca4565b60008415801561356e575086155b1561357a5750826135ce565b856000036135895750826135ce565b6135cb6135968489615a7d565b6135a8670de0b6b3a764000088615a7d565b6135b2919061508c565b856135c5670de0b6b3a76400008a615a7d565b85614336565b90505b9695505050505050565b60008080611000670de0b6b3a764000082808080805b86156136ba576135fe878b61508c565b93508b846120018110613613576136136153b2565b015492508b6120010184612001811061362e5761362e6153b2565b0154915081600003613649576136448684612ff7565b61366b565b61366b6136568388615a7d565b846a0c097ce7bc90715b34b9f160241b6139d3565b613675908661508c565b90508a81101561369457611cdc841161368f578399508094505b6136ae565b81156136a7576136a48683613a82565b95505b8098508597505b600187901c96506135ee565b505050505050509250925092565b6000806136f96136d88442615909565b6136ea90670de0b6b3a7640000615a7d565b680340aad21b3b700000614387565b9050600068068155a43676e0000082101561374857613726670de0b6b3a763ffff19612a9460148561551e565b90506137358561189e836134c9565b61374190610100615a7d565b92506137df565b682d89577d7d4020000082101561379f57613785670de0b6b3a763ffff19607861377b68068155a43676e0000086615909565b612a94919061551e565b90506137948561189e836134c9565b613741906004615a7d565b6137c1670de0b6b3a763ffff19603c61377b682d89577d7d4020000086615909565b905060106137d28661189e846134c9565b6137dc919061551e565b92505b505092915050565b600061383c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166143a79092919063ffffffff16565b805190915015610aa3578080602001905181019061385a9190615ad4565b610aa35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401612481565b610aa38363a9059cbb60e01b8484604051602401612cd9929190614c60565b6000610f3c82111561102f5760006138f2610f3c84615909565b9050600061392261391d61390e84670de0b6b3a7640000615af1565b6801f399b1438a1000006143b6565b61447c565b9050612aba670de0b6b3a764000082615b21565b6000818310156130b75781610ca1565b6000811561102f5761395d6000198318600161508c565b909116919050565b6060600080856001600160a01b0316856040516139829190615b4f565b600060405180830381855af49150503d80600081146139bd576040519150601f19603f3d011682016040523d82523d6000602084013e6139c2565b606091505b50915091506135ce868383876144f2565b6000808060001985870985870292508281108382030391505080600003613a0d57838281613a0357613a03615508565b0492505050610ca1565b808411613a1957600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000670de0b6b3a76400006130218385615a7d565b60006001600160d01b038211156126765760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663038206269747360c81b6064820152608401612481565b6000600160801b8210613b2057608091821c91613b1d908261508c565b90505b600160401b8210613b3e57604091821c91613b3b908261508c565b90505b600160201b8210613b5c57602091821c91613b59908261508c565b90505b620100008210613b7957601091821c91613b76908261508c565b90505b6101008210613b9557600891821c91613b92908261508c565b90505b60108210613bb057600491821c91613bad908261508c565b90505b60048210613bcb57600291821c91613bc8908261508c565b90505b6002821061102f57610cb560018261508c565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110613c225760405163698d9a0160e11b815260048101829052602401612481565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff8211905082600003613c605780670de0b6b3a7640000850401945050505050610cb5565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615613cc45768016a09e667f3bcc9090260401c5b6001603e1b821615613cdf576801306fe0a31b7152df0260401c5b6001603d1b821615613cfa576801172b83c7d517adce0260401c5b6001603c1b821615613d155768010b5586cf9890f62a0260401c5b6001603b1b821615613d30576801059b0d31585743ae0260401c5b6001603a1b821615613d4b57680102c9a3e778060ee70260401c5b600160391b821615613d665768010163da9fb33356d80260401c5b600160381b821615613d8157680100b1afa5abcbed610260401c5b600160371b821615613d9c5768010058c86da1c09ea20260401c5b600160361b821615613db7576801002c605e2e8cec500260401c5b600160351b821615613dd257680100162f3904051fa10260401c5b600160341b821615613ded576801000b175effdc76ba0260401c5b600160331b821615613e0857680100058ba01fb9f96d0260401c5b600160321b821615613e235768010002c5cc37da94920260401c5b600160311b821615613e3e576801000162e525ee05470260401c5b600160301b821615613e595768010000b17255775c040260401c5b6001602f1b821615613e74576801000058b91b5bc9ae0260401c5b6001602e1b821615613e8f57680100002c5c89d5ec6d0260401c5b6001602d1b821615613eaa5768010000162e43f4f8310260401c5b6001602c1b821615613ec557680100000b1721bcfc9a0260401c5b6001602b1b821615613ee05768010000058b90cf1e6e0260401c5b6001602a1b821615613efb576801000002c5c863b73f0260401c5b600160291b821615613f1657680100000162e430e5a20260401c5b600160281b821615613f31576801000000b1721835510260401c5b600160271b821615613f4c57680100000058b90c0b490260401c5b600160261b821615613f675768010000002c5c8601cc0260401c5b600160251b821615613f82576801000000162e42fff00260401c5b600160241b821615613f9d5768010000000b17217fbb0260401c5b600160231b821615613fb8576801000000058b90bfce0260401c5b600160221b821615613fd357680100000002c5c85fe30260401c5b600160211b821615613fee5768010000000162e42ff10260401c5b600160201b82161561400957680100000000b17217f80260401c5b63800000008216156140245768010000000058b90bfc0260401c5b634000000082161561403f576801000000002c5c85fe0260401c5b632000000082161561405a57680100000000162e42ff0260401c5b6310000000821615614075576801000000000b17217f0260401c5b630800000082161561409057680100000000058b90c00260401c5b63040000008216156140ab5768010000000002c5c8600260401c5b63020000008216156140c6576801000000000162e4300260401c5b63010000008216156140e15768010000000000b172180260401c5b628000008216156140fb576801000000000058b90c0260401c5b6240000082161561411557680100000000002c5c860260401c5b6220000082161561412f5768010000000000162e430260401c5b6210000082161561414957680100000000000b17210260401c5b620800008216156141635768010000000000058b910260401c5b6204000082161561417d576801000000000002c5c80260401c5b6202000082161561419757680100000000000162e40260401c5b620100008216156141b05761b172600160401b010260401c5b6180008216156141c8576158b9600160401b010260401c5b6140008216156141e057612c5d600160401b010260401c5b6120008216156141f85761162e600160401b010260401c5b61100082161561421057610b17600160401b010260401c5b6108008216156142285761058c600160401b010260401c5b610400821615614240576102c6600160401b010260401c5b61020082161561425857610163600160401b010260401c5b61010082161561426f5760b1600160401b010260401c5b6080821615614285576059600160401b010260401c5b604082161561429b57602c600160401b010260401c5b60208216156142b1576016600160401b010260401c5b60108216156142c757600b600160401b010260401c5b60088216156142dd576006600160401b010260401c5b60048216156142f3576003600160401b010260401c5b6002821615614309576001600160401b010260401c5b600182161561431f576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6000806143448686866139d3565b9050600183600281111561435a5761435a615b6b565b14801561437757506000848061437257614372615508565b868809115b15612ab7576135ce60018261508c565b60008161439560028261551e565b613017670de0b6b3a764000086615a7d565b6060612aba848460008561456b565b6000600160ff1b8314806143cd5750600160ff1b82145b156143eb5760405163b3c754a360e01b815260040160405180910390fd5b600080600085126143fc5784614401565b846000035b9150600084126144115783614416565b836000035b9050600061442d83670de0b6b3a764000084614646565b90506001600160ff1b0381111561445a57604051637cb4bef560e01b815260048101829052602401612481565b60001980871390861380821860011461447357826134bd565b6134bd83615b81565b6000808212156144a25760405163608c83ff60e11b815260048101839052602401612481565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f908213156144df57604051632c482c3960e01b815260048101839052602401612481565b610cb5670de0b6b3a7640000830261469a565b6060831561456157825160000361455a576001600160a01b0385163b61455a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401612481565b5081612aba565b612aba8383614808565b6060824710156145cc5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401612481565b600080866001600160a01b031685876040516145e89190615b4f565b60006040518083038185875af1925050503d8060008114614625576040519150601f19603f3d011682016040523d82523d6000602084013e61462a565b606091505b509150915061463b878383876144f2565b979650505050505050565b600080806000198587098587029250828110838203039150508060000361467657838281613a0357613a03615508565b838110613a19578084604051631dcf306360e21b8152600401612481929190614849565b6000816000036146ac57506000919050565b50600181600160801b81106146c65760409190911b9060801c5b600160401b81106146dc5760209190911b9060401c5b600160201b81106146f25760109190911b9060201c5b6201000081106147075760089190911b9060101c5b610100811061471b5760049190911b9060081c5b6010811061472e5760029190911b9060041c5b6008811061473e57600182901b91505b600182848161474f5761474f615508565b048301901c9150600182848161476757614767615508565b048301901c9150600182848161477f5761477f615508565b048301901c9150600182848161479757614797615508565b048301901c915060018284816147af576147af615508565b048301901c915060018284816147c7576147c7615508565b048301901c915060018284816147df576147df615508565b048301901c915060008284816147f7576147f7615508565b04905080831015610ca15782612aba565b8151156148185781518083602001fd5b8060405162461bcd60e51b81526004016124819190615b9d565b604080518082019091526000808252602082015290565b918252602082015260400190565b6001600160a01b0381168114612af957600080fd5b6000806040838503121561487f57600080fd5b823561488a81614857565b946020939093013593505050565b6000602082840312156148aa57600080fd5b8135610ca181614857565b60008083601f8401126148c757600080fd5b5081356001600160401b038111156148de57600080fd5b6020830191508360208260051b8501011115610c6657600080fd5b60008060006040848603121561490e57600080fd5b833561491981614857565b925060208401356001600160401b0381111561493457600080fd5b614940868287016148b5565b9497909650939450505050565b8015158114612af957600080fd5b60008060006060848603121561497057600080fd5b833561497b81614857565b9250602084013561498b8161494d565b929592945050506040919091013590565b6000602082840312156149ae57600080fd5b5035919050565b9283526020830191909152604082015260600190565b600080600080608085870312156149e157600080fd5b5050823594602084013594506040840135936060013592509050565b600080600060608486031215614a1257600080fd5b833592506020840135614a2481614857565b91506040840135614a3481614857565b809150509250925092565b6001600160a01b0391909116815260200190565b93845260208401929092526040830152606082015260800190565b60008060008060608587031215614a8457600080fd5b8435614a8f81614857565b93506020850135614a9f81614857565b925060408501356001600160401b03811115614aba57600080fd5b614ac6878288016148b5565b95989497509550505050565b948552602085019390935260408401919091526060830152608082015260a00190565b60008083601f840112614b0757600080fd5b5081356001600160401b03811115614b1e57600080fd5b602083019150836020828501011115610c6657600080fd5b600080600080600060808688031215614b4e57600080fd5b8535614b5981614857565b94506020860135614b6981614857565b93506040860135925060608601356001600160401b03811115614b8b57600080fd5b614b9788828901614af5565b969995985093965092949392505050565b600080600080600060808688031215614bc057600080fd5b8535614bcb81614857565b9450602086013593506040860135614be281614857565b925060608601356001600160401b03811115614b8b57600080fd5b60008060408385031215614c1057600080fd5b50508035926020909101359150565b60008060208385031215614c3257600080fd5b82356001600160401b03811115614c4857600080fd5b614c54858286016148b5565b90969095509350505050565b6001600160a01b03929092168252602082015260400190565b600080600080600060608688031215614c9157600080fd5b8535614c9c81614857565b945060208601356001600160401b0380821115614cb857600080fd5b614cc489838a016148b5565b90965094506040880135915080821115614cdd57600080fd5b50614b97888289016148b5565b60008060408385031215614cfd57600080fd5b823591506020830135614d0f81614857565b809150509250929050565b600080600080600060a08688031215614d3257600080fd5b8535614d3d81614857565b945060208601359350604086013592506060860135614d5b81614857565b949793965091946080013592915050565b60005b83811015614d87578181015183820152602001614d6f565b50506000910152565b60008151808452614da8816020860160208601614d6c565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614e1157603f19888603018452614dff858351614d90565b94509285019290850190600101614de3565b5092979650505050505050565b600080600060608486031215614e3357600080fd5b505081359360208301359350604090920135919050565b60008060008060808587031215614e6057600080fd5b8435614e6b81614857565b966020860135965060408601359560600135945092505050565b60008060408385031215614e9857600080fd5b8235614ea381614857565b91506020830135614d0f81614857565b60ff81511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c0810151151560c083015260e081015160e08301526101008082015181840152505050565b86815260208101869052604081018590526101c08101614f356060830186614eb3565b6001600160a01b03939093166101808201526101a00152949350505050565b634e487b7160e01b600052604160045260246000fd5b6040516101c081016001600160401b0381118282101715614f9b57634e487b7160e01b600052604160045260246000fd5b60405290565b60405161014081016001600160401b0381118282101715614f9b57634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715614f9b57634e487b7160e01b600052604160045260246000fd5b60006080828403121561501557600080fd5b604051608081016001600160401b038111828210171561504557634e487b7160e01b600052604160045260246000fd5b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610cb557610cb5615076565b81835260006001600160fb1b038311156150b857600080fd5b8260051b80836020870137939093016020019392505050565b8481526001600160a01b03841660208201526060604082018190526000906135ce908301848661509f565b6000610220820190508a82528960208301528860408301528760608301526151276080830188614eb3565b6001600160a01b03959095166101a08201529215156101c08401526101e08301919091526102009091015295945050505050565b805161102f8161494d565b60006101c0828403121561517957600080fd5b615181614f6a565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101206151e581850161515b565b908201526101408381015190820152610160808401519082015261018080840151908201526101a0928301519281019290925250919050565b60006102208201905088825287602083015286604083015285606083015284608083015261524f60a0830185614eb3565b82516001600160a01b03166101c083015260208301516101e0830152604090920151610200909101529695505050505050565b600060e0828403121561529457600080fd5b60405160e081016001600160401b03811182821017156152c457634e487b7160e01b600052604160045260246000fd5b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b805182526020810151602083015260408101516040830152606081015160608301525050565b848152602081018490526101e081016153556040830185614eb3565b61135a610160830184615313565b6000806000806080858703121561537957600080fd5b505082516020840151604085015160609095015191969095509092509050565b6000602082840312156153ab57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600080604083850312156153db57600080fd5b505080516020909101519092909150565b87815260208101879052604081018690526001600160a01b0385811660608301528416608082015260c060a0820181905260009061542d908301848661509f565b9998505050505050505050565b8381526020810183905260c08101612aba6040830184615313565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b03868116825285166020820152604081018490526080606082018190526000906135cb9083018486615455565b6000610200820190508982528860208301528760408301528660608301526154dd6080830187614eb3565b6001600160a01b03949094166101a08201526101c08101929092526101e09091015295945050505050565b634e487b7160e01b600052601260045260246000fd5b60008261552d5761552d615508565b500490565b8481528360208201526060604082015260006135ce606083018486615455565b83815260406020808301829052908201839052600090849060608401835b8681101561559e57833561558381614857565b6001600160a01b031682529282019290820190600101615570565b50979650505050505050565b8681526001600160a01b03861660208201526080604082018190526000906155d5908301868861509f565b828103606084015261542d81858761509f565b8881526020810188905260408101879052610200810161560b6060830188614eb3565b6001600160a01b03959095166101808201526101a08101939093526101c08301919091526101e090910152949350505050565b6000610140828403121561565157600080fd5b615659614fa1565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152508091505092915050565b6000808335601e198436030181126156dc57600080fd5b8301803591506001600160401b038211156156f657600080fd5b602001915036819003821315610c6657600080fd5b60006001820161571d5761571d615076565b5060010190565b848152602081018490526101c081016157406040830185614eb3565b8251610160830152602083015161018083015260408301516101a083015295945050505050565b60008060006060848603121561577c57600080fd5b8351925060208401519150604084015190509250925092565b8481526020810184905260408101839052610180810161135a6060830184614eb3565b898152602081018990526040810188905261022081016157db6060830189614eb3565b6101808201969096526001600160a01b03949094166101a08501526101c08401929092526101e083015261020090910152949350505050565b6000610120828403121561582757600080fd5b61582f614fd2565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152508091505092915050565b60006101e0820190508882528760208301528660408301528560608301526158ba6080830186614eb3565b6101a08201939093526101c0015295945050505050565b848152602081018490526101a081016158ed6040830185614eb3565b8251610160830152602083015161018083015295945050505050565b81810381811115610cb557610cb5615076565b858152602081018590526101a081016159386040830186614eb3565b6001600160601b039390931661016082015261018001529392505050565b600181815b8085111561599157816000190482111561597757615977615076565b8085161561598457918102915b93841c939080029061595b565b509250929050565b6000826159a857506001610cb5565b816159b557506000610cb5565b81600181146159cb57600281146159d5576159f1565b6001915050610cb5565b60ff8411156159e6576159e6615076565b50506001821b610cb5565b5060208310610133831016604e8410600b8410161715615a14575081810a610cb5565b615a1e8383615956565b8060001904821115615a3257615a32615076565b029392505050565b6000610ca160ff841683615999565b85815260208101859052604081018490526101a08101615a6c6060830185614eb3565b826101808301529695505050505050565b8082028115828204841417610cb557610cb5615076565b8181036000831280158383131683831282161715611bbc57611bbc615076565b6000610ca18383615999565b600082615acf57615acf615508565b500690565b600060208284031215615ae657600080fd5b8151610ca18161494d565b80820260008212600160ff1b84141615615b0d57615b0d615076565b8181058314821517610cb557610cb5615076565b600082615b3057615b30615508565b600160ff1b821460001984141615615b4a57615b4a615076565b500590565b60008251615b61818460208701614d6c565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b6000600160ff1b8201615b9657615b96615076565b5060000390565b602081526000610ca16020830184614d9056fe84da056cd0ff5380ec35a74f131057a96626a24305fa137c235bdbe1b414a396416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122020fcca66fe829c6344c335dbcbe77ca99f0a28fd638c8a8da5a6986449bb08c064736f6c63430008120033","args":["0x6c518f9D1a163379235816c543E62922a79863Fa"],"salt":"AJNA","value":[]}
2024-01-08T15:29:40.341Z cannon:builder:runtime resolve artifact ERC721PoolFactory
2024-01-08T15:29:40.341Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:29:49.107Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/ERC721PoolFactory.sol': 'ERC721PoolFactory' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/clones-with-immutable-args/src/Clone.sol': {
      keccak256: '0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545',
      urls: [Array],
      license: 'BSD'
    },
    'lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol': {
      keccak256: '0xcb7cbb68b8a90e6eff9c7a29f5b7d5964e0cedc0ad8133f5bcb3ec3a9aeb391c',
      urls: [Array],
      license: 'BSD'
    },
    'lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol': {
      keccak256: '0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol': {
      keccak256: '0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol': {
      keccak256: '0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol': {
      keccak256: '0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Address.sol': {
      keccak256: '0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Multicall.sol': {
      keccak256: '0x35e30a35e23f856cbcee3558b7efdd83f6017a8f1b419710645143d98e892463',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol': {
      keccak256: '0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathUD60x18.sol': {
      keccak256: '0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/ERC721Pool.sol': {
      keccak256: '0xce94095e9d2022c001506ef1901515d9adf7f639b3b01c14b6bc2de5633ea0e2',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/ERC721PoolFactory.sol': {
      keccak256: '0xa44628e67dfe4b35e7d73fbe30db5a09551196e4a3061087bacaee14fac87237',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/FlashloanablePool.sol': {
      keccak256: '0x1f3767f4d27c13ef2c53bcf49c1d5917c77b2d3fb7a28576f0c2a131a8377f6f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/Pool.sol': {
      keccak256: '0x87159e77eeee256f1501035738bb015a1d4d360fab31ea077f4ddcaff4e54d22',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/PoolDeployer.sol': {
      keccak256: '0x81b87acb71ecdbb00a37f4b0b23d21554692bde445fbc19871353bcce128d53e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPoolFactory.sol': {
      keccak256: '0x53d72e58a4b0d6a5e8aeb23a2f40262636c823170037179220ec29ca403dae76',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721Pool.sol': {
      keccak256: '0x2873a73b910d1a1a2d403dac08ecec0afd1b58142185e27565edfa695d278b95',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolBorrowerActions.sol': {
      keccak256: '0x3c80e33d8fe71470d391af54e9a70c124e9677b9f8848a8d8d77ee1f6182ce21',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolErrors.sol': {
      keccak256: '0x896b15da426f1baa78d9d09aebe78d236011650b714e45f90e5c4bb096b481af',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolEvents.sol': {
      keccak256: '0xf5c0aaae515ed6e22b49b0a0f5b9d45f6cf2fad6fae83201893ba7907fc7d3bf',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolFactory.sol': {
      keccak256: '0x2bfafdc6ab11b11d75caa61441964799d7b780d93e3a1938b989a135a5070471',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolImmutables.sol': {
      keccak256: '0x5f8d672bad5dfae9556334a0ea5107452b02075502a1fb9ac7bc521c071310db',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolLenderActions.sol': {
      keccak256: '0xcff44a133099f3a1cd574f18e46f6c0076de2384a16df281bab2b9d627b5a42b',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolState.sol': {
      keccak256: '0x2742176dd54be93117cdba89ad45d3a68f0d0fbf0d8e6f3decd7df4b81815cf6',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721Taker.sol': {
      keccak256: '0x7c27a3083aeeaa008978dcba9f7454b9959a59e36c2559e0b1a251494e536488',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/BorrowerActions.sol': {
      keccak256: '0xecf8ce41a4034aa174c72bab7e558d788c1cc052ee77b2151f4acee4691be839',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/KickerActions.sol': {
      keccak256: '0xa486e9c9091c1cc8966f13b2b6bb9f9b7eeaf26d539b990c3904befd7a2a25fe',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/LPActions.sol': {
      keccak256: '0x4def554bc6414a7a4a575b8fced4fd334b28c484f09e5f616a0c228cbf875c85',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/LenderActions.sol': {
      keccak256: '0x04b37827f21db736b668fb27393b6c8b968b4cb24abf338b0a658090a173e0dd',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/PoolCommons.sol': {
      keccak256: '0x1dd40766b71468dade905c41a90783dad18761fe998f1a85acd79e8a0bb32ed3',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/SettlerActions.sol': {
      keccak256: '0x05edfe3f72323b7212fbb5134f76211f397138c2ed30ddf0f3683772213c831d',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/TakerActions.sol': {
      keccak256: '0x642ee2cabe710495ccc32c269750578cbfe924af26dcc73b8ce6cdf06adce68e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/RevertsHelper.sol': {
      keccak256: '0xcaff095290172f1b5726d4e887ab9be5f524d9321e94ca0095f99b666381a6f4',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:29:49.109Z cannon:cli:foundry evm version paris
2024-01-08T15:29:49.128Z cannon:builder:runtime reported contract artifact ERC721PoolFactory {
  contractName: 'ERC721PoolFactory',
  sourceName: 'src/ERC721PoolFactory.sol',
  abi: [
    {
      type: 'constructor',
      inputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'ERC721_NON_SUBSET_HASH',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'MAX_RATE',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'MIN_RATE',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'ajna',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'deployPool',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'deployPool',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'deployedPools',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'deployedPoolsList',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getDeployedPoolsList',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getNFTSubsetHash',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'pure'
    },
    {
      type: 'function',
      name: 'getNumberOfDeployedPools',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'implementation',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'event',
      name: 'PoolCreated',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'CreateFail', inputs: [] },
    { type: 'error', name: 'DecimalsNotCompliant', inputs: [] },
    {
      type: 'error',
      name: 'DeployQuoteCollateralSameToken',
      inputs: []
    },
    { type: 'error', name: 'DeployWithZeroAddress', inputs: [] },
    { type: 'error', name: 'NFTNotSupported', inputs: [] },
    { type: 'error', name: 'PoolAlreadyExists', inputs: [Array] },
    { type: 'error', name: 'PoolInterestRateInvalid', inputs: [] },
    { type: 'error', name: 'TokenIdSubsetInvalid', inputs: [] }
  ],
  bytecode: '0x608060405234801561001057600080fd5b5060405162006fc638038062006fc6833981016040819052610031916100d0565b6001600160a01b0381166100585760405163104aee1f60e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b03831617905560405161007f906100c2565b604051809103906000f08015801561009b573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b039290921691909117905550610100565b6160028062000fc483390190565b6000602082840312156100e257600080fd5b81516001600160a01b03811681146100f957600080fd5b9392505050565b610eb480620001106000396000f3fe608060405234801561001057600080fd5b50600436106100a45760003560e01c806303e552cd146100a95780632b6983af146100d1578063449e586a146100e65780635c60da1b146100f95780637f165b0b14610119578063a3232bf314610153578063a387245c14610166578063b038d2e114610179578063b3d4cfa41461018c578063bb6da0dd14610194578063c24dbebd146101a7578063d819bfef146101b6575b600080fd5b6100be600080516020610e5f83398151915281565b6040519081526020015b60405180910390f35b6100d96101c4565b6040516100c89190610922565b6100be6100f4366004610a1f565b610226565b60035461010c906001600160a01b031681565b6040516100c89190610a53565b61010c610127366004610a7f565b60016020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b61010c610161366004610ac1565b61027d565b61010c610174366004610b02565b6102fe565b61010c610187366004610b1b565b610328565b6002546100be565b60005461010c906001600160a01b031681565b6100be67016345785d8a000081565b6100be662386f26fc1000081565b6060600280548060200260200160405190810160405280929190818152602001828054801561021c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101fe575b5050505050905090565b600081516000036102465750600080516020610e5f833981519152919050565b61024f826106d5565b816040516020016102609190610bbf565b604051602081830303815290604052805190602001209050919050565b604080516000808252602082019283905263b038d2e160e01b909252309063b038d2e1906102b390879087908760248201610bd2565b6020604051808303816000875af11580156102d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f69190610c0f565b949350505050565b6002818154811061030e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000848483816001600160a01b0316836001600160a01b03160361035f5760405163bcbac68960e01b815260040160405180910390fd5b6001600160a01b038316158061037c57506001600160a01b038216155b1561039a5760405163104aee1f60e01b815260040160405180910390fd5b80662386f26fc1000011806103b6575067016345785d8a000081115b156103d45760405163462f085f60e01b815260040160405180910390fd5b60006103df87610226565b60008181526001602090815260408083206001600160a01b03808f1685529083528184208d821685529092529091205491925016801561043d578060405163fb8debc160e01b81526004016104349190610a53565b60405180910390fd5b60006104488a610755565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201529091506001600160a01b038c16906301ffc9a790602401602060405180830381865afa9250505080156104b2575060408051601f3d908101601f191682019092526104af91810190610c2c565b60015b6104cf5760405163a45e82f560e01b815260040160405180910390fd5b806104ed5760405163a45e82f560e01b815260040160405180910390fd5b506000600160008054906101000a90046001600160a01b03168d8d858e5160405160200161052096959493929190610c4e565b60408051601f1981840301815291905260035490915060009061054c906001600160a01b031683610810565b9050809850886001600087815260200190815260200160002060008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002899080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055507fee1fe091a5213b321c2662b35c0b7cd0d35d10dbcab52b3c9b8768983c67bce3898660405161065d9291906001600160a01b03929092168252602082015260400190565b60405180910390a160405163c1bc1df360e01b81526001600160a01b0382169063c1bc1df390610693908e908e90600401610cb5565b600060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050505050505050505050949350505050565b60005b600182516106e69190610ced565b81101561075157816106f9826001610d06565b8151811061070957610709610d19565b602002602001015182828151811061072357610723610d19565b602002602001015110610749576040516302e94eaf60e01b815260040160405180910390fd5b6001016106d8565b5050565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156107b1575060408051601f3d908101601f191682019092526107ae91810190610d2f565b60015b6107ce576040516333ae908b60e01b815260040160405180910390fd5b60128160ff1611156107f3576040516333ae908b60e01b815260040160405180910390fd5b6107fe816012610d52565b61080990600a610e4f565b9392505050565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b60348401526000939260438401929186019084604182015b602082106108c65783518152602093840193601f1990920191016108a7565b835160001960208490036101000a0119908116825260f088901b91830191825286846000f098506001600160a01b03891661091457604051631d7fde3160e31b815260040160405180910390fd5b505050505050505092915050565b6020808252825182820181905260009190848201906040850190845b818110156109635783516001600160a01b03168352928401929184019160010161093e565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261099657600080fd5b813560206001600160401b03808311156109b2576109b261096f565b8260051b604051601f19603f830116810181811084821117156109d7576109d761096f565b6040529384528581018301938381019250878511156109f557600080fd5b83870191505b84821015610a14578135835291830191908301906109fb565b979650505050505050565b600060208284031215610a3157600080fd5b81356001600160401b03811115610a4757600080fd5b6102f684828501610985565b6001600160a01b0391909116815260200190565b6001600160a01b0381168114610a7c57600080fd5b50565b600080600060608486031215610a9457600080fd5b833592506020840135610aa681610a67565b91506040840135610ab681610a67565b809150509250925092565b600080600060608486031215610ad657600080fd5b8335610ae181610a67565b92506020840135610af181610a67565b929592945050506040919091013590565b600060208284031215610b1457600080fd5b5035919050565b60008060008060808587031215610b3157600080fd5b8435610b3c81610a67565b93506020850135610b4c81610a67565b925060408501356001600160401b03811115610b6757600080fd5b610b7387828801610985565b949793965093946060013593505050565b600081518084526020808501945080840160005b83811015610bb457815187529582019590820190600101610b98565b509495945050505050565b6020815260006108096020830184610b84565b6001600160a01b03858116825284166020820152608060408201819052600090610bfe90830185610b84565b905082606083015295945050505050565b600060208284031215610c2157600080fd5b815161080981610a67565b600060208284031215610c3e57600080fd5b8151801515811461080957600080fd5b600060028810610c6e57634e487b7160e01b600052602160045260246000fd5b5060f89690961b86526001600160601b0319606095861b8116600188015293851b841660158701529190931b9091166029840152603d830191909152605d820152607d0190565b604081526000610cc86040830185610b84565b90508260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610d0057610d00610cd7565b92915050565b80820180821115610d0057610d00610cd7565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610d4157600080fd5b815160ff8116811461080957600080fd5b60ff8281168282160390811115610d0057610d00610cd7565b600181815b80851115610da6578160001904821115610d8c57610d8c610cd7565b80851615610d9957918102915b93841c9390800290610d70565b509250929050565b600082610dbd57506001610d00565b81610dca57506000610d00565b8160018114610de05760028114610dea57610e06565b6001915050610d00565b60ff841115610dfb57610dfb610cd7565b50506001821b610d00565b5060208310610133831016604e8410600b8410161715610e29575081810a610d00565b610e338383610d6b565b8060001904821115610e4757610e47610cd7565b029392505050565b600061080960ff841683610dae56fe93e3b87db48beb11f82ff978661ba6e96f72f582300e9724191ab4b5d7964364a2646970667358221220f107d3802d66abca4226adedced210c4c448d1c9479f8f3256a19c5c56c2d81264736f6c63430008120033608060405234801561001057600080fd5b506001600055615fdc80620000266000396000f3fe608060405234801561001057600080fd5b50600436106102ea5760003560e01c8062cdcefb146102ef5780630203d8fb146103285780630448e51a1461033d578063063d829f1461042157806306e47f26146104445780630729f62c1461045757806315afd4091461046a57806316f8a463146104925780632c7b2e06146104b3578063307ee3b5146104f0578063329d1a8b146104f9578063332c0e431461050c5780633884cd881461051f5780633a0c8f071461054c5780633ab96ec5146105545780633fa8fdbb1461056757806342302a9a1461056f578063438732641461058257806347f6fe641461059a578063483cd187146105ad57806348d399e7146105f15780634ab1fc36146106065780634d9661981461060f5780634efe8af7146106275780635a3b44771461063a5780635a422b92146106765780635cffe9de1461067e5780635d3637e714610691578063613255ab1461069a57806366ae5880146106ad5780636a9b1891146106c05780637323f853146106d35780637b3f8655146107045780637dacba181461070c5780637f8baa371461071f57806380f835ed146107325780638349d6be1461074557806385819c7414610766578063870c764a1461077b578063987165ed14610784578063a435cf8a14610797578063a749f1a6146107aa578063a83de3ec146107bd578063a918058d146107d0578063a9ff9f77146107e3578063ac9650d8146107f6578063b1dd61b614610816578063b1f0724714610830578063bad3462014610843578063bbb6e4f11461084b578063bcb630d71461085e578063c1bc1df31461086f578063ca103d1514610882578063cbd79054146108b9578063ce4396d7146108cc578063d1482791146108d4578063d39d813f146108dc578063d53e2b1b146108ef578063d9606e0814610902578063d9d98ce414610931578063da7951a914610944578063e512c06114610957578063eca487061461096c578063f0774d8d1461097f578063f78b0cce14610992575b600080fd5b614011546001600160d01b03811690600160d01b900465ffffffffffff165b604080519283526020830191909152015b60405180910390f35b61033b610336366004614a99565b6109a5565b005b6103c461034b366004614ac5565b6001600160a01b03908116600090815260046020819052604090912080546003820154600180840154600285015494909501549054838716976001600160601b03600160a01b9586900481169885811698'... 47230 more characters,
  deployedBytecode: '0x608060405234801561001057600080fd5b50600436106100a45760003560e01c806303e552cd146100a95780632b6983af146100d1578063449e586a146100e65780635c60da1b146100f95780637f165b0b14610119578063a3232bf314610153578063a387245c14610166578063b038d2e114610179578063b3d4cfa41461018c578063bb6da0dd14610194578063c24dbebd146101a7578063d819bfef146101b6575b600080fd5b6100be600080516020610e5f83398151915281565b6040519081526020015b60405180910390f35b6100d96101c4565b6040516100c89190610922565b6100be6100f4366004610a1f565b610226565b60035461010c906001600160a01b031681565b6040516100c89190610a53565b61010c610127366004610a7f565b60016020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b61010c610161366004610ac1565b61027d565b61010c610174366004610b02565b6102fe565b61010c610187366004610b1b565b610328565b6002546100be565b60005461010c906001600160a01b031681565b6100be67016345785d8a000081565b6100be662386f26fc1000081565b6060600280548060200260200160405190810160405280929190818152602001828054801561021c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101fe575b5050505050905090565b600081516000036102465750600080516020610e5f833981519152919050565b61024f826106d5565b816040516020016102609190610bbf565b604051602081830303815290604052805190602001209050919050565b604080516000808252602082019283905263b038d2e160e01b909252309063b038d2e1906102b390879087908760248201610bd2565b6020604051808303816000875af11580156102d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f69190610c0f565b949350505050565b6002818154811061030e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000848483816001600160a01b0316836001600160a01b03160361035f5760405163bcbac68960e01b815260040160405180910390fd5b6001600160a01b038316158061037c57506001600160a01b038216155b1561039a5760405163104aee1f60e01b815260040160405180910390fd5b80662386f26fc1000011806103b6575067016345785d8a000081115b156103d45760405163462f085f60e01b815260040160405180910390fd5b60006103df87610226565b60008181526001602090815260408083206001600160a01b03808f1685529083528184208d821685529092529091205491925016801561043d578060405163fb8debc160e01b81526004016104349190610a53565b60405180910390fd5b60006104488a610755565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201529091506001600160a01b038c16906301ffc9a790602401602060405180830381865afa9250505080156104b2575060408051601f3d908101601f191682019092526104af91810190610c2c565b60015b6104cf5760405163a45e82f560e01b815260040160405180910390fd5b806104ed5760405163a45e82f560e01b815260040160405180910390fd5b506000600160008054906101000a90046001600160a01b03168d8d858e5160405160200161052096959493929190610c4e565b60408051601f1981840301815291905260035490915060009061054c906001600160a01b031683610810565b9050809850886001600087815260200190815260200160002060008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002899080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055507fee1fe091a5213b321c2662b35c0b7cd0d35d10dbcab52b3c9b8768983c67bce3898660405161065d9291906001600160a01b03929092168252602082015260400190565b60405180910390a160405163c1bc1df360e01b81526001600160a01b0382169063c1bc1df390610693908e908e90600401610cb5565b600060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050505050505050505050949350505050565b60005b600182516106e69190610ced565b81101561075157816106f9826001610d06565b8151811061070957610709610d19565b602002602001015182828151811061072357610723610d19565b602002602001015110610749576040516302e94eaf60e01b815260040160405180910390fd5b6001016106d8565b5050565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156107b1575060408051601f3d908101601f191682019092526107ae91810190610d2f565b60015b6107ce576040516333ae908b60e01b815260040160405180910390fd5b60128160ff1611156107f3576040516333ae908b60e01b815260040160405180910390fd5b6107fe816012610d52565b61080990600a610e4f565b9392505050565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b60348401526000939260438401929186019084604182015b602082106108c65783518152602093840193601f1990920191016108a7565b835160001960208490036101000a0119908116825260f088901b91830191825286846000f098506001600160a01b03891661091457604051631d7fde3160e31b815260040160405180910390fd5b505050505050505092915050565b6020808252825182820181905260009190848201906040850190845b818110156109635783516001600160a01b03168352928401929184019160010161093e565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261099657600080fd5b813560206001600160401b03808311156109b2576109b261096f565b8260051b604051601f19603f830116810181811084821117156109d7576109d761096f565b6040529384528581018301938381019250878511156109f557600080fd5b83870191505b84821015610a14578135835291830191908301906109fb565b979650505050505050565b600060208284031215610a3157600080fd5b81356001600160401b03811115610a4757600080fd5b6102f684828501610985565b6001600160a01b0391909116815260200190565b6001600160a01b0381168114610a7c57600080fd5b50565b600080600060608486031215610a9457600080fd5b833592506020840135610aa681610a67565b91506040840135610ab681610a67565b809150509250925092565b600080600060608486031215610ad657600080fd5b8335610ae181610a67565b92506020840135610af181610a67565b929592945050506040919091013590565b600060208284031215610b1457600080fd5b5035919050565b60008060008060808587031215610b3157600080fd5b8435610b3c81610a67565b93506020850135610b4c81610a67565b925060408501356001600160401b03811115610b6757600080fd5b610b7387828801610985565b949793965093946060013593505050565b600081518084526020808501945080840160005b83811015610bb457815187529582019590820190600101610b98565b509495945050505050565b6020815260006108096020830184610b84565b6001600160a01b03858116825284166020820152608060408201819052600090610bfe90830185610b84565b905082606083015295945050505050565b600060208284031215610c2157600080fd5b815161080981610a67565b600060208284031215610c3e57600080fd5b8151801515811461080957600080fd5b600060028810610c6e57634e487b7160e01b600052602160045260246000fd5b5060f89690961b86526001600160601b0319606095861b8116600188015293851b841660158701529190931b9091166029840152603d830191909152605d820152607d0190565b604081526000610cc86040830185610b84565b90508260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610d0057610d00610cd7565b92915050565b80820180821115610d0057610d00610cd7565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610d4157600080fd5b815160ff8116811461080957600080fd5b60ff8281168282160390811115610d0057610d00610cd7565b600181815b80851115610da6578160001904821115610d8c57610d8c610cd7565b80851615610d9957918102915b93841c9390800290610d70565b509250929050565b600082610dbd57506001610d00565b81610dca57506000610d00565b8160018114610de05760028114610dea57610e06565b6001915050610d00565b60ff841115610dfb57610dfb610cd7565b50506001821b610d00565b5060208310610133831016604e8410600b8410161715610e29575081810a610d00565b610e338383610d6b565b8060001904821115610e4757610e47610cd7565b029392505050565b600061080960ff841683610dae56fe93e3b87db48beb11f82ff978661ba6e96f72f582300e9724191ab4b5d7964364a2646970667358221220f107d3802d66abca4226adedced210c4c448d1c9479f8f3256a19c5c56c2d81264736f6c63430008120033',
  linkReferences: {
    'src/libraries/external/BorrowerActions.sol': { BorrowerActions: [Array] },
    'src/libraries/external/KickerActions.sol': { KickerActions: [Array] },
    'src/libraries/external/LPActions.sol': { LPActions: [Array] },
    'src/libraries/external/LenderActions.sol': { LenderActions: [Array] },
    'src/libraries/external/PoolCommons.sol': { PoolCommons: [Array] },
    'src/libraries/external/SettlerActions.sol': { SettlerActions: [Array] },
    'src/libraries/external/TakerActions.sol': { TakerActions: [Array] }
  },
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/clones-with-immutable-args/src/Clone.sol":{"content":"// SPDX-License-Identifier: BSD\\npragma solidity ^0.8.4;\\n\\n/// @title Clone\\n/// @author zefram.eth\\n/// @notice Provides helper functions for reading immutable args from calldata\\ncontract Clone {\\n    /// @notice Reads an immutable arg with type address\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgAddress(uint256 argOffset)\\n        internal\\n        pure\\n        returns (address arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0x60, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint256\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint256(uint256 argOffset)\\n        internal\\n        pure\\n        returns (uint256 arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := calldataload(add(offset, argOffset))\\n        }\\n    }\\n\\n    /// @notice Reads a uint256 array stored in the immutable args.\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @param arrLen Number of elements in the array\\n    /// @return arr The array\\n    function _getArgUint256Array(uint256 argOffset, uint64 arrLen)\\n        internal\\n        pure\\n      returns (uint256[] memory arr)\\n    {\\n      uint256 offset = _getImmutableArgsOffset();\\n      uint256 el;\\n      arr = new uint256[](arrLen);\\n      for (uint64 i = 0; i < arrLen; i++) {\\n        assembly {\\n          // solhint-disable-next-line no-inline-assembly\\n          el := calldataload(add(add(offset, argOffset), mul(i, 32)))\\n        }\\n        arr[i] = el;\\n      }\\n      return arr;\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint64\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint64(uint256 argOffset)\\n        internal\\n        pure\\n        returns (uint64 arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0xc0, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint8\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint8(uint256 argOffset) internal pure returns (uint8 arg) {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0xf8, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @return offset The offset of the packed immutable args in calldata\\n    function _getImmutableArgsOffset() internal pure returns (uint256 offset) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            offset := sub(\\n                calldatasize(),\\n                add(shr(240, calldataload(sub(calldatasize(), 2))), 2)\\n            )\\n        }\\n    }\\n}\\n"},"lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol":{"content":"// SPDX-License-Identifier: BSD\\n\\npragma solidity ^0.8.4;\\n\\n/// @title ClonesWithImmutableArgs\\n/// @author wighawag, zefram.eth\\n/// @notice Enables creating clone contracts with immutable args\\nlibrary ClonesWithImmutableArgs {\\n    error CreateFail();\\n\\n    /// @notice Creates a clone proxy of the implementation contract, with immutable args\\n    /// @dev data cannot exceed 65535 bytes, since 2 bytes are used to store the data length\\n    /// @param implementation The implementation contract to clone\\n    /// @param data Encoded immutable args\\n    /// @return instance The address of the created clone\\n    function clone(address implementation, bytes memory data)\\n        internal\\n        returns (address payable instance)\\n    {\\n        // unrealistic for memory ptr or data length to exceed 256 bits\\n        unchecked {\\n            uint256 extraLength = data.length + 2; // +2 bytes for telling how much data there is appended to the call\\n            uint256 creationSize = 0x41 + extraLength;\\n            uint256 runSize = creationSize - 10;\\n            uint256 dataPtr;\\n            uint256 ptr;\\n            // solhint-disable-next-line no-inline-assembly\\n            assembly {\\n                ptr := mload(0x40)\\n\\n                // -------------------------------------------------------------------------------------------------------------\\n                // CREATION (10 bytes)\\n                // -------------------------------------------------------------------------------------------------------------\\n\\n                // 61 runtime  | PUSH2 runtime (r)     | r                       | ‚Äì\\n                mstore(\\n                    ptr,\\n                    0x6100000000000000000000000000000000000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x01), shl(240, runSize)) // size of the contract running bytecode (16 bits)\\n\\n                // creation size = 0a\\n                // 3d          | RETURNDATASIZE        | 0 r                     | ‚Äì\\n                // 81          | DUP2                  | r 0 r                   | ‚Äì\\n                // 60 creation | PUSH1 creation (c)    | c r 0 r                 | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 c r 0 r               | ‚Äì\\n                // 39          | CODECOPY              | 0 r                     | [0-runSize): runtime code\\n                // f3          | RETURN                |                         | [0-runSize): runtime code\\n\\n                // -------------------------------------------------------------------------------------------------------------\\n                // RUNTIME (55 bytes + extraLength)\\n                // -------------------------------------------------------------------------------------------------------------\\n\\n                // 3d          | RETURNDATASIZE        | 0                       | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0                     | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0 0                   | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0 0 0                 | ‚Äì\\n                // 36          | CALLDATASIZE          | cds 0 0 0 0             | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 cds 0 0 0 0           | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0 cds 0 0 0 0         | ‚Äì\\n                // 37          | CALLDATACOPY          | 0 0 0 0                 | [0, cds) = calldata\\n                // 61          | PUSH2 extra           | extra 0 0 0 0           | [0, cds) = calldata\\n                mstore(\\n                    add(ptr, 0x03),\\n                    0x3d81600a3d39f33d3d3d3d363d3d376100000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x13), shl(240, extraLength))\\n\\n                // 60 0x37     | PUSH1 0x37            | 0x37 extra 0 0 0 0      | [0, cds) = calldata // 0x37 (55) is runtime size - data\\n                // 36          | CALLDATASIZE          | cds 0x37 extra 0 0 0 0  | [0, cds) = calldata\\n                // 39          | CODECOPY              | 0 0 0 0                 | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 36          | CALLDATASIZE          | cds 0 0 0 0             | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 61 extra    | PUSH2 extra           | extra cds 0 0 0 0       | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                mstore(\\n                    add(ptr, 0x15),\\n                    0x6037363936610000000000000000000000000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x1b), shl(240, extraLength))\\n\\n                // 01          | ADD                   | cds+extra 0 0 0 0       | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3d          | RETURNDATASIZE        | 0 cds 0 0 0 0           | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 73 addr     | PUSH20 0x123‚Ä¶         | addr 0 cds 0 0 0 0      | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                mstore(\\n                    add(ptr, 0x1d),\\n                    0x013d730000000000000000000000000000000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x20), shl(0x60, implementation))\\n\\n                // 5a          | GAS                   | gas addr 0 cds 0 0 0 0  | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // f4          | DELEGATECALL          | success 0 0             | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3d          | RETURNDATASIZE        | rds success 0 0         | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3d          | RETURNDATASIZE        | rds rds success 0 0     | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 93          | SWAP4                 | 0 rds success 0 rds     | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 80          | DUP1                  | 0 0 rds success 0 rds   | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3e          | RETURNDATACOPY        | success 0 rds           | [0, rds) = return data (there might be some irrelevant leftovers in memory [rds, cds+0x37) when rds < cds+0x37)\\n                // 60 0x35     | PUSH1 0x35            | 0x35 sucess 0 rds       | [0, rds) = return data\\n                // 57          | JUMPI                 | 0 rds        '... 543617 more characters
  }
}
2024-01-08T15:29:49.130Z cannon:builder:contract lib ref BorrowerActions 0x422d470fb02206733Bb770D2A27d6d98f493af64
2024-01-08T15:29:49.131Z cannon:builder:contract lib ref KickerActions 0xf419056B545783BbFfEAB4d0aA057a52FbA4F4fd
2024-01-08T15:29:49.132Z cannon:builder:contract lib ref LPActions 0xb257A98a3549a0B36b9001d0eDc9e75d313d5c8e
2024-01-08T15:29:49.132Z cannon:builder:contract lib ref LenderActions 0x7456CF19C121842FE2C3a888075A11d51ED63b98
2024-01-08T15:29:49.134Z cannon:builder:contract lib ref PoolCommons 0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540
2024-01-08T15:29:49.134Z cannon:builder:contract lib ref SettlerActions 0x9EdcD1fEc19E5baA98fa4911C90C2162524750d2
2024-01-08T15:29:49.134Z cannon:builder:contract lib ref TakerActions 0xb127207d673977e14f31f52a14AD07e6a512c5fA
2024-01-08T15:29:49.135Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x608060405234801561001057600080fd5b5060405162006fc638038062006fc6833981016040819052610031916100d0565b6001600160a01b0381166100585760405163104aee1f60e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b03831617905560405161007f906100c2565b604051809103906000f08015801561009b573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b039290921691909117905550610100565b6160028062000fc483390190565b6000602082840312156100e257600080fd5b81516001600160a01b03811681146100f957600080fd5b9392505050565b610eb480620001106000396000f3fe608060405234801561001057600080fd5b50600436106100a45760003560e01c806303e552cd146100a95780632b6983af146100d1578063449e586a146100e65780635c60da1b146100f95780637f165b0b14610119578063a3232bf314610153578063a387245c14610166578063b038d2e114610179578063b3d4cfa41461018c578063bb6da0dd14610194578063c24dbebd146101a7578063d819bfef146101b6575b600080fd5b6100be600080516020610e5f83398151915281565b6040519081526020015b60405180910390f35b6100d96101c4565b6040516100c89190610922565b6100be6100f4366004610a1f565b610226565b60035461010c906001600160a01b031681565b6040516100c89190610a53565b61010c610127366004610a7f565b60016020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b61010c610161366004610ac1565b61027d565b61010c610174366004610b02565b6102fe565b61010c610187366004610b1b565b610328565b6002546100be565b60005461010c906001600160a01b031681565b6100be67016345785d8a000081565b6100be662386f26fc1000081565b6060600280548060200260200160405190810160405280929190818152602001828054801561021c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101fe575b5050505050905090565b600081516000036102465750600080516020610e5f833981519152919050565b61024f826106d5565b816040516020016102609190610bbf565b604051602081830303815290604052805190602001209050919050565b604080516000808252602082019283905263b038d2e160e01b909252309063b038d2e1906102b390879087908760248201610bd2565b6020604051808303816000875af11580156102d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f69190610c0f565b949350505050565b6002818154811061030e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000848483816001600160a01b0316836001600160a01b03160361035f5760405163bcbac68960e01b815260040160405180910390fd5b6001600160a01b038316158061037c57506001600160a01b038216155b1561039a5760405163104aee1f60e01b815260040160405180910390fd5b80662386f26fc1000011806103b6575067016345785d8a000081115b156103d45760405163462f085f60e01b815260040160405180910390fd5b60006103df87610226565b60008181526001602090815260408083206001600160a01b03808f1685529083528184208d821685529092529091205491925016801561043d578060405163fb8debc160e01b81526004016104349190610a53565b60405180910390fd5b60006104488a610755565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201529091506001600160a01b038c16906301ffc9a790602401602060405180830381865afa9250505080156104b2575060408051601f3d908101601f191682019092526104af91810190610c2c565b60015b6104cf5760405163a45e82f560e01b815260040160405180910390fd5b806104ed5760405163a45e82f560e01b815260040160405180910390fd5b506000600160008054906101000a90046001600160a01b03168d8d858e5160405160200161052096959493929190610c4e565b60408051601f1981840301815291905260035490915060009061054c906001600160a01b031683610810565b9050809850886001600087815260200190815260200160002060008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002899080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055507fee1fe091a5213b321c2662b35c0b7cd0d35d10dbcab52b3c9b8768983c67bce3898660405161065d9291906001600160a01b03929092168252602082015260400190565b60405180910390a160405163c1bc1df360e01b81526001600160a01b0382169063c1bc1df390610693908e908e90600401610cb5565b600060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050505050505050505050949350505050565b60005b600182516106e69190610ced565b81101561075157816106f9826001610d06565b8151811061070957610709610d19565b602002602001015182828151811061072357610723610d19565b602002602001015110610749576040516302e94eaf60e01b815260040160405180910390fd5b6001016106d8565b5050565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156107b1575060408051601f3d908101601f191682019092526107ae91810190610d2f565b60015b6107ce576040516333ae908b60e01b815260040160405180910390fd5b60128160ff1611156107f3576040516333ae908b60e01b815260040160405180910390fd5b6107fe816012610d52565b61080990600a610e4f565b9392505050565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b60348401526000939260438401929186019084604182015b602082106108c65783518152602093840193601f1990920191016108a7565b835160001960208490036101000a0119908116825260f088901b91830191825286846000f098506001600160a01b03891661091457604051631d7fde3160e31b815260040160405180910390fd5b505050505050505092915050565b6020808252825182820181905260009190848201906040850190845b818110156109635783516001600160a01b03168352928401929184019160010161093e565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261099657600080fd5b813560206001600160401b03808311156109b2576109b261096f565b8260051b604051601f19603f830116810181811084821117156109d7576109d761096f565b6040529384528581018301938381019250878511156109f557600080fd5b83870191505b84821015610a14578135835291830191908301906109fb565b979650505050505050565b600060208284031215610a3157600080fd5b81356001600160401b03811115610a4757600080fd5b6102f684828501610985565b6001600160a01b0391909116815260200190565b6001600160a01b0381168114610a7c57600080fd5b50565b600080600060608486031215610a9457600080fd5b833592506020840135610aa681610a67565b91506040840135610ab681610a67565b809150509250925092565b600080600060608486031215610ad657600080fd5b8335610ae181610a67565b92506020840135610af181610a67565b929592945050506040919091013590565b600060208284031215610b1457600080fd5b5035919050565b60008060008060808587031215610b3157600080fd5b8435610b3c81610a67565b93506020850135610b4c81610a67565b925060408501356001600160401b03811115610b6757600080fd5b610b7387828801610985565b949793965093946060013593505050565b600081518084526020808501945080840160005b83811015610bb457815187529582019590820190600101610b98565b509495945050505050565b6020815260006108096020830184610b84565b6001600160a01b03858116825284166020820152608060408201819052600090610bfe90830185610b84565b905082606083015295945050505050565b600060208284031215610c2157600080fd5b815161080981610a67565b600060208284031215610c3e57600080fd5b8151801515811461080957600080fd5b600060028810610c6e57634e487b7160e01b600052602160045260246000fd5b5060f89690961b86526001600160601b0319606095861b8116600188015293851b841660158701529190931b9091166029840152603d830191909152605d820152607d0190565b604081526000610cc86040830185610b84565b90508260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610d0057610d00610cd7565b92915050565b80820180821115610d0057610d00610cd7565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610d4157600080fd5b815160ff8116811461080957600080fd5b60ff8281168282160390811115610d0057610d00610cd7565b600181815b80851115610da6578160001904821115610d8c57610d8c610cd7565b80851615610d9957918102915b93841c9390800290610d70565b509250929050565b600082610dbd57506001610d00565b81610dca57506000610d00565b8160018114610de05760028114610dea57610e06565b6001915050610d00565b60ff841115610dfb57610dfb610cd7565b50506001821b610d00565b5060208310610133831016604e8410600b8410161715610e29575081810a610d00565b610e338383610d6b565b8060001904821115610e4757610e47610cd7565b029392505050565b600061080960ff841683610dae56fe93e3b87db48beb11f82ff978661ba6e96f72f582300e9724191ab4b5d7964364a2646970667358221220f107d3802d66abca4226adedced210c4c448d1c9479f8f3256a19c5c56c2d81264736f6c63430008120033608060405234801561001057600080fd5b506001600055615fdc80620000266000396000f3fe608060405234801561001057600080fd5b50600436106102ea5760003560e01c8062cdcefb146102ef5780630203d8fb146103285780630448e51a1461033d578063063d829f1461042157806306e47f26146104445780630729f62c1461045757806315afd4091461046a57806316f8a463146104925780632c7b2e06146104b3578063307ee3b5146104f0578063329d1a8b146104f9578063332c0e431461050c5780633884cd881461051f5780633a0c8f071461054c5780633ab96ec5146105545780633fa8fdbb1461056757806342302a9a1461056f578063438732641461058257806347f6fe641461059a578063483cd187146105ad57806348d399e7146105f15780634ab1fc36146106065780634d9661981461060f5780634efe8af7146106275780635a3b44771461063a5780635a422b92146106765780635cffe9de1461067e5780635d3637e714610691578063613255ab1461069a57806366ae5880146106ad5780636a9b1891146106c05780637323f853146106d35780637b3f8655146107045780637dacba181461070c5780637f8baa371461071f57806380f835ed146107325780638349d6be1461074557806385819c7414610766578063870c764a1461077b578063987165ed14610784578063a435cf8a14610797578063a749f1a6146107aa578063a83de3ec146107bd578063a918058d146107d0578063a9ff9f77146107e3578063ac9650d8146107f6578063b1dd61b614610816578063b1f0724714610830578063bad3462014610843578063bbb6e4f11461084b578063bcb630d71461085e578063c1bc1df31461086f578063ca103d1514610882578063cbd79054146108b9578063ce4396d7146108cc578063d1482791146108d4578063d39d813f146108dc578063d53e2b1b146108ef578063d9606e0814610902578063d9d98ce414610931578063da7951a914610944578063e512c06114610957578063eca487061461096c578063f0774d8d1461097f578063f78b0cce14610992575b600080fd5b614011546001600160d01b03811690600160d01b900465ffffffffffff165b604080519283526020830191909152015b60405180910390f35b61033b610336366004614a99565b6109a5565b005b6103c461034b366004614ac5565b6001600160a01b03908116600090815260046020819052604090912080546003820154600180840154600285015494909501549054838716976001600160601b03600160a01b9586900481169885811698828116988381169890970490921695600160601b948590048216949081900482169392041690565b604080516001600160a01b039b8c168152602081019a909a528901979097526060880195909552608087019390935260a086019190915260c0850152841660e084015283166101008301529091166101208201526101400161031f565b61400b546001600160d01b03811690600160d01b900465ffffffffffff1661030e565b61033b610452366004614b26565b610ab2565b61033b610465366004614b88565b610b5a565b61047d610478366004614a99565b610c26565b6040805192835290151560208301520161031f565b6104a56104a0366004614bc9565b610d3e565b60405190815260200161031f565b6104e16104c1366004614bc9565b600090815261402060205260409020805460018201546002909201549092565b60405161031f93929190614be2565b614017546104a5565b6104a5610507366004614bc9565b610d79565b6104e161051a366004614bf8565b610d8c565b610527610ee3565b604080516001600160a01b03909416845260208401929092529082015260600161031f565b6104a5610f22565b6104a5610562366004614bc9565b610f9f565b6104a5610fbe565b6104a561057d366004614bc9565b610fca565b61058a611105565b604051901515815260200161031f565b61030e6105a8366004614c2a565b611118565b6104a56105bb366004614c7a565b6001600160a01b039081166000908152614023602090815260408083209490931682529283528181209381529290915290205490565b6105f9611252565b60405161031f9190614cbc565b61401d546104a5565b61061761125e565b60405161031f9493929190614cd0565b61033b610635366004614ceb565b611360565b60035461401c5461401a5461401b5461401f545b604080519586526020860194909452928401919091526060830152608082015260a00161031f565b61033b6113f0565b61058a61068c366004614d90565b6114c0565b614019546104a5565b6104a56106a8366004614ac5565b611576565b6104a56106bb366004614e02565b6115f3565b61030e6106ce366004614e57565b6117be565b61030e6106e1366004614ac5565b6001600160a01b0316600090815260056020526040902080546001909101549091565b6104a56118db565b6104a561071a366004614bc9565b6118e7565b61033b61072d366004614e79565b611909565b61058a610740366004614bc9565b611988565b610758610753366004614bc9565b6119b2565b60405161031f929190614eba565b61076e6119e0565b60405161031f9190614f0e565b614018546104a5565b61033b610792366004614f21565b611a39565b6104a56107a5366004614c2a565b611ae7565b61030e6107b8366004614f92565b611c0a565b61064e6107cb366004614bc9565b611c54565b61033b6107de366004614f21565b611cb3565b6104a56107f1366004614fc2565b611d20565b610809610804366004614e79565b611ed7565b60405161031f9190615064565b61081e611fcb565b60405160ff909116815260200161031f565b61030e61083e366004614e57565b611fd7565b6105f96120ef565b61033b6108593660046150c6565b6120fb565b6001546001600160601b03166104a5565b61033b61087d3660046151d3565b6122b2565b6104e1610890366004614ac5565b6001600160a01b0316600090815261400a60205260409020805460018201546002909201549092565b61076e6108c7366004614ac5565b6123c4565b61033b612431565b61033b6124e1565b61033b6108ea366004614e79565b612513565b6104a56108fd366004614a99565b61255e565b61058a61091036600461527e565b61402460209081526000928352604080842090915290825290205460ff1681565b6104a561093f366004614a99565b612608565b6104a5610952366004614bc9565b612639565b61400e5461400f5461400c5461400d54610617565b61033b61097a366004614e57565b612646565b6104a561098d366004614a99565b6126a5565b61030e6109a03660046152ac565b6126d7565b6109ad6127e4565b60006109b7612842565b9050600073f419056B545783BbFfEAB4d0aA057a52FbA4F4fd632de27df2600160066140088689896040518763ffffffff1660e01b8152600401610a0096959493929190615337565b608060405180830381865af4158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a419190615379565b9050806020015182604001818151610a5991906153f4565b90525060208101516040820151610a74919060009081612a2c565b6040820151614018556060810151610a8d908390612ab7565b805115610aa257610aa2338260000151612bcb565b5050610aae6001600055565b5050565b610aba6127e4565b336000908152614023602090815260408083206001600160a01b038716845290915290819020905163d3f900a360e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e9163d3f900a391610b1b9190879087908790600401615439565b60006040518083038186803b158015610b3357600080fd5b505af4158015610b47573d6000803e3d6000fd5b50505050610b556001600055565b505050565b610b626127e4565b6000610b6c612842565b9050600073b127207d673977e14f31f52a14AD07e6a512c5fA632f39ec5c60016140216006614008878b8b8b60016040518a63ffffffff1660e01b8152600401610bbe99989796959493929190615464565b6101c060405180830381865af4158015610bdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0091906154ce565b9050610c0c8183612bf2565b610c1a858260800151612c93565b5050610b556001600055565b600080610c316127e4565b6000610c3b612842565b905060006040518060600160405280876001600160a01b03168152602001868152602001610c67612d91565b905260405163e47aaa3160e01b8152909150600090739EdcD1fEc19E5baA98fa4911C90C2162524750d29063e47aaa3190610cba90600190614021906006906140089061401a908b908b90600401615586565b60e060405180830381865af4158015610cd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfb91906155ea565b9050610d078184612e1d565b610d1982600001518260600151612c93565b8060800151945080602001516000149350505050610d376001600055565b9250929050565b60008181526140216020526040812060018101548154610d729190610d64600687612eb3565b610d6d87612ecc565b612f37565b9392505050565b6000610d86600683612f50565b92915050565b6000806000610d996127e4565b610da284612f66565b610daf6001614008612f8a565b610dba600186613036565b6000610dc4612842565b9050610ddb60068260400151898460a001516130b3565b610e066040518060800160405280600081526020016000815260200160008152602001600081525090565b6020810189905287815260408101879052610e226140086130eb565b602001516001600160601b03166060820152604051633806e8ef60e01b8152600090737456CF19C121842FE2C3a888075A11d51ED63b9890633806e8ef90610e77906140219060069088908890600401615693565b608060405180830381865af4158015610e94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb891906156bd565b92985090965094509050610ecc8382612ab7565b505050610ed96001600055565b9450945094915050565b600080600080610ef46140086130eb565b905080600001518160200151610f0b6140086130fe565b91966001600160601b039091169550909350915050565b604051630fc99bab60e41b815261400c600482015260009073e77bfEeB83CD09bD9b598a90f7Ce7faE02c715409063fc99bab090602401602060405180830381865af4158015610f76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9a91906156f3565b905090565b6000612007826120018110610fb657610fb661570c565b015492915050565b6000610f9a600661310f565b6000610fd46127e4565b600073b127207d673977e14f31f52a14AD07e6a512c5fA633c335cf361401a85610ffe603d61311a565b6040518463ffffffff1660e01b815260040161101c93929190614be2565b6040805180830381865af4158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190615722565b90925090506110823330836110716001613130565b6001600160a01b0316929190613149565b61108c6001613130565b6001600160a01b03166342966c68826040518263ffffffff1660e01b81526004016110b991815260200190565b600060405180830381600087803b1580156110d357600080fd5b505af11580156110e7573d6000803e3d6000fd5b505050506110f533836131a1565b506111006001600055565b919050565b6000611111605d61311a565b1515919050565b6000806111236127e4565b6111306001614008612f8a565b600061113a612842565b90506000611147866131d3565b604051637ea3416f60e11b8152909150737456CF19C121842FE2C3a888075A11d51ED63b989063fd4682de9061118e90614021906006908d908d9088908d90600401615746565b6040805180830381865af41580156111aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ce9190615722565b604080518381526020810183905292965090945033917feecbf72003860e4ff6d56b9912b736cff99598b154ff90af580424f0b5464637910160405180910390a261122782611222600685606001516131e7565b612ab7565b80840361123d5761123b33614026886131fb565b505b50506112496001600055565b94509492505050565b6000610f9a6015613130565b60405163f6eb5f8560e01b815261401754600482015261401854602482015261401954604482015261400b546001600160d01b03808216606484015260d091821c60848401526140115490811660a4840152901c60c48201526140125460e48201526140135461010482015261401454610124820152614015546101448201526140165461016482015260009081908190819073e77bfEeB83CD09bD9b598a90f7Ce7faE02c715409063f6eb5f859061018401608060405180830381865af415801561132e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135291906156bd565b935093509350935090919293565b6113686127e4565b60405162b06a6b60e71b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e906358353580906113b0906140219061402390614024908a908a908a908a9060040161577b565b60006040518083038186803b1580156113c857600080fd5b505af41580156113dc573d6000803e3d6000fd5b505050506113ea6001600055565b50505050565b6113f86127e4565b61140260016132e0565b73f419056B545783BbFfEAB4d0aA057a52FbA4F4fd63f88050b7600161401a6040518060800160405280611436600661310f565b815261401954602082015260400161144c612d91565b815261400b546001600160d01b03166020909101526040516001600160e01b031960e086901b168152611484939291906004016157c9565b60006040518083038186803b15801561149c57600080fd5b505af41580156114b0573d6000803e3d6000fd5b505050506114be6001600055565b565b60006114ca6127e4565b6114d385613309565b6114f057604051633cc7579b60e11b815260040160405180910390fd5b6040516369f958a560e11b815273e77bfEeB83CD09bD9b598a90f7Ce7faE02c715409063d3f2b14a9061152f908990899089908990899060040161580d565b60006040518083038186803b15801561154757600080fd5b505af415801561155b573d6000803e3d6000fd5b505050506001905061156d6001600055565b95945050505050565b600061158182613309565b15611100576040516370a0823160e01b81526001600160a01b038316906370a08231906115b2903090600401614cbc565b602060405180830381865afa1580156115cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8691906156f3565b60006115fd6127e4565b6000611607612842565b9050600073b127207d673977e14f31f52a14AD07e6a512c5fA630f4a0c2d60016140216006614008878e61163a8f6131d3565b60016040518963ffffffff1660e01b815260040161165f989796959493929190615841565b6101c060405180830381865af415801561167d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a191906154ce565b90506116ad8183612bf2565b80516116c290670de0b6b3a7640000906158ad565b6001600160a01b038916600090815261402560205260408120919450906116eb908890866131fb565b905060008260600151836040015161170391906153f4565b9050851561178057876001600160a01b03166358ed1af7838661010001518461172c91906158ad565b8a8a6040518563ffffffff1660e01b815260040161174d94939291906158cf565b600060405180830381600087803b15801561176757600080fd5b505af115801561177b573d6000803e3d6000fd5b505050505b61178e8a8460800151612c93565b6117983382612bcb565b6060830151156117b0576117b08a84606001516131a1565b5050505061156d6001600055565b6000806117c96127e4565b6117d66001614008612f8a565b60006117e0612842565b90506117eb856131d3565b60405163bf2980c760e01b8152909350737456CF19C121842FE2C3a888075A11d51ED63b989063bf2980c79061182e906140219060069088908a90600401614cd0565b602060405180830381865af415801561184b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186f91906156f3565b6040805187815260208101839052919350859133917f90895bc82397742e0cea4685e72279103862a03bee6bbe1d71265c7aeb111527910160405180910390a36118c281611222600684606001516131e7565b6118cf33614026876131fb565b5050610d376001600055565b6000610f9a603d61311a565b61402681815481106118f857600080fd5b600091825260209091200154905081565b3360009081526140246020526040908190209051634b740e8f60e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e91634b740e8f916119549190869086906004016158fb565b60006040518083038186803b15801561196c57600080fd5b505af4158015611980573d6000803e3d6000fd5b505050505050565b6000611994605d61311a565b1580610d865750506000908152614027602052604090205460ff1690565b60008060006119c361400885613330565b805160209091015190956001600160601b03909116945092505050565b6060614026805480602002602001604051908101604052809291908181526020018280548015611a2f57602002820191906000526020600020905b815481526020019060010190808311611a1b575b5050505050905090565b611a416127e4565b336000908152614023602090815260408083206001600160a01b038916845290915290819020905163e817b3fb60e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e9163e817b3fb91611aa6919089908990899089908990600401615953565b60006040518083038186803b158015611abe57600080fd5b505af4158015611ad2573d6000803e3d6000fd5b50505050611ae06001600055565b5050505050565b6000611af16127e4565b611afa82612f66565b6000611b04612842565b9050737456CF19C121842FE2C3a888075A11d51ED63b9863ba9784e86140216006611b2e896131d3565b886040518563ffffffff1660e01b8152600401611b4e9493929190614cd0565b602060405180830381865af4158015611b6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8f91906156f3565b915083336001600160a01b03167f8dbd51efd63b9e2a4eb5683dc55dadfe9c06eb546f516744c3fb46ba897df127888886604051611bcf93929190615991565b60405180910390a3611bea81611222600684606001516131e7565b611bf761402687876133b0565b50611c026001600055565b949350505050565b6000828152614021602090815260408083206001600160a01b03851684526003810190925282206001810154600283015490929190831115611c4b57805493505b50509250929050565b600080600080600080611c68600688613427565b6000888152614021602052604090208054600182015460028301549394509192909190611c9f85611c9a60068e613494565b613542565b929b919a5098509096509194509092505050565b611cbb6127e4565b336000908152614023602090815260408083206001600160a01b0389168452909152908190209051633110094360e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e91633110094391611aa6919089908990899089908990600401615953565b6000611d2a6127e4565b6000611d34612842565b90506000198614611d5157611d4e86826101000151613576565b95505b600073422d470fb02206733Bb770D2A27d6d98f493af646382c9345160016006614008868d8d611d808e6131d3565b8c6040518963ffffffff1660e01b8152600401611da49897969594939291906159b5565b61014060405180830381865af4158015611dc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de69190615a0b565b60a0810151604080830151606086015260808084015160208088019190915284015190860152825190519195509192506001600160a01b038a16917fef9d6dc34b1e6893b8746b03ac07fd084909654a5cedab240265a8d1bd584dc291611e519187918b9190614be2565b60405180910390a2611e778160c001518260e00151836101000151846101200151612a2c565b611e85828260000151612ab7565b6080820151614017558215611ea757602082015161401955611ea73384612bcb565b8515611ecb5733600090815261402560205260409020611ec9908690886131fb565b505b505061156d6001600055565b6060816001600160401b03811115611ef157611ef161511e565b604051908082528060200260200182016040528015611f2457816020015b6060815260200190600190039081611f0f5790505b50905060005b82811015611fc457611f9430858584818110611f4857611f4861570c565b9050602002810190611f5a9190615a92565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061358d92505050565b828281518110611fa657611fa661570c565b60200260200101819052508080611fbc90615ad8565b915050611f2a565b5092915050565b6000610f9a60006135b2565b600080611fe26127e4565b611fef6001614008612f8a565b6000611ff9612842565b905061201060068260400151868460a001516130b3565b6000737456CF19C121842FE2C3a888075A11d51ED63b98635086572061402160068560405180606001604052808b81526020016120548d61204f6135cb565b613609565b81526020016120646140086130eb565b602001516001600160601b03168152506040518563ffffffff1660e01b81526004016120939493929190615af1565b606060405180830381865af41580156120b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120d49190615b34565b919550935090506120e58282612ab7565b6118cf33856131a1565b6000610f9a6029613130565b6121036127e4565b600061210d612842565b905061211e85826101000151613576565b9450600073422d470fb02206733Bb770D2A27d6d98f493af6463ea067a57600160066140088661214c6135cb565b8d8d8d6121588d6131d3565b6040518a63ffffffff1660e01b815260040161217c99989796959493929190615b62565b61012060405180830381865af415801561219a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121be9190615bbe565b9050866001600160a01b03167fcff7ef888b198235bdc0ac137c2afb372bb7bc7fbb95e6b9960f36297008301787868685600001516040516122039493929190615c39565b60405180910390a2604081015160608301526080808201516020808501919091528201519083015260a081015160c082015160e083015161010084015161224c93929190612a2c565b61225a828260000151612ab7565b821561228d576080820151614017556001600160a01b03871660009081526140256020526040902061228d9085856133b0565b85156122a6576020820151614019556122a633876131a1565b5050611ae06001600055565b6140225460ff16156122d65760405162dc149f60e41b815260040160405180910390fd5b65ffffffffffff4216600160d01b02670de0b6b3a7640000811761400b556001600160d01b0382161761401155815180156123625760005b81811015612360576001614027600086848151811061232f5761232f61570c565b6020908102919091018101518252810191909152604001600020805460ff191691151591909117905560010161230e565b505b6123b1614008604080518082019091526000808252602080830182815284546001810186559483529120915190516001600160601b0316600160a01b026001600160a01b039190911617910155565b5050614022805460ff1916600117905550565b6001600160a01b0381166000908152614025602090815260409182902080548351818402810184019094528084526060939283018282801561242557602002820191906000526020600020905b815481526020019060010190808311612411575b50505050509050919050565b6124396127e4565b6000612443612842565b9050600073422d470fb02206733Bb770D2A27d6d98f493af64634700688d60016006614008866040518563ffffffff1660e01b81526004016124889493929190615c64565b602060405180830381865af41580156124a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124c991906156f3565b90506124d58282612ab7565b50506114be6001600055565b6124e96127e4565b60006124f3612842565b905061250881611222600684606001516131e7565b506114be6001600055565b336000908152614024602052604090819020905163296bff2560e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e9163296bff25916119549190869086906004016158fb565b60006125686127e4565b6040516347a7428b60e11b8152600160048201526001600160a01b03841660248201526044810183905273f419056B545783BbFfEAB4d0aA057a52FbA4F4fd90638f4e851690606401602060405180830381865af41580156125ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f291906156f3565b90506125fe83826131a1565b610d866001600055565b600061261383613309565b61263057604051633cc7579b60e11b815260040160405180910390fd5b50600092915050565b6000610d86600683613620565b61264e6127e4565b6000612658612842565b9050600073f419056B545783BbFfEAB4d0aA057a52FbA4F4fd63062f2dea60016006614021614008878a8a6040518863ffffffff1660e01b8152600401610a009796959493929190615c87565b61402560205281600052604060002081815481106126c257600080fd5b90600052602060002001600091509150505481565b6000806126e26127e4565b6126eb83612f66565b6126f86001614008612f8a565b612703600185613036565b600061270d612842565b905061271e86826101000151613576565b604080518082018252828152602081018890529051632f9fa10360e01b8152919750600091737456CF19C121842FE2C3a888075A11d51ED63b9891632f9fa1039161277491614021916006918891600401615cc9565b606060405180830381865af4158015612791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127b59190615b34565b919550935090506127c68282612ab7565b6127d03388612bcb565b50506127dc6001600055565b935093915050565b60026000540361283b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055565b612896604051806101200160405280600060ff168152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b61401954602082015261401854604082015261401754608082015261400b546001600160d01b0390811660a0830152614011541660e08201526128d960006135b2565b60ff1681526128e8603d61311a565b610100820152602081015115612a295761290a81602001518260a00151613542565b606082015261400b5460009061292f90600160d01b900465ffffffffffff1642615d01565b8015801560c0850152909150612a275773e77bfEeB83CD09bD9b598a90f7Ce7faE02c71540639b5bef8661400c60068561296a6140086130eb565b60200151866040518663ffffffff1660e01b815260040161298f959493929190615d14565b6040805180830381865af49250505080156129c7575060408051601f3d908101601f191682019092526129c491810190615722565b60015b6129ee57600060c08301819052604051600080516020615f608339815191529190a1612a27565b60a084018290526020840151612a049083613542565b606085015261401f8054829190600090612a1f9084906153f4565b909155505050505b505b90565b600082600003612a3d576000612a53565b82612a49600287615e32565b612a5391906158ad565b9050600082600003612a66576000612a7c565b82612a72600287615e32565b612a7c91906158ad565b905081151580612a8b57508015155b156119805761401454612a9e82826153f4565b9050612aaa8382615d01565b6140145550505050505050565b604051635676e1ff60e01b815273e77bfEeB83CD09bD9b598a90f7Ce7faE02c7154090635676e1ff90612afb906140119061400c9060069088908890600401615e41565b60006040518083038186803b158015612b1357600080fd5b505af4925050508015612b24575060015b612b4057604051600080516020615f6083398151915290600090a15b6040805180820190915261400b546001600160d01b0381168252600160d01b900465ffffffffffff1660208201526000908190612b7e90859061372b565b61400b80546001600160d01b0319166001600160d01b038416179055909250905080156113ea57505061400b80546001600160d01b0316600160d01b4265ffffffffffff16021790555050565b6000612be082612bdb603d61311a565b6137ab565b9050610b558330836110716029613130565b60a0820151606082015260c08201516020820152610100820151604082018051612c1d908390615d01565b90525060208201518251612c3191906153f4565b81608001818151612c429190615d01565b90525061012082015115612c6857612c6860008361016001516000856101a00151612a2c565b60208101516140195560408101516140185560808101516140175560e0820151610aae908290612ab7565b6001600160a01b03821660009081526140256020526040812080549091670de0b6b3a76400006001612cc586836153f4565b612ccf9190615d01565b612cd991906158ad565b90506000612ce78284615d01565b905060005b81811015612d8857600085612d0086615e75565b95508581548110612d1357612d1361570c565b9060005260206000200154905085805480612d3057612d30615e8c565b6000828152602081208201600019908101829055909101909155614026805460018181018355919092527fcb67479e779bcca9a9cfe6ffe3a8be041d5b066ffc90ea3a8812cd36df6f04af9091019190915501612cec565b50505050505050565b6000612d9d603d61311a565b612da76029613130565b6001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401612dd29190614cbc565b602060405180830381865afa158015612def573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e1391906156f3565b610f9a9190615ea2565b8160c0015181606001818151612e339190615d01565b90525060a0820151602082018051612e4c908390615d01565b90525060a0820151604082018051612e65908390615d01565b9052506080808301519082018051612e7e908390615d01565b9052506020810151614019556040810151614018556080810151614017556060810151610aae908290611222906006906131e7565b6000610d72612ec28484613494565b611c9a8585613427565b600080612edb8361103c615eb9565b9050610c9f19811280612eef575061103c81135b15612f0d57604051637edf443b60e11b815260040160405180910390fd5b610d72612f32612f1c836137c4565b612f2d670df27a2cdf44800061384f565b613933565b6139f8565b600061156d858585670de0b6b3a7640000866001613a8f565b6000612f5c8383613b07565b5090949350505050565b80421115612f87576040516338e5e54b60e21b815260040160405180910390fd5b50565b8154600160601b90046001600160a01b031660008181526003840160205260409020600101546001600160601b031680156113ea576203f480612fcd8242615d01565b1115612fec576040516335bdb41f60e01b815260040160405180910390fd5b6001600160a01b0382166000908152600284016020526040902080541580159061301857506001810154155b15611ae0576040516335bdb41f60e01b815260040160405180910390fd5b8154600160601b90046001600160a01b03168015610b55576001600160a01b038116600090815260038401602052604081206002810154600190910154613089916001600160601b039081169116613bf7565b90508061309584612ecc565b106113ea576040516322c7e87760e11b815260040160405180910390fd5b82156113ea576130cc846130c78584613542565b612f50565b82116113ea5760405163dd47b04360e01b815260040160405180910390fd5b6130f3614a6d565b610d86826001613330565b8054600090610d8690600190615d01565b600081612000610fb6565b600080613125613d16565b929092013592915050565b60008061313b613d16565b929092013560601c92915050565b6113ea846323b872dd60e01b85858560405160240161316a93929190615ed9565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613d27565b610aae826131af603d61311a565b6131b990846158ad565b6131c36029613130565b6001600160a01b03169190613df9565b6000610d86670de0b6b3a764000083615ea2565b6000610d726131f68484612f50565b612ecc565b60606000826001600160401b038111156132175761321761511e565b604051908082528060200260200182016040528015613240578160200160208202803683370190505b50845490915060005b848110156132d55760008661325d84615e75565b935083815481106132705761327061570c565b906000526020600020015490508680548061328d5761328d615e8c565b600190038181906000526020600020016000905590556132ae308983613e18565b808483815181106132c1576132c161570c565b602090810291909101015250600101613249565b509095945050505050565b80546001600160601b031615612f87576040516359bfb80360e11b815260040160405180910390fd5b60006133156029613130565b6001600160a01b0316826001600160a01b0316149050919050565b613338614a6d565b82548210613359576040805180820190915260008082526020820152610d72565b82600001828154811061336e5761336e61570c565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091529392505050565b60005b818110156113ea5760008383838181106133cf576133cf61570c565b9050602002013590506133e181611988565b6133fe5760405163878eabc760e01b815260040160405180910390fd5b84546001810186556000868152602090200181905561341e333083613e18565b506001016133b3565b600061343282615ad8565b9150670de0b6b3a764000090505b6120008211610d8657600083612001018361200181106134625761346261570c565b015490508015613479576134768282613542565b91505b61348283613e7f565b61348c90846153f4565b925050613440565b600061349f82615ad8565b91506001838361200181106134b6576134b661570c565b0154915060008060005b858416600003613538576134d48487615d01565b9250868361200181106134e9576134e961570c565b0154915086612001018361200181106135045761350461570c565b01549050806000036135165781613520565b6135208183613542565b61352a9086615d01565b9450600184901b93506134c0565b5050505092915050565b6000670de0b6b3a76400006135586002826158ad565b6135628486615ea2565b61356c91906153f4565b610d7291906158ad565b60008161358381856158ad565b610d729190615ea2565b6060610d728383604051806060016040528060278152602001615f8060279139613e9e565b6000806135bd613d16565b929092013560f81c92915050565b6000806135d6612d91565b61401c546003549192506000916135ed91906153f4565b905080821115613604576136018183615d01565b92505b505090565b6000818311156136195781610d72565b5090919050565b600061362b82615ad8565b9150670de0b6b3a764000061200060008061364586613e7f565b905060005b8184106137205761365b84846153f4565b9050612000811161364a576000886120010182612001811061367f5761367f61570c565b0154905087851615613700576000898361200181106136a0576136a061570c565b01549050816000036136bb576136b68782613542565b6136dd565b6136dd6136c88389615ea2565b826a0c097ce7bc90715b34b9f160241b613f0c565b6136e790896153f4565b97508294508885036136fa575050613720565b50613713565b8015613713576137108682613fbb565b95505b600185901c94505061364a565b505050505092915050565b805160c083015160009015613752576137478460a00151613fd0565b915060019050610d37565b836060015160000361376f57613747670de0b6b3a7640000613fd0565b82516001600160d01b0316670de0b6b3a764000014801561379c575042836020015165ffffffffffff1614155b15610d37575060019250929050565b60008160016137ba82866153f4565b61356c9190615d01565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156138045760405163e608e18b60e01b815260048101839052602401612832565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315613841576040516371f72a3160e01b815260048101839052602401612832565b50670de0b6b3a76400000290565b60008082136138745760405163309fa7dd60e11b815260048101839052602401612832565b6000670de0b6b3a7640000831261388d575060016138a6565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b60006138bb670de0b6b3a76400008505614039565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff1981016138e557505002919050565b6706f05b59d3b200005b600081131561392a57670de0b6b3a7640000828002059150671bc16d674ec800008212613922579384019360019190911d905b60011d6138ef565b50505002919050565b6000600160ff1b83148061394a5750600160ff1b82145b1561396857604051630d01a11b60e21b815260040160405180910390fd5b60008060008512613979578461397e565b846000035b91506000841261398e5783613993565b836000035b905060006139a18383614117565b90506001600160ff1b038111156139ce5760405163bf79e8d960e01b815260048101829052602401612832565b6000198087139086138082186001146139e757826139ec565b826000035b98975050505050505050565b600080821215613a4b5768033dd1780914b9711419821215613a1c57506000919050565b613a28826000036139f8565b6a0c097ce7bc90715b34b9f160241b81613a4457613a44615897565b0592915050565b680a688906bd8b0000008212613a775760405163e69458f960e01b815260048101839052602401612832565b670de0b6b3a7640000604083901b04610d72816141dd565b600084158015613a9d575086155b15613aa9575082613afd565b85600003613ab8575082613afd565b613afa613ac58489615ea2565b613ad7670de0b6b3a764000088615ea2565b613ae191906153f4565b85613af4670de0b6b3a76400008a615ea2565b8561486f565b90505b9695505050505050565b60008080611000670de0b6b3a764000082808080805b8615613be957613b2d878b6153f4565b93508b846120018110613b4257613b4261570c565b015492508b61200101846120018110613b5d57613b5d61570c565b0154915081600003613b7857613b738684613542565b613b9a565b613b9a613b858388615ea2565b846a0c097ce7bc90715b34b9f160241b613f0c565b613ba490866153f4565b90508a811015613bc357611cdc8411613bbe578399508094505b613bdd565b8115613bd657613bd38683613fbb565b95505b8098508597505b600187901c9650613b1d565b505050505050509250925092565b600080613c28613c078442615d01565b613c1990670de0b6b3a7640000615ea2565b680340aad21b3b7000006148c0565b9050600068068155a43676e00000821015613c7757613c55670de0b6b3a763ffff19612f2d6014856158ad565b9050613c6485611c9a836139f8565b613c7090610100615ea2565b9250613d0e565b682d89577d7d40200000821015613cce57613cb4670de0b6b3a763ffff196078613caa68068155a43676e0000086615d01565b612f2d91906158ad565b9050613cc385611c9a836139f8565b613c70906004615ea2565b613cf0670de0b6b3a763ffff19603c613caa682d89577d7d4020000086615d01565b90506010613d0186611c9a846139f8565b613d0b91906158ad565b92505b505092915050565b600119368181013560f01c90030190565b6000613d7c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166148e09092919063ffffffff16565b805190915015610b555780806020019051810190613d9a9190615efd565b610b555760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401612832565b610b558363a9059cbb60e01b848460405160240161316a929190614eba565b613e226015613130565b6001600160a01b03166323b872dd8484846040518463ffffffff1660e01b8152600401613e5193929190615ed9565b600060405180830381600087803b158015613e6b57600080fd5b505af1158015612d88573d6000803e3d6000fd5b6000811561110057613e96600019831860016153f4565b909116919050565b6060600080856001600160a01b031685604051613ebb9190615f1a565b600060405180830381855af49150503d8060008114613ef6576040519150601f19603f3d011682016040523d82523d6000602084013e613efb565b606091505b5091509150613afd868383876148ef565b6000808060001985870985870292508281108382030391505080600003613f4657838281613f3c57613f3c615897565b0492505050610d72565b808411613f5257600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000670de0b6b3a764000061356c8385615ea2565b60006001600160d01b03821115612a275760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663038206269747360c81b6064820152608401612832565b6000600160801b821061405957608091821c9161405690826153f4565b90505b600160401b821061407757604091821c9161407490826153f4565b90505b600160201b821061409557602091821c9161409290826153f4565b90505b6201000082106140b257601091821c916140af90826153f4565b90505b61010082106140ce57600891821c916140cb90826153f4565b90505b601082106140e957600491821c916140e690826153f4565b90505b6004821061410457600291821c9161410190826153f4565b90505b6002821061110057610d866001826153f4565b60008080600019848609848602925082811083820303915050670de0b6b3a7640000811061415b5760405163698d9a0160e11b815260048101829052602401612832565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff82119050826000036141995780670de0b6b3a7640000850401945050505050610d86565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b8216156141fd5768016a09e667f3bcc9090260401c5b6001603e1b821615614218576801306fe0a31b7152df0260401c5b6001603d1b821615614233576801172b83c7d517adce0260401c5b6001603c1b82161561424e5768010b5586cf9890f62a0260401c5b6001603b1b821615614269576801059b0d31585743ae0260401c5b6001603a1b82161561428457680102c9a3e778060ee70260401c5b600160391b82161561429f5768010163da9fb33356d80260401c5b600160381b8216156142ba57680100b1afa5abcbed610260401c5b600160371b8216156142d55768010058c86da1c09ea20260401c5b600160361b8216156142f0576801002c605e2e8cec500260401c5b600160351b82161561430b57680100162f3904051fa10260401c5b600160341b821615614326576801000b175effdc76ba0260401c5b600160331b82161561434157680100058ba01fb9f96d0260401c5b600160321b82161561435c5768010002c5cc37da94920260401c5b600160311b821615614377576801000162e525ee05470260401c5b600160301b8216156143925768010000b17255775c040260401c5b6001602f1b8216156143ad576801000058b91b5bc9ae0260401c5b6001602e1b8216156143c857680100002c5c89d5ec6d0260401c5b6001602d1b8216156143e35768010000162e43f4f8310260401c5b6001602c1b8216156143fe57680100000b1721bcfc9a0260401c5b6001602b1b8216156144195768010000058b90cf1e6e0260401c5b6001602a1b821615614434576801000002c5c863b73f0260401c5b600160291b82161561444f57680100000162e430e5a20260401c5b600160281b82161561446a576801000000b1721835510260401c5b600160271b82161561448557680100000058b90c0b490260401c5b600160261b8216156144a05768010000002c5c8601cc0260401c5b600160251b8216156144bb576801000000162e42fff00260401c5b600160241b8216156144d65768010000000b17217fbb0260401c5b600160231b8216156144f1576801000000058b90bfce0260401c5b600160221b82161561450c57680100000002c5c85fe30260401c5b600160211b8216156145275768010000000162e42ff10260401c5b600160201b82161561454257680100000000b17217f80260401c5b638000000082161561455d5768010000000058b90bfc0260401c5b6340000000821615614578576801000000002c5c85fe0260401c5b632000000082161561459357680100000000162e42ff0260401c5b63100000008216156145ae576801000000000b17217f0260401c5b63080000008216156145c957680100000000058b90c00260401c5b63040000008216156145e45768010000000002c5c8600260401c5b63020000008216156145ff576801000000000162e4300260401c5b630100000082161561461a5768010000000000b172180260401c5b62800000821615614634576801000000000058b90c0260401c5b6240000082161561464e57680100000000002c5c860260401c5b622000008216156146685768010000000000162e430260401c5b6210000082161561468257680100000000000b17210260401c5b6208000082161561469c5768010000000000058b910260401c5b620400008216156146b6576801000000000002c5c80260401c5b620200008216156146d057680100000000000162e40260401c5b620100008216156146e95761b172600160401b010260401c5b618000821615614701576158b9600160401b010260401c5b61400082161561471957612c5d600160401b010260401c5b6120008216156147315761162e600160401b010260401c5b61100082161561474957610b17600160401b010260401c5b6108008216156147615761058c600160401b010260401c5b610400821615614779576102c6600160401b010260401c5b61020082161561479157610163600160401b010260401c5b6101008216156147a85760b1600160401b010260401c5b60808216156147be576059600160401b010260401c5b60408216156147d457602c600160401b010260401c5b60208216156147ea576016600160401b010260401c5b601082161561480057600b600160401b010260401c5b6008821615614816576006600160401b010260401c5b600482161561482c576003600160401b010260401c5b6002821615614842576001600160401b010260401c5b6001821615614858576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b60008061487d868686613f0c565b9050600183600281111561489357614893615f36565b1480156148b05750600084806148ab576148ab615897565b868809115b1561156d57613afd6001826153f4565b6000816148ce6002826158ad565b613562670de0b6b3a764000086615ea2565b6060611c028484600085614968565b6060831561495e578251600003614957576001600160a01b0385163b6149575760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401612832565b5081611c02565b611c028383614a43565b6060824710156149c95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401612832565b600080866001600160a01b031685876040516149e59190615f1a565b60006040518083038185875af1925050503d8060008114614a22576040519150601f19603f3d011682016040523d82523d6000602084013e614a27565b606091505b5091509150614a38878383876148ef565b979650505050505050565b815115614a535781518083602001fd5b8060405162461bcd60e51b81526004016128329190615f4c565b604080518082019091526000808252602082015290565b6001600160a01b0381168114612f8757600080fd5b60008060408385031215614aac57600080fd5b8235614ab781614a84565b946020939093013593505050565b600060208284031215614ad757600080fd5b8135610d7281614a84565b60008083601f840112614af457600080fd5b5081356001600160401b03811115614b0b57600080fd5b6020830191508360208260051b8501011115610d3757600080fd5b600080600060408486031215614b3b57600080fd5b8335614b4681614a84565b925060208401356001600160401b03811115614b6157600080fd5b614b6d86828701614ae2565b9497909650939450505050565b8015158114612f8757600080fd5b600080600060608486031215614b9d57600080fd5b8335614ba881614a84565b92506020840135614bb881614b7a565b929592945050506040919091013590565b600060208284031215614bdb57600080fd5b5035919050565b9283526020830191909152604082015260600190565b60008060008060808587031215614c0e57600080fd5b5050823594602084013594506040840135936060013592509050565b60008060008060608587031215614c4057600080fd5b84356001600160401b03811115614c5657600080fd5b614c6287828801614ae2565b90989097506020870135966040013595509350505050565b600080600060608486031215614c8f57600080fd5b833592506020840135614ca181614a84565b91506040840135614cb181614a84565b809150509250925092565b6001600160a01b0391909116815260200190565b93845260208401929092526040830152606082015260800190565b60008060008060608587031215614d0157600080fd5b8435614d0c81614a84565b93506020850135614d1c81614a84565b925060408501356001600160401b03811115614d3757600080fd5b614d4387828801614ae2565b95989497509550505050565b60008083601f840112614d6157600080fd5b5081356001600160401b03811115614d7857600080fd5b602083019150836020828501011115610d3757600080fd5b600080600080600060808688031215614da857600080fd5b8535614db381614a84565b94506020860135614dc381614a84565b93506040860135925060608601356001600160401b03811115614de557600080fd5b614df188828901614d4f565b969995985093965092949392505050565b600080600080600060808688031215614e1a57600080fd5b8535614e2581614a84565b9450602086013593506040860135614e3c81614a84565b925060608601356001600160401b03811115614de557600080fd5b60008060408385031215614e6a57600080fd5b50508035926020909101359150565b60008060208385031215614e8c57600080fd5b82356001600160401b03811115614ea257600080fd5b614eae85828601614ae2565b90969095509350505050565b6001600160a01b03929092168252602082015260400190565b600081518084526020808501945080840160005b83811015614f0357815187529582019590820190600101614ee7565b509495945050505050565b602081526000610d726020830184614ed3565b600080600080600060608688031215614f3957600080fd5b8535614f4481614a84565b945060208601356001600160401b0380821115614f6057600080fd5b614f6c89838a01614ae2565b90965094506040880135915080821115614f8557600080fd5b50614df188828901614ae2565b60008060408385031215614fa557600080fd5b823591506020830135614fb781614a84565b809150509250929050565b600080600080600060a08688031215614fda57600080fd5b8535614fe581614a84565b94506020860135935060408601359250606086013561500381614a84565b949793965091946080013592915050565b60005b8381101561502f578181015183820152602001615017565b50506000910152565b60008151808452615050816020860160208601615014565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156150b957603f198886030184526150a7858351615038565b9450928501929085019060010161508b565b5092979650505050505050565b6000806000806000608086880312156150de57600080fd5b85356150e981614a84565b9450602086013593506040860135925060608601356001600160401b0381111561511257600080fd5b614df188828901614ae2565b634e487b7160e01b600052604160045260246000fd5b6040516101c081016001600160401b03811182821017156151575761515761511e565b60405290565b60405161014081016001600160401b03811182821017156151575761515761511e565b60405161012081016001600160401b03811182821017156151575761515761511e565b604051601f8201601f191681016001600160401b03811182821017156151cb576151cb61511e565b604052919050565b600080604083850312156151e657600080fd5b82356001600160401b03808211156151fd57600080fd5b818501915085601f83011261521157600080fd5b81356020828211156152255761522561511e565b8160051b92506152368184016151a3565b828152928401810192818101908985111561525057600080fd5b948201945b8486101561526e57853582529482019490820190615255565b9997909101359750505050505050565b6000806040838503121561529157600080fd5b823561529c81614a84565b91506020830135614fb781614a84565b6000806000606084860312156152c157600080fd5b505081359360208301359350604090920135919050565b60ff81511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c0810151151560c083015260e081015160e08301526101008082015181840152505050565b86815260208101869052604081018590526101c0810161535a60608301866152d8565b6001600160a01b03939093166101808201526101a00152949350505050565b60006080828403121561538b57600080fd5b604051608081016001600160401b03811182821017156153ad576153ad61511e565b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610d8657610d866153de565b81835260006001600160fb1b0383111561542057600080fd5b8260051b80836020870137939093016020019392505050565b8481526001600160a01b0384166020820152606060408201819052600090613afd9083018486615407565b6000610220820190508a825289602083015288604083015287606083015261548f60808301886152d8565b6001600160a01b03959095166101a08201529215156101c08401526101e08301919091526102009091015295945050505050565b805161110081614b7a565b60006101c082840312156154e157600080fd5b6154e9615134565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e082015261010080840151818301525061012061554d8185016154c3565b908201526101408381015190820152610160808401519082015261018080840151908201526101a0928301519281019290925250919050565b6000610220820190508882528760208301528660408301528560608301528460808301526155b760a08301856152d8565b82516001600160a01b03166101c083015260208301516101e0830152604090920151610200909101529695505050505050565b600060e082840312156155fc57600080fd5b60405160e081016001600160401b038111828210171561561e5761561e61511e565b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b805182526020810151602083015260408101516040830152606081015160608301525050565b848152602081018490526101e081016156af60408301856152d8565b61156d61016083018461566d565b600080600080608085870312156156d357600080fd5b505082516020840151604085015160609095015191969095509092509050565b60006020828403121561570557600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000806040838503121561573557600080fd5b505080516020909101519092909150565b86815285602082015260a06040820152600061576660a083018688615407565b60608301949094525060800152949350505050565b87815260208101879052604081018690526001600160a01b0385811660608301528416608082015260c060a082018190526000906157bc9083018486615407565b9998505050505050505050565b8381526020810183905260c08101611c02604083018461566d565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0386811682528516602082015260408101849052608060608201819052600090613afa90830184866157e4565b60006102008201905089825288602083015287604083015286606083015261586c60808301876152d8565b6001600160a01b03949094166101a08201526101c08101929092526101e09091015295945050505050565b634e487b7160e01b600052601260045260246000fd5b6000826158ca57634e487b7160e01b600052601260045260246000fd5b500490565b6060815260006158e26060830187614ed3565b8560208401528281036040840152614a388185876157e4565b83815260406020808301829052908201839052600090849060608401835b8681101561594757833561592c81614a84565b6001600160a01b031682529282019290820190600101615919565b50979650505050505050565b8681526001600160a01b038616602082015260806040820181905260009061597e9083018688615407565b82810360608401526157bc818587615407565b6040815260006159a5604083018587615407565b9050826020830152949350505050565b888152602081018890526040810187905261020081016159d860608301886152d8565b6001600160a01b03959095166101808201526101a08101939093526101c08301919091526101e090910152949350505050565b60006101408284031215615a1e57600080fd5b615a2661515d565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152508091505092915050565b6000808335601e19843603018112615aa957600080fd5b8301803591506001600160401b03821115615ac357600080fd5b602001915036819003821315610d3757600080fd5b600060018201615aea57615aea6153de565b5060010190565b848152602081018490526101c08101615b0d60408301856152d8565b8251610160830152602083015161018083015260408301516101a083015295945050505050565b600080600060608486031215615b4957600080fd5b8351925060208401519150604084015190509250925092565b89815260208101899052604081018890526102208101615b8560608301896152d8565b6101808201969096526001600160a01b03949094166101a08501526101c08401929092526101e083015261020090910152949350505050565b60006101208284031215615bd157600080fd5b615bd9615180565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152508091505092915050565b848152606060208201526000615c53606083018587615407565b905082604083015295945050505050565b8481526020810184905260408101839052610180810161156d60608301846152d8565b60006101e082019050888252876020830152866040830152856060830152615cb260808301866152d8565b6101a08201939093526101c0015295945050505050565b848152602081018490526101a08101615ce560408301856152d8565b8251610160830152602083015161018083015295945050505050565b81810381811115610d8657610d866153de565b858152602081018590526101a08101615d3060408301866152d8565b6001600160601b039390931661016082015261018001529392505050565b600181815b80851115615d89578160001904821115615d6f57615d6f6153de565b80851615615d7c57918102915b93841c9390800290615d53565b509250929050565b600082615da057506001610d86565b81615dad57506000610d86565b8160018114615dc35760028114615dcd57615de9565b6001915050610d86565b60ff841115615dde57615dde6153de565b50506001821b610d86565b5060208310610133831016604e8410600b8410161715615e0c575081810a610d86565b615e168383615d4e565b8060001904821115615e2a57615e2a6153de565b029392505050565b6000610d7260ff841683615d91565b85815260208101859052604081018490526101a08101615e6460608301856152d8565b826101808301529695505050505050565b600081615e8457615e846153de565b506000190190565b634e487b7160e01b600052603160045260246000fd5b8082028115828204841417610d8657610d866153de565b8181036000831280158383131683831282161715611fc457611fc46153de565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215615f0f57600080fd5b8151610d7281614b7a565b60008251615f2c818460208701615014565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b602081526000610d72602083018461503856fe84da056cd0ff5380ec35a74f131057a96626a24305fa137c235bdbe1b414a396416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ee1af32dd4789e25b0d2d367f045d24478da6d24aa3846c6cbe6a8a13ef713c864736f6c63430008120033","args":["0x6c518f9D1a163379235816c543E62922a79863Fa"],"salt":"AJNA","value":[]}
2024-01-08T15:29:49.137Z cannon:builder comparing states null ce09ae3be0f574dd387f9a958c126b4a
2024-01-08T15:29:49.137Z cannon:builder run isolated contract.ERC721PoolFactory
Executing [contract.ERC721PoolFactory]...
2024-01-08T15:29:49.142Z cannon:verbose:builder ctx for step contract.ERC721PoolFactory {
  package: {},
  timestamp: '1704727545',
  chainId: 10,
  settings: {
    bwAJNA_ADDRESS: '0x6c518f9D1a163379235816c543E62922a79863Fa',
    salt: 'AJNA'
  },
  contracts: {
    BorrowerActions: {
      address: '0x422d470fb02206733Bb770D2A27d6d98f493af64',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0xd69579d47bd5c8723115bec074929864a19201645004e7bdbb5c2cb41f904e2f',
      sourceName: 'src/libraries/external/BorrowerActions.sol',
      contractName: 'BorrowerActions',
      deployedOn: 'contract.BorrowerActions',
      highlight: undefined,
      gasUsed: 2100149,
      gasCost: '4275955'
    },
    LenderActions: {
      address: '0x7456CF19C121842FE2C3a888075A11d51ED63b98',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0x9b4f17ee54f9802c9ac92cd6b4eebc449e22b215183590328583b9b596dba208',
      sourceName: 'src/libraries/external/LenderActions.sol',
      contractName: 'LenderActions',
      deployedOn: 'contract.LenderActions',
      highlight: undefined,
      gasUsed: 2329033,
      gasCost: '3001992'
    },
    LPActions: {
      address: '0xb257A98a3549a0B36b9001d0eDc9e75d313d5c8e',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0xf87dedfa9197400f141a7dde71e6096290cc2f6eb4179e437cbd9466988d753d',
      sourceName: 'src/libraries/external/LPActions.sol',
      contractName: 'LPActions',
      deployedOn: 'contract.LPActions',
      highlight: undefined,
      gasUsed: 692518,
      gasCost: '3408368'
    },
    KickerActions: {
      address: '0xf419056B545783BbFfEAB4d0aA057a52FbA4F4fd',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0x6b94aa77f3d25a3b8a8735230426dba65b7160855256b3dfc5f5213a67fc0a68',
      sourceName: 'src/libraries/external/KickerActions.sol',
      contractName: 'KickerActions',
      deployedOn: 'contract.KickerActions',
      highlight: undefined,
      gasUsed: 2173039,
      gasCost: '3816296'
    },
    SettlerActions: {
      address: '0x9EdcD1fEc19E5baA98fa4911C90C2162524750d2',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0x8a41a4cbe5b9c04e6a1475576916c4d7fa7fdcc91df45bc60e0aa8aa33a5074f',
      sourceName: 'src/libraries/external/SettlerActions.sol',
      contractName: 'SettlerActions',
      deployedOn: 'contract.SettlerActions',
      highlight: undefined,
      gasUsed: 2135769,
      gasCost: '2172078'
    },
    TakerActions: {
      address: '0xb127207d673977e14f31f52a14AD07e6a512c5fA',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0x24588ac27cea4c4b9080124841c3d378ff5954332948fd042694e445e525ab41',
      sourceName: 'src/libraries/external/TakerActions.sol',
      contractName: 'TakerActions',
      deployedOn: 'contract.TakerActions',
      highlight: undefined,
      gasUsed: 3558325,
      gasCost: '1939228'
    },
    PoolCommons: {
      address: '0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0x9ee2e160d6eff90f8f284668026974bc66484709a99d7fce7cd7e3f527bdbfb1',
      sourceName: 'src/libraries/external/PoolCommons.sol',
      contractName: 'PoolCommons',
      deployedOn: 'contract.PoolCommons',
      highlight: undefined,
      gasUsed: 2546476,
      gasCost: '2685008'
    }
  },
  txns: {},
  imports: {},
  extras: {}
}
2024-01-08T15:29:49.143Z cannon:builder:contract exec {
  artifact: 'ERC721PoolFactory',
  args: [ '0x6c518f9D1a163379235816c543E62922a79863Fa' ],
  libraries: {
    BorrowerActions: '0x422d470fb02206733Bb770D2A27d6d98f493af64',
    LenderActions: '0x7456CF19C121842FE2C3a888075A11d51ED63b98',
    LPActions: '0xb257A98a3549a0B36b9001d0eDc9e75d313d5c8e',
    KickerActions: '0xf419056B545783BbFfEAB4d0aA057a52FbA4F4fd',
    SettlerActions: '0x9EdcD1fEc19E5baA98fa4911C90C2162524750d2',
    TakerActions: '0xb127207d673977e14f31f52a14AD07e6a512c5fA',
    PoolCommons: '0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540'
  },
  salt: 'AJNA',
  create2: true,
  from: '',
  nonce: '',
  value: '',
  abi: ''
}
2024-01-08T15:29:49.148Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:49.151Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:49.160Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:49.164Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:49.174Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:49.177Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:49.183Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:49.186Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:49.193Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:49.196Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:49.204Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:49.208Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:49.222Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:49.225Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:49.233Z cannon:builder:runtime resolve artifact ERC721PoolFactory
2024-01-08T15:29:49.233Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:29:58.330Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/ERC721PoolFactory.sol': 'ERC721PoolFactory' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/clones-with-immutable-args/src/Clone.sol': {
      keccak256: '0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545',
      urls: [Array],
      license: 'BSD'
    },
    'lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol': {
      keccak256: '0xcb7cbb68b8a90e6eff9c7a29f5b7d5964e0cedc0ad8133f5bcb3ec3a9aeb391c',
      urls: [Array],
      license: 'BSD'
    },
    'lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol': {
      keccak256: '0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol': {
      keccak256: '0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol': {
      keccak256: '0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol': {
      keccak256: '0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Address.sol': {
      keccak256: '0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Multicall.sol': {
      keccak256: '0x35e30a35e23f856cbcee3558b7efdd83f6017a8f1b419710645143d98e892463',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol': {
      keccak256: '0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathUD60x18.sol': {
      keccak256: '0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/ERC721Pool.sol': {
      keccak256: '0xce94095e9d2022c001506ef1901515d9adf7f639b3b01c14b6bc2de5633ea0e2',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/ERC721PoolFactory.sol': {
      keccak256: '0xa44628e67dfe4b35e7d73fbe30db5a09551196e4a3061087bacaee14fac87237',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/FlashloanablePool.sol': {
      keccak256: '0x1f3767f4d27c13ef2c53bcf49c1d5917c77b2d3fb7a28576f0c2a131a8377f6f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/Pool.sol': {
      keccak256: '0x87159e77eeee256f1501035738bb015a1d4d360fab31ea077f4ddcaff4e54d22',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/PoolDeployer.sol': {
      keccak256: '0x81b87acb71ecdbb00a37f4b0b23d21554692bde445fbc19871353bcce128d53e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPoolFactory.sol': {
      keccak256: '0x53d72e58a4b0d6a5e8aeb23a2f40262636c823170037179220ec29ca403dae76',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721Pool.sol': {
      keccak256: '0x2873a73b910d1a1a2d403dac08ecec0afd1b58142185e27565edfa695d278b95',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolBorrowerActions.sol': {
      keccak256: '0x3c80e33d8fe71470d391af54e9a70c124e9677b9f8848a8d8d77ee1f6182ce21',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolErrors.sol': {
      keccak256: '0x896b15da426f1baa78d9d09aebe78d236011650b714e45f90e5c4bb096b481af',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolEvents.sol': {
      keccak256: '0xf5c0aaae515ed6e22b49b0a0f5b9d45f6cf2fad6fae83201893ba7907fc7d3bf',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolFactory.sol': {
      keccak256: '0x2bfafdc6ab11b11d75caa61441964799d7b780d93e3a1938b989a135a5070471',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolImmutables.sol': {
      keccak256: '0x5f8d672bad5dfae9556334a0ea5107452b02075502a1fb9ac7bc521c071310db',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolLenderActions.sol': {
      keccak256: '0xcff44a133099f3a1cd574f18e46f6c0076de2384a16df281bab2b9d627b5a42b',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolState.sol': {
      keccak256: '0x2742176dd54be93117cdba89ad45d3a68f0d0fbf0d8e6f3decd7df4b81815cf6',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721Taker.sol': {
      keccak256: '0x7c27a3083aeeaa008978dcba9f7454b9959a59e36c2559e0b1a251494e536488',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/BorrowerActions.sol': {
      keccak256: '0xecf8ce41a4034aa174c72bab7e558d788c1cc052ee77b2151f4acee4691be839',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/KickerActions.sol': {
      keccak256: '0xa486e9c9091c1cc8966f13b2b6bb9f9b7eeaf26d539b990c3904befd7a2a25fe',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/LPActions.sol': {
      keccak256: '0x4def554bc6414a7a4a575b8fced4fd334b28c484f09e5f616a0c228cbf875c85',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/LenderActions.sol': {
      keccak256: '0x04b37827f21db736b668fb27393b6c8b968b4cb24abf338b0a658090a173e0dd',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/PoolCommons.sol': {
      keccak256: '0x1dd40766b71468dade905c41a90783dad18761fe998f1a85acd79e8a0bb32ed3',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/SettlerActions.sol': {
      keccak256: '0x05edfe3f72323b7212fbb5134f76211f397138c2ed30ddf0f3683772213c831d',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/TakerActions.sol': {
      keccak256: '0x642ee2cabe710495ccc32c269750578cbfe924af26dcc73b8ce6cdf06adce68e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/RevertsHelper.sol': {
      keccak256: '0xcaff095290172f1b5726d4e887ab9be5f524d9321e94ca0095f99b666381a6f4',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:29:58.331Z cannon:cli:foundry evm version paris
2024-01-08T15:29:58.341Z cannon:builder:runtime reported contract artifact ERC721PoolFactory {
  contractName: 'ERC721PoolFactory',
  sourceName: 'src/ERC721PoolFactory.sol',
  abi: [
    {
      type: 'constructor',
      inputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'ERC721_NON_SUBSET_HASH',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'MAX_RATE',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'MIN_RATE',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'ajna',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'deployPool',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'deployPool',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'deployedPools',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'deployedPoolsList',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getDeployedPoolsList',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getNFTSubsetHash',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'pure'
    },
    {
      type: 'function',
      name: 'getNumberOfDeployedPools',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'implementation',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'event',
      name: 'PoolCreated',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'CreateFail', inputs: [] },
    { type: 'error', name: 'DecimalsNotCompliant', inputs: [] },
    {
      type: 'error',
      name: 'DeployQuoteCollateralSameToken',
      inputs: []
    },
    { type: 'error', name: 'DeployWithZeroAddress', inputs: [] },
    { type: 'error', name: 'NFTNotSupported', inputs: [] },
    { type: 'error', name: 'PoolAlreadyExists', inputs: [Array] },
    { type: 'error', name: 'PoolInterestRateInvalid', inputs: [] },
    { type: 'error', name: 'TokenIdSubsetInvalid', inputs: [] }
  ],
  bytecode: '0x608060405234801561001057600080fd5b5060405162006fc638038062006fc6833981016040819052610031916100d0565b6001600160a01b0381166100585760405163104aee1f60e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b03831617905560405161007f906100c2565b604051809103906000f08015801561009b573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b039290921691909117905550610100565b6160028062000fc483390190565b6000602082840312156100e257600080fd5b81516001600160a01b03811681146100f957600080fd5b9392505050565b610eb480620001106000396000f3fe608060405234801561001057600080fd5b50600436106100a45760003560e01c806303e552cd146100a95780632b6983af146100d1578063449e586a146100e65780635c60da1b146100f95780637f165b0b14610119578063a3232bf314610153578063a387245c14610166578063b038d2e114610179578063b3d4cfa41461018c578063bb6da0dd14610194578063c24dbebd146101a7578063d819bfef146101b6575b600080fd5b6100be600080516020610e5f83398151915281565b6040519081526020015b60405180910390f35b6100d96101c4565b6040516100c89190610922565b6100be6100f4366004610a1f565b610226565b60035461010c906001600160a01b031681565b6040516100c89190610a53565b61010c610127366004610a7f565b60016020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b61010c610161366004610ac1565b61027d565b61010c610174366004610b02565b6102fe565b61010c610187366004610b1b565b610328565b6002546100be565b60005461010c906001600160a01b031681565b6100be67016345785d8a000081565b6100be662386f26fc1000081565b6060600280548060200260200160405190810160405280929190818152602001828054801561021c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101fe575b5050505050905090565b600081516000036102465750600080516020610e5f833981519152919050565b61024f826106d5565b816040516020016102609190610bbf565b604051602081830303815290604052805190602001209050919050565b604080516000808252602082019283905263b038d2e160e01b909252309063b038d2e1906102b390879087908760248201610bd2565b6020604051808303816000875af11580156102d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f69190610c0f565b949350505050565b6002818154811061030e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000848483816001600160a01b0316836001600160a01b03160361035f5760405163bcbac68960e01b815260040160405180910390fd5b6001600160a01b038316158061037c57506001600160a01b038216155b1561039a5760405163104aee1f60e01b815260040160405180910390fd5b80662386f26fc1000011806103b6575067016345785d8a000081115b156103d45760405163462f085f60e01b815260040160405180910390fd5b60006103df87610226565b60008181526001602090815260408083206001600160a01b03808f1685529083528184208d821685529092529091205491925016801561043d578060405163fb8debc160e01b81526004016104349190610a53565b60405180910390fd5b60006104488a610755565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201529091506001600160a01b038c16906301ffc9a790602401602060405180830381865afa9250505080156104b2575060408051601f3d908101601f191682019092526104af91810190610c2c565b60015b6104cf5760405163a45e82f560e01b815260040160405180910390fd5b806104ed5760405163a45e82f560e01b815260040160405180910390fd5b506000600160008054906101000a90046001600160a01b03168d8d858e5160405160200161052096959493929190610c4e565b60408051601f1981840301815291905260035490915060009061054c906001600160a01b031683610810565b9050809850886001600087815260200190815260200160002060008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002899080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055507fee1fe091a5213b321c2662b35c0b7cd0d35d10dbcab52b3c9b8768983c67bce3898660405161065d9291906001600160a01b03929092168252602082015260400190565b60405180910390a160405163c1bc1df360e01b81526001600160a01b0382169063c1bc1df390610693908e908e90600401610cb5565b600060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050505050505050505050949350505050565b60005b600182516106e69190610ced565b81101561075157816106f9826001610d06565b8151811061070957610709610d19565b602002602001015182828151811061072357610723610d19565b602002602001015110610749576040516302e94eaf60e01b815260040160405180910390fd5b6001016106d8565b5050565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156107b1575060408051601f3d908101601f191682019092526107ae91810190610d2f565b60015b6107ce576040516333ae908b60e01b815260040160405180910390fd5b60128160ff1611156107f3576040516333ae908b60e01b815260040160405180910390fd5b6107fe816012610d52565b61080990600a610e4f565b9392505050565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b60348401526000939260438401929186019084604182015b602082106108c65783518152602093840193601f1990920191016108a7565b835160001960208490036101000a0119908116825260f088901b91830191825286846000f098506001600160a01b03891661091457604051631d7fde3160e31b815260040160405180910390fd5b505050505050505092915050565b6020808252825182820181905260009190848201906040850190845b818110156109635783516001600160a01b03168352928401929184019160010161093e565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261099657600080fd5b813560206001600160401b03808311156109b2576109b261096f565b8260051b604051601f19603f830116810181811084821117156109d7576109d761096f565b6040529384528581018301938381019250878511156109f557600080fd5b83870191505b84821015610a14578135835291830191908301906109fb565b979650505050505050565b600060208284031215610a3157600080fd5b81356001600160401b03811115610a4757600080fd5b6102f684828501610985565b6001600160a01b0391909116815260200190565b6001600160a01b0381168114610a7c57600080fd5b50565b600080600060608486031215610a9457600080fd5b833592506020840135610aa681610a67565b91506040840135610ab681610a67565b809150509250925092565b600080600060608486031215610ad657600080fd5b8335610ae181610a67565b92506020840135610af181610a67565b929592945050506040919091013590565b600060208284031215610b1457600080fd5b5035919050565b60008060008060808587031215610b3157600080fd5b8435610b3c81610a67565b93506020850135610b4c81610a67565b925060408501356001600160401b03811115610b6757600080fd5b610b7387828801610985565b949793965093946060013593505050565b600081518084526020808501945080840160005b83811015610bb457815187529582019590820190600101610b98565b509495945050505050565b6020815260006108096020830184610b84565b6001600160a01b03858116825284166020820152608060408201819052600090610bfe90830185610b84565b905082606083015295945050505050565b600060208284031215610c2157600080fd5b815161080981610a67565b600060208284031215610c3e57600080fd5b8151801515811461080957600080fd5b600060028810610c6e57634e487b7160e01b600052602160045260246000fd5b5060f89690961b86526001600160601b0319606095861b8116600188015293851b841660158701529190931b9091166029840152603d830191909152605d820152607d0190565b604081526000610cc86040830185610b84565b90508260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610d0057610d00610cd7565b92915050565b80820180821115610d0057610d00610cd7565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610d4157600080fd5b815160ff8116811461080957600080fd5b60ff8281168282160390811115610d0057610d00610cd7565b600181815b80851115610da6578160001904821115610d8c57610d8c610cd7565b80851615610d9957918102915b93841c9390800290610d70565b509250929050565b600082610dbd57506001610d00565b81610dca57506000610d00565b8160018114610de05760028114610dea57610e06565b6001915050610d00565b60ff841115610dfb57610dfb610cd7565b50506001821b610d00565b5060208310610133831016604e8410600b8410161715610e29575081810a610d00565b610e338383610d6b565b8060001904821115610e4757610e47610cd7565b029392505050565b600061080960ff841683610dae56fe93e3b87db48beb11f82ff978661ba6e96f72f582300e9724191ab4b5d7964364a2646970667358221220f107d3802d66abca4226adedced210c4c448d1c9479f8f3256a19c5c56c2d81264736f6c63430008120033608060405234801561001057600080fd5b506001600055615fdc80620000266000396000f3fe608060405234801561001057600080fd5b50600436106102ea5760003560e01c8062cdcefb146102ef5780630203d8fb146103285780630448e51a1461033d578063063d829f1461042157806306e47f26146104445780630729f62c1461045757806315afd4091461046a57806316f8a463146104925780632c7b2e06146104b3578063307ee3b5146104f0578063329d1a8b146104f9578063332c0e431461050c5780633884cd881461051f5780633a0c8f071461054c5780633ab96ec5146105545780633fa8fdbb1461056757806342302a9a1461056f578063438732641461058257806347f6fe641461059a578063483cd187146105ad57806348d399e7146105f15780634ab1fc36146106065780634d9661981461060f5780634efe8af7146106275780635a3b44771461063a5780635a422b92146106765780635cffe9de1461067e5780635d3637e714610691578063613255ab1461069a57806366ae5880146106ad5780636a9b1891146106c05780637323f853146106d35780637b3f8655146107045780637dacba181461070c5780637f8baa371461071f57806380f835ed146107325780638349d6be1461074557806385819c7414610766578063870c764a1461077b578063987165ed14610784578063a435cf8a14610797578063a749f1a6146107aa578063a83de3ec146107bd578063a918058d146107d0578063a9ff9f77146107e3578063ac9650d8146107f6578063b1dd61b614610816578063b1f0724714610830578063bad3462014610843578063bbb6e4f11461084b578063bcb630d71461085e578063c1bc1df31461086f578063ca103d1514610882578063cbd79054146108b9578063ce4396d7146108cc578063d1482791146108d4578063d39d813f146108dc578063d53e2b1b146108ef578063d9606e0814610902578063d9d98ce414610931578063da7951a914610944578063e512c06114610957578063eca487061461096c578063f0774d8d1461097f578063f78b0cce14610992575b600080fd5b614011546001600160d01b03811690600160d01b900465ffffffffffff165b604080519283526020830191909152015b60405180910390f35b61033b610336366004614a99565b6109a5565b005b6103c461034b366004614ac5565b6001600160a01b03908116600090815260046020819052604090912080546003820154600180840154600285015494909501549054838716976001600160601b03600160a01b9586900481169885811698'... 47230 more characters,
  deployedBytecode: '0x608060405234801561001057600080fd5b50600436106100a45760003560e01c806303e552cd146100a95780632b6983af146100d1578063449e586a146100e65780635c60da1b146100f95780637f165b0b14610119578063a3232bf314610153578063a387245c14610166578063b038d2e114610179578063b3d4cfa41461018c578063bb6da0dd14610194578063c24dbebd146101a7578063d819bfef146101b6575b600080fd5b6100be600080516020610e5f83398151915281565b6040519081526020015b60405180910390f35b6100d96101c4565b6040516100c89190610922565b6100be6100f4366004610a1f565b610226565b60035461010c906001600160a01b031681565b6040516100c89190610a53565b61010c610127366004610a7f565b60016020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b61010c610161366004610ac1565b61027d565b61010c610174366004610b02565b6102fe565b61010c610187366004610b1b565b610328565b6002546100be565b60005461010c906001600160a01b031681565b6100be67016345785d8a000081565b6100be662386f26fc1000081565b6060600280548060200260200160405190810160405280929190818152602001828054801561021c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101fe575b5050505050905090565b600081516000036102465750600080516020610e5f833981519152919050565b61024f826106d5565b816040516020016102609190610bbf565b604051602081830303815290604052805190602001209050919050565b604080516000808252602082019283905263b038d2e160e01b909252309063b038d2e1906102b390879087908760248201610bd2565b6020604051808303816000875af11580156102d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f69190610c0f565b949350505050565b6002818154811061030e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000848483816001600160a01b0316836001600160a01b03160361035f5760405163bcbac68960e01b815260040160405180910390fd5b6001600160a01b038316158061037c57506001600160a01b038216155b1561039a5760405163104aee1f60e01b815260040160405180910390fd5b80662386f26fc1000011806103b6575067016345785d8a000081115b156103d45760405163462f085f60e01b815260040160405180910390fd5b60006103df87610226565b60008181526001602090815260408083206001600160a01b03808f1685529083528184208d821685529092529091205491925016801561043d578060405163fb8debc160e01b81526004016104349190610a53565b60405180910390fd5b60006104488a610755565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201529091506001600160a01b038c16906301ffc9a790602401602060405180830381865afa9250505080156104b2575060408051601f3d908101601f191682019092526104af91810190610c2c565b60015b6104cf5760405163a45e82f560e01b815260040160405180910390fd5b806104ed5760405163a45e82f560e01b815260040160405180910390fd5b506000600160008054906101000a90046001600160a01b03168d8d858e5160405160200161052096959493929190610c4e565b60408051601f1981840301815291905260035490915060009061054c906001600160a01b031683610810565b9050809850886001600087815260200190815260200160002060008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002899080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055507fee1fe091a5213b321c2662b35c0b7cd0d35d10dbcab52b3c9b8768983c67bce3898660405161065d9291906001600160a01b03929092168252602082015260400190565b60405180910390a160405163c1bc1df360e01b81526001600160a01b0382169063c1bc1df390610693908e908e90600401610cb5565b600060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050505050505050505050949350505050565b60005b600182516106e69190610ced565b81101561075157816106f9826001610d06565b8151811061070957610709610d19565b602002602001015182828151811061072357610723610d19565b602002602001015110610749576040516302e94eaf60e01b815260040160405180910390fd5b6001016106d8565b5050565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156107b1575060408051601f3d908101601f191682019092526107ae91810190610d2f565b60015b6107ce576040516333ae908b60e01b815260040160405180910390fd5b60128160ff1611156107f3576040516333ae908b60e01b815260040160405180910390fd5b6107fe816012610d52565b61080990600a610e4f565b9392505050565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b60348401526000939260438401929186019084604182015b602082106108c65783518152602093840193601f1990920191016108a7565b835160001960208490036101000a0119908116825260f088901b91830191825286846000f098506001600160a01b03891661091457604051631d7fde3160e31b815260040160405180910390fd5b505050505050505092915050565b6020808252825182820181905260009190848201906040850190845b818110156109635783516001600160a01b03168352928401929184019160010161093e565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261099657600080fd5b813560206001600160401b03808311156109b2576109b261096f565b8260051b604051601f19603f830116810181811084821117156109d7576109d761096f565b6040529384528581018301938381019250878511156109f557600080fd5b83870191505b84821015610a14578135835291830191908301906109fb565b979650505050505050565b600060208284031215610a3157600080fd5b81356001600160401b03811115610a4757600080fd5b6102f684828501610985565b6001600160a01b0391909116815260200190565b6001600160a01b0381168114610a7c57600080fd5b50565b600080600060608486031215610a9457600080fd5b833592506020840135610aa681610a67565b91506040840135610ab681610a67565b809150509250925092565b600080600060608486031215610ad657600080fd5b8335610ae181610a67565b92506020840135610af181610a67565b929592945050506040919091013590565b600060208284031215610b1457600080fd5b5035919050565b60008060008060808587031215610b3157600080fd5b8435610b3c81610a67565b93506020850135610b4c81610a67565b925060408501356001600160401b03811115610b6757600080fd5b610b7387828801610985565b949793965093946060013593505050565b600081518084526020808501945080840160005b83811015610bb457815187529582019590820190600101610b98565b509495945050505050565b6020815260006108096020830184610b84565b6001600160a01b03858116825284166020820152608060408201819052600090610bfe90830185610b84565b905082606083015295945050505050565b600060208284031215610c2157600080fd5b815161080981610a67565b600060208284031215610c3e57600080fd5b8151801515811461080957600080fd5b600060028810610c6e57634e487b7160e01b600052602160045260246000fd5b5060f89690961b86526001600160601b0319606095861b8116600188015293851b841660158701529190931b9091166029840152603d830191909152605d820152607d0190565b604081526000610cc86040830185610b84565b90508260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610d0057610d00610cd7565b92915050565b80820180821115610d0057610d00610cd7565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610d4157600080fd5b815160ff8116811461080957600080fd5b60ff8281168282160390811115610d0057610d00610cd7565b600181815b80851115610da6578160001904821115610d8c57610d8c610cd7565b80851615610d9957918102915b93841c9390800290610d70565b509250929050565b600082610dbd57506001610d00565b81610dca57506000610d00565b8160018114610de05760028114610dea57610e06565b6001915050610d00565b60ff841115610dfb57610dfb610cd7565b50506001821b610d00565b5060208310610133831016604e8410600b8410161715610e29575081810a610d00565b610e338383610d6b565b8060001904821115610e4757610e47610cd7565b029392505050565b600061080960ff841683610dae56fe93e3b87db48beb11f82ff978661ba6e96f72f582300e9724191ab4b5d7964364a2646970667358221220f107d3802d66abca4226adedced210c4c448d1c9479f8f3256a19c5c56c2d81264736f6c63430008120033',
  linkReferences: {
    'src/libraries/external/BorrowerActions.sol': { BorrowerActions: [Array] },
    'src/libraries/external/KickerActions.sol': { KickerActions: [Array] },
    'src/libraries/external/LPActions.sol': { LPActions: [Array] },
    'src/libraries/external/LenderActions.sol': { LenderActions: [Array] },
    'src/libraries/external/PoolCommons.sol': { PoolCommons: [Array] },
    'src/libraries/external/SettlerActions.sol': { SettlerActions: [Array] },
    'src/libraries/external/TakerActions.sol': { TakerActions: [Array] }
  },
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/clones-with-immutable-args/src/Clone.sol":{"content":"// SPDX-License-Identifier: BSD\\npragma solidity ^0.8.4;\\n\\n/// @title Clone\\n/// @author zefram.eth\\n/// @notice Provides helper functions for reading immutable args from calldata\\ncontract Clone {\\n    /// @notice Reads an immutable arg with type address\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgAddress(uint256 argOffset)\\n        internal\\n        pure\\n        returns (address arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0x60, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint256\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint256(uint256 argOffset)\\n        internal\\n        pure\\n        returns (uint256 arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := calldataload(add(offset, argOffset))\\n        }\\n    }\\n\\n    /// @notice Reads a uint256 array stored in the immutable args.\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @param arrLen Number of elements in the array\\n    /// @return arr The array\\n    function _getArgUint256Array(uint256 argOffset, uint64 arrLen)\\n        internal\\n        pure\\n      returns (uint256[] memory arr)\\n    {\\n      uint256 offset = _getImmutableArgsOffset();\\n      uint256 el;\\n      arr = new uint256[](arrLen);\\n      for (uint64 i = 0; i < arrLen; i++) {\\n        assembly {\\n          // solhint-disable-next-line no-inline-assembly\\n          el := calldataload(add(add(offset, argOffset), mul(i, 32)))\\n        }\\n        arr[i] = el;\\n      }\\n      return arr;\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint64\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint64(uint256 argOffset)\\n        internal\\n        pure\\n        returns (uint64 arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0xc0, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint8\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint8(uint256 argOffset) internal pure returns (uint8 arg) {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0xf8, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @return offset The offset of the packed immutable args in calldata\\n    function _getImmutableArgsOffset() internal pure returns (uint256 offset) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            offset := sub(\\n                calldatasize(),\\n                add(shr(240, calldataload(sub(calldatasize(), 2))), 2)\\n            )\\n        }\\n    }\\n}\\n"},"lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol":{"content":"// SPDX-License-Identifier: BSD\\n\\npragma solidity ^0.8.4;\\n\\n/// @title ClonesWithImmutableArgs\\n/// @author wighawag, zefram.eth\\n/// @notice Enables creating clone contracts with immutable args\\nlibrary ClonesWithImmutableArgs {\\n    error CreateFail();\\n\\n    /// @notice Creates a clone proxy of the implementation contract, with immutable args\\n    /// @dev data cannot exceed 65535 bytes, since 2 bytes are used to store the data length\\n    /// @param implementation The implementation contract to clone\\n    /// @param data Encoded immutable args\\n    /// @return instance The address of the created clone\\n    function clone(address implementation, bytes memory data)\\n        internal\\n        returns (address payable instance)\\n    {\\n        // unrealistic for memory ptr or data length to exceed 256 bits\\n        unchecked {\\n            uint256 extraLength = data.length + 2; // +2 bytes for telling how much data there is appended to the call\\n            uint256 creationSize = 0x41 + extraLength;\\n            uint256 runSize = creationSize - 10;\\n            uint256 dataPtr;\\n            uint256 ptr;\\n            // solhint-disable-next-line no-inline-assembly\\n            assembly {\\n                ptr := mload(0x40)\\n\\n                // -------------------------------------------------------------------------------------------------------------\\n                // CREATION (10 bytes)\\n                // -------------------------------------------------------------------------------------------------------------\\n\\n                // 61 runtime  | PUSH2 runtime (r)     | r                       | ‚Äì\\n                mstore(\\n                    ptr,\\n                    0x6100000000000000000000000000000000000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x01), shl(240, runSize)) // size of the contract running bytecode (16 bits)\\n\\n                // creation size = 0a\\n                // 3d          | RETURNDATASIZE        | 0 r                     | ‚Äì\\n                // 81          | DUP2                  | r 0 r                   | ‚Äì\\n                // 60 creation | PUSH1 creation (c)    | c r 0 r                 | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 c r 0 r               | ‚Äì\\n                // 39          | CODECOPY              | 0 r                     | [0-runSize): runtime code\\n                // f3          | RETURN                |                         | [0-runSize): runtime code\\n\\n                // -------------------------------------------------------------------------------------------------------------\\n                // RUNTIME (55 bytes + extraLength)\\n                // -------------------------------------------------------------------------------------------------------------\\n\\n                // 3d          | RETURNDATASIZE        | 0                       | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0                     | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0 0                   | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0 0 0                 | ‚Äì\\n                // 36          | CALLDATASIZE          | cds 0 0 0 0             | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 cds 0 0 0 0           | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0 cds 0 0 0 0         | ‚Äì\\n                // 37          | CALLDATACOPY          | 0 0 0 0                 | [0, cds) = calldata\\n                // 61          | PUSH2 extra           | extra 0 0 0 0           | [0, cds) = calldata\\n                mstore(\\n                    add(ptr, 0x03),\\n                    0x3d81600a3d39f33d3d3d3d363d3d376100000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x13), shl(240, extraLength))\\n\\n                // 60 0x37     | PUSH1 0x37            | 0x37 extra 0 0 0 0      | [0, cds) = calldata // 0x37 (55) is runtime size - data\\n                // 36          | CALLDATASIZE          | cds 0x37 extra 0 0 0 0  | [0, cds) = calldata\\n                // 39          | CODECOPY              | 0 0 0 0                 | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 36          | CALLDATASIZE          | cds 0 0 0 0             | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 61 extra    | PUSH2 extra           | extra cds 0 0 0 0       | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                mstore(\\n                    add(ptr, 0x15),\\n                    0x6037363936610000000000000000000000000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x1b), shl(240, extraLength))\\n\\n                // 01          | ADD                   | cds+extra 0 0 0 0       | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3d          | RETURNDATASIZE        | 0 cds 0 0 0 0           | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 73 addr     | PUSH20 0x123‚Ä¶         | addr 0 cds 0 0 0 0      | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                mstore(\\n                    add(ptr, 0x1d),\\n                    0x013d730000000000000000000000000000000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x20), shl(0x60, implementation))\\n\\n                // 5a          | GAS                   | gas addr 0 cds 0 0 0 0  | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // f4          | DELEGATECALL          | success 0 0             | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3d          | RETURNDATASIZE        | rds success 0 0         | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3d          | RETURNDATASIZE        | rds rds success 0 0     | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 93          | SWAP4                 | 0 rds success 0 rds     | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 80          | DUP1                  | 0 0 rds success 0 rds   | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3e          | RETURNDATACOPY        | success 0 rds           | [0, rds) = return data (there might be some irrelevant leftovers in memory [rds, cds+0x37) when rds < cds+0x37)\\n                // 60 0x35     | PUSH1 0x35            | 0x35 sucess 0 rds       | [0, rds) = return data\\n                // 57          | JUMPI                 | 0 rds        '... 543617 more characters
  }
}
2024-01-08T15:29:58.342Z cannon:builder:contract lib ref BorrowerActions 0x422d470fb02206733Bb770D2A27d6d98f493af64
2024-01-08T15:29:58.343Z cannon:builder:contract lib ref KickerActions 0xf419056B545783BbFfEAB4d0aA057a52FbA4F4fd
2024-01-08T15:29:58.343Z cannon:builder:contract lib ref LPActions 0xb257A98a3549a0B36b9001d0eDc9e75d313d5c8e
2024-01-08T15:29:58.343Z cannon:builder:contract lib ref LenderActions 0x7456CF19C121842FE2C3a888075A11d51ED63b98
2024-01-08T15:29:58.345Z cannon:builder:contract lib ref PoolCommons 0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540
2024-01-08T15:29:58.345Z cannon:builder:contract lib ref SettlerActions 0x9EdcD1fEc19E5baA98fa4911C90C2162524750d2
2024-01-08T15:29:58.346Z cannon:builder:contract lib ref TakerActions 0xb127207d673977e14f31f52a14AD07e6a512c5fA
2024-01-08T15:29:58.367Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:58.369Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:58.369Z cannon:builder:contract performing arachnid create2
2024-01-08T15:29:58.379Z cannon:builder:contract create2 address is 0x254f05996d0A3134c05a97cabfBF4628B45bE6E7
2024-01-08T15:29:58.381Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:58.383Z cannon:cli:rpc eth_getCode

2024-01-08T15:29:58.919Z cannon:cli:rpc anvil_impersonateAccount

2024-01-08T15:29:58.921Z cannon:cli:rpc anvil_setBalance

2024-01-08T15:29:58.922Z cannon:cli:rpc eth_blockNumber

2024-01-08T15:29:58.924Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:58.927Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:58.936Z cannon:cli:rpc eth_estimateGas

2024-01-08T15:29:59.896Z cannon:cli:rpc eth_sendTransaction

2024-01-08T15:29:59.900Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:59.900Z cannon:cli:rpc 
    Transaction: 0xdac51065e79e61bab92fcc89b3765b3718aa1fec1a1ba83457cbb887f8b6eb39
    Gas used: 6287410

    Block Number: 114564392
    Block Hash: 0x5b21c64e66e5d3821fb72b601716a9e1a823c333924350f96527fc036fa9b090
    Block Time: "Mon, 8 Jan 2024 15:29:57 +0000"


2024-01-08T15:29:59.902Z cannon:cli:rpc eth_getTransactionByHash

2024-01-08T15:29:59.920Z cannon:cli:rpc eth_chainId

2024-01-08T15:29:59.922Z cannon:cli:rpc eth_getTransactionReceipt

2024-01-08T15:29:59.924Z cannon:builder:contract arachnid create2 complete {
  to: '0x4e59b44847b379578588920cA78FbF26c0B4956C',
  from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
  contractAddress: null,
  transactionIndex: 0,
  gasUsed: BigNumber { _hex: '0x5ff032', _isBigNumber: true },
  logsBloom: '0x
  blockHash: '0x5b21c64e66e5d3821fb72b601716a9e1a823c333924350f96527fc036fa9b090',
  transactionHash: '0xdac51065e79e61bab92fcc89b3765b3718aa1fec1a1ba83457cbb887f8b6eb39',
  logs: [],
  blockNumber: 114564392,
  confirmations: 1,
  cumulativeGasUsed: BigNumber { _hex: '0x5ff032', _isBigNumber: true },
  effectiveGasPrice: BigNumber { _hex: '0x18b940', _isBigNumber: true },
  status: 1,
  type: 2,
  byzantium: true
}
2024-01-08T15:29:59.924Z cannon:builder:contract contract deployed to address 0x254f05996d0A3134c05a97cabfBF4628B45bE6E7
  ‚úî Successfully deployed ERC721PoolFactory using CREATE2
  Contract Address: 0x254f05996d0A3134c05a97cabfBF4628B45bE6E7
  Transaction Hash: 0xdac51065e79e61bab92fcc89b3765b3718aa1fec1a1ba83457cbb887f8b6eb39
  Transaction Cost: 0.00001018741497408 ETH (6,287,410 gas)

2024-01-08T15:29:59.928Z cannon:builder:runtime resolve artifact ERC721PoolFactory
2024-01-08T15:29:59.928Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:30:08.462Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/ERC721PoolFactory.sol': 'ERC721PoolFactory' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/clones-with-immutable-args/src/Clone.sol': {
      keccak256: '0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545',
      urls: [Array],
      license: 'BSD'
    },
    'lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol': {
      keccak256: '0xcb7cbb68b8a90e6eff9c7a29f5b7d5964e0cedc0ad8133f5bcb3ec3a9aeb391c',
      urls: [Array],
      license: 'BSD'
    },
    'lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol': {
      keccak256: '0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol': {
      keccak256: '0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol': {
      keccak256: '0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol': {
      keccak256: '0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Address.sol': {
      keccak256: '0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Multicall.sol': {
      keccak256: '0x35e30a35e23f856cbcee3558b7efdd83f6017a8f1b419710645143d98e892463',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol': {
      keccak256: '0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathUD60x18.sol': {
      keccak256: '0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/ERC721Pool.sol': {
      keccak256: '0xce94095e9d2022c001506ef1901515d9adf7f639b3b01c14b6bc2de5633ea0e2',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/ERC721PoolFactory.sol': {
      keccak256: '0xa44628e67dfe4b35e7d73fbe30db5a09551196e4a3061087bacaee14fac87237',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/FlashloanablePool.sol': {
      keccak256: '0x1f3767f4d27c13ef2c53bcf49c1d5917c77b2d3fb7a28576f0c2a131a8377f6f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/Pool.sol': {
      keccak256: '0x87159e77eeee256f1501035738bb015a1d4d360fab31ea077f4ddcaff4e54d22',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/PoolDeployer.sol': {
      keccak256: '0x81b87acb71ecdbb00a37f4b0b23d21554692bde445fbc19871353bcce128d53e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPoolFactory.sol': {
      keccak256: '0x53d72e58a4b0d6a5e8aeb23a2f40262636c823170037179220ec29ca403dae76',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721Pool.sol': {
      keccak256: '0x2873a73b910d1a1a2d403dac08ecec0afd1b58142185e27565edfa695d278b95',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolBorrowerActions.sol': {
      keccak256: '0x3c80e33d8fe71470d391af54e9a70c124e9677b9f8848a8d8d77ee1f6182ce21',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolErrors.sol': {
      keccak256: '0x896b15da426f1baa78d9d09aebe78d236011650b714e45f90e5c4bb096b481af',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolEvents.sol': {
      keccak256: '0xf5c0aaae515ed6e22b49b0a0f5b9d45f6cf2fad6fae83201893ba7907fc7d3bf',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolFactory.sol': {
      keccak256: '0x2bfafdc6ab11b11d75caa61441964799d7b780d93e3a1938b989a135a5070471',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolImmutables.sol': {
      keccak256: '0x5f8d672bad5dfae9556334a0ea5107452b02075502a1fb9ac7bc521c071310db',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolLenderActions.sol': {
      keccak256: '0xcff44a133099f3a1cd574f18e46f6c0076de2384a16df281bab2b9d627b5a42b',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolState.sol': {
      keccak256: '0x2742176dd54be93117cdba89ad45d3a68f0d0fbf0d8e6f3decd7df4b81815cf6',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721Taker.sol': {
      keccak256: '0x7c27a3083aeeaa008978dcba9f7454b9959a59e36c2559e0b1a251494e536488',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/BorrowerActions.sol': {
      keccak256: '0xecf8ce41a4034aa174c72bab7e558d788c1cc052ee77b2151f4acee4691be839',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/KickerActions.sol': {
      keccak256: '0xa486e9c9091c1cc8966f13b2b6bb9f9b7eeaf26d539b990c3904befd7a2a25fe',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/LPActions.sol': {
      keccak256: '0x4def554bc6414a7a4a575b8fced4fd334b28c484f09e5f616a0c228cbf875c85',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/LenderActions.sol': {
      keccak256: '0x04b37827f21db736b668fb27393b6c8b968b4cb24abf338b0a658090a173e0dd',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/PoolCommons.sol': {
      keccak256: '0x1dd40766b71468dade905c41a90783dad18761fe998f1a85acd79e8a0bb32ed3',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/SettlerActions.sol': {
      keccak256: '0x05edfe3f72323b7212fbb5134f76211f397138c2ed30ddf0f3683772213c831d',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/TakerActions.sol': {
      keccak256: '0x642ee2cabe710495ccc32c269750578cbfe924af26dcc73b8ce6cdf06adce68e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/RevertsHelper.sol': {
      keccak256: '0xcaff095290172f1b5726d4e887ab9be5f524d9321e94ca0095f99b666381a6f4',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:30:08.463Z cannon:cli:foundry evm version paris
2024-01-08T15:30:08.473Z cannon:builder:runtime reported contract artifact ERC721PoolFactory {
  contractName: 'ERC721PoolFactory',
  sourceName: 'src/ERC721PoolFactory.sol',
  abi: [
    {
      type: 'constructor',
      inputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'ERC721_NON_SUBSET_HASH',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'MAX_RATE',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'MIN_RATE',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'ajna',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'deployPool',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'deployPool',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'deployedPools',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'deployedPoolsList',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getDeployedPoolsList',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getNFTSubsetHash',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'pure'
    },
    {
      type: 'function',
      name: 'getNumberOfDeployedPools',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'implementation',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'event',
      name: 'PoolCreated',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'CreateFail', inputs: [] },
    { type: 'error', name: 'DecimalsNotCompliant', inputs: [] },
    {
      type: 'error',
      name: 'DeployQuoteCollateralSameToken',
      inputs: []
    },
    { type: 'error', name: 'DeployWithZeroAddress', inputs: [] },
    { type: 'error', name: 'NFTNotSupported', inputs: [] },
    { type: 'error', name: 'PoolAlreadyExists', inputs: [Array] },
    { type: 'error', name: 'PoolInterestRateInvalid', inputs: [] },
    { type: 'error', name: 'TokenIdSubsetInvalid', inputs: [] }
  ],
  bytecode: '0x608060405234801561001057600080fd5b5060405162006fc638038062006fc6833981016040819052610031916100d0565b6001600160a01b0381166100585760405163104aee1f60e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b03831617905560405161007f906100c2565b604051809103906000f08015801561009b573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b039290921691909117905550610100565b6160028062000fc483390190565b6000602082840312156100e257600080fd5b81516001600160a01b03811681146100f957600080fd5b9392505050565b610eb480620001106000396000f3fe608060405234801561001057600080fd5b50600436106100a45760003560e01c806303e552cd146100a95780632b6983af146100d1578063449e586a146100e65780635c60da1b146100f95780637f165b0b14610119578063a3232bf314610153578063a387245c14610166578063b038d2e114610179578063b3d4cfa41461018c578063bb6da0dd14610194578063c24dbebd146101a7578063d819bfef146101b6575b600080fd5b6100be600080516020610e5f83398151915281565b6040519081526020015b60405180910390f35b6100d96101c4565b6040516100c89190610922565b6100be6100f4366004610a1f565b610226565b60035461010c906001600160a01b031681565b6040516100c89190610a53565b61010c610127366004610a7f565b60016020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b61010c610161366004610ac1565b61027d565b61010c610174366004610b02565b6102fe565b61010c610187366004610b1b565b610328565b6002546100be565b60005461010c906001600160a01b031681565b6100be67016345785d8a000081565b6100be662386f26fc1000081565b6060600280548060200260200160405190810160405280929190818152602001828054801561021c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101fe575b5050505050905090565b600081516000036102465750600080516020610e5f833981519152919050565b61024f826106d5565b816040516020016102609190610bbf565b604051602081830303815290604052805190602001209050919050565b604080516000808252602082019283905263b038d2e160e01b909252309063b038d2e1906102b390879087908760248201610bd2565b6020604051808303816000875af11580156102d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f69190610c0f565b949350505050565b6002818154811061030e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000848483816001600160a01b0316836001600160a01b03160361035f5760405163bcbac68960e01b815260040160405180910390fd5b6001600160a01b038316158061037c57506001600160a01b038216155b1561039a5760405163104aee1f60e01b815260040160405180910390fd5b80662386f26fc1000011806103b6575067016345785d8a000081115b156103d45760405163462f085f60e01b815260040160405180910390fd5b60006103df87610226565b60008181526001602090815260408083206001600160a01b03808f1685529083528184208d821685529092529091205491925016801561043d578060405163fb8debc160e01b81526004016104349190610a53565b60405180910390fd5b60006104488a610755565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201529091506001600160a01b038c16906301ffc9a790602401602060405180830381865afa9250505080156104b2575060408051601f3d908101601f191682019092526104af91810190610c2c565b60015b6104cf5760405163a45e82f560e01b815260040160405180910390fd5b806104ed5760405163a45e82f560e01b815260040160405180910390fd5b506000600160008054906101000a90046001600160a01b03168d8d858e5160405160200161052096959493929190610c4e565b60408051601f1981840301815291905260035490915060009061054c906001600160a01b031683610810565b9050809850886001600087815260200190815260200160002060008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002899080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055507fee1fe091a5213b321c2662b35c0b7cd0d35d10dbcab52b3c9b8768983c67bce3898660405161065d9291906001600160a01b03929092168252602082015260400190565b60405180910390a160405163c1bc1df360e01b81526001600160a01b0382169063c1bc1df390610693908e908e90600401610cb5565b600060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050505050505050505050949350505050565b60005b600182516106e69190610ced565b81101561075157816106f9826001610d06565b8151811061070957610709610d19565b602002602001015182828151811061072357610723610d19565b602002602001015110610749576040516302e94eaf60e01b815260040160405180910390fd5b6001016106d8565b5050565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156107b1575060408051601f3d908101601f191682019092526107ae91810190610d2f565b60015b6107ce576040516333ae908b60e01b815260040160405180910390fd5b60128160ff1611156107f3576040516333ae908b60e01b815260040160405180910390fd5b6107fe816012610d52565b61080990600a610e4f565b9392505050565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b60348401526000939260438401929186019084604182015b602082106108c65783518152602093840193601f1990920191016108a7565b835160001960208490036101000a0119908116825260f088901b91830191825286846000f098506001600160a01b03891661091457604051631d7fde3160e31b815260040160405180910390fd5b505050505050505092915050565b6020808252825182820181905260009190848201906040850190845b818110156109635783516001600160a01b03168352928401929184019160010161093e565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261099657600080fd5b813560206001600160401b03808311156109b2576109b261096f565b8260051b604051601f19603f830116810181811084821117156109d7576109d761096f565b6040529384528581018301938381019250878511156109f557600080fd5b83870191505b84821015610a14578135835291830191908301906109fb565b979650505050505050565b600060208284031215610a3157600080fd5b81356001600160401b03811115610a4757600080fd5b6102f684828501610985565b6001600160a01b0391909116815260200190565b6001600160a01b0381168114610a7c57600080fd5b50565b600080600060608486031215610a9457600080fd5b833592506020840135610aa681610a67565b91506040840135610ab681610a67565b809150509250925092565b600080600060608486031215610ad657600080fd5b8335610ae181610a67565b92506020840135610af181610a67565b929592945050506040919091013590565b600060208284031215610b1457600080fd5b5035919050565b60008060008060808587031215610b3157600080fd5b8435610b3c81610a67565b93506020850135610b4c81610a67565b925060408501356001600160401b03811115610b6757600080fd5b610b7387828801610985565b949793965093946060013593505050565b600081518084526020808501945080840160005b83811015610bb457815187529582019590820190600101610b98565b509495945050505050565b6020815260006108096020830184610b84565b6001600160a01b03858116825284166020820152608060408201819052600090610bfe90830185610b84565b905082606083015295945050505050565b600060208284031215610c2157600080fd5b815161080981610a67565b600060208284031215610c3e57600080fd5b8151801515811461080957600080fd5b600060028810610c6e57634e487b7160e01b600052602160045260246000fd5b5060f89690961b86526001600160601b0319606095861b8116600188015293851b841660158701529190931b9091166029840152603d830191909152605d820152607d0190565b604081526000610cc86040830185610b84565b90508260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610d0057610d00610cd7565b92915050565b80820180821115610d0057610d00610cd7565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610d4157600080fd5b815160ff8116811461080957600080fd5b60ff8281168282160390811115610d0057610d00610cd7565b600181815b80851115610da6578160001904821115610d8c57610d8c610cd7565b80851615610d9957918102915b93841c9390800290610d70565b509250929050565b600082610dbd57506001610d00565b81610dca57506000610d00565b8160018114610de05760028114610dea57610e06565b6001915050610d00565b60ff841115610dfb57610dfb610cd7565b50506001821b610d00565b5060208310610133831016604e8410600b8410161715610e29575081810a610d00565b610e338383610d6b565b8060001904821115610e4757610e47610cd7565b029392505050565b600061080960ff841683610dae56fe93e3b87db48beb11f82ff978661ba6e96f72f582300e9724191ab4b5d7964364a2646970667358221220f107d3802d66abca4226adedced210c4c448d1c9479f8f3256a19c5c56c2d81264736f6c63430008120033608060405234801561001057600080fd5b506001600055615fdc80620000266000396000f3fe608060405234801561001057600080fd5b50600436106102ea5760003560e01c8062cdcefb146102ef5780630203d8fb146103285780630448e51a1461033d578063063d829f1461042157806306e47f26146104445780630729f62c1461045757806315afd4091461046a57806316f8a463146104925780632c7b2e06146104b3578063307ee3b5146104f0578063329d1a8b146104f9578063332c0e431461050c5780633884cd881461051f5780633a0c8f071461054c5780633ab96ec5146105545780633fa8fdbb1461056757806342302a9a1461056f578063438732641461058257806347f6fe641461059a578063483cd187146105ad57806348d399e7146105f15780634ab1fc36146106065780634d9661981461060f5780634efe8af7146106275780635a3b44771461063a5780635a422b92146106765780635cffe9de1461067e5780635d3637e714610691578063613255ab1461069a57806366ae5880146106ad5780636a9b1891146106c05780637323f853146106d35780637b3f8655146107045780637dacba181461070c5780637f8baa371461071f57806380f835ed146107325780638349d6be1461074557806385819c7414610766578063870c764a1461077b578063987165ed14610784578063a435cf8a14610797578063a749f1a6146107aa578063a83de3ec146107bd578063a918058d146107d0578063a9ff9f77146107e3578063ac9650d8146107f6578063b1dd61b614610816578063b1f0724714610830578063bad3462014610843578063bbb6e4f11461084b578063bcb630d71461085e578063c1bc1df31461086f578063ca103d1514610882578063cbd79054146108b9578063ce4396d7146108cc578063d1482791146108d4578063d39d813f146108dc578063d53e2b1b146108ef578063d9606e0814610902578063d9d98ce414610931578063da7951a914610944578063e512c06114610957578063eca487061461096c578063f0774d8d1461097f578063f78b0cce14610992575b600080fd5b614011546001600160d01b03811690600160d01b900465ffffffffffff165b604080519283526020830191909152015b60405180910390f35b61033b610336366004614a99565b6109a5565b005b6103c461034b366004614ac5565b6001600160a01b03908116600090815260046020819052604090912080546003820154600180840154600285015494909501549054838716976001600160601b03600160a01b9586900481169885811698'... 47230 more characters,
  deployedBytecode: '0x608060405234801561001057600080fd5b50600436106100a45760003560e01c806303e552cd146100a95780632b6983af146100d1578063449e586a146100e65780635c60da1b146100f95780637f165b0b14610119578063a3232bf314610153578063a387245c14610166578063b038d2e114610179578063b3d4cfa41461018c578063bb6da0dd14610194578063c24dbebd146101a7578063d819bfef146101b6575b600080fd5b6100be600080516020610e5f83398151915281565b6040519081526020015b60405180910390f35b6100d96101c4565b6040516100c89190610922565b6100be6100f4366004610a1f565b610226565b60035461010c906001600160a01b031681565b6040516100c89190610a53565b61010c610127366004610a7f565b60016020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b61010c610161366004610ac1565b61027d565b61010c610174366004610b02565b6102fe565b61010c610187366004610b1b565b610328565b6002546100be565b60005461010c906001600160a01b031681565b6100be67016345785d8a000081565b6100be662386f26fc1000081565b6060600280548060200260200160405190810160405280929190818152602001828054801561021c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101fe575b5050505050905090565b600081516000036102465750600080516020610e5f833981519152919050565b61024f826106d5565b816040516020016102609190610bbf565b604051602081830303815290604052805190602001209050919050565b604080516000808252602082019283905263b038d2e160e01b909252309063b038d2e1906102b390879087908760248201610bd2565b6020604051808303816000875af11580156102d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f69190610c0f565b949350505050565b6002818154811061030e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000848483816001600160a01b0316836001600160a01b03160361035f5760405163bcbac68960e01b815260040160405180910390fd5b6001600160a01b038316158061037c57506001600160a01b038216155b1561039a5760405163104aee1f60e01b815260040160405180910390fd5b80662386f26fc1000011806103b6575067016345785d8a000081115b156103d45760405163462f085f60e01b815260040160405180910390fd5b60006103df87610226565b60008181526001602090815260408083206001600160a01b03808f1685529083528184208d821685529092529091205491925016801561043d578060405163fb8debc160e01b81526004016104349190610a53565b60405180910390fd5b60006104488a610755565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201529091506001600160a01b038c16906301ffc9a790602401602060405180830381865afa9250505080156104b2575060408051601f3d908101601f191682019092526104af91810190610c2c565b60015b6104cf5760405163a45e82f560e01b815260040160405180910390fd5b806104ed5760405163a45e82f560e01b815260040160405180910390fd5b506000600160008054906101000a90046001600160a01b03168d8d858e5160405160200161052096959493929190610c4e565b60408051601f1981840301815291905260035490915060009061054c906001600160a01b031683610810565b9050809850886001600087815260200190815260200160002060008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002899080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055507fee1fe091a5213b321c2662b35c0b7cd0d35d10dbcab52b3c9b8768983c67bce3898660405161065d9291906001600160a01b03929092168252602082015260400190565b60405180910390a160405163c1bc1df360e01b81526001600160a01b0382169063c1bc1df390610693908e908e90600401610cb5565b600060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050505050505050505050949350505050565b60005b600182516106e69190610ced565b81101561075157816106f9826001610d06565b8151811061070957610709610d19565b602002602001015182828151811061072357610723610d19565b602002602001015110610749576040516302e94eaf60e01b815260040160405180910390fd5b6001016106d8565b5050565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156107b1575060408051601f3d908101601f191682019092526107ae91810190610d2f565b60015b6107ce576040516333ae908b60e01b815260040160405180910390fd5b60128160ff1611156107f3576040516333ae908b60e01b815260040160405180910390fd5b6107fe816012610d52565b61080990600a610e4f565b9392505050565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b60348401526000939260438401929186019084604182015b602082106108c65783518152602093840193601f1990920191016108a7565b835160001960208490036101000a0119908116825260f088901b91830191825286846000f098506001600160a01b03891661091457604051631d7fde3160e31b815260040160405180910390fd5b505050505050505092915050565b6020808252825182820181905260009190848201906040850190845b818110156109635783516001600160a01b03168352928401929184019160010161093e565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261099657600080fd5b813560206001600160401b03808311156109b2576109b261096f565b8260051b604051601f19603f830116810181811084821117156109d7576109d761096f565b6040529384528581018301938381019250878511156109f557600080fd5b83870191505b84821015610a14578135835291830191908301906109fb565b979650505050505050565b600060208284031215610a3157600080fd5b81356001600160401b03811115610a4757600080fd5b6102f684828501610985565b6001600160a01b0391909116815260200190565b6001600160a01b0381168114610a7c57600080fd5b50565b600080600060608486031215610a9457600080fd5b833592506020840135610aa681610a67565b91506040840135610ab681610a67565b809150509250925092565b600080600060608486031215610ad657600080fd5b8335610ae181610a67565b92506020840135610af181610a67565b929592945050506040919091013590565b600060208284031215610b1457600080fd5b5035919050565b60008060008060808587031215610b3157600080fd5b8435610b3c81610a67565b93506020850135610b4c81610a67565b925060408501356001600160401b03811115610b6757600080fd5b610b7387828801610985565b949793965093946060013593505050565b600081518084526020808501945080840160005b83811015610bb457815187529582019590820190600101610b98565b509495945050505050565b6020815260006108096020830184610b84565b6001600160a01b03858116825284166020820152608060408201819052600090610bfe90830185610b84565b905082606083015295945050505050565b600060208284031215610c2157600080fd5b815161080981610a67565b600060208284031215610c3e57600080fd5b8151801515811461080957600080fd5b600060028810610c6e57634e487b7160e01b600052602160045260246000fd5b5060f89690961b86526001600160601b0319606095861b8116600188015293851b841660158701529190931b9091166029840152603d830191909152605d820152607d0190565b604081526000610cc86040830185610b84565b90508260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610d0057610d00610cd7565b92915050565b80820180821115610d0057610d00610cd7565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610d4157600080fd5b815160ff8116811461080957600080fd5b60ff8281168282160390811115610d0057610d00610cd7565b600181815b80851115610da6578160001904821115610d8c57610d8c610cd7565b80851615610d9957918102915b93841c9390800290610d70565b509250929050565b600082610dbd57506001610d00565b81610dca57506000610d00565b8160018114610de05760028114610dea57610e06565b6001915050610d00565b60ff841115610dfb57610dfb610cd7565b50506001821b610d00565b5060208310610133831016604e8410600b8410161715610e29575081810a610d00565b610e338383610d6b565b8060001904821115610e4757610e47610cd7565b029392505050565b600061080960ff841683610dae56fe93e3b87db48beb11f82ff978661ba6e96f72f582300e9724191ab4b5d7964364a2646970667358221220f107d3802d66abca4226adedced210c4c448d1c9479f8f3256a19c5c56c2d81264736f6c63430008120033',
  linkReferences: {
    'src/libraries/external/BorrowerActions.sol': { BorrowerActions: [Array] },
    'src/libraries/external/KickerActions.sol': { KickerActions: [Array] },
    'src/libraries/external/LPActions.sol': { LPActions: [Array] },
    'src/libraries/external/LenderActions.sol': { LenderActions: [Array] },
    'src/libraries/external/PoolCommons.sol': { PoolCommons: [Array] },
    'src/libraries/external/SettlerActions.sol': { SettlerActions: [Array] },
    'src/libraries/external/TakerActions.sol': { TakerActions: [Array] }
  },
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/clones-with-immutable-args/src/Clone.sol":{"content":"// SPDX-License-Identifier: BSD\\npragma solidity ^0.8.4;\\n\\n/// @title Clone\\n/// @author zefram.eth\\n/// @notice Provides helper functions for reading immutable args from calldata\\ncontract Clone {\\n    /// @notice Reads an immutable arg with type address\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgAddress(uint256 argOffset)\\n        internal\\n        pure\\n        returns (address arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0x60, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint256\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint256(uint256 argOffset)\\n        internal\\n        pure\\n        returns (uint256 arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := calldataload(add(offset, argOffset))\\n        }\\n    }\\n\\n    /// @notice Reads a uint256 array stored in the immutable args.\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @param arrLen Number of elements in the array\\n    /// @return arr The array\\n    function _getArgUint256Array(uint256 argOffset, uint64 arrLen)\\n        internal\\n        pure\\n      returns (uint256[] memory arr)\\n    {\\n      uint256 offset = _getImmutableArgsOffset();\\n      uint256 el;\\n      arr = new uint256[](arrLen);\\n      for (uint64 i = 0; i < arrLen; i++) {\\n        assembly {\\n          // solhint-disable-next-line no-inline-assembly\\n          el := calldataload(add(add(offset, argOffset), mul(i, 32)))\\n        }\\n        arr[i] = el;\\n      }\\n      return arr;\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint64\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint64(uint256 argOffset)\\n        internal\\n        pure\\n        returns (uint64 arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0xc0, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint8\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint8(uint256 argOffset) internal pure returns (uint8 arg) {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0xf8, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @return offset The offset of the packed immutable args in calldata\\n    function _getImmutableArgsOffset() internal pure returns (uint256 offset) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            offset := sub(\\n                calldatasize(),\\n                add(shr(240, calldataload(sub(calldatasize(), 2))), 2)\\n            )\\n        }\\n    }\\n}\\n"},"lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol":{"content":"// SPDX-License-Identifier: BSD\\n\\npragma solidity ^0.8.4;\\n\\n/// @title ClonesWithImmutableArgs\\n/// @author wighawag, zefram.eth\\n/// @notice Enables creating clone contracts with immutable args\\nlibrary ClonesWithImmutableArgs {\\n    error CreateFail();\\n\\n    /// @notice Creates a clone proxy of the implementation contract, with immutable args\\n    /// @dev data cannot exceed 65535 bytes, since 2 bytes are used to store the data length\\n    /// @param implementation The implementation contract to clone\\n    /// @param data Encoded immutable args\\n    /// @return instance The address of the created clone\\n    function clone(address implementation, bytes memory data)\\n        internal\\n        returns (address payable instance)\\n    {\\n        // unrealistic for memory ptr or data length to exceed 256 bits\\n        unchecked {\\n            uint256 extraLength = data.length + 2; // +2 bytes for telling how much data there is appended to the call\\n            uint256 creationSize = 0x41 + extraLength;\\n            uint256 runSize = creationSize - 10;\\n            uint256 dataPtr;\\n            uint256 ptr;\\n            // solhint-disable-next-line no-inline-assembly\\n            assembly {\\n                ptr := mload(0x40)\\n\\n                // -------------------------------------------------------------------------------------------------------------\\n                // CREATION (10 bytes)\\n                // -------------------------------------------------------------------------------------------------------------\\n\\n                // 61 runtime  | PUSH2 runtime (r)     | r                       | ‚Äì\\n                mstore(\\n                    ptr,\\n                    0x6100000000000000000000000000000000000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x01), shl(240, runSize)) // size of the contract running bytecode (16 bits)\\n\\n                // creation size = 0a\\n                // 3d          | RETURNDATASIZE        | 0 r                     | ‚Äì\\n                // 81          | DUP2                  | r 0 r                   | ‚Äì\\n                // 60 creation | PUSH1 creation (c)    | c r 0 r                 | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 c r 0 r               | ‚Äì\\n                // 39          | CODECOPY              | 0 r                     | [0-runSize): runtime code\\n                // f3          | RETURN                |                         | [0-runSize): runtime code\\n\\n                // -------------------------------------------------------------------------------------------------------------\\n                // RUNTIME (55 bytes + extraLength)\\n                // -------------------------------------------------------------------------------------------------------------\\n\\n                // 3d          | RETURNDATASIZE        | 0                       | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0                     | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0 0                   | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0 0 0                 | ‚Äì\\n                // 36          | CALLDATASIZE          | cds 0 0 0 0             | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 cds 0 0 0 0           | ‚Äì\\n                // 3d          | RETURNDATASIZE        | 0 0 cds 0 0 0 0         | ‚Äì\\n                // 37          | CALLDATACOPY          | 0 0 0 0                 | [0, cds) = calldata\\n                // 61          | PUSH2 extra           | extra 0 0 0 0           | [0, cds) = calldata\\n                mstore(\\n                    add(ptr, 0x03),\\n                    0x3d81600a3d39f33d3d3d3d363d3d376100000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x13), shl(240, extraLength))\\n\\n                // 60 0x37     | PUSH1 0x37            | 0x37 extra 0 0 0 0      | [0, cds) = calldata // 0x37 (55) is runtime size - data\\n                // 36          | CALLDATASIZE          | cds 0x37 extra 0 0 0 0  | [0, cds) = calldata\\n                // 39          | CODECOPY              | 0 0 0 0                 | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 36          | CALLDATASIZE          | cds 0 0 0 0             | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 61 extra    | PUSH2 extra           | extra cds 0 0 0 0       | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                mstore(\\n                    add(ptr, 0x15),\\n                    0x6037363936610000000000000000000000000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x1b), shl(240, extraLength))\\n\\n                // 01          | ADD                   | cds+extra 0 0 0 0       | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3d          | RETURNDATASIZE        | 0 cds 0 0 0 0           | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 73 addr     | PUSH20 0x123‚Ä¶         | addr 0 cds 0 0 0 0      | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                mstore(\\n                    add(ptr, 0x1d),\\n                    0x013d730000000000000000000000000000000000000000000000000000000000\\n                )\\n                mstore(add(ptr, 0x20), shl(0x60, implementation))\\n\\n                // 5a          | GAS                   | gas addr 0 cds 0 0 0 0  | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // f4          | DELEGATECALL          | success 0 0             | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3d          | RETURNDATASIZE        | rds success 0 0         | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3d          | RETURNDATASIZE        | rds rds success 0 0     | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 93          | SWAP4                 | 0 rds success 0 rds     | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 80          | DUP1                  | 0 0 rds success 0 rds   | [0, cds) = calldata, [cds, cds+0x37) = extraData\\n                // 3e          | RETURNDATACOPY        | success 0 rds           | [0, rds) = return data (there might be some irrelevant leftovers in memory [rds, cds+0x37) when rds < cds+0x37)\\n                // 60 0x35     | PUSH1 0x35            | 0x35 sucess 0 rds       | [0, rds) = return data\\n                // 57          | JUMPI                 | 0 rds        '... 543617 more characters
  }
}
2024-01-08T15:30:08.474Z cannon:builder:contract lib ref BorrowerActions 0x422d470fb02206733Bb770D2A27d6d98f493af64
2024-01-08T15:30:08.475Z cannon:builder:contract lib ref KickerActions 0xf419056B545783BbFfEAB4d0aA057a52FbA4F4fd
2024-01-08T15:30:08.475Z cannon:builder:contract lib ref LPActions 0xb257A98a3549a0B36b9001d0eDc9e75d313d5c8e
2024-01-08T15:30:08.476Z cannon:builder:contract lib ref LenderActions 0x7456CF19C121842FE2C3a888075A11d51ED63b98
2024-01-08T15:30:08.477Z cannon:builder:contract lib ref PoolCommons 0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540
2024-01-08T15:30:08.477Z cannon:builder:contract lib ref SettlerActions 0x9EdcD1fEc19E5baA98fa4911C90C2162524750d2
2024-01-08T15:30:08.477Z cannon:builder:contract lib ref TakerActions 0xb127207d673977e14f31f52a14AD07e6a512c5fA
2024-01-08T15:30:08.478Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x608060405234801561001057600080fd5b5060405162006fc638038062006fc6833981016040819052610031916100d0565b6001600160a01b0381166100585760405163104aee1f60e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b03831617905560405161007f906100c2565b604051809103906000f08015801561009b573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b039290921691909117905550610100565b6160028062000fc483390190565b6000602082840312156100e257600080fd5b81516001600160a01b03811681146100f957600080fd5b9392505050565b610eb480620001106000396000f3fe608060405234801561001057600080fd5b50600436106100a45760003560e01c806303e552cd146100a95780632b6983af146100d1578063449e586a146100e65780635c60da1b146100f95780637f165b0b14610119578063a3232bf314610153578063a387245c14610166578063b038d2e114610179578063b3d4cfa41461018c578063bb6da0dd14610194578063c24dbebd146101a7578063d819bfef146101b6575b600080fd5b6100be600080516020610e5f83398151915281565b6040519081526020015b60405180910390f35b6100d96101c4565b6040516100c89190610922565b6100be6100f4366004610a1f565b610226565b60035461010c906001600160a01b031681565b6040516100c89190610a53565b61010c610127366004610a7f565b60016020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b61010c610161366004610ac1565b61027d565b61010c610174366004610b02565b6102fe565b61010c610187366004610b1b565b610328565b6002546100be565b60005461010c906001600160a01b031681565b6100be67016345785d8a000081565b6100be662386f26fc1000081565b6060600280548060200260200160405190810160405280929190818152602001828054801561021c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101fe575b5050505050905090565b600081516000036102465750600080516020610e5f833981519152919050565b61024f826106d5565b816040516020016102609190610bbf565b604051602081830303815290604052805190602001209050919050565b604080516000808252602082019283905263b038d2e160e01b909252309063b038d2e1906102b390879087908760248201610bd2565b6020604051808303816000875af11580156102d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f69190610c0f565b949350505050565b6002818154811061030e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000848483816001600160a01b0316836001600160a01b03160361035f5760405163bcbac68960e01b815260040160405180910390fd5b6001600160a01b038316158061037c57506001600160a01b038216155b1561039a5760405163104aee1f60e01b815260040160405180910390fd5b80662386f26fc1000011806103b6575067016345785d8a000081115b156103d45760405163462f085f60e01b815260040160405180910390fd5b60006103df87610226565b60008181526001602090815260408083206001600160a01b03808f1685529083528184208d821685529092529091205491925016801561043d578060405163fb8debc160e01b81526004016104349190610a53565b60405180910390fd5b60006104488a610755565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201529091506001600160a01b038c16906301ffc9a790602401602060405180830381865afa9250505080156104b2575060408051601f3d908101601f191682019092526104af91810190610c2c565b60015b6104cf5760405163a45e82f560e01b815260040160405180910390fd5b806104ed5760405163a45e82f560e01b815260040160405180910390fd5b506000600160008054906101000a90046001600160a01b03168d8d858e5160405160200161052096959493929190610c4e565b60408051601f1981840301815291905260035490915060009061054c906001600160a01b031683610810565b9050809850886001600087815260200190815260200160002060008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002899080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055507fee1fe091a5213b321c2662b35c0b7cd0d35d10dbcab52b3c9b8768983c67bce3898660405161065d9291906001600160a01b03929092168252602082015260400190565b60405180910390a160405163c1bc1df360e01b81526001600160a01b0382169063c1bc1df390610693908e908e90600401610cb5565b600060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050505050505050505050949350505050565b60005b600182516106e69190610ced565b81101561075157816106f9826001610d06565b8151811061070957610709610d19565b602002602001015182828151811061072357610723610d19565b602002602001015110610749576040516302e94eaf60e01b815260040160405180910390fd5b6001016106d8565b5050565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156107b1575060408051601f3d908101601f191682019092526107ae91810190610d2f565b60015b6107ce576040516333ae908b60e01b815260040160405180910390fd5b60128160ff1611156107f3576040516333ae908b60e01b815260040160405180910390fd5b6107fe816012610d52565b61080990600a610e4f565b9392505050565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b60348401526000939260438401929186019084604182015b602082106108c65783518152602093840193601f1990920191016108a7565b835160001960208490036101000a0119908116825260f088901b91830191825286846000f098506001600160a01b03891661091457604051631d7fde3160e31b815260040160405180910390fd5b505050505050505092915050565b6020808252825182820181905260009190848201906040850190845b818110156109635783516001600160a01b03168352928401929184019160010161093e565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261099657600080fd5b813560206001600160401b03808311156109b2576109b261096f565b8260051b604051601f19603f830116810181811084821117156109d7576109d761096f565b6040529384528581018301938381019250878511156109f557600080fd5b83870191505b84821015610a14578135835291830191908301906109fb565b979650505050505050565b600060208284031215610a3157600080fd5b81356001600160401b03811115610a4757600080fd5b6102f684828501610985565b6001600160a01b0391909116815260200190565b6001600160a01b0381168114610a7c57600080fd5b50565b600080600060608486031215610a9457600080fd5b833592506020840135610aa681610a67565b91506040840135610ab681610a67565b809150509250925092565b600080600060608486031215610ad657600080fd5b8335610ae181610a67565b92506020840135610af181610a67565b929592945050506040919091013590565b600060208284031215610b1457600080fd5b5035919050565b60008060008060808587031215610b3157600080fd5b8435610b3c81610a67565b93506020850135610b4c81610a67565b925060408501356001600160401b03811115610b6757600080fd5b610b7387828801610985565b949793965093946060013593505050565b600081518084526020808501945080840160005b83811015610bb457815187529582019590820190600101610b98565b509495945050505050565b6020815260006108096020830184610b84565b6001600160a01b03858116825284166020820152608060408201819052600090610bfe90830185610b84565b905082606083015295945050505050565b600060208284031215610c2157600080fd5b815161080981610a67565b600060208284031215610c3e57600080fd5b8151801515811461080957600080fd5b600060028810610c6e57634e487b7160e01b600052602160045260246000fd5b5060f89690961b86526001600160601b0319606095861b8116600188015293851b841660158701529190931b9091166029840152603d830191909152605d820152607d0190565b604081526000610cc86040830185610b84565b90508260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610d0057610d00610cd7565b92915050565b80820180821115610d0057610d00610cd7565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610d4157600080fd5b815160ff8116811461080957600080fd5b60ff8281168282160390811115610d0057610d00610cd7565b600181815b80851115610da6578160001904821115610d8c57610d8c610cd7565b80851615610d9957918102915b93841c9390800290610d70565b509250929050565b600082610dbd57506001610d00565b81610dca57506000610d00565b8160018114610de05760028114610dea57610e06565b6001915050610d00565b60ff841115610dfb57610dfb610cd7565b50506001821b610d00565b5060208310610133831016604e8410600b8410161715610e29575081810a610d00565b610e338383610d6b565b8060001904821115610e4757610e47610cd7565b029392505050565b600061080960ff841683610dae56fe93e3b87db48beb11f82ff978661ba6e96f72f582300e9724191ab4b5d7964364a2646970667358221220f107d3802d66abca4226adedced210c4c448d1c9479f8f3256a19c5c56c2d81264736f6c63430008120033608060405234801561001057600080fd5b506001600055615fdc80620000266000396000f3fe608060405234801561001057600080fd5b50600436106102ea5760003560e01c8062cdcefb146102ef5780630203d8fb146103285780630448e51a1461033d578063063d829f1461042157806306e47f26146104445780630729f62c1461045757806315afd4091461046a57806316f8a463146104925780632c7b2e06146104b3578063307ee3b5146104f0578063329d1a8b146104f9578063332c0e431461050c5780633884cd881461051f5780633a0c8f071461054c5780633ab96ec5146105545780633fa8fdbb1461056757806342302a9a1461056f578063438732641461058257806347f6fe641461059a578063483cd187146105ad57806348d399e7146105f15780634ab1fc36146106065780634d9661981461060f5780634efe8af7146106275780635a3b44771461063a5780635a422b92146106765780635cffe9de1461067e5780635d3637e714610691578063613255ab1461069a57806366ae5880146106ad5780636a9b1891146106c05780637323f853146106d35780637b3f8655146107045780637dacba181461070c5780637f8baa371461071f57806380f835ed146107325780638349d6be1461074557806385819c7414610766578063870c764a1461077b578063987165ed14610784578063a435cf8a14610797578063a749f1a6146107aa578063a83de3ec146107bd578063a918058d146107d0578063a9ff9f77146107e3578063ac9650d8146107f6578063b1dd61b614610816578063b1f0724714610830578063bad3462014610843578063bbb6e4f11461084b578063bcb630d71461085e578063c1bc1df31461086f578063ca103d1514610882578063cbd79054146108b9578063ce4396d7146108cc578063d1482791146108d4578063d39d813f146108dc578063d53e2b1b146108ef578063d9606e0814610902578063d9d98ce414610931578063da7951a914610944578063e512c06114610957578063eca487061461096c578063f0774d8d1461097f578063f78b0cce14610992575b600080fd5b614011546001600160d01b03811690600160d01b900465ffffffffffff165b604080519283526020830191909152015b60405180910390f35b61033b610336366004614a99565b6109a5565b005b6103c461034b366004614ac5565b6001600160a01b03908116600090815260046020819052604090912080546003820154600180840154600285015494909501549054838716976001600160601b03600160a01b9586900481169885811698828116988381169890970490921695600160601b948590048216949081900482169392041690565b604080516001600160a01b039b8c168152602081019a909a528901979097526060880195909552608087019390935260a086019190915260c0850152841660e084015283166101008301529091166101208201526101400161031f565b61400b546001600160d01b03811690600160d01b900465ffffffffffff1661030e565b61033b610452366004614b26565b610ab2565b61033b610465366004614b88565b610b5a565b61047d610478366004614a99565b610c26565b6040805192835290151560208301520161031f565b6104a56104a0366004614bc9565b610d3e565b60405190815260200161031f565b6104e16104c1366004614bc9565b600090815261402060205260409020805460018201546002909201549092565b60405161031f93929190614be2565b614017546104a5565b6104a5610507366004614bc9565b610d79565b6104e161051a366004614bf8565b610d8c565b610527610ee3565b604080516001600160a01b03909416845260208401929092529082015260600161031f565b6104a5610f22565b6104a5610562366004614bc9565b610f9f565b6104a5610fbe565b6104a561057d366004614bc9565b610fca565b61058a611105565b604051901515815260200161031f565b61030e6105a8366004614c2a565b611118565b6104a56105bb366004614c7a565b6001600160a01b039081166000908152614023602090815260408083209490931682529283528181209381529290915290205490565b6105f9611252565b60405161031f9190614cbc565b61401d546104a5565b61061761125e565b60405161031f9493929190614cd0565b61033b610635366004614ceb565b611360565b60035461401c5461401a5461401b5461401f545b604080519586526020860194909452928401919091526060830152608082015260a00161031f565b61033b6113f0565b61058a61068c366004614d90565b6114c0565b614019546104a5565b6104a56106a8366004614ac5565b611576565b6104a56106bb366004614e02565b6115f3565b61030e6106ce366004614e57565b6117be565b61030e6106e1366004614ac5565b6001600160a01b0316600090815260056020526040902080546001909101549091565b6104a56118db565b6104a561071a366004614bc9565b6118e7565b61033b61072d366004614e79565b611909565b61058a610740366004614bc9565b611988565b610758610753366004614bc9565b6119b2565b60405161031f929190614eba565b61076e6119e0565b60405161031f9190614f0e565b614018546104a5565b61033b610792366004614f21565b611a39565b6104a56107a5366004614c2a565b611ae7565b61030e6107b8366004614f92565b611c0a565b61064e6107cb366004614bc9565b611c54565b61033b6107de366004614f21565b611cb3565b6104a56107f1366004614fc2565b611d20565b610809610804366004614e79565b611ed7565b60405161031f9190615064565b61081e611fcb565b60405160ff909116815260200161031f565b61030e61083e366004614e57565b611fd7565b6105f96120ef565b61033b6108593660046150c6565b6120fb565b6001546001600160601b03166104a5565b61033b61087d3660046151d3565b6122b2565b6104e1610890366004614ac5565b6001600160a01b0316600090815261400a60205260409020805460018201546002909201549092565b61076e6108c7366004614ac5565b6123c4565b61033b612431565b61033b6124e1565b61033b6108ea366004614e79565b612513565b6104a56108fd366004614a99565b61255e565b61058a61091036600461527e565b61402460209081526000928352604080842090915290825290205460ff1681565b6104a561093f366004614a99565b612608565b6104a5610952366004614bc9565b612639565b61400e5461400f5461400c5461400d54610617565b61033b61097a366004614e57565b612646565b6104a561098d366004614a99565b6126a5565b61030e6109a03660046152ac565b6126d7565b6109ad6127e4565b60006109b7612842565b9050600073f419056B545783BbFfEAB4d0aA057a52FbA4F4fd632de27df2600160066140088689896040518763ffffffff1660e01b8152600401610a0096959493929190615337565b608060405180830381865af4158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a419190615379565b9050806020015182604001818151610a5991906153f4565b90525060208101516040820151610a74919060009081612a2c565b6040820151614018556060810151610a8d908390612ab7565b805115610aa257610aa2338260000151612bcb565b5050610aae6001600055565b5050565b610aba6127e4565b336000908152614023602090815260408083206001600160a01b038716845290915290819020905163d3f900a360e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e9163d3f900a391610b1b9190879087908790600401615439565b60006040518083038186803b158015610b3357600080fd5b505af4158015610b47573d6000803e3d6000fd5b50505050610b556001600055565b505050565b610b626127e4565b6000610b6c612842565b9050600073b127207d673977e14f31f52a14AD07e6a512c5fA632f39ec5c60016140216006614008878b8b8b60016040518a63ffffffff1660e01b8152600401610bbe99989796959493929190615464565b6101c060405180830381865af4158015610bdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0091906154ce565b9050610c0c8183612bf2565b610c1a858260800151612c93565b5050610b556001600055565b600080610c316127e4565b6000610c3b612842565b905060006040518060600160405280876001600160a01b03168152602001868152602001610c67612d91565b905260405163e47aaa3160e01b8152909150600090739EdcD1fEc19E5baA98fa4911C90C2162524750d29063e47aaa3190610cba90600190614021906006906140089061401a908b908b90600401615586565b60e060405180830381865af4158015610cd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfb91906155ea565b9050610d078184612e1d565b610d1982600001518260600151612c93565b8060800151945080602001516000149350505050610d376001600055565b9250929050565b60008181526140216020526040812060018101548154610d729190610d64600687612eb3565b610d6d87612ecc565b612f37565b9392505050565b6000610d86600683612f50565b92915050565b6000806000610d996127e4565b610da284612f66565b610daf6001614008612f8a565b610dba600186613036565b6000610dc4612842565b9050610ddb60068260400151898460a001516130b3565b610e066040518060800160405280600081526020016000815260200160008152602001600081525090565b6020810189905287815260408101879052610e226140086130eb565b602001516001600160601b03166060820152604051633806e8ef60e01b8152600090737456CF19C121842FE2C3a888075A11d51ED63b9890633806e8ef90610e77906140219060069088908890600401615693565b608060405180830381865af4158015610e94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb891906156bd565b92985090965094509050610ecc8382612ab7565b505050610ed96001600055565b9450945094915050565b600080600080610ef46140086130eb565b905080600001518160200151610f0b6140086130fe565b91966001600160601b039091169550909350915050565b604051630fc99bab60e41b815261400c600482015260009073e77bfEeB83CD09bD9b598a90f7Ce7faE02c715409063fc99bab090602401602060405180830381865af4158015610f76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9a91906156f3565b905090565b6000612007826120018110610fb657610fb661570c565b015492915050565b6000610f9a600661310f565b6000610fd46127e4565b600073b127207d673977e14f31f52a14AD07e6a512c5fA633c335cf361401a85610ffe603d61311a565b6040518463ffffffff1660e01b815260040161101c93929190614be2565b6040805180830381865af4158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190615722565b90925090506110823330836110716001613130565b6001600160a01b0316929190613149565b61108c6001613130565b6001600160a01b03166342966c68826040518263ffffffff1660e01b81526004016110b991815260200190565b600060405180830381600087803b1580156110d357600080fd5b505af11580156110e7573d6000803e3d6000fd5b505050506110f533836131a1565b506111006001600055565b919050565b6000611111605d61311a565b1515919050565b6000806111236127e4565b6111306001614008612f8a565b600061113a612842565b90506000611147866131d3565b604051637ea3416f60e11b8152909150737456CF19C121842FE2C3a888075A11d51ED63b989063fd4682de9061118e90614021906006908d908d9088908d90600401615746565b6040805180830381865af41580156111aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ce9190615722565b604080518381526020810183905292965090945033917feecbf72003860e4ff6d56b9912b736cff99598b154ff90af580424f0b5464637910160405180910390a261122782611222600685606001516131e7565b612ab7565b80840361123d5761123b33614026886131fb565b505b50506112496001600055565b94509492505050565b6000610f9a6015613130565b60405163f6eb5f8560e01b815261401754600482015261401854602482015261401954604482015261400b546001600160d01b03808216606484015260d091821c60848401526140115490811660a4840152901c60c48201526140125460e48201526140135461010482015261401454610124820152614015546101448201526140165461016482015260009081908190819073e77bfEeB83CD09bD9b598a90f7Ce7faE02c715409063f6eb5f859061018401608060405180830381865af415801561132e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135291906156bd565b935093509350935090919293565b6113686127e4565b60405162b06a6b60e71b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e906358353580906113b0906140219061402390614024908a908a908a908a9060040161577b565b60006040518083038186803b1580156113c857600080fd5b505af41580156113dc573d6000803e3d6000fd5b505050506113ea6001600055565b50505050565b6113f86127e4565b61140260016132e0565b73f419056B545783BbFfEAB4d0aA057a52FbA4F4fd63f88050b7600161401a6040518060800160405280611436600661310f565b815261401954602082015260400161144c612d91565b815261400b546001600160d01b03166020909101526040516001600160e01b031960e086901b168152611484939291906004016157c9565b60006040518083038186803b15801561149c57600080fd5b505af41580156114b0573d6000803e3d6000fd5b505050506114be6001600055565b565b60006114ca6127e4565b6114d385613309565b6114f057604051633cc7579b60e11b815260040160405180910390fd5b6040516369f958a560e11b815273e77bfEeB83CD09bD9b598a90f7Ce7faE02c715409063d3f2b14a9061152f908990899089908990899060040161580d565b60006040518083038186803b15801561154757600080fd5b505af415801561155b573d6000803e3d6000fd5b505050506001905061156d6001600055565b95945050505050565b600061158182613309565b15611100576040516370a0823160e01b81526001600160a01b038316906370a08231906115b2903090600401614cbc565b602060405180830381865afa1580156115cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8691906156f3565b60006115fd6127e4565b6000611607612842565b9050600073b127207d673977e14f31f52a14AD07e6a512c5fA630f4a0c2d60016140216006614008878e61163a8f6131d3565b60016040518963ffffffff1660e01b815260040161165f989796959493929190615841565b6101c060405180830381865af415801561167d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a191906154ce565b90506116ad8183612bf2565b80516116c290670de0b6b3a7640000906158ad565b6001600160a01b038916600090815261402560205260408120919450906116eb908890866131fb565b905060008260600151836040015161170391906153f4565b9050851561178057876001600160a01b03166358ed1af7838661010001518461172c91906158ad565b8a8a6040518563ffffffff1660e01b815260040161174d94939291906158cf565b600060405180830381600087803b15801561176757600080fd5b505af115801561177b573d6000803e3d6000fd5b505050505b61178e8a8460800151612c93565b6117983382612bcb565b6060830151156117b0576117b08a84606001516131a1565b5050505061156d6001600055565b6000806117c96127e4565b6117d66001614008612f8a565b60006117e0612842565b90506117eb856131d3565b60405163bf2980c760e01b8152909350737456CF19C121842FE2C3a888075A11d51ED63b989063bf2980c79061182e906140219060069088908a90600401614cd0565b602060405180830381865af415801561184b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186f91906156f3565b6040805187815260208101839052919350859133917f90895bc82397742e0cea4685e72279103862a03bee6bbe1d71265c7aeb111527910160405180910390a36118c281611222600684606001516131e7565b6118cf33614026876131fb565b5050610d376001600055565b6000610f9a603d61311a565b61402681815481106118f857600080fd5b600091825260209091200154905081565b3360009081526140246020526040908190209051634b740e8f60e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e91634b740e8f916119549190869086906004016158fb565b60006040518083038186803b15801561196c57600080fd5b505af4158015611980573d6000803e3d6000fd5b505050505050565b6000611994605d61311a565b1580610d865750506000908152614027602052604090205460ff1690565b60008060006119c361400885613330565b805160209091015190956001600160601b03909116945092505050565b6060614026805480602002602001604051908101604052809291908181526020018280548015611a2f57602002820191906000526020600020905b815481526020019060010190808311611a1b575b5050505050905090565b611a416127e4565b336000908152614023602090815260408083206001600160a01b038916845290915290819020905163e817b3fb60e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e9163e817b3fb91611aa6919089908990899089908990600401615953565b60006040518083038186803b158015611abe57600080fd5b505af4158015611ad2573d6000803e3d6000fd5b50505050611ae06001600055565b5050505050565b6000611af16127e4565b611afa82612f66565b6000611b04612842565b9050737456CF19C121842FE2C3a888075A11d51ED63b9863ba9784e86140216006611b2e896131d3565b886040518563ffffffff1660e01b8152600401611b4e9493929190614cd0565b602060405180830381865af4158015611b6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8f91906156f3565b915083336001600160a01b03167f8dbd51efd63b9e2a4eb5683dc55dadfe9c06eb546f516744c3fb46ba897df127888886604051611bcf93929190615991565b60405180910390a3611bea81611222600684606001516131e7565b611bf761402687876133b0565b50611c026001600055565b949350505050565b6000828152614021602090815260408083206001600160a01b03851684526003810190925282206001810154600283015490929190831115611c4b57805493505b50509250929050565b600080600080600080611c68600688613427565b6000888152614021602052604090208054600182015460028301549394509192909190611c9f85611c9a60068e613494565b613542565b929b919a5098509096509194509092505050565b611cbb6127e4565b336000908152614023602090815260408083206001600160a01b0389168452909152908190209051633110094360e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e91633110094391611aa6919089908990899089908990600401615953565b6000611d2a6127e4565b6000611d34612842565b90506000198614611d5157611d4e86826101000151613576565b95505b600073422d470fb02206733Bb770D2A27d6d98f493af646382c9345160016006614008868d8d611d808e6131d3565b8c6040518963ffffffff1660e01b8152600401611da49897969594939291906159b5565b61014060405180830381865af4158015611dc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de69190615a0b565b60a0810151604080830151606086015260808084015160208088019190915284015190860152825190519195509192506001600160a01b038a16917fef9d6dc34b1e6893b8746b03ac07fd084909654a5cedab240265a8d1bd584dc291611e519187918b9190614be2565b60405180910390a2611e778160c001518260e00151836101000151846101200151612a2c565b611e85828260000151612ab7565b6080820151614017558215611ea757602082015161401955611ea73384612bcb565b8515611ecb5733600090815261402560205260409020611ec9908690886131fb565b505b505061156d6001600055565b6060816001600160401b03811115611ef157611ef161511e565b604051908082528060200260200182016040528015611f2457816020015b6060815260200190600190039081611f0f5790505b50905060005b82811015611fc457611f9430858584818110611f4857611f4861570c565b9050602002810190611f5a9190615a92565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061358d92505050565b828281518110611fa657611fa661570c565b60200260200101819052508080611fbc90615ad8565b915050611f2a565b5092915050565b6000610f9a60006135b2565b600080611fe26127e4565b611fef6001614008612f8a565b6000611ff9612842565b905061201060068260400151868460a001516130b3565b6000737456CF19C121842FE2C3a888075A11d51ED63b98635086572061402160068560405180606001604052808b81526020016120548d61204f6135cb565b613609565b81526020016120646140086130eb565b602001516001600160601b03168152506040518563ffffffff1660e01b81526004016120939493929190615af1565b606060405180830381865af41580156120b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120d49190615b34565b919550935090506120e58282612ab7565b6118cf33856131a1565b6000610f9a6029613130565b6121036127e4565b600061210d612842565b905061211e85826101000151613576565b9450600073422d470fb02206733Bb770D2A27d6d98f493af6463ea067a57600160066140088661214c6135cb565b8d8d8d6121588d6131d3565b6040518a63ffffffff1660e01b815260040161217c99989796959493929190615b62565b61012060405180830381865af415801561219a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121be9190615bbe565b9050866001600160a01b03167fcff7ef888b198235bdc0ac137c2afb372bb7bc7fbb95e6b9960f36297008301787868685600001516040516122039493929190615c39565b60405180910390a2604081015160608301526080808201516020808501919091528201519083015260a081015160c082015160e083015161010084015161224c93929190612a2c565b61225a828260000151612ab7565b821561228d576080820151614017556001600160a01b03871660009081526140256020526040902061228d9085856133b0565b85156122a6576020820151614019556122a633876131a1565b5050611ae06001600055565b6140225460ff16156122d65760405162dc149f60e41b815260040160405180910390fd5b65ffffffffffff4216600160d01b02670de0b6b3a7640000811761400b556001600160d01b0382161761401155815180156123625760005b81811015612360576001614027600086848151811061232f5761232f61570c565b6020908102919091018101518252810191909152604001600020805460ff191691151591909117905560010161230e565b505b6123b1614008604080518082019091526000808252602080830182815284546001810186559483529120915190516001600160601b0316600160a01b026001600160a01b039190911617910155565b5050614022805460ff1916600117905550565b6001600160a01b0381166000908152614025602090815260409182902080548351818402810184019094528084526060939283018282801561242557602002820191906000526020600020905b815481526020019060010190808311612411575b50505050509050919050565b6124396127e4565b6000612443612842565b9050600073422d470fb02206733Bb770D2A27d6d98f493af64634700688d60016006614008866040518563ffffffff1660e01b81526004016124889493929190615c64565b602060405180830381865af41580156124a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124c991906156f3565b90506124d58282612ab7565b50506114be6001600055565b6124e96127e4565b60006124f3612842565b905061250881611222600684606001516131e7565b506114be6001600055565b336000908152614024602052604090819020905163296bff2560e01b815273b257A98a3549a0B36b9001d0eDc9e75d313d5c8e9163296bff25916119549190869086906004016158fb565b60006125686127e4565b6040516347a7428b60e11b8152600160048201526001600160a01b03841660248201526044810183905273f419056B545783BbFfEAB4d0aA057a52FbA4F4fd90638f4e851690606401602060405180830381865af41580156125ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f291906156f3565b90506125fe83826131a1565b610d866001600055565b600061261383613309565b61263057604051633cc7579b60e11b815260040160405180910390fd5b50600092915050565b6000610d86600683613620565b61264e6127e4565b6000612658612842565b9050600073f419056B545783BbFfEAB4d0aA057a52FbA4F4fd63062f2dea60016006614021614008878a8a6040518863ffffffff1660e01b8152600401610a009796959493929190615c87565b61402560205281600052604060002081815481106126c257600080fd5b90600052602060002001600091509150505481565b6000806126e26127e4565b6126eb83612f66565b6126f86001614008612f8a565b612703600185613036565b600061270d612842565b905061271e86826101000151613576565b604080518082018252828152602081018890529051632f9fa10360e01b8152919750600091737456CF19C121842FE2C3a888075A11d51ED63b9891632f9fa1039161277491614021916006918891600401615cc9565b606060405180830381865af4158015612791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127b59190615b34565b919550935090506127c68282612ab7565b6127d03388612bcb565b50506127dc6001600055565b935093915050565b60026000540361283b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055565b612896604051806101200160405280600060ff168152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b61401954602082015261401854604082015261401754608082015261400b546001600160d01b0390811660a0830152614011541660e08201526128d960006135b2565b60ff1681526128e8603d61311a565b610100820152602081015115612a295761290a81602001518260a00151613542565b606082015261400b5460009061292f90600160d01b900465ffffffffffff1642615d01565b8015801560c0850152909150612a275773e77bfEeB83CD09bD9b598a90f7Ce7faE02c71540639b5bef8661400c60068561296a6140086130eb565b60200151866040518663ffffffff1660e01b815260040161298f959493929190615d14565b6040805180830381865af49250505080156129c7575060408051601f3d908101601f191682019092526129c491810190615722565b60015b6129ee57600060c08301819052604051600080516020615f608339815191529190a1612a27565b60a084018290526020840151612a049083613542565b606085015261401f8054829190600090612a1f9084906153f4565b909155505050505b505b90565b600082600003612a3d576000612a53565b82612a49600287615e32565b612a5391906158ad565b9050600082600003612a66576000612a7c565b82612a72600287615e32565b612a7c91906158ad565b905081151580612a8b57508015155b156119805761401454612a9e82826153f4565b9050612aaa8382615d01565b6140145550505050505050565b604051635676e1ff60e01b815273e77bfEeB83CD09bD9b598a90f7Ce7faE02c7154090635676e1ff90612afb906140119061400c9060069088908890600401615e41565b60006040518083038186803b158015612b1357600080fd5b505af4925050508015612b24575060015b612b4057604051600080516020615f6083398151915290600090a15b6040805180820190915261400b546001600160d01b0381168252600160d01b900465ffffffffffff1660208201526000908190612b7e90859061372b565b61400b80546001600160d01b0319166001600160d01b038416179055909250905080156113ea57505061400b80546001600160d01b0316600160d01b4265ffffffffffff16021790555050565b6000612be082612bdb603d61311a565b6137ab565b9050610b558330836110716029613130565b60a0820151606082015260c08201516020820152610100820151604082018051612c1d908390615d01565b90525060208201518251612c3191906153f4565b81608001818151612c429190615d01565b90525061012082015115612c6857612c6860008361016001516000856101a00151612a2c565b60208101516140195560408101516140185560808101516140175560e0820151610aae908290612ab7565b6001600160a01b03821660009081526140256020526040812080549091670de0b6b3a76400006001612cc586836153f4565b612ccf9190615d01565b612cd991906158ad565b90506000612ce78284615d01565b905060005b81811015612d8857600085612d0086615e75565b95508581548110612d1357612d1361570c565b9060005260206000200154905085805480612d3057612d30615e8c565b6000828152602081208201600019908101829055909101909155614026805460018181018355919092527fcb67479e779bcca9a9cfe6ffe3a8be041d5b066ffc90ea3a8812cd36df6f04af9091019190915501612cec565b50505050505050565b6000612d9d603d61311a565b612da76029613130565b6001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401612dd29190614cbc565b602060405180830381865afa158015612def573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e1391906156f3565b610f9a9190615ea2565b8160c0015181606001818151612e339190615d01565b90525060a0820151602082018051612e4c908390615d01565b90525060a0820151604082018051612e65908390615d01565b9052506080808301519082018051612e7e908390615d01565b9052506020810151614019556040810151614018556080810151614017556060810151610aae908290611222906006906131e7565b6000610d72612ec28484613494565b611c9a8585613427565b600080612edb8361103c615eb9565b9050610c9f19811280612eef575061103c81135b15612f0d57604051637edf443b60e11b815260040160405180910390fd5b610d72612f32612f1c836137c4565b612f2d670df27a2cdf44800061384f565b613933565b6139f8565b600061156d858585670de0b6b3a7640000866001613a8f565b6000612f5c8383613b07565b5090949350505050565b80421115612f87576040516338e5e54b60e21b815260040160405180910390fd5b50565b8154600160601b90046001600160a01b031660008181526003840160205260409020600101546001600160601b031680156113ea576203f480612fcd8242615d01565b1115612fec576040516335bdb41f60e01b815260040160405180910390fd5b6001600160a01b0382166000908152600284016020526040902080541580159061301857506001810154155b15611ae0576040516335bdb41f60e01b815260040160405180910390fd5b8154600160601b90046001600160a01b03168015610b55576001600160a01b038116600090815260038401602052604081206002810154600190910154613089916001600160601b039081169116613bf7565b90508061309584612ecc565b106113ea576040516322c7e87760e11b815260040160405180910390fd5b82156113ea576130cc846130c78584613542565b612f50565b82116113ea5760405163dd47b04360e01b815260040160405180910390fd5b6130f3614a6d565b610d86826001613330565b8054600090610d8690600190615d01565b600081612000610fb6565b600080613125613d16565b929092013592915050565b60008061313b613d16565b929092013560601c92915050565b6113ea846323b872dd60e01b85858560405160240161316a93929190615ed9565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613d27565b610aae826131af603d61311a565b6131b990846158ad565b6131c36029613130565b6001600160a01b03169190613df9565b6000610d86670de0b6b3a764000083615ea2565b6000610d726131f68484612f50565b612ecc565b60606000826001600160401b038111156132175761321761511e565b604051908082528060200260200182016040528015613240578160200160208202803683370190505b50845490915060005b848110156132d55760008661325d84615e75565b935083815481106132705761327061570c565b906000526020600020015490508680548061328d5761328d615e8c565b600190038181906000526020600020016000905590556132ae308983613e18565b808483815181106132c1576132c161570c565b602090810291909101015250600101613249565b509095945050505050565b80546001600160601b031615612f87576040516359bfb80360e11b815260040160405180910390fd5b60006133156029613130565b6001600160a01b0316826001600160a01b0316149050919050565b613338614a6d565b82548210613359576040805180820190915260008082526020820152610d72565b82600001828154811061336e5761336e61570c565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091529392505050565b60005b818110156113ea5760008383838181106133cf576133cf61570c565b9050602002013590506133e181611988565b6133fe5760405163878eabc760e01b815260040160405180910390fd5b84546001810186556000868152602090200181905561341e333083613e18565b506001016133b3565b600061343282615ad8565b9150670de0b6b3a764000090505b6120008211610d8657600083612001018361200181106134625761346261570c565b015490508015613479576134768282613542565b91505b61348283613e7f565b61348c90846153f4565b925050613440565b600061349f82615ad8565b91506001838361200181106134b6576134b661570c565b0154915060008060005b858416600003613538576134d48487615d01565b9250868361200181106134e9576134e961570c565b0154915086612001018361200181106135045761350461570c565b01549050806000036135165781613520565b6135208183613542565b61352a9086615d01565b9450600184901b93506134c0565b5050505092915050565b6000670de0b6b3a76400006135586002826158ad565b6135628486615ea2565b61356c91906153f4565b610d7291906158ad565b60008161358381856158ad565b610d729190615ea2565b6060610d728383604051806060016040528060278152602001615f8060279139613e9e565b6000806135bd613d16565b929092013560f81c92915050565b6000806135d6612d91565b61401c546003549192506000916135ed91906153f4565b905080821115613604576136018183615d01565b92505b505090565b6000818311156136195781610d72565b5090919050565b600061362b82615ad8565b9150670de0b6b3a764000061200060008061364586613e7f565b905060005b8184106137205761365b84846153f4565b9050612000811161364a576000886120010182612001811061367f5761367f61570c565b0154905087851615613700576000898361200181106136a0576136a061570c565b01549050816000036136bb576136b68782613542565b6136dd565b6136dd6136c88389615ea2565b826a0c097ce7bc90715b34b9f160241b613f0c565b6136e790896153f4565b97508294508885036136fa575050613720565b50613713565b8015613713576137108682613fbb565b95505b600185901c94505061364a565b505050505092915050565b805160c083015160009015613752576137478460a00151613fd0565b915060019050610d37565b836060015160000361376f57613747670de0b6b3a7640000613fd0565b82516001600160d01b0316670de0b6b3a764000014801561379c575042836020015165ffffffffffff1614155b15610d37575060019250929050565b60008160016137ba82866153f4565b61356c9190615d01565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f198212156138045760405163e608e18b60e01b815260048101839052602401612832565b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f90821315613841576040516371f72a3160e01b815260048101839052602401612832565b50670de0b6b3a76400000290565b60008082136138745760405163309fa7dd60e11b815260048101839052602401612832565b6000670de0b6b3a7640000831261388d575060016138a6565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b60006138bb670de0b6b3a76400008505614039565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff1981016138e557505002919050565b6706f05b59d3b200005b600081131561392a57670de0b6b3a7640000828002059150671bc16d674ec800008212613922579384019360019190911d905b60011d6138ef565b50505002919050565b6000600160ff1b83148061394a5750600160ff1b82145b1561396857604051630d01a11b60e21b815260040160405180910390fd5b60008060008512613979578461397e565b846000035b91506000841261398e5783613993565b836000035b905060006139a18383614117565b90506001600160ff1b038111156139ce5760405163bf79e8d960e01b815260048101829052602401612832565b6000198087139086138082186001146139e757826139ec565b826000035b98975050505050505050565b600080821215613a4b5768033dd1780914b9711419821215613a1c57506000919050565b613a28826000036139f8565b6a0c097ce7bc90715b34b9f160241b81613a4457613a44615897565b0592915050565b680a688906bd8b0000008212613a775760405163e69458f960e01b815260048101839052602401612832565b670de0b6b3a7640000604083901b04610d72816141dd565b600084158015613a9d575086155b15613aa9575082613afd565b85600003613ab8575082613afd565b613afa613ac58489615ea2565b613ad7670de0b6b3a764000088615ea2565b613ae191906153f4565b85613af4670de0b6b3a76400008a615ea2565b8561486f565b90505b9695505050505050565b60008080611000670de0b6b3a764000082808080805b8615613be957613b2d878b6153f4565b93508b846120018110613b4257613b4261570c565b015492508b61200101846120018110613b5d57613b5d61570c565b0154915081600003613b7857613b738684613542565b613b9a565b613b9a613b858388615ea2565b846a0c097ce7bc90715b34b9f160241b613f0c565b613ba490866153f4565b90508a811015613bc357611cdc8411613bbe578399508094505b613bdd565b8115613bd657613bd38683613fbb565b95505b8098508597505b600187901c9650613b1d565b505050505050509250925092565b600080613c28613c078442615d01565b613c1990670de0b6b3a7640000615ea2565b680340aad21b3b7000006148c0565b9050600068068155a43676e00000821015613c7757613c55670de0b6b3a763ffff19612f2d6014856158ad565b9050613c6485611c9a836139f8565b613c7090610100615ea2565b9250613d0e565b682d89577d7d40200000821015613cce57613cb4670de0b6b3a763ffff196078613caa68068155a43676e0000086615d01565b612f2d91906158ad565b9050613cc385611c9a836139f8565b613c70906004615ea2565b613cf0670de0b6b3a763ffff19603c613caa682d89577d7d4020000086615d01565b90506010613d0186611c9a846139f8565b613d0b91906158ad565b92505b505092915050565b600119368181013560f01c90030190565b6000613d7c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166148e09092919063ffffffff16565b805190915015610b555780806020019051810190613d9a9190615efd565b610b555760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401612832565b610b558363a9059cbb60e01b848460405160240161316a929190614eba565b613e226015613130565b6001600160a01b03166323b872dd8484846040518463ffffffff1660e01b8152600401613e5193929190615ed9565b600060405180830381600087803b158015613e6b57600080fd5b505af1158015612d88573d6000803e3d6000fd5b6000811561110057613e96600019831860016153f4565b909116919050565b6060600080856001600160a01b031685604051613ebb9190615f1a565b600060405180830381855af49150503d8060008114613ef6576040519150601f19603f3d011682016040523d82523d6000602084013e613efb565b606091505b5091509150613afd868383876148ef565b6000808060001985870985870292508281108382030391505080600003613f4657838281613f3c57613f3c615897565b0492505050610d72565b808411613f5257600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000670de0b6b3a764000061356c8385615ea2565b60006001600160d01b03821115612a275760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663038206269747360c81b6064820152608401612832565b6000600160801b821061405957608091821c9161405690826153f4565b90505b600160401b821061407757604091821c9161407490826153f4565b90505b600160201b821061409557602091821c9161409290826153f4565b90505b6201000082106140b257601091821c916140af90826153f4565b90505b61010082106140ce57600891821c916140cb90826153f4565b90505b601082106140e957600491821c916140e690826153f4565b90505b6004821061410457600291821c9161410190826153f4565b90505b6002821061110057610d866001826153f4565b60008080600019848609848602925082811083820303915050670de0b6b3a7640000811061415b5760405163698d9a0160e11b815260048101829052602401612832565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff82119050826000036141995780670de0b6b3a7640000850401945050505050610d86565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b8216156141fd5768016a09e667f3bcc9090260401c5b6001603e1b821615614218576801306fe0a31b7152df0260401c5b6001603d1b821615614233576801172b83c7d517adce0260401c5b6001603c1b82161561424e5768010b5586cf9890f62a0260401c5b6001603b1b821615614269576801059b0d31585743ae0260401c5b6001603a1b82161561428457680102c9a3e778060ee70260401c5b600160391b82161561429f5768010163da9fb33356d80260401c5b600160381b8216156142ba57680100b1afa5abcbed610260401c5b600160371b8216156142d55768010058c86da1c09ea20260401c5b600160361b8216156142f0576801002c605e2e8cec500260401c5b600160351b82161561430b57680100162f3904051fa10260401c5b600160341b821615614326576801000b175effdc76ba0260401c5b600160331b82161561434157680100058ba01fb9f96d0260401c5b600160321b82161561435c5768010002c5cc37da94920260401c5b600160311b821615614377576801000162e525ee05470260401c5b600160301b8216156143925768010000b17255775c040260401c5b6001602f1b8216156143ad576801000058b91b5bc9ae0260401c5b6001602e1b8216156143c857680100002c5c89d5ec6d0260401c5b6001602d1b8216156143e35768010000162e43f4f8310260401c5b6001602c1b8216156143fe57680100000b1721bcfc9a0260401c5b6001602b1b8216156144195768010000058b90cf1e6e0260401c5b6001602a1b821615614434576801000002c5c863b73f0260401c5b600160291b82161561444f57680100000162e430e5a20260401c5b600160281b82161561446a576801000000b1721835510260401c5b600160271b82161561448557680100000058b90c0b490260401c5b600160261b8216156144a05768010000002c5c8601cc0260401c5b600160251b8216156144bb576801000000162e42fff00260401c5b600160241b8216156144d65768010000000b17217fbb0260401c5b600160231b8216156144f1576801000000058b90bfce0260401c5b600160221b82161561450c57680100000002c5c85fe30260401c5b600160211b8216156145275768010000000162e42ff10260401c5b600160201b82161561454257680100000000b17217f80260401c5b638000000082161561455d5768010000000058b90bfc0260401c5b6340000000821615614578576801000000002c5c85fe0260401c5b632000000082161561459357680100000000162e42ff0260401c5b63100000008216156145ae576801000000000b17217f0260401c5b63080000008216156145c957680100000000058b90c00260401c5b63040000008216156145e45768010000000002c5c8600260401c5b63020000008216156145ff576801000000000162e4300260401c5b630100000082161561461a5768010000000000b172180260401c5b62800000821615614634576801000000000058b90c0260401c5b6240000082161561464e57680100000000002c5c860260401c5b622000008216156146685768010000000000162e430260401c5b6210000082161561468257680100000000000b17210260401c5b6208000082161561469c5768010000000000058b910260401c5b620400008216156146b6576801000000000002c5c80260401c5b620200008216156146d057680100000000000162e40260401c5b620100008216156146e95761b172600160401b010260401c5b618000821615614701576158b9600160401b010260401c5b61400082161561471957612c5d600160401b010260401c5b6120008216156147315761162e600160401b010260401c5b61100082161561474957610b17600160401b010260401c5b6108008216156147615761058c600160401b010260401c5b610400821615614779576102c6600160401b010260401c5b61020082161561479157610163600160401b010260401c5b6101008216156147a85760b1600160401b010260401c5b60808216156147be576059600160401b010260401c5b60408216156147d457602c600160401b010260401c5b60208216156147ea576016600160401b010260401c5b601082161561480057600b600160401b010260401c5b6008821615614816576006600160401b010260401c5b600482161561482c576003600160401b010260401c5b6002821615614842576001600160401b010260401c5b6001821615614858576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b60008061487d868686613f0c565b9050600183600281111561489357614893615f36565b1480156148b05750600084806148ab576148ab615897565b868809115b1561156d57613afd6001826153f4565b6000816148ce6002826158ad565b613562670de0b6b3a764000086615ea2565b6060611c028484600085614968565b6060831561495e578251600003614957576001600160a01b0385163b6149575760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401612832565b5081611c02565b611c028383614a43565b6060824710156149c95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401612832565b600080866001600160a01b031685876040516149e59190615f1a565b60006040518083038185875af1925050503d8060008114614a22576040519150601f19603f3d011682016040523d82523d6000602084013e614a27565b606091505b5091509150614a38878383876148ef565b979650505050505050565b815115614a535781518083602001fd5b8060405162461bcd60e51b81526004016128329190615f4c565b604080518082019091526000808252602082015290565b6001600160a01b0381168114612f8757600080fd5b60008060408385031215614aac57600080fd5b8235614ab781614a84565b946020939093013593505050565b600060208284031215614ad757600080fd5b8135610d7281614a84565b60008083601f840112614af457600080fd5b5081356001600160401b03811115614b0b57600080fd5b6020830191508360208260051b8501011115610d3757600080fd5b600080600060408486031215614b3b57600080fd5b8335614b4681614a84565b925060208401356001600160401b03811115614b6157600080fd5b614b6d86828701614ae2565b9497909650939450505050565b8015158114612f8757600080fd5b600080600060608486031215614b9d57600080fd5b8335614ba881614a84565b92506020840135614bb881614b7a565b929592945050506040919091013590565b600060208284031215614bdb57600080fd5b5035919050565b9283526020830191909152604082015260600190565b60008060008060808587031215614c0e57600080fd5b5050823594602084013594506040840135936060013592509050565b60008060008060608587031215614c4057600080fd5b84356001600160401b03811115614c5657600080fd5b614c6287828801614ae2565b90989097506020870135966040013595509350505050565b600080600060608486031215614c8f57600080fd5b833592506020840135614ca181614a84565b91506040840135614cb181614a84565b809150509250925092565b6001600160a01b0391909116815260200190565b93845260208401929092526040830152606082015260800190565b60008060008060608587031215614d0157600080fd5b8435614d0c81614a84565b93506020850135614d1c81614a84565b925060408501356001600160401b03811115614d3757600080fd5b614d4387828801614ae2565b95989497509550505050565b60008083601f840112614d6157600080fd5b5081356001600160401b03811115614d7857600080fd5b602083019150836020828501011115610d3757600080fd5b600080600080600060808688031215614da857600080fd5b8535614db381614a84565b94506020860135614dc381614a84565b93506040860135925060608601356001600160401b03811115614de557600080fd5b614df188828901614d4f565b969995985093965092949392505050565b600080600080600060808688031215614e1a57600080fd5b8535614e2581614a84565b9450602086013593506040860135614e3c81614a84565b925060608601356001600160401b03811115614de557600080fd5b60008060408385031215614e6a57600080fd5b50508035926020909101359150565b60008060208385031215614e8c57600080fd5b82356001600160401b03811115614ea257600080fd5b614eae85828601614ae2565b90969095509350505050565b6001600160a01b03929092168252602082015260400190565b600081518084526020808501945080840160005b83811015614f0357815187529582019590820190600101614ee7565b509495945050505050565b602081526000610d726020830184614ed3565b600080600080600060608688031215614f3957600080fd5b8535614f4481614a84565b945060208601356001600160401b0380821115614f6057600080fd5b614f6c89838a01614ae2565b90965094506040880135915080821115614f8557600080fd5b50614df188828901614ae2565b60008060408385031215614fa557600080fd5b823591506020830135614fb781614a84565b809150509250929050565b600080600080600060a08688031215614fda57600080fd5b8535614fe581614a84565b94506020860135935060408601359250606086013561500381614a84565b949793965091946080013592915050565b60005b8381101561502f578181015183820152602001615017565b50506000910152565b60008151808452615050816020860160208601615014565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156150b957603f198886030184526150a7858351615038565b9450928501929085019060010161508b565b5092979650505050505050565b6000806000806000608086880312156150de57600080fd5b85356150e981614a84565b9450602086013593506040860135925060608601356001600160401b0381111561511257600080fd5b614df188828901614ae2565b634e487b7160e01b600052604160045260246000fd5b6040516101c081016001600160401b03811182821017156151575761515761511e565b60405290565b60405161014081016001600160401b03811182821017156151575761515761511e565b60405161012081016001600160401b03811182821017156151575761515761511e565b604051601f8201601f191681016001600160401b03811182821017156151cb576151cb61511e565b604052919050565b600080604083850312156151e657600080fd5b82356001600160401b03808211156151fd57600080fd5b818501915085601f83011261521157600080fd5b81356020828211156152255761522561511e565b8160051b92506152368184016151a3565b828152928401810192818101908985111561525057600080fd5b948201945b8486101561526e57853582529482019490820190615255565b9997909101359750505050505050565b6000806040838503121561529157600080fd5b823561529c81614a84565b91506020830135614fb781614a84565b6000806000606084860312156152c157600080fd5b505081359360208301359350604090920135919050565b60ff81511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c0810151151560c083015260e081015160e08301526101008082015181840152505050565b86815260208101869052604081018590526101c0810161535a60608301866152d8565b6001600160a01b03939093166101808201526101a00152949350505050565b60006080828403121561538b57600080fd5b604051608081016001600160401b03811182821017156153ad576153ad61511e565b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610d8657610d866153de565b81835260006001600160fb1b0383111561542057600080fd5b8260051b80836020870137939093016020019392505050565b8481526001600160a01b0384166020820152606060408201819052600090613afd9083018486615407565b6000610220820190508a825289602083015288604083015287606083015261548f60808301886152d8565b6001600160a01b03959095166101a08201529215156101c08401526101e08301919091526102009091015295945050505050565b805161110081614b7a565b60006101c082840312156154e157600080fd5b6154e9615134565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e082015261010080840151818301525061012061554d8185016154c3565b908201526101408381015190820152610160808401519082015261018080840151908201526101a0928301519281019290925250919050565b6000610220820190508882528760208301528660408301528560608301528460808301526155b760a08301856152d8565b82516001600160a01b03166101c083015260208301516101e0830152604090920151610200909101529695505050505050565b600060e082840312156155fc57600080fd5b60405160e081016001600160401b038111828210171561561e5761561e61511e565b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b805182526020810151602083015260408101516040830152606081015160608301525050565b848152602081018490526101e081016156af60408301856152d8565b61156d61016083018461566d565b600080600080608085870312156156d357600080fd5b505082516020840151604085015160609095015191969095509092509050565b60006020828403121561570557600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000806040838503121561573557600080fd5b505080516020909101519092909150565b86815285602082015260a06040820152600061576660a083018688615407565b60608301949094525060800152949350505050565b87815260208101879052604081018690526001600160a01b0385811660608301528416608082015260c060a082018190526000906157bc9083018486615407565b9998505050505050505050565b8381526020810183905260c08101611c02604083018461566d565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0386811682528516602082015260408101849052608060608201819052600090613afa90830184866157e4565b60006102008201905089825288602083015287604083015286606083015261586c60808301876152d8565b6001600160a01b03949094166101a08201526101c08101929092526101e09091015295945050505050565b634e487b7160e01b600052601260045260246000fd5b6000826158ca57634e487b7160e01b600052601260045260246000fd5b500490565b6060815260006158e26060830187614ed3565b8560208401528281036040840152614a388185876157e4565b83815260406020808301829052908201839052600090849060608401835b8681101561594757833561592c81614a84565b6001600160a01b031682529282019290820190600101615919565b50979650505050505050565b8681526001600160a01b038616602082015260806040820181905260009061597e9083018688615407565b82810360608401526157bc818587615407565b6040815260006159a5604083018587615407565b9050826020830152949350505050565b888152602081018890526040810187905261020081016159d860608301886152d8565b6001600160a01b03959095166101808201526101a08101939093526101c08301919091526101e090910152949350505050565b60006101408284031215615a1e57600080fd5b615a2661515d565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152508091505092915050565b6000808335601e19843603018112615aa957600080fd5b8301803591506001600160401b03821115615ac357600080fd5b602001915036819003821315610d3757600080fd5b600060018201615aea57615aea6153de565b5060010190565b848152602081018490526101c08101615b0d60408301856152d8565b8251610160830152602083015161018083015260408301516101a083015295945050505050565b600080600060608486031215615b4957600080fd5b8351925060208401519150604084015190509250925092565b89815260208101899052604081018890526102208101615b8560608301896152d8565b6101808201969096526001600160a01b03949094166101a08501526101c08401929092526101e083015261020090910152949350505050565b60006101208284031215615bd157600080fd5b615bd9615180565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152508091505092915050565b848152606060208201526000615c53606083018587615407565b905082604083015295945050505050565b8481526020810184905260408101839052610180810161156d60608301846152d8565b60006101e082019050888252876020830152866040830152856060830152615cb260808301866152d8565b6101a08201939093526101c0015295945050505050565b848152602081018490526101a08101615ce560408301856152d8565b8251610160830152602083015161018083015295945050505050565b81810381811115610d8657610d866153de565b858152602081018590526101a08101615d3060408301866152d8565b6001600160601b039390931661016082015261018001529392505050565b600181815b80851115615d89578160001904821115615d6f57615d6f6153de565b80851615615d7c57918102915b93841c9390800290615d53565b509250929050565b600082615da057506001610d86565b81615dad57506000610d86565b8160018114615dc35760028114615dcd57615de9565b6001915050610d86565b60ff841115615dde57615dde6153de565b50506001821b610d86565b5060208310610133831016604e8410600b8410161715615e0c575081810a610d86565b615e168383615d4e565b8060001904821115615e2a57615e2a6153de565b029392505050565b6000610d7260ff841683615d91565b85815260208101859052604081018490526101a08101615e6460608301856152d8565b826101808301529695505050505050565b600081615e8457615e846153de565b506000190190565b634e487b7160e01b600052603160045260246000fd5b8082028115828204841417610d8657610d866153de565b8181036000831280158383131683831282161715611fc457611fc46153de565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215615f0f57600080fd5b8151610d7281614b7a565b60008251615f2c818460208701615014565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b602081526000610d72602083018461503856fe84da056cd0ff5380ec35a74f131057a96626a24305fa137c235bdbe1b414a396416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ee1af32dd4789e25b0d2d367f045d24478da6d24aa3846c6cbe6a8a13ef713c864736f6c63430008120033","args":["0x6c518f9D1a163379235816c543E62922a79863Fa"],"salt":"AJNA","value":[]}
2024-01-08T15:30:08.482Z cannon:builder:runtime resolve artifact PoolInfoUtils
2024-01-08T15:30:08.482Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:30:17.484Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/PoolInfoUtils.sol': 'PoolInfoUtils' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol': {
      keccak256: '0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol': {
      keccak256: '0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol': {
      keccak256: '0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Address.sol': {
      keccak256: '0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Multicall.sol': {
      keccak256: '0x35e30a35e23f856cbcee3558b7efdd83f6017a8f1b419710645143d98e892463',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathUD60x18.sol': {
      keccak256: '0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/PoolInfoUtils.sol': {
      keccak256: '0xb4bfd45c311a12b89725305a9295ccde8210a762540fa15c077a4230046587a9',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/PoolCommons.sol': {
      keccak256: '0x1dd40766b71468dade905c41a90783dad18761fe998f1a85acd79e8a0bb32ed3',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:30:17.486Z cannon:cli:foundry evm version paris
2024-01-08T15:30:17.501Z cannon:builder:runtime reported contract artifact PoolInfoUtils {
  contractName: 'PoolInfoUtils',
  sourceName: 'src/PoolInfoUtils.sol',
  abi: [
    {
      type: 'function',
      name: 'auctionInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'auctionStatus',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'availableQuoteTokenAmount',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'borrowFeeRate',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'borrowerInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'bucketInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'depositFeeRate',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'hpb',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'hpbIndex',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'htp',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'indexToPrice',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'pure'
    },
    {
      type: 'function',
      name: 'lenderInterestMargin',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'lpToCollateral',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'lpToQuoteTokens',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'lup',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'lupIndex',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'multicall',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'poolLoansInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'poolPricesInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'poolReservesInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'poolUtilizationInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'priceToIndex',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'pure'
    },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'BucketPriceOutOfBounds', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__CeilOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'PRBMath__MulDivOverflow', inputs: [Array] }
  ],
  bytecode: '0x608060405234801561001057600080fd5b50613cd6806100206000396000f3fe608060405234801561001057600080fd5b50600436106101125760003560e01c8063192d388e146101175780631aeaf3f81461015c5780631d3d68b61461018f5780631f2694e9146101ca5780632857299f146101eb5780633b00cf7a1461025b57806343dfac7d1461026e5780636abccba1146102815780636efeac9814610294578063790ba5fe146102a757806393e61c10146102fe57806396a43dca146103115780639b7fe21414610324578063ac9650d814610337578063ad685b3c14610357578063b3f847271461036a578063c367bc2f146103b3578063d96f3638146103c6578063dbac1724146103d9578063e368c16a146103ec578063e7e01bb1146103ff578063f5e7dba014610412575b600080fd5b61012a6101253660046136bf565b610425565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0015b60405180910390f35b61016f61016a3660046136eb565b6104c8565b604080519485526020850193909352918301526060820152608001610153565b6101a261019d366004613724565b61070b565b604080519586526020860194909452928401919091526060830152608082015260a001610153565b6101dd6101d8366004613724565b610a3d565b604051908152602001610153565b6101fe6101f93660046136eb565b610ab3565b604080516001600160a01b039b8c168152602081019a909a528901979097526060880195909552608087019390935260a086019190915260c0850152841660e0840152831661010083015290911661012082015261014001610153565b6101dd610269366004613724565b610b53565b6101dd61027c366004613741565b610bc2565b6101dd61028f366004613724565b610c5f565b6101dd6102a2366004613724565b610ce2565b6102ba6102b53660046136eb565b610dbb565b60408051998a5260208a0198909852968801959095529215156060870152608086019190915260a085015260c084015260e083015261010082015261012001610153565b6101dd61030c366004613724565b61107e565b61016f61031f366004613724565b611243565b6101dd610332366004613776565b6114c6565b61034a61034536600461378f565b6114d7565b6040516101539190613853565b61012a610365366004613724565b6115cb565b61037d610378366004613724565b611921565b6040805195865260208601949094526001600160a01b03909216928401929092526060830191909152608082015260a001610153565b6101dd6103c1366004613724565b611be2565b6101dd6103d4366004613724565b611cd2565b6101dd6103e7366004613741565b611d40565b6101dd6103fa366004613776565b611dd1565b6101dd61040d366004613724565b611ddc565b6101dd610420366004613724565b611e99565b600080808080808761043688612078565b604051632a0f78fb60e21b8152600481018a90529097506001600160a01b0382169063a83de3ec9060240160a060405180830381865afa15801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a291906138b5565b90995091975091955093506104bb90508585888a6120e3565b9150509295509295509295565b6000806000806000869050600080826001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa158015610513573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053791906138f5565b915091506000836001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d91906138f5565b509050600073__$3cccfd51632b41b6eb9ac3c38f305ce843$__6378792ff18585856040518463ffffffff1660e01b81526004016105dd93929190613919565b602060405180830381865af41580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e919061392f565b9050600080866001600160a01b031663ca103d158d6040518263ffffffff1660e01b815260040161064f9190613948565b606060405180830381865afa15801561066c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610690919061395c565b909b50909250905089156106bf576106ba6106b383670e6ed27d666800006120fc565b828c612130565b6106c2565b60005b98506106ce82846121de565b9a5089156106f6576106f16106e38c8c61220a565b670e6ed27d666800006120fc565b6106f9565b60005b97505050505050505092959194509250565b6000806000806000808690506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077b919061398a565b50509150506000826001600160a01b0316633fa8fdbb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e4919061392f565b90506000836001600160a01b0316637b3f86556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084a919061392f565b846001600160a01b031663bad346206040518163ffffffff1660e01b8152600401602060405180830381865afa158015610888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ac91906139c0565b6001600160a01b03166370a082318c6040518263ffffffff1660e01b81526004016108d79190613948565b602060405180830381865afa1580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610918919061392f565b61092291906139f3565b9050600080600080876001600160a01b0316635a3b44776040518163ffffffff1660e01b815260040160a060405180830381865afa158015610968573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098c91906138b5565b5093509350935093508284876109a29190613a0a565b6109ac9190613a0a565b6109b68689613a0a565b106109e9578284876109c8888b613a0a565b6109d29190613a1d565b6109dc9190613a1d565b6109e69190613a1d565b9c505b6109f6878786868961222a565b9b50829a50610a058282612295565b9950610a1d6203f480610a188442613a1d565b612356565b610a2a906203f480613a1d565b9850505050505050505091939590929450565b600080826001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa091906138f5565b509050610aac8161236d565b9392505050565b6000806000806000806000806000808b6001600160a01b0316630448e51a8c6040518263ffffffff1660e01b8152600401610aee9190613948565b61014060405180830381865afa158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b309190613a30565b99509950995099509950995099509950995099509295989b9194979a5092959850565b600080826001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb691906138f5565b509050610aac81612392565b604051632a0f78fb60e21b81526004810182905260009084908290819081906001600160a01b0385169063a83de3ec9060240160a060405180830381865afa158015610c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3691906138b5565b5093505092509250610c538383838a610c4e8b612078565b6123a7565b98975050505050505050565b60405163329d1a8b60e01b815260016004820152600090829082906001600160a01b0383169063329d1a8b90602401602060405180830381865afa158015610cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccf919061392f565b9050610cda81612078565b949350505050565b6000808290506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4c919061398a565b505060405163329d1a8b60e01b815260048101839052919250506001600160a01b0383169063329d1a8b90602401602060405180830381865afa158015610d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cda919061392f565b6000806000806000806000806000610de6604051806040016040528060008152602001600081525090565b604051630224728d60e11b81526001600160a01b038d1690630448e51a90610e12908e90600401613948565b61014060405180830381865afa158015610e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e549190613a30565b909192939495969798509091929394959650909150905050809750819950829850839e508496505050505050896000146110705760405163035d5e7f60e31b81526001600160a01b03808e1660048301528c1660248201523090631aeaf3f890604401608060405180830381865afa158015610ed4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef8919061398a565b905050809a5081995050508b6001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610f41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f65919061398a565b5050506020820181905260405163329d1a8b60e01b8152610fe7916001600160a01b038f169163329d1a8b91610fa19160040190815260200190565b602060405180830381865afa158015610fbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe2919061392f565b612078565b816000018181525050611061888a83600001518f6001600160a01b031663b1dd61b66040518163ffffffff1660e01b8152600401602060405180830381865afa158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190613ace565b6123cc565b965061106d848b612441565b95505b509295985092959850929598565b6000808290506000816001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa1580156110c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e89190613af1565b50915050600080836001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa15801561112c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115091906138f5565b915091506000846001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015611192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b691906138f5565b509050600073__$3cccfd51632b41b6eb9ac3c38f305ce843$__6378792ff18585856040518463ffffffff1660e01b81526004016111f693929190613919565b602060405180830381865af4158015611213573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611237919061392f565b9050610c538582612565565b60008060008060008590506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa15801561128e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b2919061398a565b50505090506000826001600160a01b031663307ee3b56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131b919061392f565b90506000836001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa15801561135d573d6000803e3d6000fd5b505050506040513d60'... 21214 more characters,
  deployedBytecode: '0x608060405234801561001057600080fd5b50600436106101125760003560e01c8063192d388e146101175780631aeaf3f81461015c5780631d3d68b61461018f5780631f2694e9146101ca5780632857299f146101eb5780633b00cf7a1461025b57806343dfac7d1461026e5780636abccba1146102815780636efeac9814610294578063790ba5fe146102a757806393e61c10146102fe57806396a43dca146103115780639b7fe21414610324578063ac9650d814610337578063ad685b3c14610357578063b3f847271461036a578063c367bc2f146103b3578063d96f3638146103c6578063dbac1724146103d9578063e368c16a146103ec578063e7e01bb1146103ff578063f5e7dba014610412575b600080fd5b61012a6101253660046136bf565b610425565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0015b60405180910390f35b61016f61016a3660046136eb565b6104c8565b604080519485526020850193909352918301526060820152608001610153565b6101a261019d366004613724565b61070b565b604080519586526020860194909452928401919091526060830152608082015260a001610153565b6101dd6101d8366004613724565b610a3d565b604051908152602001610153565b6101fe6101f93660046136eb565b610ab3565b604080516001600160a01b039b8c168152602081019a909a528901979097526060880195909552608087019390935260a086019190915260c0850152841660e0840152831661010083015290911661012082015261014001610153565b6101dd610269366004613724565b610b53565b6101dd61027c366004613741565b610bc2565b6101dd61028f366004613724565b610c5f565b6101dd6102a2366004613724565b610ce2565b6102ba6102b53660046136eb565b610dbb565b60408051998a5260208a0198909852968801959095529215156060870152608086019190915260a085015260c084015260e083015261010082015261012001610153565b6101dd61030c366004613724565b61107e565b61016f61031f366004613724565b611243565b6101dd610332366004613776565b6114c6565b61034a61034536600461378f565b6114d7565b6040516101539190613853565b61012a610365366004613724565b6115cb565b61037d610378366004613724565b611921565b6040805195865260208601949094526001600160a01b03909216928401929092526060830191909152608082015260a001610153565b6101dd6103c1366004613724565b611be2565b6101dd6103d4366004613724565b611cd2565b6101dd6103e7366004613741565b611d40565b6101dd6103fa366004613776565b611dd1565b6101dd61040d366004613724565b611ddc565b6101dd610420366004613724565b611e99565b600080808080808761043688612078565b604051632a0f78fb60e21b8152600481018a90529097506001600160a01b0382169063a83de3ec9060240160a060405180830381865afa15801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a291906138b5565b90995091975091955093506104bb90508585888a6120e3565b9150509295509295509295565b6000806000806000869050600080826001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa158015610513573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053791906138f5565b915091506000836001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d91906138f5565b509050600073__$3cccfd51632b41b6eb9ac3c38f305ce843$__6378792ff18585856040518463ffffffff1660e01b81526004016105dd93929190613919565b602060405180830381865af41580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e919061392f565b9050600080866001600160a01b031663ca103d158d6040518263ffffffff1660e01b815260040161064f9190613948565b606060405180830381865afa15801561066c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610690919061395c565b909b50909250905089156106bf576106ba6106b383670e6ed27d666800006120fc565b828c612130565b6106c2565b60005b98506106ce82846121de565b9a5089156106f6576106f16106e38c8c61220a565b670e6ed27d666800006120fc565b6106f9565b60005b97505050505050505092959194509250565b6000806000806000808690506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077b919061398a565b50509150506000826001600160a01b0316633fa8fdbb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e4919061392f565b90506000836001600160a01b0316637b3f86556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084a919061392f565b846001600160a01b031663bad346206040518163ffffffff1660e01b8152600401602060405180830381865afa158015610888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ac91906139c0565b6001600160a01b03166370a082318c6040518263ffffffff1660e01b81526004016108d79190613948565b602060405180830381865afa1580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610918919061392f565b61092291906139f3565b9050600080600080876001600160a01b0316635a3b44776040518163ffffffff1660e01b815260040160a060405180830381865afa158015610968573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098c91906138b5565b5093509350935093508284876109a29190613a0a565b6109ac9190613a0a565b6109b68689613a0a565b106109e9578284876109c8888b613a0a565b6109d29190613a1d565b6109dc9190613a1d565b6109e69190613a1d565b9c505b6109f6878786868961222a565b9b50829a50610a058282612295565b9950610a1d6203f480610a188442613a1d565b612356565b610a2a906203f480613a1d565b9850505050505050505091939590929450565b600080826001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa091906138f5565b509050610aac8161236d565b9392505050565b6000806000806000806000806000808b6001600160a01b0316630448e51a8c6040518263ffffffff1660e01b8152600401610aee9190613948565b61014060405180830381865afa158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b309190613a30565b99509950995099509950995099509950995099509295989b9194979a5092959850565b600080826001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb691906138f5565b509050610aac81612392565b604051632a0f78fb60e21b81526004810182905260009084908290819081906001600160a01b0385169063a83de3ec9060240160a060405180830381865afa158015610c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3691906138b5565b5093505092509250610c538383838a610c4e8b612078565b6123a7565b98975050505050505050565b60405163329d1a8b60e01b815260016004820152600090829082906001600160a01b0383169063329d1a8b90602401602060405180830381865afa158015610cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccf919061392f565b9050610cda81612078565b949350505050565b6000808290506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4c919061398a565b505060405163329d1a8b60e01b815260048101839052919250506001600160a01b0383169063329d1a8b90602401602060405180830381865afa158015610d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cda919061392f565b6000806000806000806000806000610de6604051806040016040528060008152602001600081525090565b604051630224728d60e11b81526001600160a01b038d1690630448e51a90610e12908e90600401613948565b61014060405180830381865afa158015610e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e549190613a30565b909192939495969798509091929394959650909150905050809750819950829850839e508496505050505050896000146110705760405163035d5e7f60e31b81526001600160a01b03808e1660048301528c1660248201523090631aeaf3f890604401608060405180830381865afa158015610ed4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef8919061398a565b905050809a5081995050508b6001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610f41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f65919061398a565b5050506020820181905260405163329d1a8b60e01b8152610fe7916001600160a01b038f169163329d1a8b91610fa19160040190815260200190565b602060405180830381865afa158015610fbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe2919061392f565b612078565b816000018181525050611061888a83600001518f6001600160a01b031663b1dd61b66040518163ffffffff1660e01b8152600401602060405180830381865afa158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190613ace565b6123cc565b965061106d848b612441565b95505b509295985092959850929598565b6000808290506000816001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa1580156110c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e89190613af1565b50915050600080836001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa15801561112c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115091906138f5565b915091506000846001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015611192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b691906138f5565b509050600073__$3cccfd51632b41b6eb9ac3c38f305ce843$__6378792ff18585856040518463ffffffff1660e01b81526004016111f693929190613919565b602060405180830381865af4158015611213573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611237919061392f565b9050610c538582612565565b60008060008060008590506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa15801561128e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b2919061398a565b50505090506000826001600160a01b031663307ee3b56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131b919061392f565b90506000836001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa15801561135d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113819190613af1565b9250505082'... 21150 more characters,
  linkReferences: {
    'src/libraries/external/PoolCommons.sol': { PoolCommons: [Array] }
  },
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller\'s account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender\'s allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller\'s\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account\'s ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn\'t\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``\'s tokens,\\n     * given ``owner``\'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``\'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``\'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\"../IERC20.sol\\";\\nimport \\"../extensions/draft-IERC20Permit.sol\\";\\nimport \\"../../../utils/Address.sol\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // \'safeIncreaseAllowance\' and \'safeDecreaseAllowance\'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\"SafeERC20: approve from non-zero to non-zero allowance\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\"SafeERC20: decreased allowance below zero\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\"SafeERC20: permit did not succeed\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity\'s return data size checking mechanism, since\\n        // we\'re implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\"SafeERC20: low-level call failed\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\"SafeERC20: ERC20 operation'... 313609 more characters
  }
}
2024-01-08T15:30:17.504Z cannon:builder:contract lib ref PoolCommons 0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540
2024-01-08T15:30:17.505Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x608060405234801561001057600080fd5b50613cd6806100206000396000f3fe608060405234801561001057600080fd5b50600436106101125760003560e01c8063192d388e146101175780631aeaf3f81461015c5780631d3d68b61461018f5780631f2694e9146101ca5780632857299f146101eb5780633b00cf7a1461025b57806343dfac7d1461026e5780636abccba1146102815780636efeac9814610294578063790ba5fe146102a757806393e61c10146102fe57806396a43dca146103115780639b7fe21414610324578063ac9650d814610337578063ad685b3c14610357578063b3f847271461036a578063c367bc2f146103b3578063d96f3638146103c6578063dbac1724146103d9578063e368c16a146103ec578063e7e01bb1146103ff578063f5e7dba014610412575b600080fd5b61012a6101253660046136bf565b610425565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0015b60405180910390f35b61016f61016a3660046136eb565b6104c8565b604080519485526020850193909352918301526060820152608001610153565b6101a261019d366004613724565b61070b565b604080519586526020860194909452928401919091526060830152608082015260a001610153565b6101dd6101d8366004613724565b610a3d565b604051908152602001610153565b6101fe6101f93660046136eb565b610ab3565b604080516001600160a01b039b8c168152602081019a909a528901979097526060880195909552608087019390935260a086019190915260c0850152841660e0840152831661010083015290911661012082015261014001610153565b6101dd610269366004613724565b610b53565b6101dd61027c366004613741565b610bc2565b6101dd61028f366004613724565b610c5f565b6101dd6102a2366004613724565b610ce2565b6102ba6102b53660046136eb565b610dbb565b60408051998a5260208a0198909852968801959095529215156060870152608086019190915260a085015260c084015260e083015261010082015261012001610153565b6101dd61030c366004613724565b61107e565b61016f61031f366004613724565b611243565b6101dd610332366004613776565b6114c6565b61034a61034536600461378f565b6114d7565b6040516101539190613853565b61012a610365366004613724565b6115cb565b61037d610378366004613724565b611921565b6040805195865260208601949094526001600160a01b03909216928401929092526060830191909152608082015260a001610153565b6101dd6103c1366004613724565b611be2565b6101dd6103d4366004613724565b611cd2565b6101dd6103e7366004613741565b611d40565b6101dd6103fa366004613776565b611dd1565b6101dd61040d366004613724565b611ddc565b6101dd610420366004613724565b611e99565b600080808080808761043688612078565b604051632a0f78fb60e21b8152600481018a90529097506001600160a01b0382169063a83de3ec9060240160a060405180830381865afa15801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a291906138b5565b90995091975091955093506104bb90508585888a6120e3565b9150509295509295509295565b6000806000806000869050600080826001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa158015610513573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053791906138f5565b915091506000836001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d91906138f5565b509050600073e77bfEeB83CD09bD9b598a90f7Ce7faE02c715406378792ff18585856040518463ffffffff1660e01b81526004016105dd93929190613919565b602060405180830381865af41580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e919061392f565b9050600080866001600160a01b031663ca103d158d6040518263ffffffff1660e01b815260040161064f9190613948565b606060405180830381865afa15801561066c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610690919061395c565b909b50909250905089156106bf576106ba6106b383670e6ed27d666800006120fc565b828c612130565b6106c2565b60005b98506106ce82846121de565b9a5089156106f6576106f16106e38c8c61220a565b670e6ed27d666800006120fc565b6106f9565b60005b97505050505050505092959194509250565b6000806000806000808690506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077b919061398a565b50509150506000826001600160a01b0316633fa8fdbb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e4919061392f565b90506000836001600160a01b0316637b3f86556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084a919061392f565b846001600160a01b031663bad346206040518163ffffffff1660e01b8152600401602060405180830381865afa158015610888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ac91906139c0565b6001600160a01b03166370a082318c6040518263ffffffff1660e01b81526004016108d79190613948565b602060405180830381865afa1580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610918919061392f565b61092291906139f3565b9050600080600080876001600160a01b0316635a3b44776040518163ffffffff1660e01b815260040160a060405180830381865afa158015610968573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098c91906138b5565b5093509350935093508284876109a29190613a0a565b6109ac9190613a0a565b6109b68689613a0a565b106109e9578284876109c8888b613a0a565b6109d29190613a1d565b6109dc9190613a1d565b6109e69190613a1d565b9c505b6109f6878786868961222a565b9b50829a50610a058282612295565b9950610a1d6203f480610a188442613a1d565b612356565b610a2a906203f480613a1d565b9850505050505050505091939590929450565b600080826001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa091906138f5565b509050610aac8161236d565b9392505050565b6000806000806000806000806000808b6001600160a01b0316630448e51a8c6040518263ffffffff1660e01b8152600401610aee9190613948565b61014060405180830381865afa158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b309190613a30565b99509950995099509950995099509950995099509295989b9194979a5092959850565b600080826001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb691906138f5565b509050610aac81612392565b604051632a0f78fb60e21b81526004810182905260009084908290819081906001600160a01b0385169063a83de3ec9060240160a060405180830381865afa158015610c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3691906138b5565b5093505092509250610c538383838a610c4e8b612078565b6123a7565b98975050505050505050565b60405163329d1a8b60e01b815260016004820152600090829082906001600160a01b0383169063329d1a8b90602401602060405180830381865afa158015610cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccf919061392f565b9050610cda81612078565b949350505050565b6000808290506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4c919061398a565b505060405163329d1a8b60e01b815260048101839052919250506001600160a01b0383169063329d1a8b90602401602060405180830381865afa158015610d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cda919061392f565b6000806000806000806000806000610de6604051806040016040528060008152602001600081525090565b604051630224728d60e11b81526001600160a01b038d1690630448e51a90610e12908e90600401613948565b61014060405180830381865afa158015610e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e549190613a30565b909192939495969798509091929394959650909150905050809750819950829850839e508496505050505050896000146110705760405163035d5e7f60e31b81526001600160a01b03808e1660048301528c1660248201523090631aeaf3f890604401608060405180830381865afa158015610ed4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef8919061398a565b905050809a5081995050508b6001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610f41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f65919061398a565b5050506020820181905260405163329d1a8b60e01b8152610fe7916001600160a01b038f169163329d1a8b91610fa19160040190815260200190565b602060405180830381865afa158015610fbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe2919061392f565b612078565b816000018181525050611061888a83600001518f6001600160a01b031663b1dd61b66040518163ffffffff1660e01b8152600401602060405180830381865afa158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190613ace565b6123cc565b965061106d848b612441565b95505b509295985092959850929598565b6000808290506000816001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa1580156110c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e89190613af1565b50915050600080836001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa15801561112c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115091906138f5565b915091506000846001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015611192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b691906138f5565b509050600073e77bfEeB83CD09bD9b598a90f7Ce7faE02c715406378792ff18585856040518463ffffffff1660e01b81526004016111f693929190613919565b602060405180830381865af4158015611213573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611237919061392f565b9050610c538582612565565b60008060008060008590506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa15801561128e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b2919061398a565b50505090506000826001600160a01b031663307ee3b56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131b919061392f565b90506000836001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa15801561135d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113819190613af1565b925050508260001461139a576113978382612574565b97505b60405163329d1a8b60e01b8152600481018490526000906113ce906001600160a01b0387169063329d1a8b90602401610fa1565b90506113db84848361259f565b9750846001600160a01b0316633a0c8f076040518163ffffffff1660e01b8152600401602060405180830381865afa15801561141b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143f919061392f565b9650600080866001600160a01b031663e512c0616040518163ffffffff1660e01b8152600401608060405180830381865afa158015611482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a6919061398a565b5050915091506114b682826125eb565b9750505050505050509193509193565b60006114d18261260d565b92915050565b6060816001600160401b038111156114f1576114f1613b28565b60405190808252806020026020018201604052801561152457816020015b606081526020019060019003908161150f5790505b50905060005b828110156115c4576115943085858481811061154857611548613b3e565b905060200281019061155a9190613b54565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506126cf92505050565b8282815181106115a6576115a6613b3e565b602002602001018190525080806115bc90613ba1565b91505061152a565b5092915050565b60008060008060008060008790506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015611619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163d919061398a565b505060405163329d1a8b60e01b815260016004820152919250506001600160a01b0383169063329d1a8b90602401602060405180830381865afa158015611688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ac919061392f565b96506116b787612078565b97506000826001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa1580156116f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171d9190613af1565b50915050600080846001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa158015611761573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178591906138f5565b915091506000856001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa1580156117c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117eb91906138f5565b509050600073e77bfEeB83CD09bD9b598a90f7Ce7faE02c715406378792ff18585856040518463ffffffff1660e01b815260040161182b93929190613919565b602060405180830381865af4158015611848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186c919061392f565b90506118788582612565565b9a5064173eb4c80a8b101561188f57611cdc611898565b6118988b61260d565b60405163329d1a8b60e01b815260048101889052909a506001600160a01b0388169063329d1a8b90602401602060405180830381865afa1580156118e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611904919061392f565b975061190f88612078565b98505050505050505091939550919395565b600080600080600080869050806001600160a01b0316633fa8fdbb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561196b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198f919061392f565b9550806001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa1580156119cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f39190613af1565b90508096508195505050600080826001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa158015611a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6191906138f5565b915091506000836001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015611aa3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac791906138f5565b506040516378792ff160e01b815290915073e77bfEeB83CD09bD9b598a90f7Ce7faE02c71540906378792ff190611b0690869086908690600401613919565b602060405180830381865af4158015611b23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b47919061392f565b955073e77bfEeB83CD09bD9b598a90f7Ce7faE02c71540630cbcb4cd82611b6e8542613a1d565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865af4158015611baf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd3919061392f565b94505050505091939590929450565b6000808290506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015611c28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4c919061398a565b505060405163329d1a8b60e01b8152600481018390529192506000916001600160a01b038516915063329d1a8b90602401602060405180830381865afa158015611c9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cbe919061392f565b9050611cc981612078565b95945050505050565b60405163329d1a8b60e01b81526001600482015260009082906001600160a01b0382169063329d1a8b90602401602060405180830381865afa158015611d1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aac919061392f565b604051632a0f78fb60e21b81526004810182905260009084908290819081906001600160a01b0385169063a83de3ec9060240160a060405180830381865afa158015611d90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db491906138b5565b5093505092509250610c538284838a611dcc8b612078565b6126f4565b60006114d182612078565b6000808290506000816001600160a01b0316633a0c8f076040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e46919061392f565b6040516376fb7efb60e11b81526004810182905290915073e77bfEeB83CD09bD9b598a90f7Ce7faE02c715409063edf6fdf690602401602060405180830381865af4158015610d97573d6000803e3d6000fd5b600080829050600080826001600160a01b0316635a3b44776040518163ffffffff1660e01b815260040160a060405180830381865afa158015611ee0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0491906138b5565b5050509150915060008183611f199190613a0a565b90506000846001600160a01b0316637b3f86556040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7f919061392f565b856001600160a01b031663bad346206040518163ffffffff1660e01b8152600401602060405180830381865afa158015611fbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fe191906139c0565b6001600160a01b03166370a08231896040518263ffffffff1660e01b815260040161200c9190613948565b602060405180830381865afa158015612029573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061204d919061392f565b61205791906139f3565b90508181111561206e5761206b8282613a1d565b95505b5050505050919050565b6000806120878361103c613bba565b9050610c9f1981128061209b575061103c81135b156120b957604051637edf443b60e11b815260040160405180910390fd5b610aac6120de6120c883612719565b6120d9670df27a2cdf4480006127a9565b61288d565b61294f565b6000611cc9858585670de0b6b3a76400008660016129eb565b6000670de0b6b3a7640000612112600282613bf0565b61211c84866139f3565b6121269190613a0a565b610aac9190613bf0565b600080806000198587098587029250828110838203039150508060000361216a5783828161216057612160613bda565b0492505050610aac565b80841161217657600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000670de0b6b3a76400006001816121f685876139f3565b6122009190613a0a565b6121269190613a1d565b600081612218600282613bf0565b61211c670de0b6b3a7640000866139f3565b6000806122378486613a0a565b90508083111561228b5761224b8388613a0a565b915061226e8282612264670de0b6b3e2feca008a6120fc565b610a189190613a0a565b6122789083613a1d565b915061228882610a188386613a1d565b91505b5095945050505050565b600082156114d15760006122a98442613a1d565b905060006122b9610e1083613bf0565b676765c793fa10079d601b1b901c905060006122f86b0331adfc6b81cf95c39de3b1603c6122e9610e1087613c04565b6122f39190613bf0565b612a63565b90506000851561231c57612317676765c793fa10079d601b1b8761220a565b61231f565b60005b9050676765c793fa10079d601b1b6123378484612adb565b61234190836139f3565b61234b9190613bf0565b979650505050505050565b6000818311156123665781610aac565b5090919050565b60006114d1612385836802d1a51c7e0050000061220a565b6601c6bf52634000612af4565b60006114d182683b5c2d7a70fcbc000061220a565b60006123b8858786868660006129eb565b905083811115611cc9575091949350505050565b600064173eb4c80a831480156123e157508415155b156123ee57506000610cda565b60001960ff83160161241a57670de0b6b3a764000061240d8186613bf0565b61241791906139f3565b93505b61242c670e6ed27d66680000866120fc565b61243685856120fc565b101595945050505050565b6000806124726124518442613a1d565b61246390670de0b6b3a76400006139f3565b680340aad21b3b70000061220a565b9050600068068155a43676e000008210156124c65761249f670de0b6b3a763ffff196120d9601485613bf0565b90506124b3856124ae8361294f565b6120fc565b6124bf906101006139f3565b925061255d565b682d89577d7d4020000082101561251d57612503670de0b6b3a763ffff1960786124f968068155a43676e0000086613a1d565b6120d99190613bf0565b9050612512856124ae8361294f565b6124bf9060046139f3565b61253f670de0b6b3a763ffff19603c6124f9682d89577d7d4020000086613a1d565b90506010612550866124ae8461294f565b61255a9190613bf0565b92505b505092915050565b6000610aac6106e384846120fc565b600081156114d157610aac6125918461258c85612b04565b61220a565b678ac7230489e8000061220a565b6000836000036125b85750670de0b6b3a7640000610aac565b64173eb4c80a82036125cc57506000610aac565b610cda6125d984846120fc565b61258c670e6ed27d66680000876120fc565b60008160000361260357670de0b6b3a7640000610aac565b610aac838361220a565b600064173eb4c80a82108061262d57506b033f4a75fb6ff29166751a4b82115b1561264b57604051635665ba4560e11b815260040160405180910390fd5b600061266f612659846127a9565b61266a670df27a2cdf4480006127a9565b612b18565b9050600061267c82612bde565b905060008212801561269e57506706f05b59d3b2000061269c8383613bba565b135b156126b957610cda670de0b6b3a7640000820561103d613bba565b610cda670de0b6b3a7640000820561103c613bba565b6060610aac8383604051806060016040528060278152602001613c7a60279139612c50565b600061270586868686866000612cbe565b905085811115611cc9575093949350505050565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f1982121561275e5760405163e608e18b60e01b8152600481018390526024015b60405180910390fd5b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f9082131561279b576040516371f72a3160e01b815260048101839052602401612755565b50670de0b6b3a76400000290565b60008082136127ce5760405163309fa7dd60e11b815260048101839052602401612755565b6000670de0b6b3a764000083126127e757506001612800565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b6000612815670de0b6b3a76400008505612d28565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff19810161283f57505002919050565b6706f05b59d3b200005b600081131561288457670de0b6b3a7640000828002059150671bc16d674ec80000821261287c579384019360019190911d905b60011d612849565b50505002919050565b6000600160ff1b8314806128a45750600160ff1b82145b156128c257604051630d01a11b60e21b815260040160405180910390fd5b600080600085126128d357846128d8565b846000035b9150600084126128e857836128ed565b836000035b905060006128fb8383612e06565b90506001600160ff1b038111156129285760405163bf79e8d960e01b815260048101829052602401612755565b6000198087139086138082186001146129415782610c53565b505060000395945050505050565b6000808212156129a25768033dd1780914b971141982121561297357506000919050565b61297f8260000361294f565b6a0c097ce7bc90715b34b9f160241b8161299b5761299b613bda565b0592915050565b680a688906bd8b00000082126129ce5760405163e69458f960e01b815260048101839052602401612755565b670de0b6b3a7640000604083901b04610aac81612ecc565b919050565b6000841580156129f9575086155b15612a05575082612a59565b85600003612a14575082612a59565b612a56612a2184896139f3565b612a33670de0b6b3a7640000886139f3565b612a3d9190613a0a565b85612a50670de0b6b3a76400008a6139f3565b8561355e565b90505b9695505050505050565b6000612a70600283613c04565b600003612a8857676765c793fa10079d601b1b612a8a565b825b9050612a97600283613bf0565b91505b81156114d157612aaa8384612adb565b9250612ab7600283613c04565b15612ac957612ac68184612adb565b90505b612ad4600283613bf0565b9150612a9a565b6000676765c793fa10079d601b1b612112600282613bf0565b6000818310156123665781610aac565b60006114d1670de0b6b3a7640000836139f3565b6000600160ff1b831480612b2f5750600160ff1b82145b15612b4d5760405163b3c754a360e01b815260040160405180910390fd5b60008060008512612b5e5784612b63565b846000035b915060008412612b735783612b78565b836000035b90506000612b8f83670de0b6b3a7640000846135af565b90506001600160ff1b03811115612bbc57604051637cb4bef560e01b815260048101829052602401612755565b600019808713908613808218600114612bd55782610c53565b610c5383613c2e565b6000670afdc366fbc00000600160ff1b03821315612c1257604051635399a28560e11b815260048101839052602401612755565b670de0b6b3a764000082076000819003612c2e57829150612c4a565b80830391506000831315612c4a57670de0b6b3a7640000820191505b50919050565b6060600080856001600160a01b031685604051612c6d9190613c4a565b600060405180830381855af49150503d8060008114612ca8576040519150601f19603f3d011682016040523d82523d6000602084013e612cad565b606091505b5091509150612a5986838387613609565b600084158015612ccc575086155b15612ce257612cdb848461220a565b9050612a59565b85600003612cf457612cdb848461220a565b612a56612d0184896139f3565b612d13670de0b6b3a7640000886139f3565b612d1d9190613a0a565b85612a50868a6139f3565b6000600160801b8210612d4857608091821c91612d459082613a0a565b90505b600160401b8210612d6657604091821c91612d639082613a0a565b90505b600160201b8210612d8457602091821c91612d819082613a0a565b90505b620100008210612da157601091821c91612d9e9082613a0a565b90505b6101008210612dbd57600891821c91612dba9082613a0a565b90505b60108210612dd857600491821c91612dd59082613a0a565b90505b60048210612df357600291821c91612df09082613a0a565b90505b600282106129e6576114d1600182613a0a565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110612e4a5760405163698d9a0160e11b815260048101829052602401612755565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff8211905082600003612e885780670de0b6b3a76400008504019450505050506114d1565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615612eec5768016a09e667f3bcc9090260401c5b6001603e1b821615612f07576801306fe0a31b7152df0260401c5b6001603d1b821615612f22576801172b83c7d517adce0260401c5b6001603c1b821615612f3d5768010b5586cf9890f62a0260401c5b6001603b1b821615612f58576801059b0d31585743ae0260401c5b6001603a1b821615612f7357680102c9a3e778060ee70260401c5b600160391b821615612f8e5768010163da9fb33356d80260401c5b600160381b821615612fa957680100b1afa5abcbed610260401c5b600160371b821615612fc45768010058c86da1c09ea20260401c5b600160361b821615612fdf576801002c605e2e8cec500260401c5b600160351b821615612ffa57680100162f3904051fa10260401c5b600160341b821615613015576801000b175effdc76ba0260401c5b600160331b82161561303057680100058ba01fb9f96d0260401c5b600160321b82161561304b5768010002c5cc37da94920260401c5b600160311b821615613066576801000162e525ee05470260401c5b600160301b8216156130815768010000b17255775c040260401c5b6001602f1b82161561309c576801000058b91b5bc9ae0260401c5b6001602e1b8216156130b757680100002c5c89d5ec6d0260401c5b6001602d1b8216156130d25768010000162e43f4f8310260401c5b6001602c1b8216156130ed57680100000b1721bcfc9a0260401c5b6001602b1b8216156131085768010000058b90cf1e6e0260401c5b6001602a1b821615613123576801000002c5c863b73f0260401c5b600160291b82161561313e57680100000162e430e5a20260401c5b600160281b821615613159576801000000b1721835510260401c5b600160271b82161561317457680100000058b90c0b490260401c5b600160261b82161561318f5768010000002c5c8601cc0260401c5b600160251b8216156131aa576801000000162e42fff00260401c5b600160241b8216156131c55768010000000b17217fbb0260401c5b600160231b8216156131e0576801000000058b90bfce0260401c5b600160221b8216156131fb57680100000002c5c85fe30260401c5b600160211b8216156132165768010000000162e42ff10260401c5b600160201b82161561323157680100000000b17217f80260401c5b638000000082161561324c5768010000000058b90bfc0260401c5b6340000000821615613267576801000000002c5c85fe0260401c5b632000000082161561328257680100000000162e42ff0260401c5b631000000082161561329d576801000000000b17217f0260401c5b63080000008216156132b857680100000000058b90c00260401c5b63040000008216156132d35768010000000002c5c8600260401c5b63020000008216156132ee576801000000000162e4300260401c5b63010000008216156133095768010000000000b172180260401c5b62800000821615613323576801000000000058b90c0260401c5b6240000082161561333d57680100000000002c5c860260401c5b622000008216156133575768010000000000162e430260401c5b6210000082161561337157680100000000000b17210260401c5b6208000082161561338b5768010000000000058b910260401c5b620400008216156133a5576801000000000002c5c80260401c5b620200008216156133bf57680100000000000162e40260401c5b620100008216156133d85761b172600160401b010260401c5b6180008216156133f0576158b9600160401b010260401c5b61400082161561340857612c5d600160401b010260401c5b6120008216156134205761162e600160401b010260401c5b61100082161561343857610b17600160401b010260401c5b6108008216156134505761058c600160401b010260401c5b610400821615613468576102c6600160401b010260401c5b61020082161561348057610163600160401b010260401c5b6101008216156134975760b1600160401b010260401c5b60808216156134ad576059600160401b010260401c5b60408216156134c357602c600160401b010260401c5b60208216156134d9576016600160401b010260401c5b60108216156134ef57600b600160401b010260401c5b6008821615613505576006600160401b010260401c5b600482161561351b576003600160401b010260401c5b6002821615613531576001600160401b010260401c5b6001821615613547576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b60008061356c868686612130565b9050600183600281111561358257613582613c18565b14801561359f57506000848061359a5761359a613bda565b868809115b15611cc957612a59600182613a0a565b60008080600019858709858702925082811083820303915050806000036135df5783828161216057612160613bda565b83811061217657604051631dcf306360e21b81526004810182905260248101859052604401612755565b60608315613678578251600003613671576001600160a01b0385163b6136715760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401612755565b5081610cda565b610cda838381511561368d5781518083602001fd5b8060405162461bcd60e51b81526004016127559190613c66565b6001600160a01b03811681146136bc57600080fd5b50565b600080604083850312156136d257600080fd5b82356136dd816136a7565b946020939093013593505050565b600080604083850312156136fe57600080fd5b8235613709816136a7565b91506020830135613719816136a7565b809150509250929050565b60006020828403121561373657600080fd5b8135610aac816136a7565b60008060006060848603121561375657600080fd5b8335613761816136a7565b95602085013595506040909401359392505050565b60006020828403121561378857600080fd5b5035919050565b600080602083850312156137a257600080fd5b82356001600160401b03808211156137b957600080fd5b818501915085601f8301126137cd57600080fd5b8135818111156137dc57600080fd5b8660208260051b85010111156137f157600080fd5b60209290920196919550909350505050565b60005b8381101561381e578181015183820152602001613806565b50506000910152565b6000815180845261383f816020860160208601613803565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156138a857603f19888603018452613896858351613827565b9450928501929085019060010161387a565b5092979650505050505050565b600080600080600060a086880312156138cd57600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b6000806040838503121561390857600080fd5b505080516020909101519092909150565b9283526020830191909152604082015260600190565b60006020828403121561394157600080fd5b5051919050565b6001600160a01b0391909116815260200190565b60008060006060848603121561397157600080fd5b8351925060208401519150604084015190509250925092565b600080600080608085870312156139a057600080fd5b505082516020840151604085015160609095015191969095509092509050565b6000602082840312156139d257600080fd5b8151610aac816136a7565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176114d1576114d16139dd565b808201808211156114d1576114d16139dd565b818103818111156114d1576114d16139dd565b6000806000806000806000806000806101408b8d031215613a5057600080fd5b8a51613a5b816136a7565b809a505060208b0151985060408b0151975060608b0151965060808b0151955060a08b0151945060c08b0151935060e08b0151613a97816136a7565b6101008c0151909350613aa9816136a7565b6101208c0151909250613abb816136a7565b809150509295989b9194979a5092959850565b600060208284031215613ae057600080fd5b815160ff81168114610aac57600080fd5b600080600060608486031215613b0657600080fd5b8351613b11816136a7565b602085015160409095015190969495509392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112613b6b57600080fd5b8301803591506001600160401b03821115613b8557600080fd5b602001915036819003821315613b9a57600080fd5b9250929050565b600060018201613bb357613bb36139dd565b5060010190565b81810360008312801583831316838312821617156115c4576115c46139dd565b634e487b7160e01b600052601260045260246000fd5b600082613bff57613bff613bda565b500490565b600082613c1357613c13613bda565b500690565b634e487b7160e01b600052602160045260246000fd5b6000600160ff1b8201613c4357613c436139dd565b5060000390565b60008251613c5c818460208701613803565b9190910192915050565b602081526000610aac602083018461382756fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a6f56c06c56aaa1442b2cfba2431c341c7c761d748a9ff867bd607e021fcebb364736f6c63430008120033","args":[],"salt":"AJNA","value":[]}
2024-01-08T15:30:17.506Z cannon:builder comparing states null 348e8a6677b494bd418aee60ed9bdd3f
2024-01-08T15:30:17.506Z cannon:builder run isolated contract.PoolInfoUtils
Executing [contract.PoolInfoUtils]...
2024-01-08T15:30:17.510Z cannon:verbose:builder ctx for step contract.PoolInfoUtils {
  package: {},
  timestamp: '1704727545',
  chainId: 10,
  settings: {
    bwAJNA_ADDRESS: '0x6c518f9D1a163379235816c543E62922a79863Fa',
    salt: 'AJNA'
  },
  contracts: {
    PoolCommons: {
      address: '0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0x9ee2e160d6eff90f8f284668026974bc66484709a99d7fce7cd7e3f527bdbfb1',
      sourceName: 'src/libraries/external/PoolCommons.sol',
      contractName: 'PoolCommons',
      deployedOn: 'contract.PoolCommons',
      highlight: undefined,
      gasUsed: 2546476,
      gasCost: '2685008'
    }
  },
  txns: {},
  imports: {},
  extras: {}
}
2024-01-08T15:30:17.510Z cannon:builder:contract exec {
  artifact: 'PoolInfoUtils',
  libraries: { PoolCommons: '0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540' },
  salt: 'AJNA',
  create2: true,
  from: '',
  nonce: '',
  value: '',
  abi: ''
}
2024-01-08T15:30:17.516Z cannon:cli:rpc eth_chainId

2024-01-08T15:30:17.520Z cannon:cli:rpc eth_getCode

2024-01-08T15:30:17.529Z cannon:builder:runtime resolve artifact PoolInfoUtils
2024-01-08T15:30:17.529Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:30:26.921Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/PoolInfoUtils.sol': 'PoolInfoUtils' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol': {
      keccak256: '0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol': {
      keccak256: '0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol': {
      keccak256: '0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Address.sol': {
      keccak256: '0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Multicall.sol': {
      keccak256: '0x35e30a35e23f856cbcee3558b7efdd83f6017a8f1b419710645143d98e892463',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathUD60x18.sol': {
      keccak256: '0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/PoolInfoUtils.sol': {
      keccak256: '0xb4bfd45c311a12b89725305a9295ccde8210a762540fa15c077a4230046587a9',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/PoolCommons.sol': {
      keccak256: '0x1dd40766b71468dade905c41a90783dad18761fe998f1a85acd79e8a0bb32ed3',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:30:26.921Z cannon:cli:foundry evm version paris
2024-01-08T15:30:26.928Z cannon:builder:runtime reported contract artifact PoolInfoUtils {
  contractName: 'PoolInfoUtils',
  sourceName: 'src/PoolInfoUtils.sol',
  abi: [
    {
      type: 'function',
      name: 'auctionInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'auctionStatus',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'availableQuoteTokenAmount',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'borrowFeeRate',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'borrowerInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'bucketInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'depositFeeRate',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'hpb',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'hpbIndex',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'htp',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'indexToPrice',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'pure'
    },
    {
      type: 'function',
      name: 'lenderInterestMargin',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'lpToCollateral',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'lpToQuoteTokens',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'lup',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'lupIndex',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'multicall',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'poolLoansInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'poolPricesInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'poolReservesInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'poolUtilizationInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'priceToIndex',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'pure'
    },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'BucketPriceOutOfBounds', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__CeilOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'PRBMath__MulDivOverflow', inputs: [Array] }
  ],
  bytecode: '0x608060405234801561001057600080fd5b50613cd6806100206000396000f3fe608060405234801561001057600080fd5b50600436106101125760003560e01c8063192d388e146101175780631aeaf3f81461015c5780631d3d68b61461018f5780631f2694e9146101ca5780632857299f146101eb5780633b00cf7a1461025b57806343dfac7d1461026e5780636abccba1146102815780636efeac9814610294578063790ba5fe146102a757806393e61c10146102fe57806396a43dca146103115780639b7fe21414610324578063ac9650d814610337578063ad685b3c14610357578063b3f847271461036a578063c367bc2f146103b3578063d96f3638146103c6578063dbac1724146103d9578063e368c16a146103ec578063e7e01bb1146103ff578063f5e7dba014610412575b600080fd5b61012a6101253660046136bf565b610425565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0015b60405180910390f35b61016f61016a3660046136eb565b6104c8565b604080519485526020850193909352918301526060820152608001610153565b6101a261019d366004613724565b61070b565b604080519586526020860194909452928401919091526060830152608082015260a001610153565b6101dd6101d8366004613724565b610a3d565b604051908152602001610153565b6101fe6101f93660046136eb565b610ab3565b604080516001600160a01b039b8c168152602081019a909a528901979097526060880195909552608087019390935260a086019190915260c0850152841660e0840152831661010083015290911661012082015261014001610153565b6101dd610269366004613724565b610b53565b6101dd61027c366004613741565b610bc2565b6101dd61028f366004613724565b610c5f565b6101dd6102a2366004613724565b610ce2565b6102ba6102b53660046136eb565b610dbb565b60408051998a5260208a0198909852968801959095529215156060870152608086019190915260a085015260c084015260e083015261010082015261012001610153565b6101dd61030c366004613724565b61107e565b61016f61031f366004613724565b611243565b6101dd610332366004613776565b6114c6565b61034a61034536600461378f565b6114d7565b6040516101539190613853565b61012a610365366004613724565b6115cb565b61037d610378366004613724565b611921565b6040805195865260208601949094526001600160a01b03909216928401929092526060830191909152608082015260a001610153565b6101dd6103c1366004613724565b611be2565b6101dd6103d4366004613724565b611cd2565b6101dd6103e7366004613741565b611d40565b6101dd6103fa366004613776565b611dd1565b6101dd61040d366004613724565b611ddc565b6101dd610420366004613724565b611e99565b600080808080808761043688612078565b604051632a0f78fb60e21b8152600481018a90529097506001600160a01b0382169063a83de3ec9060240160a060405180830381865afa15801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a291906138b5565b90995091975091955093506104bb90508585888a6120e3565b9150509295509295509295565b6000806000806000869050600080826001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa158015610513573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053791906138f5565b915091506000836001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d91906138f5565b509050600073__$3cccfd51632b41b6eb9ac3c38f305ce843$__6378792ff18585856040518463ffffffff1660e01b81526004016105dd93929190613919565b602060405180830381865af41580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e919061392f565b9050600080866001600160a01b031663ca103d158d6040518263ffffffff1660e01b815260040161064f9190613948565b606060405180830381865afa15801561066c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610690919061395c565b909b50909250905089156106bf576106ba6106b383670e6ed27d666800006120fc565b828c612130565b6106c2565b60005b98506106ce82846121de565b9a5089156106f6576106f16106e38c8c61220a565b670e6ed27d666800006120fc565b6106f9565b60005b97505050505050505092959194509250565b6000806000806000808690506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077b919061398a565b50509150506000826001600160a01b0316633fa8fdbb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e4919061392f565b90506000836001600160a01b0316637b3f86556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084a919061392f565b846001600160a01b031663bad346206040518163ffffffff1660e01b8152600401602060405180830381865afa158015610888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ac91906139c0565b6001600160a01b03166370a082318c6040518263ffffffff1660e01b81526004016108d79190613948565b602060405180830381865afa1580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610918919061392f565b61092291906139f3565b9050600080600080876001600160a01b0316635a3b44776040518163ffffffff1660e01b815260040160a060405180830381865afa158015610968573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098c91906138b5565b5093509350935093508284876109a29190613a0a565b6109ac9190613a0a565b6109b68689613a0a565b106109e9578284876109c8888b613a0a565b6109d29190613a1d565b6109dc9190613a1d565b6109e69190613a1d565b9c505b6109f6878786868961222a565b9b50829a50610a058282612295565b9950610a1d6203f480610a188442613a1d565b612356565b610a2a906203f480613a1d565b9850505050505050505091939590929450565b600080826001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa091906138f5565b509050610aac8161236d565b9392505050565b6000806000806000806000806000808b6001600160a01b0316630448e51a8c6040518263ffffffff1660e01b8152600401610aee9190613948565b61014060405180830381865afa158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b309190613a30565b99509950995099509950995099509950995099509295989b9194979a5092959850565b600080826001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb691906138f5565b509050610aac81612392565b604051632a0f78fb60e21b81526004810182905260009084908290819081906001600160a01b0385169063a83de3ec9060240160a060405180830381865afa158015610c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3691906138b5565b5093505092509250610c538383838a610c4e8b612078565b6123a7565b98975050505050505050565b60405163329d1a8b60e01b815260016004820152600090829082906001600160a01b0383169063329d1a8b90602401602060405180830381865afa158015610cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccf919061392f565b9050610cda81612078565b949350505050565b6000808290506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4c919061398a565b505060405163329d1a8b60e01b815260048101839052919250506001600160a01b0383169063329d1a8b90602401602060405180830381865afa158015610d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cda919061392f565b6000806000806000806000806000610de6604051806040016040528060008152602001600081525090565b604051630224728d60e11b81526001600160a01b038d1690630448e51a90610e12908e90600401613948565b61014060405180830381865afa158015610e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e549190613a30565b909192939495969798509091929394959650909150905050809750819950829850839e508496505050505050896000146110705760405163035d5e7f60e31b81526001600160a01b03808e1660048301528c1660248201523090631aeaf3f890604401608060405180830381865afa158015610ed4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef8919061398a565b905050809a5081995050508b6001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610f41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f65919061398a565b5050506020820181905260405163329d1a8b60e01b8152610fe7916001600160a01b038f169163329d1a8b91610fa19160040190815260200190565b602060405180830381865afa158015610fbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe2919061392f565b612078565b816000018181525050611061888a83600001518f6001600160a01b031663b1dd61b66040518163ffffffff1660e01b8152600401602060405180830381865afa158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190613ace565b6123cc565b965061106d848b612441565b95505b509295985092959850929598565b6000808290506000816001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa1580156110c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e89190613af1565b50915050600080836001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa15801561112c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115091906138f5565b915091506000846001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015611192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b691906138f5565b509050600073__$3cccfd51632b41b6eb9ac3c38f305ce843$__6378792ff18585856040518463ffffffff1660e01b81526004016111f693929190613919565b602060405180830381865af4158015611213573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611237919061392f565b9050610c538582612565565b60008060008060008590506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa15801561128e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b2919061398a565b50505090506000826001600160a01b031663307ee3b56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131b919061392f565b90506000836001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa15801561135d573d6000803e3d6000fd5b505050506040513d60'... 21214 more characters,
  deployedBytecode: '0x608060405234801561001057600080fd5b50600436106101125760003560e01c8063192d388e146101175780631aeaf3f81461015c5780631d3d68b61461018f5780631f2694e9146101ca5780632857299f146101eb5780633b00cf7a1461025b57806343dfac7d1461026e5780636abccba1146102815780636efeac9814610294578063790ba5fe146102a757806393e61c10146102fe57806396a43dca146103115780639b7fe21414610324578063ac9650d814610337578063ad685b3c14610357578063b3f847271461036a578063c367bc2f146103b3578063d96f3638146103c6578063dbac1724146103d9578063e368c16a146103ec578063e7e01bb1146103ff578063f5e7dba014610412575b600080fd5b61012a6101253660046136bf565b610425565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0015b60405180910390f35b61016f61016a3660046136eb565b6104c8565b604080519485526020850193909352918301526060820152608001610153565b6101a261019d366004613724565b61070b565b604080519586526020860194909452928401919091526060830152608082015260a001610153565b6101dd6101d8366004613724565b610a3d565b604051908152602001610153565b6101fe6101f93660046136eb565b610ab3565b604080516001600160a01b039b8c168152602081019a909a528901979097526060880195909552608087019390935260a086019190915260c0850152841660e0840152831661010083015290911661012082015261014001610153565b6101dd610269366004613724565b610b53565b6101dd61027c366004613741565b610bc2565b6101dd61028f366004613724565b610c5f565b6101dd6102a2366004613724565b610ce2565b6102ba6102b53660046136eb565b610dbb565b60408051998a5260208a0198909852968801959095529215156060870152608086019190915260a085015260c084015260e083015261010082015261012001610153565b6101dd61030c366004613724565b61107e565b61016f61031f366004613724565b611243565b6101dd610332366004613776565b6114c6565b61034a61034536600461378f565b6114d7565b6040516101539190613853565b61012a610365366004613724565b6115cb565b61037d610378366004613724565b611921565b6040805195865260208601949094526001600160a01b03909216928401929092526060830191909152608082015260a001610153565b6101dd6103c1366004613724565b611be2565b6101dd6103d4366004613724565b611cd2565b6101dd6103e7366004613741565b611d40565b6101dd6103fa366004613776565b611dd1565b6101dd61040d366004613724565b611ddc565b6101dd610420366004613724565b611e99565b600080808080808761043688612078565b604051632a0f78fb60e21b8152600481018a90529097506001600160a01b0382169063a83de3ec9060240160a060405180830381865afa15801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a291906138b5565b90995091975091955093506104bb90508585888a6120e3565b9150509295509295509295565b6000806000806000869050600080826001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa158015610513573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053791906138f5565b915091506000836001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d91906138f5565b509050600073__$3cccfd51632b41b6eb9ac3c38f305ce843$__6378792ff18585856040518463ffffffff1660e01b81526004016105dd93929190613919565b602060405180830381865af41580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e919061392f565b9050600080866001600160a01b031663ca103d158d6040518263ffffffff1660e01b815260040161064f9190613948565b606060405180830381865afa15801561066c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610690919061395c565b909b50909250905089156106bf576106ba6106b383670e6ed27d666800006120fc565b828c612130565b6106c2565b60005b98506106ce82846121de565b9a5089156106f6576106f16106e38c8c61220a565b670e6ed27d666800006120fc565b6106f9565b60005b97505050505050505092959194509250565b6000806000806000808690506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077b919061398a565b50509150506000826001600160a01b0316633fa8fdbb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e4919061392f565b90506000836001600160a01b0316637b3f86556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084a919061392f565b846001600160a01b031663bad346206040518163ffffffff1660e01b8152600401602060405180830381865afa158015610888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ac91906139c0565b6001600160a01b03166370a082318c6040518263ffffffff1660e01b81526004016108d79190613948565b602060405180830381865afa1580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610918919061392f565b61092291906139f3565b9050600080600080876001600160a01b0316635a3b44776040518163ffffffff1660e01b815260040160a060405180830381865afa158015610968573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098c91906138b5565b5093509350935093508284876109a29190613a0a565b6109ac9190613a0a565b6109b68689613a0a565b106109e9578284876109c8888b613a0a565b6109d29190613a1d565b6109dc9190613a1d565b6109e69190613a1d565b9c505b6109f6878786868961222a565b9b50829a50610a058282612295565b9950610a1d6203f480610a188442613a1d565b612356565b610a2a906203f480613a1d565b9850505050505050505091939590929450565b600080826001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa091906138f5565b509050610aac8161236d565b9392505050565b6000806000806000806000806000808b6001600160a01b0316630448e51a8c6040518263ffffffff1660e01b8152600401610aee9190613948565b61014060405180830381865afa158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b309190613a30565b99509950995099509950995099509950995099509295989b9194979a5092959850565b600080826001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb691906138f5565b509050610aac81612392565b604051632a0f78fb60e21b81526004810182905260009084908290819081906001600160a01b0385169063a83de3ec9060240160a060405180830381865afa158015610c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3691906138b5565b5093505092509250610c538383838a610c4e8b612078565b6123a7565b98975050505050505050565b60405163329d1a8b60e01b815260016004820152600090829082906001600160a01b0383169063329d1a8b90602401602060405180830381865afa158015610cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccf919061392f565b9050610cda81612078565b949350505050565b6000808290506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4c919061398a565b505060405163329d1a8b60e01b815260048101839052919250506001600160a01b0383169063329d1a8b90602401602060405180830381865afa158015610d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cda919061392f565b6000806000806000806000806000610de6604051806040016040528060008152602001600081525090565b604051630224728d60e11b81526001600160a01b038d1690630448e51a90610e12908e90600401613948565b61014060405180830381865afa158015610e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e549190613a30565b909192939495969798509091929394959650909150905050809750819950829850839e508496505050505050896000146110705760405163035d5e7f60e31b81526001600160a01b03808e1660048301528c1660248201523090631aeaf3f890604401608060405180830381865afa158015610ed4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef8919061398a565b905050809a5081995050508b6001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610f41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f65919061398a565b5050506020820181905260405163329d1a8b60e01b8152610fe7916001600160a01b038f169163329d1a8b91610fa19160040190815260200190565b602060405180830381865afa158015610fbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe2919061392f565b612078565b816000018181525050611061888a83600001518f6001600160a01b031663b1dd61b66040518163ffffffff1660e01b8152600401602060405180830381865afa158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190613ace565b6123cc565b965061106d848b612441565b95505b509295985092959850929598565b6000808290506000816001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa1580156110c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e89190613af1565b50915050600080836001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa15801561112c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115091906138f5565b915091506000846001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015611192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b691906138f5565b509050600073__$3cccfd51632b41b6eb9ac3c38f305ce843$__6378792ff18585856040518463ffffffff1660e01b81526004016111f693929190613919565b602060405180830381865af4158015611213573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611237919061392f565b9050610c538582612565565b60008060008060008590506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa15801561128e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b2919061398a565b50505090506000826001600160a01b031663307ee3b56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131b919061392f565b90506000836001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa15801561135d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113819190613af1565b9250505082'... 21150 more characters,
  linkReferences: {
    'src/libraries/external/PoolCommons.sol': { PoolCommons: [Array] }
  },
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller\'s account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender\'s allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller\'s\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account\'s ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn\'t\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``\'s tokens,\\n     * given ``owner``\'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``\'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``\'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\"../IERC20.sol\\";\\nimport \\"../extensions/draft-IERC20Permit.sol\\";\\nimport \\"../../../utils/Address.sol\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // \'safeIncreaseAllowance\' and \'safeDecreaseAllowance\'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\"SafeERC20: approve from non-zero to non-zero allowance\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\"SafeERC20: decreased allowance below zero\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\"SafeERC20: permit did not succeed\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity\'s return data size checking mechanism, since\\n        // we\'re implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\"SafeERC20: low-level call failed\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\"SafeERC20: ERC20 operation'... 313609 more characters
  }
}
2024-01-08T15:30:26.929Z cannon:builder:contract lib ref PoolCommons 0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540
2024-01-08T15:30:26.940Z cannon:cli:rpc eth_chainId

2024-01-08T15:30:26.942Z cannon:cli:rpc eth_getCode

2024-01-08T15:30:26.943Z cannon:builder:contract performing arachnid create2
2024-01-08T15:30:26.951Z cannon:builder:contract create2 address is 0x2baB4c287cF33a6eC373CFE152FdbA299B653F7D
2024-01-08T15:30:26.955Z cannon:cli:rpc eth_chainId

2024-01-08T15:30:26.958Z cannon:cli:rpc eth_getCode

2024-01-08T15:30:27.479Z cannon:cli:rpc anvil_impersonateAccount

2024-01-08T15:30:27.481Z cannon:cli:rpc anvil_setBalance

2024-01-08T15:30:27.485Z cannon:cli:rpc eth_blockNumber

2024-01-08T15:30:27.485Z cannon:cli:rpc eth_chainId

2024-01-08T15:30:27.488Z cannon:cli:rpc eth_chainId

2024-01-08T15:30:27.493Z cannon:cli:rpc eth_estimateGas

2024-01-08T15:30:27.508Z cannon:cli:rpc eth_sendTransaction

2024-01-08T15:30:27.509Z cannon:cli:rpc 
    Transaction: 0x9a3523629c9f996461d5396ed8f8ccc79b94f6f175f351fe6f4d4227ea3c5319
    Gas used: 3421058

    Block Number: 114564393
    Block Hash: 0x87369a0677b12d1f4e10ddd4a466880307840d77c8563c6db72303068852fb5c
    Block Time: "Mon, 8 Jan 2024 15:30:25 +0000"


2024-01-08T15:30:27.510Z cannon:cli:rpc eth_chainId

2024-01-08T15:30:27.511Z cannon:cli:rpc eth_getTransactionByHash

2024-01-08T15:30:27.518Z cannon:cli:rpc eth_chainId

2024-01-08T15:30:27.519Z cannon:cli:rpc eth_getTransactionReceipt

2024-01-08T15:30:27.520Z cannon:builder:contract arachnid create2 complete {
  to: '0x4e59b44847b379578588920cA78FbF26c0B4956C',
  from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
  contractAddress: null,
  transactionIndex: 0,
  gasUsed: BigNumber { _hex: '0x343382', _isBigNumber: true },
  logsBloom: '0x
  blockHash: '0x87369a0677b12d1f4e10ddd4a466880307840d77c8563c6db72303068852fb5c',
  transactionHash: '0x9a3523629c9f996461d5396ed8f8ccc79b94f6f175f351fe6f4d4227ea3c5319',
  logs: [],
  blockNumber: 114564393,
  confirmations: 1,
  cumulativeGasUsed: BigNumber { _hex: '0x343382', _isBigNumber: true },
  effectiveGasPrice: BigNumber { _hex: '0x16edb8', _isBigNumber: true },
  status: 1,
  type: 2,
  byzantium: true
}
2024-01-08T15:30:27.521Z cannon:builder:contract contract deployed to address 0x2baB4c287cF33a6eC373CFE152FdbA299B653F7D
  ‚úî Successfully deployed PoolInfoUtils using CREATE2
  Contract Address: 0x2baB4c287cF33a6eC373CFE152FdbA299B653F7D
  Transaction Hash: 0x9a3523629c9f996461d5396ed8f8ccc79b94f6f175f351fe6f4d4227ea3c5319
  Transaction Cost: 0.000005140645961584 ETH (3,421,058 gas)

2024-01-08T15:30:27.523Z cannon:builder:runtime resolve artifact PoolInfoUtils
2024-01-08T15:30:27.523Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:30:35.333Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object],
      [Object], [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/PoolInfoUtils.sol': 'PoolInfoUtils' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol': {
      keccak256: '0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol': {
      keccak256: '0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol': {
      keccak256: '0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Address.sol': {
      keccak256: '0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Multicall.sol': {
      keccak256: '0x35e30a35e23f856cbcee3558b7efdd83f6017a8f1b419710645143d98e892463',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathUD60x18.sol': {
      keccak256: '0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/PoolInfoUtils.sol': {
      keccak256: '0xb4bfd45c311a12b89725305a9295ccde8210a762540fa15c077a4230046587a9',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/PoolCommons.sol': {
      keccak256: '0x1dd40766b71468dade905c41a90783dad18761fe998f1a85acd79e8a0bb32ed3',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:30:35.334Z cannon:cli:foundry evm version paris
2024-01-08T15:30:35.345Z cannon:builder:runtime reported contract artifact PoolInfoUtils {
  contractName: 'PoolInfoUtils',
  sourceName: 'src/PoolInfoUtils.sol',
  abi: [
    {
      type: 'function',
      name: 'auctionInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'auctionStatus',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'availableQuoteTokenAmount',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'borrowFeeRate',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'borrowerInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'bucketInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'depositFeeRate',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'hpb',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'hpbIndex',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'htp',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'indexToPrice',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'pure'
    },
    {
      type: 'function',
      name: 'lenderInterestMargin',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'lpToCollateral',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'lpToQuoteTokens',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'lup',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'lupIndex',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'multicall',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'poolLoansInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'poolPricesInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'poolReservesInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'poolUtilizationInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'priceToIndex',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'pure'
    },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'BucketPriceOutOfBounds', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__CeilOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__DivOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'PRBMath__MulDivOverflow', inputs: [Array] }
  ],
  bytecode: '0x608060405234801561001057600080fd5b50613cd6806100206000396000f3fe608060405234801561001057600080fd5b50600436106101125760003560e01c8063192d388e146101175780631aeaf3f81461015c5780631d3d68b61461018f5780631f2694e9146101ca5780632857299f146101eb5780633b00cf7a1461025b57806343dfac7d1461026e5780636abccba1146102815780636efeac9814610294578063790ba5fe146102a757806393e61c10146102fe57806396a43dca146103115780639b7fe21414610324578063ac9650d814610337578063ad685b3c14610357578063b3f847271461036a578063c367bc2f146103b3578063d96f3638146103c6578063dbac1724146103d9578063e368c16a146103ec578063e7e01bb1146103ff578063f5e7dba014610412575b600080fd5b61012a6101253660046136bf565b610425565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0015b60405180910390f35b61016f61016a3660046136eb565b6104c8565b604080519485526020850193909352918301526060820152608001610153565b6101a261019d366004613724565b61070b565b604080519586526020860194909452928401919091526060830152608082015260a001610153565b6101dd6101d8366004613724565b610a3d565b604051908152602001610153565b6101fe6101f93660046136eb565b610ab3565b604080516001600160a01b039b8c168152602081019a909a528901979097526060880195909552608087019390935260a086019190915260c0850152841660e0840152831661010083015290911661012082015261014001610153565b6101dd610269366004613724565b610b53565b6101dd61027c366004613741565b610bc2565b6101dd61028f366004613724565b610c5f565b6101dd6102a2366004613724565b610ce2565b6102ba6102b53660046136eb565b610dbb565b60408051998a5260208a0198909852968801959095529215156060870152608086019190915260a085015260c084015260e083015261010082015261012001610153565b6101dd61030c366004613724565b61107e565b61016f61031f366004613724565b611243565b6101dd610332366004613776565b6114c6565b61034a61034536600461378f565b6114d7565b6040516101539190613853565b61012a610365366004613724565b6115cb565b61037d610378366004613724565b611921565b6040805195865260208601949094526001600160a01b03909216928401929092526060830191909152608082015260a001610153565b6101dd6103c1366004613724565b611be2565b6101dd6103d4366004613724565b611cd2565b6101dd6103e7366004613741565b611d40565b6101dd6103fa366004613776565b611dd1565b6101dd61040d366004613724565b611ddc565b6101dd610420366004613724565b611e99565b600080808080808761043688612078565b604051632a0f78fb60e21b8152600481018a90529097506001600160a01b0382169063a83de3ec9060240160a060405180830381865afa15801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a291906138b5565b90995091975091955093506104bb90508585888a6120e3565b9150509295509295509295565b6000806000806000869050600080826001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa158015610513573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053791906138f5565b915091506000836001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d91906138f5565b509050600073__$3cccfd51632b41b6eb9ac3c38f305ce843$__6378792ff18585856040518463ffffffff1660e01b81526004016105dd93929190613919565b602060405180830381865af41580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e919061392f565b9050600080866001600160a01b031663ca103d158d6040518263ffffffff1660e01b815260040161064f9190613948565b606060405180830381865afa15801561066c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610690919061395c565b909b50909250905089156106bf576106ba6106b383670e6ed27d666800006120fc565b828c612130565b6106c2565b60005b98506106ce82846121de565b9a5089156106f6576106f16106e38c8c61220a565b670e6ed27d666800006120fc565b6106f9565b60005b97505050505050505092959194509250565b6000806000806000808690506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077b919061398a565b50509150506000826001600160a01b0316633fa8fdbb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e4919061392f565b90506000836001600160a01b0316637b3f86556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084a919061392f565b846001600160a01b031663bad346206040518163ffffffff1660e01b8152600401602060405180830381865afa158015610888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ac91906139c0565b6001600160a01b03166370a082318c6040518263ffffffff1660e01b81526004016108d79190613948565b602060405180830381865afa1580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610918919061392f565b61092291906139f3565b9050600080600080876001600160a01b0316635a3b44776040518163ffffffff1660e01b815260040160a060405180830381865afa158015610968573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098c91906138b5565b5093509350935093508284876109a29190613a0a565b6109ac9190613a0a565b6109b68689613a0a565b106109e9578284876109c8888b613a0a565b6109d29190613a1d565b6109dc9190613a1d565b6109e69190613a1d565b9c505b6109f6878786868961222a565b9b50829a50610a058282612295565b9950610a1d6203f480610a188442613a1d565b612356565b610a2a906203f480613a1d565b9850505050505050505091939590929450565b600080826001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa091906138f5565b509050610aac8161236d565b9392505050565b6000806000806000806000806000808b6001600160a01b0316630448e51a8c6040518263ffffffff1660e01b8152600401610aee9190613948565b61014060405180830381865afa158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b309190613a30565b99509950995099509950995099509950995099509295989b9194979a5092959850565b600080826001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb691906138f5565b509050610aac81612392565b604051632a0f78fb60e21b81526004810182905260009084908290819081906001600160a01b0385169063a83de3ec9060240160a060405180830381865afa158015610c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3691906138b5565b5093505092509250610c538383838a610c4e8b612078565b6123a7565b98975050505050505050565b60405163329d1a8b60e01b815260016004820152600090829082906001600160a01b0383169063329d1a8b90602401602060405180830381865afa158015610cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccf919061392f565b9050610cda81612078565b949350505050565b6000808290506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4c919061398a565b505060405163329d1a8b60e01b815260048101839052919250506001600160a01b0383169063329d1a8b90602401602060405180830381865afa158015610d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cda919061392f565b6000806000806000806000806000610de6604051806040016040528060008152602001600081525090565b604051630224728d60e11b81526001600160a01b038d1690630448e51a90610e12908e90600401613948565b61014060405180830381865afa158015610e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e549190613a30565b909192939495969798509091929394959650909150905050809750819950829850839e508496505050505050896000146110705760405163035d5e7f60e31b81526001600160a01b03808e1660048301528c1660248201523090631aeaf3f890604401608060405180830381865afa158015610ed4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef8919061398a565b905050809a5081995050508b6001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610f41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f65919061398a565b5050506020820181905260405163329d1a8b60e01b8152610fe7916001600160a01b038f169163329d1a8b91610fa19160040190815260200190565b602060405180830381865afa158015610fbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe2919061392f565b612078565b816000018181525050611061888a83600001518f6001600160a01b031663b1dd61b66040518163ffffffff1660e01b8152600401602060405180830381865afa158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190613ace565b6123cc565b965061106d848b612441565b95505b509295985092959850929598565b6000808290506000816001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa1580156110c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e89190613af1565b50915050600080836001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa15801561112c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115091906138f5565b915091506000846001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015611192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b691906138f5565b509050600073__$3cccfd51632b41b6eb9ac3c38f305ce843$__6378792ff18585856040518463ffffffff1660e01b81526004016111f693929190613919565b602060405180830381865af4158015611213573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611237919061392f565b9050610c538582612565565b60008060008060008590506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa15801561128e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b2919061398a565b50505090506000826001600160a01b031663307ee3b56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131b919061392f565b90506000836001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa15801561135d573d6000803e3d6000fd5b505050506040513d60'... 21214 more characters,
  deployedBytecode: '0x608060405234801561001057600080fd5b50600436106101125760003560e01c8063192d388e146101175780631aeaf3f81461015c5780631d3d68b61461018f5780631f2694e9146101ca5780632857299f146101eb5780633b00cf7a1461025b57806343dfac7d1461026e5780636abccba1146102815780636efeac9814610294578063790ba5fe146102a757806393e61c10146102fe57806396a43dca146103115780639b7fe21414610324578063ac9650d814610337578063ad685b3c14610357578063b3f847271461036a578063c367bc2f146103b3578063d96f3638146103c6578063dbac1724146103d9578063e368c16a146103ec578063e7e01bb1146103ff578063f5e7dba014610412575b600080fd5b61012a6101253660046136bf565b610425565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0015b60405180910390f35b61016f61016a3660046136eb565b6104c8565b604080519485526020850193909352918301526060820152608001610153565b6101a261019d366004613724565b61070b565b604080519586526020860194909452928401919091526060830152608082015260a001610153565b6101dd6101d8366004613724565b610a3d565b604051908152602001610153565b6101fe6101f93660046136eb565b610ab3565b604080516001600160a01b039b8c168152602081019a909a528901979097526060880195909552608087019390935260a086019190915260c0850152841660e0840152831661010083015290911661012082015261014001610153565b6101dd610269366004613724565b610b53565b6101dd61027c366004613741565b610bc2565b6101dd61028f366004613724565b610c5f565b6101dd6102a2366004613724565b610ce2565b6102ba6102b53660046136eb565b610dbb565b60408051998a5260208a0198909852968801959095529215156060870152608086019190915260a085015260c084015260e083015261010082015261012001610153565b6101dd61030c366004613724565b61107e565b61016f61031f366004613724565b611243565b6101dd610332366004613776565b6114c6565b61034a61034536600461378f565b6114d7565b6040516101539190613853565b61012a610365366004613724565b6115cb565b61037d610378366004613724565b611921565b6040805195865260208601949094526001600160a01b03909216928401929092526060830191909152608082015260a001610153565b6101dd6103c1366004613724565b611be2565b6101dd6103d4366004613724565b611cd2565b6101dd6103e7366004613741565b611d40565b6101dd6103fa366004613776565b611dd1565b6101dd61040d366004613724565b611ddc565b6101dd610420366004613724565b611e99565b600080808080808761043688612078565b604051632a0f78fb60e21b8152600481018a90529097506001600160a01b0382169063a83de3ec9060240160a060405180830381865afa15801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a291906138b5565b90995091975091955093506104bb90508585888a6120e3565b9150509295509295509295565b6000806000806000869050600080826001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa158015610513573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053791906138f5565b915091506000836001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d91906138f5565b509050600073__$3cccfd51632b41b6eb9ac3c38f305ce843$__6378792ff18585856040518463ffffffff1660e01b81526004016105dd93929190613919565b602060405180830381865af41580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e919061392f565b9050600080866001600160a01b031663ca103d158d6040518263ffffffff1660e01b815260040161064f9190613948565b606060405180830381865afa15801561066c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610690919061395c565b909b50909250905089156106bf576106ba6106b383670e6ed27d666800006120fc565b828c612130565b6106c2565b60005b98506106ce82846121de565b9a5089156106f6576106f16106e38c8c61220a565b670e6ed27d666800006120fc565b6106f9565b60005b97505050505050505092959194509250565b6000806000806000808690506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077b919061398a565b50509150506000826001600160a01b0316633fa8fdbb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e4919061392f565b90506000836001600160a01b0316637b3f86556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084a919061392f565b846001600160a01b031663bad346206040518163ffffffff1660e01b8152600401602060405180830381865afa158015610888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ac91906139c0565b6001600160a01b03166370a082318c6040518263ffffffff1660e01b81526004016108d79190613948565b602060405180830381865afa1580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610918919061392f565b61092291906139f3565b9050600080600080876001600160a01b0316635a3b44776040518163ffffffff1660e01b815260040160a060405180830381865afa158015610968573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098c91906138b5565b5093509350935093508284876109a29190613a0a565b6109ac9190613a0a565b6109b68689613a0a565b106109e9578284876109c8888b613a0a565b6109d29190613a1d565b6109dc9190613a1d565b6109e69190613a1d565b9c505b6109f6878786868961222a565b9b50829a50610a058282612295565b9950610a1d6203f480610a188442613a1d565b612356565b610a2a906203f480613a1d565b9850505050505050505091939590929450565b600080826001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa091906138f5565b509050610aac8161236d565b9392505050565b6000806000806000806000806000808b6001600160a01b0316630448e51a8c6040518263ffffffff1660e01b8152600401610aee9190613948565b61014060405180830381865afa158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b309190613a30565b99509950995099509950995099509950995099509295989b9194979a5092959850565b600080826001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb691906138f5565b509050610aac81612392565b604051632a0f78fb60e21b81526004810182905260009084908290819081906001600160a01b0385169063a83de3ec9060240160a060405180830381865afa158015610c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3691906138b5565b5093505092509250610c538383838a610c4e8b612078565b6123a7565b98975050505050505050565b60405163329d1a8b60e01b815260016004820152600090829082906001600160a01b0383169063329d1a8b90602401602060405180830381865afa158015610cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccf919061392f565b9050610cda81612078565b949350505050565b6000808290506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4c919061398a565b505060405163329d1a8b60e01b815260048101839052919250506001600160a01b0383169063329d1a8b90602401602060405180830381865afa158015610d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cda919061392f565b6000806000806000806000806000610de6604051806040016040528060008152602001600081525090565b604051630224728d60e11b81526001600160a01b038d1690630448e51a90610e12908e90600401613948565b61014060405180830381865afa158015610e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e549190613a30565b909192939495969798509091929394959650909150905050809750819950829850839e508496505050505050896000146110705760405163035d5e7f60e31b81526001600160a01b03808e1660048301528c1660248201523090631aeaf3f890604401608060405180830381865afa158015610ed4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef8919061398a565b905050809a5081995050508b6001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610f41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f65919061398a565b5050506020820181905260405163329d1a8b60e01b8152610fe7916001600160a01b038f169163329d1a8b91610fa19160040190815260200190565b602060405180830381865afa158015610fbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe2919061392f565b612078565b816000018181525050611061888a83600001518f6001600160a01b031663b1dd61b66040518163ffffffff1660e01b8152600401602060405180830381865afa158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190613ace565b6123cc565b965061106d848b612441565b95505b509295985092959850929598565b6000808290506000816001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa1580156110c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e89190613af1565b50915050600080836001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa15801561112c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115091906138f5565b915091506000846001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015611192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b691906138f5565b509050600073__$3cccfd51632b41b6eb9ac3c38f305ce843$__6378792ff18585856040518463ffffffff1660e01b81526004016111f693929190613919565b602060405180830381865af4158015611213573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611237919061392f565b9050610c538582612565565b60008060008060008590506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa15801561128e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b2919061398a565b50505090506000826001600160a01b031663307ee3b56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131b919061392f565b90506000836001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa15801561135d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113819190613af1565b9250505082'... 21150 more characters,
  linkReferences: {
    'src/libraries/external/PoolCommons.sol': { PoolCommons: [Array] }
  },
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller\'s account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender\'s allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller\'s\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account\'s ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn\'t\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``\'s tokens,\\n     * given ``owner``\'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``\'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``\'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\"../IERC20.sol\\";\\nimport \\"../extensions/draft-IERC20Permit.sol\\";\\nimport \\"../../../utils/Address.sol\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // \'safeIncreaseAllowance\' and \'safeDecreaseAllowance\'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\"SafeERC20: approve from non-zero to non-zero allowance\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\"SafeERC20: decreased allowance below zero\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\"SafeERC20: permit did not succeed\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity\'s return data size checking mechanism, since\\n        // we\'re implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\"SafeERC20: low-level call failed\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\"SafeERC20: ERC20 operation'... 313609 more characters
  }
}
2024-01-08T15:30:35.347Z cannon:builder:contract lib ref PoolCommons 0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540
2024-01-08T15:30:35.347Z cannon:verbose:builder:definition creating hash of {"bytecode":"0x608060405234801561001057600080fd5b50613cd6806100206000396000f3fe608060405234801561001057600080fd5b50600436106101125760003560e01c8063192d388e146101175780631aeaf3f81461015c5780631d3d68b61461018f5780631f2694e9146101ca5780632857299f146101eb5780633b00cf7a1461025b57806343dfac7d1461026e5780636abccba1146102815780636efeac9814610294578063790ba5fe146102a757806393e61c10146102fe57806396a43dca146103115780639b7fe21414610324578063ac9650d814610337578063ad685b3c14610357578063b3f847271461036a578063c367bc2f146103b3578063d96f3638146103c6578063dbac1724146103d9578063e368c16a146103ec578063e7e01bb1146103ff578063f5e7dba014610412575b600080fd5b61012a6101253660046136bf565b610425565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0015b60405180910390f35b61016f61016a3660046136eb565b6104c8565b604080519485526020850193909352918301526060820152608001610153565b6101a261019d366004613724565b61070b565b604080519586526020860194909452928401919091526060830152608082015260a001610153565b6101dd6101d8366004613724565b610a3d565b604051908152602001610153565b6101fe6101f93660046136eb565b610ab3565b604080516001600160a01b039b8c168152602081019a909a528901979097526060880195909552608087019390935260a086019190915260c0850152841660e0840152831661010083015290911661012082015261014001610153565b6101dd610269366004613724565b610b53565b6101dd61027c366004613741565b610bc2565b6101dd61028f366004613724565b610c5f565b6101dd6102a2366004613724565b610ce2565b6102ba6102b53660046136eb565b610dbb565b60408051998a5260208a0198909852968801959095529215156060870152608086019190915260a085015260c084015260e083015261010082015261012001610153565b6101dd61030c366004613724565b61107e565b61016f61031f366004613724565b611243565b6101dd610332366004613776565b6114c6565b61034a61034536600461378f565b6114d7565b6040516101539190613853565b61012a610365366004613724565b6115cb565b61037d610378366004613724565b611921565b6040805195865260208601949094526001600160a01b03909216928401929092526060830191909152608082015260a001610153565b6101dd6103c1366004613724565b611be2565b6101dd6103d4366004613724565b611cd2565b6101dd6103e7366004613741565b611d40565b6101dd6103fa366004613776565b611dd1565b6101dd61040d366004613724565b611ddc565b6101dd610420366004613724565b611e99565b600080808080808761043688612078565b604051632a0f78fb60e21b8152600481018a90529097506001600160a01b0382169063a83de3ec9060240160a060405180830381865afa15801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a291906138b5565b90995091975091955093506104bb90508585888a6120e3565b9150509295509295509295565b6000806000806000869050600080826001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa158015610513573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053791906138f5565b915091506000836001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d91906138f5565b509050600073e77bfEeB83CD09bD9b598a90f7Ce7faE02c715406378792ff18585856040518463ffffffff1660e01b81526004016105dd93929190613919565b602060405180830381865af41580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e919061392f565b9050600080866001600160a01b031663ca103d158d6040518263ffffffff1660e01b815260040161064f9190613948565b606060405180830381865afa15801561066c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610690919061395c565b909b50909250905089156106bf576106ba6106b383670e6ed27d666800006120fc565b828c612130565b6106c2565b60005b98506106ce82846121de565b9a5089156106f6576106f16106e38c8c61220a565b670e6ed27d666800006120fc565b6106f9565b60005b97505050505050505092959194509250565b6000806000806000808690506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077b919061398a565b50509150506000826001600160a01b0316633fa8fdbb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e4919061392f565b90506000836001600160a01b0316637b3f86556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084a919061392f565b846001600160a01b031663bad346206040518163ffffffff1660e01b8152600401602060405180830381865afa158015610888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ac91906139c0565b6001600160a01b03166370a082318c6040518263ffffffff1660e01b81526004016108d79190613948565b602060405180830381865afa1580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610918919061392f565b61092291906139f3565b9050600080600080876001600160a01b0316635a3b44776040518163ffffffff1660e01b815260040160a060405180830381865afa158015610968573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098c91906138b5565b5093509350935093508284876109a29190613a0a565b6109ac9190613a0a565b6109b68689613a0a565b106109e9578284876109c8888b613a0a565b6109d29190613a1d565b6109dc9190613a1d565b6109e69190613a1d565b9c505b6109f6878786868961222a565b9b50829a50610a058282612295565b9950610a1d6203f480610a188442613a1d565b612356565b610a2a906203f480613a1d565b9850505050505050505091939590929450565b600080826001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa091906138f5565b509050610aac8161236d565b9392505050565b6000806000806000806000806000808b6001600160a01b0316630448e51a8c6040518263ffffffff1660e01b8152600401610aee9190613948565b61014060405180830381865afa158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b309190613a30565b99509950995099509950995099509950995099509295989b9194979a5092959850565b600080826001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015610b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb691906138f5565b509050610aac81612392565b604051632a0f78fb60e21b81526004810182905260009084908290819081906001600160a01b0385169063a83de3ec9060240160a060405180830381865afa158015610c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3691906138b5565b5093505092509250610c538383838a610c4e8b612078565b6123a7565b98975050505050505050565b60405163329d1a8b60e01b815260016004820152600090829082906001600160a01b0383169063329d1a8b90602401602060405180830381865afa158015610cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccf919061392f565b9050610cda81612078565b949350505050565b6000808290506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4c919061398a565b505060405163329d1a8b60e01b815260048101839052919250506001600160a01b0383169063329d1a8b90602401602060405180830381865afa158015610d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cda919061392f565b6000806000806000806000806000610de6604051806040016040528060008152602001600081525090565b604051630224728d60e11b81526001600160a01b038d1690630448e51a90610e12908e90600401613948565b61014060405180830381865afa158015610e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e549190613a30565b909192939495969798509091929394959650909150905050809750819950829850839e508496505050505050896000146110705760405163035d5e7f60e31b81526001600160a01b03808e1660048301528c1660248201523090631aeaf3f890604401608060405180830381865afa158015610ed4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef8919061398a565b905050809a5081995050508b6001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015610f41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f65919061398a565b5050506020820181905260405163329d1a8b60e01b8152610fe7916001600160a01b038f169163329d1a8b91610fa19160040190815260200190565b602060405180830381865afa158015610fbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe2919061392f565b612078565b816000018181525050611061888a83600001518f6001600160a01b031663b1dd61b66040518163ffffffff1660e01b8152600401602060405180830381865afa158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190613ace565b6123cc565b965061106d848b612441565b95505b509295985092959850929598565b6000808290506000816001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa1580156110c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e89190613af1565b50915050600080836001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa15801561112c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115091906138f5565b915091506000846001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015611192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b691906138f5565b509050600073e77bfEeB83CD09bD9b598a90f7Ce7faE02c715406378792ff18585856040518463ffffffff1660e01b81526004016111f693929190613919565b602060405180830381865af4158015611213573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611237919061392f565b9050610c538582612565565b60008060008060008590506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa15801561128e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b2919061398a565b50505090506000826001600160a01b031663307ee3b56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131b919061392f565b90506000836001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa15801561135d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113819190613af1565b925050508260001461139a576113978382612574565b97505b60405163329d1a8b60e01b8152600481018490526000906113ce906001600160a01b0387169063329d1a8b90602401610fa1565b90506113db84848361259f565b9750846001600160a01b0316633a0c8f076040518163ffffffff1660e01b8152600401602060405180830381865afa15801561141b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143f919061392f565b9650600080866001600160a01b031663e512c0616040518163ffffffff1660e01b8152600401608060405180830381865afa158015611482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a6919061398a565b5050915091506114b682826125eb565b9750505050505050509193509193565b60006114d18261260d565b92915050565b6060816001600160401b038111156114f1576114f1613b28565b60405190808252806020026020018201604052801561152457816020015b606081526020019060019003908161150f5790505b50905060005b828110156115c4576115943085858481811061154857611548613b3e565b905060200281019061155a9190613b54565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506126cf92505050565b8282815181106115a6576115a6613b3e565b602002602001018190525080806115bc90613ba1565b91505061152a565b5092915050565b60008060008060008060008790506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015611619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163d919061398a565b505060405163329d1a8b60e01b815260016004820152919250506001600160a01b0383169063329d1a8b90602401602060405180830381865afa158015611688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ac919061392f565b96506116b787612078565b97506000826001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa1580156116f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171d9190613af1565b50915050600080846001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa158015611761573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178591906138f5565b915091506000856001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa1580156117c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117eb91906138f5565b509050600073e77bfEeB83CD09bD9b598a90f7Ce7faE02c715406378792ff18585856040518463ffffffff1660e01b815260040161182b93929190613919565b602060405180830381865af4158015611848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186c919061392f565b90506118788582612565565b9a5064173eb4c80a8b101561188f57611cdc611898565b6118988b61260d565b60405163329d1a8b60e01b815260048101889052909a506001600160a01b0388169063329d1a8b90602401602060405180830381865afa1580156118e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611904919061392f565b975061190f88612078565b98505050505050505091939550919395565b600080600080600080869050806001600160a01b0316633fa8fdbb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561196b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198f919061392f565b9550806001600160a01b0316633884cd886040518163ffffffff1660e01b8152600401606060405180830381865afa1580156119cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f39190613af1565b90508096508195505050600080826001600160a01b031663063d829f6040518163ffffffff1660e01b81526004016040805180830381865afa158015611a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6191906138f5565b915091506000836001600160a01b031662cdcefb6040518163ffffffff1660e01b81526004016040805180830381865afa158015611aa3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac791906138f5565b506040516378792ff160e01b815290915073e77bfEeB83CD09bD9b598a90f7Ce7faE02c71540906378792ff190611b0690869086908690600401613919565b602060405180830381865af4158015611b23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b47919061392f565b955073e77bfEeB83CD09bD9b598a90f7Ce7faE02c71540630cbcb4cd82611b6e8542613a1d565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865af4158015611baf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd3919061392f565b94505050505091939590929450565b6000808290506000816001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa158015611c28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4c919061398a565b505060405163329d1a8b60e01b8152600481018390529192506000916001600160a01b038516915063329d1a8b90602401602060405180830381865afa158015611c9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cbe919061392f565b9050611cc981612078565b95945050505050565b60405163329d1a8b60e01b81526001600482015260009082906001600160a01b0382169063329d1a8b90602401602060405180830381865afa158015611d1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aac919061392f565b604051632a0f78fb60e21b81526004810182905260009084908290819081906001600160a01b0385169063a83de3ec9060240160a060405180830381865afa158015611d90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db491906138b5565b5093505092509250610c538284838a611dcc8b612078565b6126f4565b60006114d182612078565b6000808290506000816001600160a01b0316633a0c8f076040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e46919061392f565b6040516376fb7efb60e11b81526004810182905290915073e77bfEeB83CD09bD9b598a90f7Ce7faE02c715409063edf6fdf690602401602060405180830381865af4158015610d97573d6000803e3d6000fd5b600080829050600080826001600160a01b0316635a3b44776040518163ffffffff1660e01b815260040160a060405180830381865afa158015611ee0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0491906138b5565b5050509150915060008183611f199190613a0a565b90506000846001600160a01b0316637b3f86556040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7f919061392f565b856001600160a01b031663bad346206040518163ffffffff1660e01b8152600401602060405180830381865afa158015611fbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fe191906139c0565b6001600160a01b03166370a08231896040518263ffffffff1660e01b815260040161200c9190613948565b602060405180830381865afa158015612029573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061204d919061392f565b61205791906139f3565b90508181111561206e5761206b8282613a1d565b95505b5050505050919050565b6000806120878361103c613bba565b9050610c9f1981128061209b575061103c81135b156120b957604051637edf443b60e11b815260040160405180910390fd5b610aac6120de6120c883612719565b6120d9670df27a2cdf4480006127a9565b61288d565b61294f565b6000611cc9858585670de0b6b3a76400008660016129eb565b6000670de0b6b3a7640000612112600282613bf0565b61211c84866139f3565b6121269190613a0a565b610aac9190613bf0565b600080806000198587098587029250828110838203039150508060000361216a5783828161216057612160613bda565b0492505050610aac565b80841161217657600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000670de0b6b3a76400006001816121f685876139f3565b6122009190613a0a565b6121269190613a1d565b600081612218600282613bf0565b61211c670de0b6b3a7640000866139f3565b6000806122378486613a0a565b90508083111561228b5761224b8388613a0a565b915061226e8282612264670de0b6b3e2feca008a6120fc565b610a189190613a0a565b6122789083613a1d565b915061228882610a188386613a1d565b91505b5095945050505050565b600082156114d15760006122a98442613a1d565b905060006122b9610e1083613bf0565b676765c793fa10079d601b1b901c905060006122f86b0331adfc6b81cf95c39de3b1603c6122e9610e1087613c04565b6122f39190613bf0565b612a63565b90506000851561231c57612317676765c793fa10079d601b1b8761220a565b61231f565b60005b9050676765c793fa10079d601b1b6123378484612adb565b61234190836139f3565b61234b9190613bf0565b979650505050505050565b6000818311156123665781610aac565b5090919050565b60006114d1612385836802d1a51c7e0050000061220a565b6601c6bf52634000612af4565b60006114d182683b5c2d7a70fcbc000061220a565b60006123b8858786868660006129eb565b905083811115611cc9575091949350505050565b600064173eb4c80a831480156123e157508415155b156123ee57506000610cda565b60001960ff83160161241a57670de0b6b3a764000061240d8186613bf0565b61241791906139f3565b93505b61242c670e6ed27d66680000866120fc565b61243685856120fc565b101595945050505050565b6000806124726124518442613a1d565b61246390670de0b6b3a76400006139f3565b680340aad21b3b70000061220a565b9050600068068155a43676e000008210156124c65761249f670de0b6b3a763ffff196120d9601485613bf0565b90506124b3856124ae8361294f565b6120fc565b6124bf906101006139f3565b925061255d565b682d89577d7d4020000082101561251d57612503670de0b6b3a763ffff1960786124f968068155a43676e0000086613a1d565b6120d99190613bf0565b9050612512856124ae8361294f565b6124bf9060046139f3565b61253f670de0b6b3a763ffff19603c6124f9682d89577d7d4020000086613a1d565b90506010612550866124ae8461294f565b61255a9190613bf0565b92505b505092915050565b6000610aac6106e384846120fc565b600081156114d157610aac6125918461258c85612b04565b61220a565b678ac7230489e8000061220a565b6000836000036125b85750670de0b6b3a7640000610aac565b64173eb4c80a82036125cc57506000610aac565b610cda6125d984846120fc565b61258c670e6ed27d66680000876120fc565b60008160000361260357670de0b6b3a7640000610aac565b610aac838361220a565b600064173eb4c80a82108061262d57506b033f4a75fb6ff29166751a4b82115b1561264b57604051635665ba4560e11b815260040160405180910390fd5b600061266f612659846127a9565b61266a670df27a2cdf4480006127a9565b612b18565b9050600061267c82612bde565b905060008212801561269e57506706f05b59d3b2000061269c8383613bba565b135b156126b957610cda670de0b6b3a7640000820561103d613bba565b610cda670de0b6b3a7640000820561103c613bba565b6060610aac8383604051806060016040528060278152602001613c7a60279139612c50565b600061270586868686866000612cbe565b905085811115611cc9575093949350505050565b60007809392ee8e921d5d073aff322e62439fcf32d7f344649470f8f1982121561275e5760405163e608e18b60e01b8152600481018390526024015b60405180910390fd5b7809392ee8e921d5d073aff322e62439fcf32d7f344649470f9082131561279b576040516371f72a3160e01b815260048101839052602401612755565b50670de0b6b3a76400000290565b60008082136127ce5760405163309fa7dd60e11b815260048101839052602401612755565b6000670de0b6b3a764000083126127e757506001612800565b6000199050826a0c097ce7bc90715b34b9f160241b0492505b6000612815670de0b6b3a76400008505612d28565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff19810161283f57505002919050565b6706f05b59d3b200005b600081131561288457670de0b6b3a7640000828002059150671bc16d674ec80000821261287c579384019360019190911d905b60011d612849565b50505002919050565b6000600160ff1b8314806128a45750600160ff1b82145b156128c257604051630d01a11b60e21b815260040160405180910390fd5b600080600085126128d357846128d8565b846000035b9150600084126128e857836128ed565b836000035b905060006128fb8383612e06565b90506001600160ff1b038111156129285760405163bf79e8d960e01b815260048101829052602401612755565b6000198087139086138082186001146129415782610c53565b505060000395945050505050565b6000808212156129a25768033dd1780914b971141982121561297357506000919050565b61297f8260000361294f565b6a0c097ce7bc90715b34b9f160241b8161299b5761299b613bda565b0592915050565b680a688906bd8b00000082126129ce5760405163e69458f960e01b815260048101839052602401612755565b670de0b6b3a7640000604083901b04610aac81612ecc565b919050565b6000841580156129f9575086155b15612a05575082612a59565b85600003612a14575082612a59565b612a56612a2184896139f3565b612a33670de0b6b3a7640000886139f3565b612a3d9190613a0a565b85612a50670de0b6b3a76400008a6139f3565b8561355e565b90505b9695505050505050565b6000612a70600283613c04565b600003612a8857676765c793fa10079d601b1b612a8a565b825b9050612a97600283613bf0565b91505b81156114d157612aaa8384612adb565b9250612ab7600283613c04565b15612ac957612ac68184612adb565b90505b612ad4600283613bf0565b9150612a9a565b6000676765c793fa10079d601b1b612112600282613bf0565b6000818310156123665781610aac565b60006114d1670de0b6b3a7640000836139f3565b6000600160ff1b831480612b2f5750600160ff1b82145b15612b4d5760405163b3c754a360e01b815260040160405180910390fd5b60008060008512612b5e5784612b63565b846000035b915060008412612b735783612b78565b836000035b90506000612b8f83670de0b6b3a7640000846135af565b90506001600160ff1b03811115612bbc57604051637cb4bef560e01b815260048101829052602401612755565b600019808713908613808218600114612bd55782610c53565b610c5383613c2e565b6000670afdc366fbc00000600160ff1b03821315612c1257604051635399a28560e11b815260048101839052602401612755565b670de0b6b3a764000082076000819003612c2e57829150612c4a565b80830391506000831315612c4a57670de0b6b3a7640000820191505b50919050565b6060600080856001600160a01b031685604051612c6d9190613c4a565b600060405180830381855af49150503d8060008114612ca8576040519150601f19603f3d011682016040523d82523d6000602084013e612cad565b606091505b5091509150612a5986838387613609565b600084158015612ccc575086155b15612ce257612cdb848461220a565b9050612a59565b85600003612cf457612cdb848461220a565b612a56612d0184896139f3565b612d13670de0b6b3a7640000886139f3565b612d1d9190613a0a565b85612a50868a6139f3565b6000600160801b8210612d4857608091821c91612d459082613a0a565b90505b600160401b8210612d6657604091821c91612d639082613a0a565b90505b600160201b8210612d8457602091821c91612d819082613a0a565b90505b620100008210612da157601091821c91612d9e9082613a0a565b90505b6101008210612dbd57600891821c91612dba9082613a0a565b90505b60108210612dd857600491821c91612dd59082613a0a565b90505b60048210612df357600291821c91612df09082613a0a565b90505b600282106129e6576114d1600182613a0a565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110612e4a5760405163698d9a0160e11b815260048101829052602401612755565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff8211905082600003612e885780670de0b6b3a76400008504019450505050506114d1565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615612eec5768016a09e667f3bcc9090260401c5b6001603e1b821615612f07576801306fe0a31b7152df0260401c5b6001603d1b821615612f22576801172b83c7d517adce0260401c5b6001603c1b821615612f3d5768010b5586cf9890f62a0260401c5b6001603b1b821615612f58576801059b0d31585743ae0260401c5b6001603a1b821615612f7357680102c9a3e778060ee70260401c5b600160391b821615612f8e5768010163da9fb33356d80260401c5b600160381b821615612fa957680100b1afa5abcbed610260401c5b600160371b821615612fc45768010058c86da1c09ea20260401c5b600160361b821615612fdf576801002c605e2e8cec500260401c5b600160351b821615612ffa57680100162f3904051fa10260401c5b600160341b821615613015576801000b175effdc76ba0260401c5b600160331b82161561303057680100058ba01fb9f96d0260401c5b600160321b82161561304b5768010002c5cc37da94920260401c5b600160311b821615613066576801000162e525ee05470260401c5b600160301b8216156130815768010000b17255775c040260401c5b6001602f1b82161561309c576801000058b91b5bc9ae0260401c5b6001602e1b8216156130b757680100002c5c89d5ec6d0260401c5b6001602d1b8216156130d25768010000162e43f4f8310260401c5b6001602c1b8216156130ed57680100000b1721bcfc9a0260401c5b6001602b1b8216156131085768010000058b90cf1e6e0260401c5b6001602a1b821615613123576801000002c5c863b73f0260401c5b600160291b82161561313e57680100000162e430e5a20260401c5b600160281b821615613159576801000000b1721835510260401c5b600160271b82161561317457680100000058b90c0b490260401c5b600160261b82161561318f5768010000002c5c8601cc0260401c5b600160251b8216156131aa576801000000162e42fff00260401c5b600160241b8216156131c55768010000000b17217fbb0260401c5b600160231b8216156131e0576801000000058b90bfce0260401c5b600160221b8216156131fb57680100000002c5c85fe30260401c5b600160211b8216156132165768010000000162e42ff10260401c5b600160201b82161561323157680100000000b17217f80260401c5b638000000082161561324c5768010000000058b90bfc0260401c5b6340000000821615613267576801000000002c5c85fe0260401c5b632000000082161561328257680100000000162e42ff0260401c5b631000000082161561329d576801000000000b17217f0260401c5b63080000008216156132b857680100000000058b90c00260401c5b63040000008216156132d35768010000000002c5c8600260401c5b63020000008216156132ee576801000000000162e4300260401c5b63010000008216156133095768010000000000b172180260401c5b62800000821615613323576801000000000058b90c0260401c5b6240000082161561333d57680100000000002c5c860260401c5b622000008216156133575768010000000000162e430260401c5b6210000082161561337157680100000000000b17210260401c5b6208000082161561338b5768010000000000058b910260401c5b620400008216156133a5576801000000000002c5c80260401c5b620200008216156133bf57680100000000000162e40260401c5b620100008216156133d85761b172600160401b010260401c5b6180008216156133f0576158b9600160401b010260401c5b61400082161561340857612c5d600160401b010260401c5b6120008216156134205761162e600160401b010260401c5b61100082161561343857610b17600160401b010260401c5b6108008216156134505761058c600160401b010260401c5b610400821615613468576102c6600160401b010260401c5b61020082161561348057610163600160401b010260401c5b6101008216156134975760b1600160401b010260401c5b60808216156134ad576059600160401b010260401c5b60408216156134c357602c600160401b010260401c5b60208216156134d9576016600160401b010260401c5b60108216156134ef57600b600160401b010260401c5b6008821615613505576006600160401b010260401c5b600482161561351b576003600160401b010260401c5b6002821615613531576001600160401b010260401c5b6001821615613547576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b60008061356c868686612130565b9050600183600281111561358257613582613c18565b14801561359f57506000848061359a5761359a613bda565b868809115b15611cc957612a59600182613a0a565b60008080600019858709858702925082811083820303915050806000036135df5783828161216057612160613bda565b83811061217657604051631dcf306360e21b81526004810182905260248101859052604401612755565b60608315613678578251600003613671576001600160a01b0385163b6136715760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401612755565b5081610cda565b610cda838381511561368d5781518083602001fd5b8060405162461bcd60e51b81526004016127559190613c66565b6001600160a01b03811681146136bc57600080fd5b50565b600080604083850312156136d257600080fd5b82356136dd816136a7565b946020939093013593505050565b600080604083850312156136fe57600080fd5b8235613709816136a7565b91506020830135613719816136a7565b809150509250929050565b60006020828403121561373657600080fd5b8135610aac816136a7565b60008060006060848603121561375657600080fd5b8335613761816136a7565b95602085013595506040909401359392505050565b60006020828403121561378857600080fd5b5035919050565b600080602083850312156137a257600080fd5b82356001600160401b03808211156137b957600080fd5b818501915085601f8301126137cd57600080fd5b8135818111156137dc57600080fd5b8660208260051b85010111156137f157600080fd5b60209290920196919550909350505050565b60005b8381101561381e578181015183820152602001613806565b50506000910152565b6000815180845261383f816020860160208601613803565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156138a857603f19888603018452613896858351613827565b9450928501929085019060010161387a565b5092979650505050505050565b600080600080600060a086880312156138cd57600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b6000806040838503121561390857600080fd5b505080516020909101519092909150565b9283526020830191909152604082015260600190565b60006020828403121561394157600080fd5b5051919050565b6001600160a01b0391909116815260200190565b60008060006060848603121561397157600080fd5b8351925060208401519150604084015190509250925092565b600080600080608085870312156139a057600080fd5b505082516020840151604085015160609095015191969095509092509050565b6000602082840312156139d257600080fd5b8151610aac816136a7565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176114d1576114d16139dd565b808201808211156114d1576114d16139dd565b818103818111156114d1576114d16139dd565b6000806000806000806000806000806101408b8d031215613a5057600080fd5b8a51613a5b816136a7565b809a505060208b0151985060408b0151975060608b0151965060808b0151955060a08b0151945060c08b0151935060e08b0151613a97816136a7565b6101008c0151909350613aa9816136a7565b6101208c0151909250613abb816136a7565b809150509295989b9194979a5092959850565b600060208284031215613ae057600080fd5b815160ff81168114610aac57600080fd5b600080600060608486031215613b0657600080fd5b8351613b11816136a7565b602085015160409095015190969495509392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112613b6b57600080fd5b8301803591506001600160401b03821115613b8557600080fd5b602001915036819003821315613b9a57600080fd5b9250929050565b600060018201613bb357613bb36139dd565b5060010190565b81810360008312801583831316838312821617156115c4576115c46139dd565b634e487b7160e01b600052601260045260246000fd5b600082613bff57613bff613bda565b500490565b600082613c1357613c13613bda565b500690565b634e487b7160e01b600052602160045260246000fd5b6000600160ff1b8201613c4357613c436139dd565b5060000390565b60008251613c5c818460208701613803565b9190910192915050565b602081526000610aac602083018461382756fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a6f56c06c56aaa1442b2cfba2431c341c7c761d748a9ff867bd607e021fcebb364736f6c63430008120033","args":[],"salt":"AJNA","value":[]}
2024-01-08T15:30:35.355Z cannon:builder:runtime resolve artifact PoolInfoUtilsMulticall
2024-01-08T15:30:35.355Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:30:43.399Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [ [Object], [Object], [Object], [Object], [Object] ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/PoolInfoUtilsMulticall.sol': 'PoolInfoUtilsMulticall' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol': {
      keccak256: '0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol': {
      keccak256: '0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol': {
      keccak256: '0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol': {
      keccak256: '0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Address.sol': {
      keccak256: '0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Multicall.sol': {
      keccak256: '0x35e30a35e23f856cbcee3558b7efdd83f6017a8f1b419710645143d98e892463',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol': {
      keccak256: '0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathUD60x18.sol': {
      keccak256: '0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/PoolInfoUtils.sol': {
      keccak256: '0xb4bfd45c311a12b89725305a9295ccde8210a762540fa15c077a4230046587a9',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/PoolInfoUtilsMulticall.sol': {
      keccak256: '0x850b034e73ecb41704a8bb3c52011f4ac8025b883dcae908a360127eab886e07',
      urls: [Array],
      license: 'UNLICENSED'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20Pool.sol': {
      keccak256: '0xac0fc147804f48919ee17416dd6659eb77aed7d5c1b192f2e9f86862363346d4',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolBorrowerActions.sol': {
      keccak256: '0xe7bcfa2227cdb6249ad214d83a82935f0eb048472c277a599ba67c31f3d191b2',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolEvents.sol': {
      keccak256: '0xeccea62ed02e93376371d0ad723f0f94d390363fc836720170f018a5e928046c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolImmutables.sol': {
      keccak256: '0x54c17faa7d4eccf84d8923d9531725e266d27b8a5ef2cbc59475749ad44a5834',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolLenderActions.sol': {
      keccak256: '0xdf8d1b579da0ae2d47c938f5e262658ceb7d807d2e245b9a6e4a3f6febe9a0cc',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/PoolCommons.sol': {
      keccak256: '0x1dd40766b71468dade905c41a90783dad18761fe998f1a85acd79e8a0bb32ed3',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:30:43.400Z cannon:cli:foundry evm version paris
2024-01-08T15:30:43.408Z cannon:builder:runtime reported contract artifact PoolInfoUtilsMulticall {
  contractName: 'PoolInfoUtilsMulticall',
  sourceName: 'src/PoolInfoUtilsMulticall.sol',
  abi: [
    {
      type: 'constructor',
      inputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'poolBalanceDetails',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'poolDetailsMulticall',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'poolInfoUtils',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'poolRatesAndFeesMulticall',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    }
  ],
  bytecode: '',
  deployedBytecode: '0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806378f99b5414610051578063907f2579146101545780639704b9e214610188578063a4ffd1a0146101f1575b600080fd5b61006461005f366004610ce0565b61021f565b604080518651815260208088015181830152878301516001600160a01b0316828401526060808901518184015260809889015189840152875160a0808501919091528289015160c08501528885015160e0850152818901516101008501528989015161012085015290970151610140830152855161016083015280860151610180830152948201516101a082015283516101c0820152848401516101e0820152838201516102008201528584015161022082015295909201516102408601528051610260860152918201516102808501528101516102a084015201516102c08201526102e0015b60405180910390f35b61017b7f000000000000000000000000000000000000000000000000000000000000000081565b60405161014b9190610d04565b61019b610196366004610d18565b610777565b60405161014b9190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b6102046101ff366004610ce0565b610b0e565b6040805193845260208401929092529082015260600161014b565b61025a6040518060a00160405280600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b6102936040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6102b760405180606001604052806000815260200160008152602001600081525090565b6102e96040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6103146040518060800160405280600081526020016000815260200160008152602001600081525090565b60405163b3f8472760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063b3f8472790610360908990600401610d04565b60a060405180830381865afa15801561037d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a19190610d85565b60808a015260608901526001600160a01b039081166040808a0191909152602089019290925291875251632b5a16cf60e21b81527f00000000000000000000000000000000000000000000000000000000000000009091169063ad685b3c9061040e908990600401610d04565b60c060405180830381865afa15801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f9190610dcf565b60a08a01526080890152606088015260408088019190915260208701919091529085525163e7e01bb160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e7e01bb1906104bc908990600401610d04565b602060405180830381865afa1580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd9190610e19565b8352604051631f2694e960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631f2694e99061054b908990600401610d04565b602060405180830381865afa158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c9190610e19565b6020840152604051631d8067bd60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633b00cf7a906105dd908990600401610d04565b602060405180830381865afa1580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e9190610e19565b60408085019190915251630e9eb45b60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631d3d68b690610671908990600401610d04565b60a060405180830381865afa15801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b29190610e32565b60808701526060860152604080860191909152602085019190915290835251634b521ee560e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906396a43dca9061071a908990600401610d04565b608060405180830381865afa158015610737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075b9190610e72565b6060850152604084015260208301528152939592945090929091565b6107b76040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000869050806001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa1580156107fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081e9190610e72565b606086015260408086019190915260208501919091529083525163da7951a960e01b8152600481018790526001600160a01b0382169063da7951a990602401602060405180830381865afa15801561087a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089e9190610e19565b60808301526040516370a0823160e01b81526000906001600160a01b038716906370a08231906108d2908b90600401610d04565b602060405180830381865afa1580156108ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109139190610e19565b90506000826001600160a01b0316637b3f86556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610955573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109799190610e19565b90506109858183610ea8565b60a08501528415610a19576040516370a0823160e01b81526001600160a01b038716906370a08231906109bc908c90600401610d04565b602060405180830381865afa1580156109d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fd9190610e19565b610a0f90670de0b6b3a7640000610ea8565b60c0850152610b02565b6000896001600160a01b031663ec0bdcfc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7d9190610e19565b90506000876001600160a01b03166370a082318c6040518263ffffffff1660e01b8152600401610aad9190610d04565b602060405180830381865afa158015610aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aee9190610e19565b9050610afa8282610ea8565b60c087015250505b50505095945050505050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e7e01bb1856040518263ffffffff1660e01b8152600401610b5f9190610d04565b602060405180830381865afa158015610b7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba09190610e19565b604051631f2694e960e01b81529093506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631f2694e990610bef908790600401610d04565b602060405180830381865afa158015610c0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c309190610e19565b604051631d8067bd60e11b81529092506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633b00cf7a90610c7f908790600401610d04565b602060405180830381865afa158015610c9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc09190610e19565b929491935050565b6001600160a01b0381168114610cdd57600080fd5b50565b600060208284031215610cf257600080fd5b8135610cfd81610cc8565b9392505050565b6001600160a01b0391909116815260200190565b600080600080600060a08688031215610d3057600080fd5b8535610d3b81610cc8565b9450602086013593506040860135610d5281610cc8565b92506060860135610d6281610cc8565b915060808601358015158114610d7757600080fd5b809150509295509295909350565b600080600080600060a08688031215610d9d57600080fd5b85519450602086015193506040860151610db681610cc8565b6060870151608090970151959894975095949392505050565b60008060008060008060c08789031215610de857600080fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b600060208284031215610e2b57600080fd5b5051919050565b600080600080600060a08688031215610e4a57600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b60008060008060808587031215610e8857600080fd5b505082516020840151604085015160609095015191969095509092509050565b8082028115828204841417610ecd57634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212206de9f2fe3b24353c55185e127ff331987cdefcaeef856749802c1ff37ce9be2d64736f6c63430008120033',
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller\'s account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender\'s allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller\'s\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account\'s ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn\'t\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``\'s tokens,\\n     * given ``owner``\'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``\'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``\'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\"../IERC20.sol\\";\\nimport \\"../extensions/draft-IERC20Permit.sol\\";\\nimport \\"../../../utils/Address.sol\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // \'safeIncreaseAllowance\' and \'safeDecreaseAllowance\'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\"SafeERC20: approve from non-zero to non-zero allowance\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\"SafeERC20: decreased allowance below zero\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\"SafeERC20: permit did not succeed\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity\'s return data size checking mechanism, since\\n        // we\'re implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\"SafeERC20: low-level call failed\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\"SafeERC20: ERC20 operation'... 333796 more characters
  }
}
2024-01-08T15:30:43.410Z cannon:verbose:builder:definition creating hash of {"bytecode":"","args":["0x2baB4c287cF33a6eC373CFE152FdbA299B653F7D"],"salt":"","value":[]}
2024-01-08T15:30:43.410Z cannon:builder comparing states null e867c68bd6745eef22fd703835cb330a
2024-01-08T15:30:43.410Z cannon:builder run isolated contract.PoolInfoUtilsMulticall
Executing [contract.PoolInfoUtilsMulticall]...
2024-01-08T15:30:43.414Z cannon:verbose:builder ctx for step contract.PoolInfoUtilsMulticall {
  package: {},
  timestamp: '1704727545',
  chainId: 10,
  settings: {
    bwAJNA_ADDRESS: '0x6c518f9D1a163379235816c543E62922a79863Fa',
    salt: 'AJNA'
  },
  contracts: {
    PoolCommons: {
      address: '0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0x9ee2e160d6eff90f8f284668026974bc66484709a99d7fce7cd7e3f527bdbfb1',
      sourceName: 'src/libraries/external/PoolCommons.sol',
      contractName: 'PoolCommons',
      deployedOn: 'contract.PoolCommons',
      highlight: undefined,
      gasUsed: 2546476,
      gasCost: '2685008'
    },
    PoolInfoUtils: {
      address: '0x2baB4c287cF33a6eC373CFE152FdbA299B653F7D',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: [Object],
      deployTxnHash: '0x9a3523629c9f996461d5396ed8f8ccc79b94f6f175f351fe6f4d4227ea3c5319',
      sourceName: 'src/PoolInfoUtils.sol',
      contractName: 'PoolInfoUtils',
      deployedOn: 'contract.PoolInfoUtils',
      highlight: undefined,
      gasUsed: 3421058,
      gasCost: '1502648'
    }
  },
  txns: {},
  imports: {},
  extras: {}
}
2024-01-08T15:30:43.414Z cannon:builder:contract exec {
  artifact: 'PoolInfoUtilsMulticall',
  args: [ '0x2baB4c287cF33a6eC373CFE152FdbA299B653F7D' ],
  salt: '',
  create2: true,
  from: '',
  nonce: '',
  value: '',
  abi: ''
}
2024-01-08T15:30:43.414Z cannon:builder:runtime resolve artifact PoolInfoUtilsMulticall
2024-01-08T15:30:43.414Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:30:52.535Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [ [Object], [Object], [Object], [Object], [Object] ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/PoolInfoUtilsMulticall.sol': 'PoolInfoUtilsMulticall' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol': {
      keccak256: '0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol': {
      keccak256: '0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol': {
      keccak256: '0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol': {
      keccak256: '0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Address.sol': {
      keccak256: '0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Multicall.sol': {
      keccak256: '0x35e30a35e23f856cbcee3558b7efdd83f6017a8f1b419710645143d98e892463',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol': {
      keccak256: '0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathUD60x18.sol': {
      keccak256: '0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/PoolInfoUtils.sol': {
      keccak256: '0xb4bfd45c311a12b89725305a9295ccde8210a762540fa15c077a4230046587a9',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/PoolInfoUtilsMulticall.sol': {
      keccak256: '0x850b034e73ecb41704a8bb3c52011f4ac8025b883dcae908a360127eab886e07',
      urls: [Array],
      license: 'UNLICENSED'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20Pool.sol': {
      keccak256: '0xac0fc147804f48919ee17416dd6659eb77aed7d5c1b192f2e9f86862363346d4',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolBorrowerActions.sol': {
      keccak256: '0xe7bcfa2227cdb6249ad214d83a82935f0eb048472c277a599ba67c31f3d191b2',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolEvents.sol': {
      keccak256: '0xeccea62ed02e93376371d0ad723f0f94d390363fc836720170f018a5e928046c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolImmutables.sol': {
      keccak256: '0x54c17faa7d4eccf84d8923d9531725e266d27b8a5ef2cbc59475749ad44a5834',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolLenderActions.sol': {
      keccak256: '0xdf8d1b579da0ae2d47c938f5e262658ceb7d807d2e245b9a6e4a3f6febe9a0cc',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/PoolCommons.sol': {
      keccak256: '0x1dd40766b71468dade905c41a90783dad18761fe998f1a85acd79e8a0bb32ed3',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:30:52.537Z cannon:cli:foundry evm version paris
2024-01-08T15:30:52.547Z cannon:builder:runtime reported contract artifact PoolInfoUtilsMulticall {
  contractName: 'PoolInfoUtilsMulticall',
  sourceName: 'src/PoolInfoUtilsMulticall.sol',
  abi: [
    {
      type: 'constructor',
      inputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'poolBalanceDetails',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'poolDetailsMulticall',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'poolInfoUtils',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'poolRatesAndFeesMulticall',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    }
  ],
  bytecode: '0x60a060405234801561001057600080fd5b50604051610fda380380610fda83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610f096100d1600039600081816101590152818161032b015281816103d70152818161048701528181610516015281816105a80152818161063c015281816106e501528181610b1501528181610bba0152610c4a0152610f096000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806378f99b5414610051578063907f2579146101545780639704b9e214610188578063a4ffd1a0146101f1575b600080fd5b61006461005f366004610ce0565b61021f565b604080518651815260208088015181830152878301516001600160a01b0316828401526060808901518184015260809889015189840152875160a0808501919091528289015160c08501528885015160e0850152818901516101008501528989015161012085015290970151610140830152855161016083015280860151610180830152948201516101a082015283516101c0820152848401516101e0820152838201516102008201528584015161022082015295909201516102408601528051610260860152918201516102808501528101516102a084015201516102c08201526102e0015b60405180910390f35b61017b7f000000000000000000000000000000000000000000000000000000000000000081565b60405161014b9190610d04565b61019b610196366004610d18565b610777565b60405161014b9190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b6102046101ff366004610ce0565b610b0e565b6040805193845260208401929092529082015260600161014b565b61025a6040518060a00160405280600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b6102936040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6102b760405180606001604052806000815260200160008152602001600081525090565b6102e96040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6103146040518060800160405280600081526020016000815260200160008152602001600081525090565b60405163b3f8472760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063b3f8472790610360908990600401610d04565b60a060405180830381865afa15801561037d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a19190610d85565b60808a015260608901526001600160a01b039081166040808a0191909152602089019290925291875251632b5a16cf60e21b81527f00000000000000000000000000000000000000000000000000000000000000009091169063ad685b3c9061040e908990600401610d04565b60c060405180830381865afa15801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f9190610dcf565b60a08a01526080890152606088015260408088019190915260208701919091529085525163e7e01bb160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e7e01bb1906104bc908990600401610d04565b602060405180830381865afa1580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd9190610e19565b8352604051631f2694e960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631f2694e99061054b908990600401610d04565b602060405180830381865afa158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c9190610e19565b6020840152604051631d8067bd60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633b00cf7a906105dd908990600401610d04565b602060405180830381865afa1580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e9190610e19565b60408085019190915251630e9eb45b60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631d3d68b690610671908990600401610d04565b60a060405180830381865afa15801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b29190610e32565b60808701526060860152604080860191909152602085019190915290835251634b521ee560e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906396a43dca9061071a908990600401610d04565b608060405180830381865afa158015610737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075b9190610e72565b6060850152604084015260208301528152939592945090929091565b6107b76040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000869050806001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa1580156107fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081e9190610e72565b606086015260408086019190915260208501919091529083525163da7951a960e01b8152600481018790526001600160a01b0382169063da7951a990602401602060405180830381865afa15801561087a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089e9190610e19565b60808301526040516370a0823160e01b81526000906001600160a01b038716906370a08231906108d2908b90600401610d04565b602060405180830381865afa1580156108ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109139190610e19565b90506000826001600160a01b0316637b3f86556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610955573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109799190610e19565b90506109858183610ea8565b60a08501528415610a19576040516370a0823160e01b81526001600160a01b038716906370a08231906109bc908c90600401610d04565b602060405180830381865afa1580156109d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fd9190610e19565b610a0f90670de0b6b3a7640000610ea8565b60c0850152610b02565b6000896001600160a01b031663ec0bdcfc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7d9190610e19565b90506000876001600160a01b03166370a082318c6040518263ffffffff1660e01b8152600401610aad9190610d04565b602060405180830381865afa158015610aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aee9190610e19565b9050610afa8282610ea8565b60c087015250505b50505095945050505050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e7e01bb1856040518263ffffffff1660e01b8152600401610b5f9190610d04565b602060405180830381865afa158015610b7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba09190610e19565b604051631f2694e960e01b81529093506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631f2694e990610bef908790600401610d04565b602060405180830381865afa158015610c0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c309190610e19565b604051631d8067bd60e11b81529092506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633b00cf7a90610c7f908790600401610d04565b602060405180830381865afa158015610c9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc09190610e19565b929491935050565b6001600160a01b0381168114610cdd57600080fd5b50565b600060208284031215610cf257600080fd5b8135610cfd81610cc8565b9392505050565b6001600160a01b0391909116815260200190565b600080600080600060a08688031215610d3057600080fd5b8535610d3b81610cc8565b9450602086013593506040860135610d5281610cc8565b92506060860135610d6281610cc8565b915060808601358015158114610d7757600080fd5b809150509295509295909350565b600080600080600060a08688031215610d9d57600080fd5b85519450602086015193506040860151610db681610cc8565b6060870151608090970151959894975095949392505050565b60008060008060008060c08789031215610de857600080fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b600060208284031215610e2b57600080fd5b5051919050565b600080600080600060a08688031215610e4a57600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b60008060008060808587031215610e8857600080fd5b505082516020840151604085015160609095015191969095509092509050565b8082028115828204841417610ecd57634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212206de9f2fe3b24353c55185e127ff331987cdefcaeef856749802c1ff37ce9be2d64736f6c63430008120033',
  deployedBytecode: '0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806378f99b5414610051578063907f2579146101545780639704b9e214610188578063a4ffd1a0146101f1575b600080fd5b61006461005f366004610ce0565b61021f565b604080518651815260208088015181830152878301516001600160a01b0316828401526060808901518184015260809889015189840152875160a0808501919091528289015160c08501528885015160e0850152818901516101008501528989015161012085015290970151610140830152855161016083015280860151610180830152948201516101a082015283516101c0820152848401516101e0820152838201516102008201528584015161022082015295909201516102408601528051610260860152918201516102808501528101516102a084015201516102c08201526102e0015b60405180910390f35b61017b7f000000000000000000000000000000000000000000000000000000000000000081565b60405161014b9190610d04565b61019b610196366004610d18565b610777565b60405161014b9190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b6102046101ff366004610ce0565b610b0e565b6040805193845260208401929092529082015260600161014b565b61025a6040518060a00160405280600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b6102936040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6102b760405180606001604052806000815260200160008152602001600081525090565b6102e96040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6103146040518060800160405280600081526020016000815260200160008152602001600081525090565b60405163b3f8472760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063b3f8472790610360908990600401610d04565b60a060405180830381865afa15801561037d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a19190610d85565b60808a015260608901526001600160a01b039081166040808a0191909152602089019290925291875251632b5a16cf60e21b81527f00000000000000000000000000000000000000000000000000000000000000009091169063ad685b3c9061040e908990600401610d04565b60c060405180830381865afa15801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f9190610dcf565b60a08a01526080890152606088015260408088019190915260208701919091529085525163e7e01bb160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e7e01bb1906104bc908990600401610d04565b602060405180830381865afa1580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd9190610e19565b8352604051631f2694e960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631f2694e99061054b908990600401610d04565b602060405180830381865afa158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c9190610e19565b6020840152604051631d8067bd60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633b00cf7a906105dd908990600401610d04565b602060405180830381865afa1580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e9190610e19565b60408085019190915251630e9eb45b60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631d3d68b690610671908990600401610d04565b60a060405180830381865afa15801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b29190610e32565b60808701526060860152604080860191909152602085019190915290835251634b521ee560e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906396a43dca9061071a908990600401610d04565b608060405180830381865afa158015610737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075b9190610e72565b6060850152604084015260208301528152939592945090929091565b6107b76040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000869050806001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa1580156107fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081e9190610e72565b606086015260408086019190915260208501919091529083525163da7951a960e01b8152600481018790526001600160a01b0382169063da7951a990602401602060405180830381865afa15801561087a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089e9190610e19565b60808301526040516370a0823160e01b81526000906001600160a01b038716906370a08231906108d2908b90600401610d04565b602060405180830381865afa1580156108ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109139190610e19565b90506000826001600160a01b0316637b3f86556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610955573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109799190610e19565b90506109858183610ea8565b60a08501528415610a19576040516370a0823160e01b81526001600160a01b038716906370a08231906109bc908c90600401610d04565b602060405180830381865afa1580156109d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fd9190610e19565b610a0f90670de0b6b3a7640000610ea8565b60c0850152610b02565b6000896001600160a01b031663ec0bdcfc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7d9190610e19565b90506000876001600160a01b03166370a082318c6040518263ffffffff1660e01b8152600401610aad9190610d04565b602060405180830381865afa158015610aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aee9190610e19565b9050610afa8282610ea8565b60c087015250505b50505095945050505050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e7e01bb1856040518263ffffffff1660e01b8152600401610b5f9190610d04565b602060405180830381865afa158015610b7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba09190610e19565b604051631f2694e960e01b81529093506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631f2694e990610bef908790600401610d04565b602060405180830381865afa158015610c0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c309190610e19565b604051631d8067bd60e11b81529092506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633b00cf7a90610c7f908790600401610d04565b602060405180830381865afa158015610c9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc09190610e19565b929491935050565b6001600160a01b0381168114610cdd57600080fd5b50565b600060208284031215610cf257600080fd5b8135610cfd81610cc8565b9392505050565b6001600160a01b0391909116815260200190565b600080600080600060a08688031215610d3057600080fd5b8535610d3b81610cc8565b9450602086013593506040860135610d5281610cc8565b92506060860135610d6281610cc8565b915060808601358015158114610d7757600080fd5b809150509295509295909350565b600080600080600060a08688031215610d9d57600080fd5b85519450602086015193506040860151610db681610cc8565b6060870151608090970151959894975095949392505050565b60008060008060008060c08789031215610de857600080fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b600060208284031215610e2b57600080fd5b5051919050565b600080600080600060a08688031215610e4a57600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b60008060008060808587031215610e8857600080fd5b505082516020840151604085015160609095015191969095509092509050565b8082028115828204841417610ecd57634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212206de9f2fe3b24353c55185e127ff331987cdefcaeef856749802c1ff37ce9be2d64736f6c63430008120033',
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller\'s account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender\'s allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller\'s\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account\'s ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn\'t\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``\'s tokens,\\n     * given ``owner``\'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``\'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``\'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\"../IERC20.sol\\";\\nimport \\"../extensions/draft-IERC20Permit.sol\\";\\nimport \\"../../../utils/Address.sol\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // \'safeIncreaseAllowance\' and \'safeDecreaseAllowance\'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\"SafeERC20: approve from non-zero to non-zero allowance\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\"SafeERC20: decreased allowance below zero\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\"SafeERC20: permit did not succeed\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity\'s return data size checking mechanism, since\\n        // we\'re implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\"SafeERC20: low-level call failed\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\"SafeERC20: ERC20 operation'... 333796 more characters
  }
}
2024-01-08T15:30:52.558Z cannon:cli:rpc eth_chainId

2024-01-08T15:30:52.561Z cannon:cli:rpc eth_getCode

2024-01-08T15:30:52.562Z cannon:builder:contract performing arachnid create2
2024-01-08T15:30:52.568Z cannon:builder:contract create2 address is 0x6A91429425Fb992A9cf300aD215e4469d0D1A75A
2024-01-08T15:30:52.571Z cannon:cli:rpc eth_chainId

2024-01-08T15:30:52.574Z cannon:cli:rpc eth_getCode

2024-01-08T15:30:53.390Z cannon:cli:rpc anvil_impersonateAccount

2024-01-08T15:30:53.393Z cannon:cli:rpc anvil_setBalance

2024-01-08T15:30:53.396Z cannon:cli:rpc eth_blockNumber

2024-01-08T15:30:53.398Z cannon:cli:rpc eth_chainId

2024-01-08T15:30:53.401Z cannon:cli:rpc eth_chainId

2024-01-08T15:30:53.408Z cannon:cli:rpc eth_estimateGas

2024-01-08T15:30:53.422Z cannon:cli:rpc eth_sendTransaction

2024-01-08T15:30:53.423Z cannon:cli:rpc 
    Transaction: 0xd25d7e63643df04152ad12d5812dfbd2710b358d178bf33dd7ab1794cac4f914
    Gas used: 885906

    Block Number: 114564394
    Block Hash: 0x83393d00915a5e482979b1c24623d3ee0b91f61cfe6a26ff2b33898a01987896
    Block Time: "Mon, 8 Jan 2024 15:30:51 +0000"


2024-01-08T15:30:53.426Z cannon:cli:rpc eth_chainId

2024-01-08T15:30:53.429Z cannon:cli:rpc eth_getTransactionByHash

2024-01-08T15:30:53.446Z cannon:cli:rpc eth_chainId

2024-01-08T15:30:53.449Z cannon:cli:rpc eth_getTransactionReceipt

2024-01-08T15:30:53.451Z cannon:builder:contract arachnid create2 complete {
  to: '0x4e59b44847b379578588920cA78FbF26c0B4956C',
  from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
  contractAddress: null,
  transactionIndex: 0,
  gasUsed: BigNumber { _hex: '0x0d8492', _isBigNumber: true },
  logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  blockHash: '0x83393d00915a5e482979b1c24623d3ee0b91f61cfe6a26ff2b33898a01987896',
  transactionHash: '0xd25d7e63643df04152ad12d5812dfbd2710b358d178bf33dd7ab1794cac4f914',
  logs: [],
  blockNumber: 114564394,
  confirmations: 1,
  cumulativeGasUsed: BigNumber { _hex: '0x0d8492', _isBigNumber: true },
  effectiveGasPrice: BigNumber { _hex: '0x14b758', _isBigNumber: true },
  status: 1,
  type: 2,
  byzantium: true
}
2024-01-08T15:30:53.452Z cannon:builder:contract contract deployed to address 0x6A91429425Fb992A9cf300aD215e4469d0D1A75A
  ‚úî Successfully deployed PoolInfoUtilsMulticall using CREATE2
  Contract Address: 0x6A91429425Fb992A9cf300aD215e4469d0D1A75A
  Transaction Hash: 0xd25d7e63643df04152ad12d5812dfbd2710b358d178bf33dd7ab1794cac4f914
  Transaction Cost: 0.000001202755596336 ETH (885,906 gas)

2024-01-08T15:30:53.461Z cannon:builder:runtime resolve artifact PoolInfoUtilsMulticall
2024-01-08T15:30:53.461Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:31:01.885Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [ [Object], [Object], [Object], [Object], [Object] ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/PoolInfoUtilsMulticall.sol': 'PoolInfoUtilsMulticall' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol': {
      keccak256: '0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol': {
      keccak256: '0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol': {
      keccak256: '0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol': {
      keccak256: '0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Address.sol': {
      keccak256: '0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Multicall.sol': {
      keccak256: '0x35e30a35e23f856cbcee3558b7efdd83f6017a8f1b419710645143d98e892463',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol': {
      keccak256: '0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathUD60x18.sol': {
      keccak256: '0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/PoolInfoUtils.sol': {
      keccak256: '0xb4bfd45c311a12b89725305a9295ccde8210a762540fa15c077a4230046587a9',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/PoolInfoUtilsMulticall.sol': {
      keccak256: '0x850b034e73ecb41704a8bb3c52011f4ac8025b883dcae908a360127eab886e07',
      urls: [Array],
      license: 'UNLICENSED'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20Pool.sol': {
      keccak256: '0xac0fc147804f48919ee17416dd6659eb77aed7d5c1b192f2e9f86862363346d4',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolBorrowerActions.sol': {
      keccak256: '0xe7bcfa2227cdb6249ad214d83a82935f0eb048472c277a599ba67c31f3d191b2',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolEvents.sol': {
      keccak256: '0xeccea62ed02e93376371d0ad723f0f94d390363fc836720170f018a5e928046c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolImmutables.sol': {
      keccak256: '0x54c17faa7d4eccf84d8923d9531725e266d27b8a5ef2cbc59475749ad44a5834',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolLenderActions.sol': {
      keccak256: '0xdf8d1b579da0ae2d47c938f5e262658ceb7d807d2e245b9a6e4a3f6febe9a0cc',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/PoolCommons.sol': {
      keccak256: '0x1dd40766b71468dade905c41a90783dad18761fe998f1a85acd79e8a0bb32ed3',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:31:01.886Z cannon:cli:foundry evm version paris
2024-01-08T15:31:01.892Z cannon:builder:runtime reported contract artifact PoolInfoUtilsMulticall {
  contractName: 'PoolInfoUtilsMulticall',
  sourceName: 'src/PoolInfoUtilsMulticall.sol',
  abi: [
    {
      type: 'constructor',
      inputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'poolBalanceDetails',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'poolDetailsMulticall',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'poolInfoUtils',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'poolRatesAndFeesMulticall',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    }
  ],
  bytecode: '',
  deployedBytecode: '0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806378f99b5414610051578063907f2579146101545780639704b9e214610188578063a4ffd1a0146101f1575b600080fd5b61006461005f366004610ce0565b61021f565b604080518651815260208088015181830152878301516001600160a01b0316828401526060808901518184015260809889015189840152875160a0808501919091528289015160c08501528885015160e0850152818901516101008501528989015161012085015290970151610140830152855161016083015280860151610180830152948201516101a082015283516101c0820152848401516101e0820152838201516102008201528584015161022082015295909201516102408601528051610260860152918201516102808501528101516102a084015201516102c08201526102e0015b60405180910390f35b61017b7f000000000000000000000000000000000000000000000000000000000000000081565b60405161014b9190610d04565b61019b610196366004610d18565b610777565b60405161014b9190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b6102046101ff366004610ce0565b610b0e565b6040805193845260208401929092529082015260600161014b565b61025a6040518060a00160405280600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b6102936040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6102b760405180606001604052806000815260200160008152602001600081525090565b6102e96040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6103146040518060800160405280600081526020016000815260200160008152602001600081525090565b60405163b3f8472760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063b3f8472790610360908990600401610d04565b60a060405180830381865afa15801561037d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a19190610d85565b60808a015260608901526001600160a01b039081166040808a0191909152602089019290925291875251632b5a16cf60e21b81527f00000000000000000000000000000000000000000000000000000000000000009091169063ad685b3c9061040e908990600401610d04565b60c060405180830381865afa15801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f9190610dcf565b60a08a01526080890152606088015260408088019190915260208701919091529085525163e7e01bb160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e7e01bb1906104bc908990600401610d04565b602060405180830381865afa1580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd9190610e19565b8352604051631f2694e960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631f2694e99061054b908990600401610d04565b602060405180830381865afa158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c9190610e19565b6020840152604051631d8067bd60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633b00cf7a906105dd908990600401610d04565b602060405180830381865afa1580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e9190610e19565b60408085019190915251630e9eb45b60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631d3d68b690610671908990600401610d04565b60a060405180830381865afa15801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b29190610e32565b60808701526060860152604080860191909152602085019190915290835251634b521ee560e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906396a43dca9061071a908990600401610d04565b608060405180830381865afa158015610737573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075b9190610e72565b6060850152604084015260208301528152939592945090929091565b6107b76040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000869050806001600160a01b0316634d9661986040518163ffffffff1660e01b8152600401608060405180830381865afa1580156107fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081e9190610e72565b606086015260408086019190915260208501919091529083525163da7951a960e01b8152600481018790526001600160a01b0382169063da7951a990602401602060405180830381865afa15801561087a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089e9190610e19565b60808301526040516370a0823160e01b81526000906001600160a01b038716906370a08231906108d2908b90600401610d04565b602060405180830381865afa1580156108ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109139190610e19565b90506000826001600160a01b0316637b3f86556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610955573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109799190610e19565b90506109858183610ea8565b60a08501528415610a19576040516370a0823160e01b81526001600160a01b038716906370a08231906109bc908c90600401610d04565b602060405180830381865afa1580156109d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fd9190610e19565b610a0f90670de0b6b3a7640000610ea8565b60c0850152610b02565b6000896001600160a01b031663ec0bdcfc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7d9190610e19565b90506000876001600160a01b03166370a082318c6040518263ffffffff1660e01b8152600401610aad9190610d04565b602060405180830381865afa158015610aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aee9190610e19565b9050610afa8282610ea8565b60c087015250505b50505095945050505050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e7e01bb1856040518263ffffffff1660e01b8152600401610b5f9190610d04565b602060405180830381865afa158015610b7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba09190610e19565b604051631f2694e960e01b81529093506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631f2694e990610bef908790600401610d04565b602060405180830381865afa158015610c0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c309190610e19565b604051631d8067bd60e11b81529092506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633b00cf7a90610c7f908790600401610d04565b602060405180830381865afa158015610c9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc09190610e19565b929491935050565b6001600160a01b0381168114610cdd57600080fd5b50565b600060208284031215610cf257600080fd5b8135610cfd81610cc8565b9392505050565b6001600160a01b0391909116815260200190565b600080600080600060a08688031215610d3057600080fd5b8535610d3b81610cc8565b9450602086013593506040860135610d5281610cc8565b92506060860135610d6281610cc8565b915060808601358015158114610d7757600080fd5b809150509295509295909350565b600080600080600060a08688031215610d9d57600080fd5b85519450602086015193506040860151610db681610cc8565b6060870151608090970151959894975095949392505050565b60008060008060008060c08789031215610de857600080fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b600060208284031215610e2b57600080fd5b5051919050565b600080600080600060a08688031215610e4a57600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b60008060008060808587031215610e8857600080fd5b505082516020840151604085015160609095015191969095509092509050565b8082028115828204841417610ecd57634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212206de9f2fe3b24353c55185e127ff331987cdefcaeef856749802c1ff37ce9be2d64736f6c63430008120033',
  linkReferences: {},
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: '{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller\'s account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender\'s allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller\'s\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account\'s ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn\'t\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``\'s tokens,\\n     * given ``owner``\'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``\'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``\'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\"../IERC20.sol\\";\\nimport \\"../extensions/draft-IERC20Permit.sol\\";\\nimport \\"../../../utils/Address.sol\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // \'safeIncreaseAllowance\' and \'safeDecreaseAllowance\'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\"SafeERC20: approve from non-zero to non-zero allowance\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\"SafeERC20: decreased allowance below zero\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\"SafeERC20: permit did not succeed\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity\'s return data size checking mechanism, since\\n        // we\'re implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\"SafeERC20: low-level call failed\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\"SafeERC20: ERC20 operation'... 333796 more characters
  }
}
2024-01-08T15:31:01.892Z cannon:verbose:builder:definition creating hash of {"bytecode":"","args":["0x2baB4c287cF33a6eC373CFE152FdbA299B653F7D"],"salt":"","value":[]}
2024-01-08T15:31:01.904Z cannon:builder:runtime resolve artifact PositionManager
2024-01-08T15:31:01.904Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:31:10.617Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/PositionManager.sol': 'PositionManager' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/base64/base64.sol': {
      keccak256: '0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf',
      urls: [Array],
      license: 'MIT'
    },
    'lib/clones-with-immutable-args/src/Clone.sol': {
      keccak256: '0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545',
      urls: [Array],
      license: 'BSD'
    },
    'lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol': {
      keccak256: '0xcb7cbb68b8a90e6eff9c7a29f5b7d5964e0cedc0ad8133f5bcb3ec3a9aeb391c',
      urls: [Array],
      license: 'BSD'
    },
    'lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol': {
      keccak256: '0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol': {
      keccak256: '0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol': {
      keccak256: '0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol': {
      keccak256: '0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol': {
      keccak256: '0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol': {
      keccak256: '0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol': {
      keccak256: '0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol': {
      keccak256: '0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol': {
      keccak256: '0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol': {
      keccak256: '0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol': {
      keccak256: '0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Address.sol': {
      keccak256: '0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Context.sol': {
      keccak256: '0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Multicall.sol': {
      keccak256: '0x35e30a35e23f856cbcee3558b7efdd83f6017a8f1b419710645143d98e892463',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Strings.sol': {
      keccak256: '0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol': {
      keccak256: '0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol': {
      keccak256: '0xbc8d1f66b26e211a1f6f40a17453e9d5020ec96749014379205cff100809884c',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol': {
      keccak256: '0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol': {
      keccak256: '0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol': {
      keccak256: '0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathUD60x18.sol': {
      keccak256: '0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/ERC20Pool.sol': {
      keccak256: '0xe372d950d3ace12bae8ee8a495a6f44c6521778ff56e9b25f3ccdbf266aea0d6',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/ERC20PoolFactory.sol': {
      keccak256: '0xdd7c1e42906f6a7693bf72014b39f36c692e0f4a17e7593d7f887ec84b697c85',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/ERC721Pool.sol': {
      keccak256: '0xce94095e9d2022c001506ef1901515d9adf7f639b3b01c14b6bc2de5633ea0e2',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/ERC721PoolFactory.sol': {
      keccak256: '0xa44628e67dfe4b35e7d73fbe30db5a09551196e4a3061087bacaee14fac87237',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/PositionManager.sol': {
      keccak256: '0x84090eb2a28d53e333d0da6684ed23e581ecff025a9f5d9eab4933206079e14a',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/FlashloanablePool.sol': {
      keccak256: '0x1f3767f4d27c13ef2c53bcf49c1d5917c77b2d3fb7a28576f0c2a131a8377f6f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/PermitERC721.sol': {
      keccak256: '0x65a60c2446ff63fa91bc3931e463f1a2d731060d70a8be0b1718fb25068d8dd1',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/Pool.sol': {
      keccak256: '0x87159e77eeee256f1501035738bb015a1d4d360fab31ea077f4ddcaff4e54d22',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/PoolDeployer.sol': {
      keccak256: '0x81b87acb71ecdbb00a37f4b0b23d21554692bde445fbc19871353bcce128d53e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPoolFactory.sol': {
      keccak256: '0x53d72e58a4b0d6a5e8aeb23a2f40262636c823170037179220ec29ca403dae76',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20Pool.sol': {
      keccak256: '0xac0fc147804f48919ee17416dd6659eb77aed7d5c1b192f2e9f86862363346d4',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolBorrowerActions.sol': {
      keccak256: '0xe7bcfa2227cdb6249ad214d83a82935f0eb048472c277a599ba67c31f3d191b2',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolEvents.sol': {
      keccak256: '0xeccea62ed02e93376371d0ad723f0f94d390363fc836720170f018a5e928046c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolFactory.sol': {
      keccak256: '0x010cb58b359152dea4534951089b55dad96f8e9bf4b2815ff33b73a38e62d5ef',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolImmutables.sol': {
      keccak256: '0x54c17faa7d4eccf84d8923d9531725e266d27b8a5ef2cbc59475749ad44a5834',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolLenderActions.sol': {
      keccak256: '0xdf8d1b579da0ae2d47c938f5e262658ceb7d807d2e245b9a6e4a3f6febe9a0cc',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20Taker.sol': {
      keccak256: '0x3ddd154139854a83d3f46adb95dea763569f55dbf702cfcdc0abcc588bf7bea0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721Pool.sol': {
      keccak256: '0x2873a73b910d1a1a2d403dac08ecec0afd1b58142185e27565edfa695d278b95',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolBorrowerActions.sol': {
      keccak256: '0x3c80e33d8fe71470d391af54e9a70c124e9677b9f8848a8d8d77ee1f6182ce21',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolErrors.sol': {
      keccak256: '0x896b15da426f1baa78d9d09aebe78d236011650b714e45f90e5c4bb096b481af',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolEvents.sol': {
      keccak256: '0xf5c0aaae515ed6e22b49b0a0f5b9d45f6cf2fad6fae83201893ba7907fc7d3bf',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolFactory.sol': {
      keccak256: '0x2bfafdc6ab11b11d75caa61441964799d7b780d93e3a1938b989a135a5070471',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolImmutables.sol': {
      keccak256: '0x5f8d672bad5dfae9556334a0ea5107452b02075502a1fb9ac7bc521c071310db',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolLenderActions.sol': {
      keccak256: '0xcff44a133099f3a1cd574f18e46f6c0076de2384a16df281bab2b9d627b5a42b',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolState.sol': {
      keccak256: '0x2742176dd54be93117cdba89ad45d3a68f0d0fbf0d8e6f3decd7df4b81815cf6',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721Taker.sol': {
      keccak256: '0x7c27a3083aeeaa008978dcba9f7454b9959a59e36c2559e0b1a251494e536488',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/position/IPositionManager.sol': {
      keccak256: '0xfa4f0d63758c67a29b4a44e8d30c5767471ba7a2e55dd65e3c524306cc50388f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/position/IPositionManagerDerivedState.sol': {
      keccak256: '0x3fff099a0accb7dccead8abe09996917d2bf5448a1f6e3940be240b7866eeb78',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/position/IPositionManagerErrors.sol': {
      keccak256: '0x37c355d22bb30147327d65486905284a0ee73e23f802332479a7998fc24eb337',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/position/IPositionManagerEvents.sol': {
      keccak256: '0x7c4d6b36d6e3837eb0efe3ea82ac68d44006128378263b463669789e1611376e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/position/IPositionManagerOwnerActions.sol': {
      keccak256: '0xdc673f85f09aa5c1a6f2172a5403c6f84de8c361a270dd5a9e6fb52ddbca8db5',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/position/IPositionManagerState.sol': {
      keccak256: '0x495951d7ba3ba905d045770bcea8516b400bb112409f9870d1e0d1893d1b4c1d',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/BorrowerActions.sol': {
      keccak256: '0xecf8ce41a4034aa174c72bab7e558d788c1cc052ee77b2151f4acee4691be839',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/KickerActions.sol': {
      keccak256: '0xa486e9c9091c1cc8966f13b2b6bb9f9b7eeaf26d539b990c3904befd7a2a25fe',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/LPActions.sol': {
      keccak256: '0x4def554bc6414a7a4a575b8fced4fd334b28c484f09e5f616a0c228cbf875c85',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/LenderActions.sol': {
      keccak256: '0x04b37827f21db736b668fb27393b6c8b968b4cb24abf338b0a658090a173e0dd',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/PoolCommons.sol': {
      keccak256: '0x1dd40766b71468dade905c41a90783dad18761fe998f1a85acd79e8a0bb32ed3',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/PositionNFTSVG.sol': {
      keccak256: '0xc99cd282f520c3bdc84f4da0309ad36ff0bab58a4057247c3eb7ab905df681c5',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/SettlerActions.sol': {
      keccak256: '0x05edfe3f72323b7212fbb5134f76211f397138c2ed30ddf0f3683772213c831d',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/TakerActions.sol': {
      keccak256: '0x642ee2cabe710495ccc32c269750578cbfe924af26dcc73b8ce6cdf06adce68e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/RevertsHelper.sol': {
      keccak256: '0xcaff095290172f1b5726d4e887ab9be5f524d9321e94ca0095f99b666381a6f4',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/SafeTokenNamer.sol': {
      keccak256: '0xf4b4f40f09ed8c6f801c17ada5619a8ebaf98c81c1da28e4ce9504d2feb7c127',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:31:10.619Z cannon:cli:foundry evm version paris
2024-01-08T15:31:10.636Z cannon:builder:runtime reported contract artifact PositionManager {
  contractName: 'PositionManager',
  sourceName: 'src/PositionManager.sol',
  abi: [
    {
      type: 'constructor',
      inputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'DOMAIN_SEPARATOR',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'PERMIT_TYPEHASH',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'approve',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'balanceOf',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'burn',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'getApproved',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getLP',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getPositionIndexes',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getPositionIndexesFiltered',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getPositionInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'isAjnaPool',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'isApprovedForAll',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'isIndexInPosition',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'isPositionBucketBankrupt',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'memorializePositions',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'mint',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'moveLiquidity',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'multicall',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'name',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'nonces',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'ownerOf',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'permit',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'poolKey',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'redeemPositions',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'safeTransferFrom',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'safeTransferFrom',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'setApprovalForAll',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'supportsInterface',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'symbol',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'tokenURI',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'transferFrom',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'event',
      name: 'Approval',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'ApprovalForAll',
      inputs: [Array],
      anonymous: false
    },
    { type: 'event', name: 'Burn', inputs: [Array], anonymous: false },
    {
      type: 'event',
      name: 'MemorializePosition',
      inputs: [Array],
      anonymous: false
    },
    { type: 'event', name: 'Mint', inputs: [Array], anonymous: false },
    {
      type: 'event',
      name: 'MoveLiquidity',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'RedeemPosition',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'Transfer',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'AllowanceTooLow', inputs: [] },
    { type: 'error', name: 'BucketBankrupt', inputs: [] },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'DeployWithZeroAddress', inputs: [] },
    { type: 'error', name: 'LiquidityNotRemoved', inputs: [] },
    { type: 'error', name: 'NoAuth', inputs: [] },
    { type: 'error', name: 'NoToken', inputs: [] },
    { type: 'error', name: 'NonExistentToken', inputs: [] },
    { type: 'error', name: 'NotAjnaPool', inputs: [] },
    { type: 'error', name: 'NotAuthorized', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'PermitExpired', inputs: [] },
    { type: 'error', name: 'RemovePositionFailed', inputs: [] },
    { type: 'error', name: 'WrongPool', inputs: [] }
  ],
  bytecode: '0x61014060405260016009553480156200001757600080fd5b5060405162004c3338038062004c338339810160408190526200003a91620001ca565b6040518060400160405280601581526020017f416a6e6120506f736974696f6e73204e46542d563100000000000000000000008152506040518060400160405280600b81526020016a414a4e412d56312d504f5360a81b815250604051806040016040528060018152602001603160f81b81525082828160009081620000c19190620002ae565b506001620000d08282620002ae565b5050835160208086019190912060c081815284518584012060e08190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8189015280820196909652606086019390935260808501919091523084820152815180850390910181529290910190528051910120905060805250506001600755506001600160a01b03821615806200017857506001600160a01b038116155b15620001975760405163104aee1f60e01b815260040160405180910390fd5b6001600160a01b039182166101005216610120526200037a565b6001600160a01b0381168114620001c757600080fd5b50565b60008060408385031215620001de57600080fd5b8251620001eb81620001b1565b6020840151909250620001fe81620001b1565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200023457607f821691505b6020821081036200025557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002a957600081815260208120601f850160051c81016020861015620002845750805b601f850160051c820191505b81811015620002a55782815560010162000290565b5050505b505050565b81516001600160401b03811115620002ca57620002ca62000209565b620002e281620002db84546200021f565b846200025b565b602080601f8311600181146200031a5760008415620003015750858301515b600019600386901b1c1916600185901b178555620002a5565b600085815260208120601f198616915b828110156200034b578886015182559484019460019091019084016200032a565b50858210156200036a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e0516101005161012051614869620003ca6000396000611ef601526000611e61015260006120550152600061203001526000611fda015260006120a601526148696000f3fe608060405234801561001057600080fd5b50600436106101755760003560e01c806301ffc9a71461017a57806305670774146101a257806306fdde03146101c2578063081812fc146101d7578063095ea7b314610202578063141a468c146102175780631a7d79dd146102385780631aef67701461024b578063228248321461025e57806323b872dd1461027157806330adf81f146102845780633644e5151461029957806342842e0e146102a15780636352211e146102b457806367e820ad146102c75780636827d465146102ef5780636901f7681461030257806370a082311461032b57806372512e261461033e578063745a41bc146103515780637d9202c314610364578063845197a11461037757806395d89b411461038a5780639dc29fac14610392578063a22cb465146103a5578063ac9650d8146103b8578063b4dc0aad146103d8578063b88d4fde146103eb578063c87b56dd146103fe578063e985e9c514610411578063ed513d3514610424575b600080fd5b61018d610188366004613cab565b610437565b60405190151581526020015b60405180910390f35b6101b56101b0366004613cc8565b610462565b6040516101999190613d1c565b6101ca610594565b6040516101999190613d7f565b6101ea6101e5366004613cc8565b610626565b6040516001600160a01b039091168152602001610199565b610215610210366004613da7565b61064d565b005b61022a610225366004613cc8565b610767565b604051908152602001610199565b610215610246366004613dd3565b6107a2565b61018d610259366004613da7565b610c2a565b61021561026c366004613e5b565b610c3d565b61021561027f366004613eb6565b610f7b565b61022a6000805160206147f483398151915281565b61022a610fac565b6102156102af366004613eb6565b610fbb565b6101ea6102c2366004613cc8565b610fd6565b6102da6102d5366004613ef7565b61100a565b60408051928352602083019190915201610199565b61022a6102fd366004613ef7565b61104a565b6101ea610310366004613cc8565b6000908152600860205260409020546001600160a01b031690565b61022a610339366004613f19565b6110ad565b61018d61034c366004613ef7565b611133565b61021561035f366004613ff9565b611178565b61018d610372366004613ef7565b611202565b6101b5610385366004613cc8565b61121d565b6101ca61123a565b6102156103a0366004613da7565b611249565b6102156103b336600461405b565b61136a565b6103cb6103c6366004614099565b611379565b60405161019991906140da565b6102156103e6366004613e5b565b61146d565b6102156103f936600461413c565b611782565b6101ca61040c366004613cc8565b6117ba565b61018d61041f36600461418f565b611996565b61022a610432366004613eb6565b6119c4565b60006001600160e01b03198216635604e22560e01b148061045c575061045c82611a96565b92915050565b600081815260086020526040812060609161047f60018301611ae6565b8051909150806001600160401b0381111561049c5761049c613f36565b6040519080825280602002602001820160405280156104c5578160200160208202803683370190505b5083549094506000906001600160a01b0316815b8381101561058757610536828683815181106104f7576104f76141bd565b6020026020010151886003016000898681518110610517576105176141bd565b6020026020010151815260200190815260200160002060010154611af3565b61057f5784818151811061054c5761054c6141bd565b6020026020010151878480610560906141e9565b955081518110610572576105726141bd565b6020026020010181815250505b6001016104d9565b5050845250919392505050565b6060600080546105a390614202565b80601f01602080910402602001604051908101604052809291908181526020018280546105cf90614202565b801561061c5780601f106105f15761010080835404028352916020019161061c565b820191906000526020600020905b8154815290600101906020018083116105ff57829003601f168201915b5050505050905090565b600061063182611b7e565b506000908152600460205260409020546001600160a01b031690565b600061065882610fd6565b9050806001600160a01b0316836001600160a01b0316036106ca5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806106e657506106e68133611996565b6107585760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016106c1565b6107628383611ba6565b505050565b600061077282611c14565b61078f57604051634a1850bf60e11b815260040160405180910390fd5b5060009081526006602052604090205490565b6107aa611c31565b84846107b581611b7e565b6107bf3382611c8a565b6107dc5760405163518d568f60e11b815260040160405180910390fd5b6000818152600860205260409020546001600160a01b03838116911614610816576040516369e489f560e11b815260040160405180910390fd5b60008681526008602090815260408083208884526003810183528184208251610140810184528581529384018590529183018490526060830184905260c0830184905260e0830184905261010083018490526101208301849052600182015460808401819052825460a08501529093919291036108a6576040516313ec9d2d60e01b815260040160405180910390fd5b896001600160a01b031663d14827916040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108e157600080fd5b505af11580156108f5573d6000803e3d6000fd5b5050604051632a0f78fb60e21b8152600481018b90526001600160a01b038d16925063a83de3ec915060240160a060405180830381865afa15801561093e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610962919061423c565b50606085015260408401819052602084019190915290825260808201511161099d57604051636e2b846160e11b815260040160405180910390fd5b6109c28160000151826020015183606001518460a001516109bd8d611ce8565b611d53565b60e0820181905260405163332c0e4360e01b815260048101919091526024810189905260448101889052606481018790526001600160a01b038b169063332c0e43906084016060604051808303816000875af1158015610a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4a919061427c565b5061012083015261010082015260018301610a65818a611d78565b610a82576040516313ec9d2d60e01b815260040160405180910390fd5b8161010001518260a0015114610aab576040516313ec9d2d60e01b815260040160405180910390fd5b6000898152600385016020526040812081815560010155610acc8189611d84565b5060008881526003850160205260409020600181015460c08401819052610af6908d908b90611af3565b15610b08576101208301518155610b27565b826101200151816000016000828254610b2191906142aa565b90915550505b6040516353a4f8d360e11b81526001600160a01b038d169063a749f1a690610b55908c9030906004016142bd565b6040805180830381865afa158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9591906142d4565b60c08501819052600183015550610bab8b610fd6565b610100840151610120850151604080518f8152602081018f90529081018d9052606081019290925260808201526001600160a01b0391909116907f058e57ed03c1990e8bce6b006244b2a30ce5537007aaa26523d5a621a38258c09060a00160405180910390a250505050505050610c236001600755565b5050505050565b6000610c368383611d90565b9392505050565b8383610c4881611b7e565b610c523382611c8a565b610c6f5760405163518d568f60e11b815260040160405180910390fd5b6000818152600860205260409020546001600160a01b03838116911614610ca9576040516369e489f560e11b815260040160405180910390fd5b60008581526008602052604081209060018201908890610cc889610fd6565b9050610cee60405180606001604052806000815260200160008152602001600081525090565b600088815b81811015610ec2578b8b82818110610d0d57610d0d6141bd565b905060200201359250610d298388611d8490919063ffffffff16565b506040516353a4f8d360e11b81526001600160a01b0387169063a749f1a690610d5890869089906004016142bd565b6040805180830381865afa158015610d74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9891906142d4565b6020860152845260405163483cd18760e01b81526001600160a01b0387169063483cd18790610dcf90869030908a906004016142f8565b602060405180830381865afa158015610dec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e109190614317565b6040850181905284511115610e385760405163175936bd60e31b815260040160405180910390fd5b60008381526003890160209081526040918290208251808401909352805483526001015490820181905215610e8057610e7687858360200151611af3565b15610e8057600081525b845181518290610e919083906142aa565b905250602080860151828201908152600086815260038c019092526040909120915182555160019182015501610cf3565b50846001600160a01b0316634efe8af785308e8e6040518563ffffffff1660e01b8152600401610ef59493929190614362565b600060405180830381600087803b158015610f0f57600080fd5b505af1158015610f23573d6000803e3d6000fd5b50505050836001600160a01b03167ff8f0adfd241239f9f7732e8d89fa383d35fc89770577f260b7df8fd81c0bcb518d8d8d604051610f649392919061438f565b60405180910390a250505050505050505050505050565b610f853382611c8a565b610fa15760405162461bcd60e51b81526004016106c1906143a9565b610762838383611fc2565b6000610fb6611fd6565b905090565b61'... 29016 more characters,
  deployedBytecode: '0x608060405234801561001057600080fd5b50600436106101755760003560e01c806301ffc9a71461017a57806305670774146101a257806306fdde03146101c2578063081812fc146101d7578063095ea7b314610202578063141a468c146102175780631a7d79dd146102385780631aef67701461024b578063228248321461025e57806323b872dd1461027157806330adf81f146102845780633644e5151461029957806342842e0e146102a15780636352211e146102b457806367e820ad146102c75780636827d465146102ef5780636901f7681461030257806370a082311461032b57806372512e261461033e578063745a41bc146103515780637d9202c314610364578063845197a11461037757806395d89b411461038a5780639dc29fac14610392578063a22cb465146103a5578063ac9650d8146103b8578063b4dc0aad146103d8578063b88d4fde146103eb578063c87b56dd146103fe578063e985e9c514610411578063ed513d3514610424575b600080fd5b61018d610188366004613cab565b610437565b60405190151581526020015b60405180910390f35b6101b56101b0366004613cc8565b610462565b6040516101999190613d1c565b6101ca610594565b6040516101999190613d7f565b6101ea6101e5366004613cc8565b610626565b6040516001600160a01b039091168152602001610199565b610215610210366004613da7565b61064d565b005b61022a610225366004613cc8565b610767565b604051908152602001610199565b610215610246366004613dd3565b6107a2565b61018d610259366004613da7565b610c2a565b61021561026c366004613e5b565b610c3d565b61021561027f366004613eb6565b610f7b565b61022a6000805160206147f483398151915281565b61022a610fac565b6102156102af366004613eb6565b610fbb565b6101ea6102c2366004613cc8565b610fd6565b6102da6102d5366004613ef7565b61100a565b60408051928352602083019190915201610199565b61022a6102fd366004613ef7565b61104a565b6101ea610310366004613cc8565b6000908152600860205260409020546001600160a01b031690565b61022a610339366004613f19565b6110ad565b61018d61034c366004613ef7565b611133565b61021561035f366004613ff9565b611178565b61018d610372366004613ef7565b611202565b6101b5610385366004613cc8565b61121d565b6101ca61123a565b6102156103a0366004613da7565b611249565b6102156103b336600461405b565b61136a565b6103cb6103c6366004614099565b611379565b60405161019991906140da565b6102156103e6366004613e5b565b61146d565b6102156103f936600461413c565b611782565b6101ca61040c366004613cc8565b6117ba565b61018d61041f36600461418f565b611996565b61022a610432366004613eb6565b6119c4565b60006001600160e01b03198216635604e22560e01b148061045c575061045c82611a96565b92915050565b600081815260086020526040812060609161047f60018301611ae6565b8051909150806001600160401b0381111561049c5761049c613f36565b6040519080825280602002602001820160405280156104c5578160200160208202803683370190505b5083549094506000906001600160a01b0316815b8381101561058757610536828683815181106104f7576104f76141bd565b6020026020010151886003016000898681518110610517576105176141bd565b6020026020010151815260200190815260200160002060010154611af3565b61057f5784818151811061054c5761054c6141bd565b6020026020010151878480610560906141e9565b955081518110610572576105726141bd565b6020026020010181815250505b6001016104d9565b5050845250919392505050565b6060600080546105a390614202565b80601f01602080910402602001604051908101604052809291908181526020018280546105cf90614202565b801561061c5780601f106105f15761010080835404028352916020019161061c565b820191906000526020600020905b8154815290600101906020018083116105ff57829003601f168201915b5050505050905090565b600061063182611b7e565b506000908152600460205260409020546001600160a01b031690565b600061065882610fd6565b9050806001600160a01b0316836001600160a01b0316036106ca5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806106e657506106e68133611996565b6107585760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016106c1565b6107628383611ba6565b505050565b600061077282611c14565b61078f57604051634a1850bf60e11b815260040160405180910390fd5b5060009081526006602052604090205490565b6107aa611c31565b84846107b581611b7e565b6107bf3382611c8a565b6107dc5760405163518d568f60e11b815260040160405180910390fd5b6000818152600860205260409020546001600160a01b03838116911614610816576040516369e489f560e11b815260040160405180910390fd5b60008681526008602090815260408083208884526003810183528184208251610140810184528581529384018590529183018490526060830184905260c0830184905260e0830184905261010083018490526101208301849052600182015460808401819052825460a08501529093919291036108a6576040516313ec9d2d60e01b815260040160405180910390fd5b896001600160a01b031663d14827916040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108e157600080fd5b505af11580156108f5573d6000803e3d6000fd5b5050604051632a0f78fb60e21b8152600481018b90526001600160a01b038d16925063a83de3ec915060240160a060405180830381865afa15801561093e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610962919061423c565b50606085015260408401819052602084019190915290825260808201511161099d57604051636e2b846160e11b815260040160405180910390fd5b6109c28160000151826020015183606001518460a001516109bd8d611ce8565b611d53565b60e0820181905260405163332c0e4360e01b815260048101919091526024810189905260448101889052606481018790526001600160a01b038b169063332c0e43906084016060604051808303816000875af1158015610a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4a919061427c565b5061012083015261010082015260018301610a65818a611d78565b610a82576040516313ec9d2d60e01b815260040160405180910390fd5b8161010001518260a0015114610aab576040516313ec9d2d60e01b815260040160405180910390fd5b6000898152600385016020526040812081815560010155610acc8189611d84565b5060008881526003850160205260409020600181015460c08401819052610af6908d908b90611af3565b15610b08576101208301518155610b27565b826101200151816000016000828254610b2191906142aa565b90915550505b6040516353a4f8d360e11b81526001600160a01b038d169063a749f1a690610b55908c9030906004016142bd565b6040805180830381865afa158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9591906142d4565b60c08501819052600183015550610bab8b610fd6565b610100840151610120850151604080518f8152602081018f90529081018d9052606081019290925260808201526001600160a01b0391909116907f058e57ed03c1990e8bce6b006244b2a30ce5537007aaa26523d5a621a38258c09060a00160405180910390a250505050505050610c236001600755565b5050505050565b6000610c368383611d90565b9392505050565b8383610c4881611b7e565b610c523382611c8a565b610c6f5760405163518d568f60e11b815260040160405180910390fd5b6000818152600860205260409020546001600160a01b03838116911614610ca9576040516369e489f560e11b815260040160405180910390fd5b60008581526008602052604081209060018201908890610cc889610fd6565b9050610cee60405180606001604052806000815260200160008152602001600081525090565b600088815b81811015610ec2578b8b82818110610d0d57610d0d6141bd565b905060200201359250610d298388611d8490919063ffffffff16565b506040516353a4f8d360e11b81526001600160a01b0387169063a749f1a690610d5890869089906004016142bd565b6040805180830381865afa158015610d74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9891906142d4565b6020860152845260405163483cd18760e01b81526001600160a01b0387169063483cd18790610dcf90869030908a906004016142f8565b602060405180830381865afa158015610dec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e109190614317565b6040850181905284511115610e385760405163175936bd60e31b815260040160405180910390fd5b60008381526003890160209081526040918290208251808401909352805483526001015490820181905215610e8057610e7687858360200151611af3565b15610e8057600081525b845181518290610e919083906142aa565b905250602080860151828201908152600086815260038c019092526040909120915182555160019182015501610cf3565b50846001600160a01b0316634efe8af785308e8e6040518563ffffffff1660e01b8152600401610ef59493929190614362565b600060405180830381600087803b158015610f0f57600080fd5b505af1158015610f23573d6000803e3d6000fd5b50505050836001600160a01b03167ff8f0adfd241239f9f7732e8d89fa383d35fc89770577f260b7df8fd81c0bcb518d8d8d604051610f649392919061438f565b60405180910390a250505050505050505050505050565b610f853382611c8a565b610fa15760405162461bcd60e51b81526004016106c1906143a9565b610762838383611fc2565b6000610fb6611fd6565b905090565b61076283838360405180602001604052806000815250611782565b600080610fe2836120c8565b90506001600160a01b03811661045c5760405162461bcd60e51b81526004016106c1906143f6565b60008281526008602090815260408083208484526003018252918290208251808401909352805480845260019091015492909101829052905b9250929050565b60008281526008602090815260408083208484526003810183528184208251808401909352805483526001015492820183905280549092611096916001600160a01b0316908690611af3565b6110a15780516110a4565b60005b95945050505050565b60006001600160a01b0382166111175760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016106c1565b506001600160a01b031660009081526003602052604090205490565b6000828152600860209081526040808320805485855260038201909352908320600101549091611170916001600160a01b03909116908590611af3565b949350505050565b814211156111995760405163068568f360e21b815260040160405180910390fd5b6000838152600660205260408120546111b69086908690866120e3565b905060006111c4828461217e565b5090506111d3828483886121c0565b6111f05760405163ea8e4eb560e01b815260040160405180910390fd5b6111fa8686611ba6565b505050505050565b6000828152600860205260408120610c36906001018361220a565b600081815260086020526040902060609061045c90600101611ae6565b6060600180546105a390614202565b818161125481611b7e565b61125e3382611c8a565b61127b5760405163518d568f60e11b815260040160405180910390fd5b6000818152600860205260409020546001600160a01b038381169116146112b5576040516369e489f560e11b815260040160405180910390fd5b60008381526008602052604090206112cf90600101612216565b156112ed5760405163617e154d60e11b815260040160405180910390fd5b60008381526006602090815260408083208390556008909152812080546001600160a01b031916815590600182018181816113288282613c63565b50505050505061133783612220565b604051839033907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca590600090a350505050565b6113753383836122a3565b5050565b6060816001600160401b038111'... 27076 more characters,
  linkReferences: {
    'src/libraries/external/PositionNFTSVG.sol': { PositionNFTSVG: [Array] }
  },
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: `{"language":"Solidity","sources":{"lib/base64/base64.sol":{"content":"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0;\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides functions for encoding/decoding base64\\nlibrary Base64 {\\n    string internal constant TABLE_ENCODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\n    bytes  internal constant TABLE_DECODE = hex\\"0000000000000000000000000000000000000000000000000000000000000000\\"\\n                                            hex\\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\\"\\n                                            hex\\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\\"\\n                                            hex\\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\\";\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return '';\\n\\n        // load the table into memory\\n        string memory table = TABLE_ENCODE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n                // read 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // write 4 characters\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n            }\\n\\n            // padding with '='\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n\\n        return result;\\n    }\\n\\n    function decode(string memory _data) internal pure returns (bytes memory) {\\n        bytes memory data = bytes(_data);\\n\\n        if (data.length == 0) return new bytes(0);\\n        require(data.length % 4 == 0, \\"invalid base64 decoder input\\");\\n\\n        // load the table into memory\\n        bytes memory table = TABLE_DECODE;\\n\\n        // every 4 characters represent 3 bytes\\n        uint256 decodedLen = (data.length / 4) * 3;\\n\\n        // add some extra buffer at the end required for the writing\\n        bytes memory result = new bytes(decodedLen + 32);\\n\\n        assembly {\\n            // padding with '='\\n            let lastBytes := mload(add(data, mload(data)))\\n            if eq(and(lastBytes, 0xFF), 0x3d) {\\n                decodedLen := sub(decodedLen, 1)\\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\\n                    decodedLen := sub(decodedLen, 1)\\n                }\\n            }\\n\\n            // set the actual output length\\n            mstore(result, decodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 4 characters at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               // read 4 characters\\n               dataPtr := add(dataPtr, 4)\\n               let input := mload(dataPtr)\\n\\n               // write 3 bytes\\n               let output := add(\\n                   add(\\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\\n                   add(\\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\\n                    )\\n                )\\n                mstore(resultPtr, shl(232, output))\\n                resultPtr := add(resultPtr, 3)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n"},"lib/clones-with-immutable-args/src/Clone.sol":{"content":"// SPDX-License-Identifier: BSD\\npragma solidity ^0.8.4;\\n\\n/// @title Clone\\n/// @author zefram.eth\\n/// @notice Provides helper functions for reading immutable args from calldata\\ncontract Clone {\\n    /// @notice Reads an immutable arg with type address\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgAddress(uint256 argOffset)\\n        internal\\n        pure\\n        returns (address arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0x60, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint256\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint256(uint256 argOffset)\\n        internal\\n        pure\\n        returns (uint256 arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := calldataload(add(offset, argOffset))\\n        }\\n    }\\n\\n    /// @notice Reads a uint256 array stored in the immutable args.\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @param arrLen Number of elements in the array\\n    /// @return arr The array\\n    function _getArgUint256Array(uint256 argOffset, uint64 arrLen)\\n        internal\\n        pure\\n      returns (uint256[] memory arr)\\n    {\\n      uint256 offset = _getImmutableArgsOffset();\\n      uint256 el;\\n      arr = new uint256[](arrLen);\\n      for (uint64 i = 0; i < arrLen; i++) {\\n        assembly {\\n          // solhint-disable-next-line no-inline-assembly\\n          el := calldataload(add(add(offset, argOffset), mul(i, 32)))\\n        }\\n        arr[i] = el;\\n      }\\n      return arr;\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint64\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint64(uint256 argOffset)\\n        internal\\n        pure\\n        returns (uint64 arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0xc0, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint8\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint8(uint256 argOffset) internal pure returns (uint8 arg) {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0xf8, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @return offset The offset of the packed immutable args in calldata\\n    function _getImmutableArgsOffset() internal pure returns (uint256 offset) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            offset := sub(\\n                calldatasize(),\\n                add(shr(240, calldataload(sub(calldatasize(), 2))), 2)\\n            )\\n        }\\n    }\\n}\\n"},"lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol":{"content":"// SPDX-License-Identifier: BSD\\n\\npragma solidity ^0.8.4;\\n\\n/// @title ClonesWithImmutableArgs\\n/// @author wighawag, zefram.eth\\n/// @notice Enables creating clone contracts with immutable args\\nlibrary ClonesWithImmutableArgs {\\n    error CreateFail();\\n\\n    /// @notice Creates a clone proxy of the implementation contract, with immutable args\\n    /// @dev data cannot exceed 65535 bytes, since 2 bytes are used to store the data length\\n    /// @param implementation The implementation contract to clone\\n    /// @param data Encoded immutable args\\n    /// @return instance The address of the created clone\\n    function clone(address implementation, bytes memory data)\\n        internal\\n        returns (address payable instance)\\n    {\\n        // unrealistic for memory ptr or data length to exceed 256 bits\\n        unchecked {\\n            uint256 extraLength = data.length + 2; // +2 bytes for telling how much data there is appended to the call\\n            uint256 creationSize = 0x41 + extraLength;\\n            uint256 runSize = creationSize - 10;\\n            uint256 dataPtr;\\n            uint256 ptr;\\n            // solhint-disable-next-line no-inline-assembly\\n            assembly {\\n                ptr := mload(0x40)\\n\\n                // -------------------------------------------------------------------------------------------------------------\\n                // CREATION (10 bytes)\\n                // -------------------------------------------------------------------------------------------------------------\\n\\n `... 715533 more characters
  }
}
2024-01-08T15:31:10.638Z cannon:builder:contract lib ref PositionNFTSVG 0x701ea8F0825E7B160c8C39160783eB45f8110424
2024-01-08T15:31:10.639Z cannon:verbose:builder:definition creating hash of {"bytecode":"","args":["0x7689dF0522143E657DF4df373542637aA52A001F","0x254f05996d0A3134c05a97cabfBF4628B45bE6E7"],"salt":"AJNA","value":[]}
2024-01-08T15:31:10.639Z cannon:builder comparing states null fb4473081572a8d61356d2ad2b43991a
2024-01-08T15:31:10.639Z cannon:builder run isolated contract.PositionManager
Executing [contract.PositionManager]...
2024-01-08T15:31:10.641Z cannon:verbose:builder ctx for step contract.PositionManager {
  package: {},
  timestamp: '1704727545',
  chainId: 10,
  settings: {
    bwAJNA_ADDRESS: '0x6c518f9D1a163379235816c543E62922a79863Fa',
    salt: 'AJNA'
  },
  contracts: {
    BorrowerActions: {
      address: '0x422d470fb02206733Bb770D2A27d6d98f493af64',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0xd69579d47bd5c8723115bec074929864a19201645004e7bdbb5c2cb41f904e2f',
      sourceName: 'src/libraries/external/BorrowerActions.sol',
      contractName: 'BorrowerActions',
      deployedOn: 'contract.BorrowerActions',
      highlight: undefined,
      gasUsed: 2100149,
      gasCost: '4275955'
    },
    LenderActions: {
      address: '0x7456CF19C121842FE2C3a888075A11d51ED63b98',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0x9b4f17ee54f9802c9ac92cd6b4eebc449e22b215183590328583b9b596dba208',
      sourceName: 'src/libraries/external/LenderActions.sol',
      contractName: 'LenderActions',
      deployedOn: 'contract.LenderActions',
      highlight: undefined,
      gasUsed: 2329033,
      gasCost: '3001992'
    },
    LPActions: {
      address: '0xb257A98a3549a0B36b9001d0eDc9e75d313d5c8e',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0xf87dedfa9197400f141a7dde71e6096290cc2f6eb4179e437cbd9466988d753d',
      sourceName: 'src/libraries/external/LPActions.sol',
      contractName: 'LPActions',
      deployedOn: 'contract.LPActions',
      highlight: undefined,
      gasUsed: 692518,
      gasCost: '3408368'
    },
    KickerActions: {
      address: '0xf419056B545783BbFfEAB4d0aA057a52FbA4F4fd',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0x6b94aa77f3d25a3b8a8735230426dba65b7160855256b3dfc5f5213a67fc0a68',
      sourceName: 'src/libraries/external/KickerActions.sol',
      contractName: 'KickerActions',
      deployedOn: 'contract.KickerActions',
      highlight: undefined,
      gasUsed: 2173039,
      gasCost: '3816296'
    },
    SettlerActions: {
      address: '0x9EdcD1fEc19E5baA98fa4911C90C2162524750d2',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0x8a41a4cbe5b9c04e6a1475576916c4d7fa7fdcc91df45bc60e0aa8aa33a5074f',
      sourceName: 'src/libraries/external/SettlerActions.sol',
      contractName: 'SettlerActions',
      deployedOn: 'contract.SettlerActions',
      highlight: undefined,
      gasUsed: 2135769,
      gasCost: '2172078'
    },
    TakerActions: {
      address: '0xb127207d673977e14f31f52a14AD07e6a512c5fA',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0x24588ac27cea4c4b9080124841c3d378ff5954332948fd042694e445e525ab41',
      sourceName: 'src/libraries/external/TakerActions.sol',
      contractName: 'TakerActions',
      deployedOn: 'contract.TakerActions',
      highlight: undefined,
      gasUsed: 3558325,
      gasCost: '1939228'
    },
    PoolCommons: {
      address: '0xe77bfEeB83CD09bD9b598a90f7Ce7faE02c71540',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0x9ee2e160d6eff90f8f284668026974bc66484709a99d7fce7cd7e3f527bdbfb1',
      sourceName: 'src/libraries/external/PoolCommons.sol',
      contractName: 'PoolCommons',
      deployedOn: 'contract.PoolCommons',
      highlight: undefined,
      gasUsed: 2546476,
      gasCost: '2685008'
    },
    ERC20PoolFactory: {
      address: '0x7689dF0522143E657DF4df373542637aA52A001F',
      abi: [Array],
      constructorArgs: [Array],
      linkedLibraries: [Object],
      deployTxnHash: '0xeaeecb982e0fca77779ffef670dd447c9d6926c253716660dafcc1db1ccba524',
      sourceName: 'src/ERC20PoolFactory.sol',
      contractName: 'ERC20PoolFactory',
      deployedOn: 'contract.ERC20PoolFactory',
      highlight: undefined,
      gasUsed: 5831338,
      gasCost: '1754328'
    },
    ERC721PoolFactory: {
      address: '0x254f05996d0A3134c05a97cabfBF4628B45bE6E7',
      abi: [Array],
      constructorArgs: [Array],
      linkedLibraries: [Object],
      deployTxnHash: '0xdac51065e79e61bab92fcc89b3765b3718aa1fec1a1ba83457cbb887f8b6eb39',
      sourceName: 'src/ERC721PoolFactory.sol',
      contractName: 'ERC721PoolFactory',
      deployedOn: 'contract.ERC721PoolFactory',
      highlight: undefined,
      gasUsed: 6287410,
      gasCost: '1620288'
    },
    PositionNFTSVG: {
      address: '0x701ea8F0825E7B160c8C39160783eB45f8110424',
      abi: [Array],
      constructorArgs: [],
      linkedLibraries: {},
      deployTxnHash: '0xd812ffc0aea8df87cc4bfe80519632bceddd9fdf8c405c8e25bb1a389b5670af',
      sourceName: 'src/libraries/external/PositionNFTSVG.sol',
      contractName: 'PositionNFTSVG',
      deployedOn: 'contract.PositionNFTSVG',
      highlight: undefined,
      gasUsed: 3316823,
      gasCost: '2406360'
    }
  },
  txns: {},
  imports: {},
  extras: {}
}
2024-01-08T15:31:10.642Z cannon:builder:contract exec {
  artifact: 'PositionManager',
  args: [
    '0x7689dF0522143E657DF4df373542637aA52A001F',
    '0x254f05996d0A3134c05a97cabfBF4628B45bE6E7'
  ],
  libraries: { PositionNFTSVG: '0x701ea8F0825E7B160c8C39160783eB45f8110424' },
  salt: 'AJNA',
  create2: true,
  from: '',
  nonce: '',
  value: '',
  abi: ''
}
2024-01-08T15:31:10.645Z cannon:cli:rpc eth_chainId

2024-01-08T15:31:10.647Z cannon:cli:rpc eth_getCode

2024-01-08T15:31:10.654Z cannon:builder:runtime resolve artifact PositionManager
2024-01-08T15:31:10.654Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:31:20.375Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/PositionManager.sol': 'PositionManager' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/base64/base64.sol': {
      keccak256: '0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf',
      urls: [Array],
      license: 'MIT'
    },
    'lib/clones-with-immutable-args/src/Clone.sol': {
      keccak256: '0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545',
      urls: [Array],
      license: 'BSD'
    },
    'lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol': {
      keccak256: '0xcb7cbb68b8a90e6eff9c7a29f5b7d5964e0cedc0ad8133f5bcb3ec3a9aeb391c',
      urls: [Array],
      license: 'BSD'
    },
    'lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol': {
      keccak256: '0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol': {
      keccak256: '0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol': {
      keccak256: '0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol': {
      keccak256: '0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol': {
      keccak256: '0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol': {
      keccak256: '0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol': {
      keccak256: '0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol': {
      keccak256: '0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol': {
      keccak256: '0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol': {
      keccak256: '0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol': {
      keccak256: '0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Address.sol': {
      keccak256: '0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Context.sol': {
      keccak256: '0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Multicall.sol': {
      keccak256: '0x35e30a35e23f856cbcee3558b7efdd83f6017a8f1b419710645143d98e892463',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Strings.sol': {
      keccak256: '0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol': {
      keccak256: '0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol': {
      keccak256: '0xbc8d1f66b26e211a1f6f40a17453e9d5020ec96749014379205cff100809884c',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol': {
      keccak256: '0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol': {
      keccak256: '0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol': {
      keccak256: '0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathUD60x18.sol': {
      keccak256: '0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/ERC20Pool.sol': {
      keccak256: '0xe372d950d3ace12bae8ee8a495a6f44c6521778ff56e9b25f3ccdbf266aea0d6',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/ERC20PoolFactory.sol': {
      keccak256: '0xdd7c1e42906f6a7693bf72014b39f36c692e0f4a17e7593d7f887ec84b697c85',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/ERC721Pool.sol': {
      keccak256: '0xce94095e9d2022c001506ef1901515d9adf7f639b3b01c14b6bc2de5633ea0e2',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/ERC721PoolFactory.sol': {
      keccak256: '0xa44628e67dfe4b35e7d73fbe30db5a09551196e4a3061087bacaee14fac87237',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/PositionManager.sol': {
      keccak256: '0x84090eb2a28d53e333d0da6684ed23e581ecff025a9f5d9eab4933206079e14a',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/FlashloanablePool.sol': {
      keccak256: '0x1f3767f4d27c13ef2c53bcf49c1d5917c77b2d3fb7a28576f0c2a131a8377f6f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/PermitERC721.sol': {
      keccak256: '0x65a60c2446ff63fa91bc3931e463f1a2d731060d70a8be0b1718fb25068d8dd1',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/Pool.sol': {
      keccak256: '0x87159e77eeee256f1501035738bb015a1d4d360fab31ea077f4ddcaff4e54d22',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/PoolDeployer.sol': {
      keccak256: '0x81b87acb71ecdbb00a37f4b0b23d21554692bde445fbc19871353bcce128d53e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPoolFactory.sol': {
      keccak256: '0x53d72e58a4b0d6a5e8aeb23a2f40262636c823170037179220ec29ca403dae76',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20Pool.sol': {
      keccak256: '0xac0fc147804f48919ee17416dd6659eb77aed7d5c1b192f2e9f86862363346d4',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolBorrowerActions.sol': {
      keccak256: '0xe7bcfa2227cdb6249ad214d83a82935f0eb048472c277a599ba67c31f3d191b2',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolEvents.sol': {
      keccak256: '0xeccea62ed02e93376371d0ad723f0f94d390363fc836720170f018a5e928046c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolFactory.sol': {
      keccak256: '0x010cb58b359152dea4534951089b55dad96f8e9bf4b2815ff33b73a38e62d5ef',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolImmutables.sol': {
      keccak256: '0x54c17faa7d4eccf84d8923d9531725e266d27b8a5ef2cbc59475749ad44a5834',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolLenderActions.sol': {
      keccak256: '0xdf8d1b579da0ae2d47c938f5e262658ceb7d807d2e245b9a6e4a3f6febe9a0cc',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20Taker.sol': {
      keccak256: '0x3ddd154139854a83d3f46adb95dea763569f55dbf702cfcdc0abcc588bf7bea0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721Pool.sol': {
      keccak256: '0x2873a73b910d1a1a2d403dac08ecec0afd1b58142185e27565edfa695d278b95',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolBorrowerActions.sol': {
      keccak256: '0x3c80e33d8fe71470d391af54e9a70c124e9677b9f8848a8d8d77ee1f6182ce21',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolErrors.sol': {
      keccak256: '0x896b15da426f1baa78d9d09aebe78d236011650b714e45f90e5c4bb096b481af',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolEvents.sol': {
      keccak256: '0xf5c0aaae515ed6e22b49b0a0f5b9d45f6cf2fad6fae83201893ba7907fc7d3bf',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolFactory.sol': {
      keccak256: '0x2bfafdc6ab11b11d75caa61441964799d7b780d93e3a1938b989a135a5070471',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolImmutables.sol': {
      keccak256: '0x5f8d672bad5dfae9556334a0ea5107452b02075502a1fb9ac7bc521c071310db',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolLenderActions.sol': {
      keccak256: '0xcff44a133099f3a1cd574f18e46f6c0076de2384a16df281bab2b9d627b5a42b',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolState.sol': {
      keccak256: '0x2742176dd54be93117cdba89ad45d3a68f0d0fbf0d8e6f3decd7df4b81815cf6',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721Taker.sol': {
      keccak256: '0x7c27a3083aeeaa008978dcba9f7454b9959a59e36c2559e0b1a251494e536488',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/position/IPositionManager.sol': {
      keccak256: '0xfa4f0d63758c67a29b4a44e8d30c5767471ba7a2e55dd65e3c524306cc50388f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/position/IPositionManagerDerivedState.sol': {
      keccak256: '0x3fff099a0accb7dccead8abe09996917d2bf5448a1f6e3940be240b7866eeb78',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/position/IPositionManagerErrors.sol': {
      keccak256: '0x37c355d22bb30147327d65486905284a0ee73e23f802332479a7998fc24eb337',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/position/IPositionManagerEvents.sol': {
      keccak256: '0x7c4d6b36d6e3837eb0efe3ea82ac68d44006128378263b463669789e1611376e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/position/IPositionManagerOwnerActions.sol': {
      keccak256: '0xdc673f85f09aa5c1a6f2172a5403c6f84de8c361a270dd5a9e6fb52ddbca8db5',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/position/IPositionManagerState.sol': {
      keccak256: '0x495951d7ba3ba905d045770bcea8516b400bb112409f9870d1e0d1893d1b4c1d',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/BorrowerActions.sol': {
      keccak256: '0xecf8ce41a4034aa174c72bab7e558d788c1cc052ee77b2151f4acee4691be839',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/KickerActions.sol': {
      keccak256: '0xa486e9c9091c1cc8966f13b2b6bb9f9b7eeaf26d539b990c3904befd7a2a25fe',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/LPActions.sol': {
      keccak256: '0x4def554bc6414a7a4a575b8fced4fd334b28c484f09e5f616a0c228cbf875c85',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/LenderActions.sol': {
      keccak256: '0x04b37827f21db736b668fb27393b6c8b968b4cb24abf338b0a658090a173e0dd',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/PoolCommons.sol': {
      keccak256: '0x1dd40766b71468dade905c41a90783dad18761fe998f1a85acd79e8a0bb32ed3',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/PositionNFTSVG.sol': {
      keccak256: '0xc99cd282f520c3bdc84f4da0309ad36ff0bab58a4057247c3eb7ab905df681c5',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/SettlerActions.sol': {
      keccak256: '0x05edfe3f72323b7212fbb5134f76211f397138c2ed30ddf0f3683772213c831d',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/TakerActions.sol': {
      keccak256: '0x642ee2cabe710495ccc32c269750578cbfe924af26dcc73b8ce6cdf06adce68e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/RevertsHelper.sol': {
      keccak256: '0xcaff095290172f1b5726d4e887ab9be5f524d9321e94ca0095f99b666381a6f4',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/SafeTokenNamer.sol': {
      keccak256: '0xf4b4f40f09ed8c6f801c17ada5619a8ebaf98c81c1da28e4ce9504d2feb7c127',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:31:20.378Z cannon:cli:foundry evm version paris
2024-01-08T15:31:20.404Z cannon:builder:runtime reported contract artifact PositionManager {
  contractName: 'PositionManager',
  sourceName: 'src/PositionManager.sol',
  abi: [
    {
      type: 'constructor',
      inputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'DOMAIN_SEPARATOR',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'PERMIT_TYPEHASH',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'approve',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'balanceOf',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'burn',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'getApproved',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getLP',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getPositionIndexes',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getPositionIndexesFiltered',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getPositionInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'isAjnaPool',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'isApprovedForAll',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'isIndexInPosition',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'isPositionBucketBankrupt',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'memorializePositions',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'mint',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'moveLiquidity',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'multicall',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'name',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'nonces',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'ownerOf',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'permit',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'poolKey',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'redeemPositions',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'safeTransferFrom',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'safeTransferFrom',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'setApprovalForAll',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'supportsInterface',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'symbol',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'tokenURI',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'transferFrom',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'event',
      name: 'Approval',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'ApprovalForAll',
      inputs: [Array],
      anonymous: false
    },
    { type: 'event', name: 'Burn', inputs: [Array], anonymous: false },
    {
      type: 'event',
      name: 'MemorializePosition',
      inputs: [Array],
      anonymous: false
    },
    { type: 'event', name: 'Mint', inputs: [Array], anonymous: false },
    {
      type: 'event',
      name: 'MoveLiquidity',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'RedeemPosition',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'Transfer',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'AllowanceTooLow', inputs: [] },
    { type: 'error', name: 'BucketBankrupt', inputs: [] },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'DeployWithZeroAddress', inputs: [] },
    { type: 'error', name: 'LiquidityNotRemoved', inputs: [] },
    { type: 'error', name: 'NoAuth', inputs: [] },
    { type: 'error', name: 'NoToken', inputs: [] },
    { type: 'error', name: 'NonExistentToken', inputs: [] },
    { type: 'error', name: 'NotAjnaPool', inputs: [] },
    { type: 'error', name: 'NotAuthorized', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'PermitExpired', inputs: [] },
    { type: 'error', name: 'RemovePositionFailed', inputs: [] },
    { type: 'error', name: 'WrongPool', inputs: [] }
  ],
  bytecode: '0x61014060405260016009553480156200001757600080fd5b5060405162004c3338038062004c338339810160408190526200003a91620001ca565b6040518060400160405280601581526020017f416a6e6120506f736974696f6e73204e46542d563100000000000000000000008152506040518060400160405280600b81526020016a414a4e412d56312d504f5360a81b815250604051806040016040528060018152602001603160f81b81525082828160009081620000c19190620002ae565b506001620000d08282620002ae565b5050835160208086019190912060c081815284518584012060e08190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8189015280820196909652606086019390935260808501919091523084820152815180850390910181529290910190528051910120905060805250506001600755506001600160a01b03821615806200017857506001600160a01b038116155b15620001975760405163104aee1f60e01b815260040160405180910390fd5b6001600160a01b039182166101005216610120526200037a565b6001600160a01b0381168114620001c757600080fd5b50565b60008060408385031215620001de57600080fd5b8251620001eb81620001b1565b6020840151909250620001fe81620001b1565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200023457607f821691505b6020821081036200025557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002a957600081815260208120601f850160051c81016020861015620002845750805b601f850160051c820191505b81811015620002a55782815560010162000290565b5050505b505050565b81516001600160401b03811115620002ca57620002ca62000209565b620002e281620002db84546200021f565b846200025b565b602080601f8311600181146200031a5760008415620003015750858301515b600019600386901b1c1916600185901b178555620002a5565b600085815260208120601f198616915b828110156200034b578886015182559484019460019091019084016200032a565b50858210156200036a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e0516101005161012051614869620003ca6000396000611ef601526000611e61015260006120550152600061203001526000611fda015260006120a601526148696000f3fe608060405234801561001057600080fd5b50600436106101755760003560e01c806301ffc9a71461017a57806305670774146101a257806306fdde03146101c2578063081812fc146101d7578063095ea7b314610202578063141a468c146102175780631a7d79dd146102385780631aef67701461024b578063228248321461025e57806323b872dd1461027157806330adf81f146102845780633644e5151461029957806342842e0e146102a15780636352211e146102b457806367e820ad146102c75780636827d465146102ef5780636901f7681461030257806370a082311461032b57806372512e261461033e578063745a41bc146103515780637d9202c314610364578063845197a11461037757806395d89b411461038a5780639dc29fac14610392578063a22cb465146103a5578063ac9650d8146103b8578063b4dc0aad146103d8578063b88d4fde146103eb578063c87b56dd146103fe578063e985e9c514610411578063ed513d3514610424575b600080fd5b61018d610188366004613cab565b610437565b60405190151581526020015b60405180910390f35b6101b56101b0366004613cc8565b610462565b6040516101999190613d1c565b6101ca610594565b6040516101999190613d7f565b6101ea6101e5366004613cc8565b610626565b6040516001600160a01b039091168152602001610199565b610215610210366004613da7565b61064d565b005b61022a610225366004613cc8565b610767565b604051908152602001610199565b610215610246366004613dd3565b6107a2565b61018d610259366004613da7565b610c2a565b61021561026c366004613e5b565b610c3d565b61021561027f366004613eb6565b610f7b565b61022a6000805160206147f483398151915281565b61022a610fac565b6102156102af366004613eb6565b610fbb565b6101ea6102c2366004613cc8565b610fd6565b6102da6102d5366004613ef7565b61100a565b60408051928352602083019190915201610199565b61022a6102fd366004613ef7565b61104a565b6101ea610310366004613cc8565b6000908152600860205260409020546001600160a01b031690565b61022a610339366004613f19565b6110ad565b61018d61034c366004613ef7565b611133565b61021561035f366004613ff9565b611178565b61018d610372366004613ef7565b611202565b6101b5610385366004613cc8565b61121d565b6101ca61123a565b6102156103a0366004613da7565b611249565b6102156103b336600461405b565b61136a565b6103cb6103c6366004614099565b611379565b60405161019991906140da565b6102156103e6366004613e5b565b61146d565b6102156103f936600461413c565b611782565b6101ca61040c366004613cc8565b6117ba565b61018d61041f36600461418f565b611996565b61022a610432366004613eb6565b6119c4565b60006001600160e01b03198216635604e22560e01b148061045c575061045c82611a96565b92915050565b600081815260086020526040812060609161047f60018301611ae6565b8051909150806001600160401b0381111561049c5761049c613f36565b6040519080825280602002602001820160405280156104c5578160200160208202803683370190505b5083549094506000906001600160a01b0316815b8381101561058757610536828683815181106104f7576104f76141bd565b6020026020010151886003016000898681518110610517576105176141bd565b6020026020010151815260200190815260200160002060010154611af3565b61057f5784818151811061054c5761054c6141bd565b6020026020010151878480610560906141e9565b955081518110610572576105726141bd565b6020026020010181815250505b6001016104d9565b5050845250919392505050565b6060600080546105a390614202565b80601f01602080910402602001604051908101604052809291908181526020018280546105cf90614202565b801561061c5780601f106105f15761010080835404028352916020019161061c565b820191906000526020600020905b8154815290600101906020018083116105ff57829003601f168201915b5050505050905090565b600061063182611b7e565b506000908152600460205260409020546001600160a01b031690565b600061065882610fd6565b9050806001600160a01b0316836001600160a01b0316036106ca5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806106e657506106e68133611996565b6107585760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016106c1565b6107628383611ba6565b505050565b600061077282611c14565b61078f57604051634a1850bf60e11b815260040160405180910390fd5b5060009081526006602052604090205490565b6107aa611c31565b84846107b581611b7e565b6107bf3382611c8a565b6107dc5760405163518d568f60e11b815260040160405180910390fd5b6000818152600860205260409020546001600160a01b03838116911614610816576040516369e489f560e11b815260040160405180910390fd5b60008681526008602090815260408083208884526003810183528184208251610140810184528581529384018590529183018490526060830184905260c0830184905260e0830184905261010083018490526101208301849052600182015460808401819052825460a08501529093919291036108a6576040516313ec9d2d60e01b815260040160405180910390fd5b896001600160a01b031663d14827916040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108e157600080fd5b505af11580156108f5573d6000803e3d6000fd5b5050604051632a0f78fb60e21b8152600481018b90526001600160a01b038d16925063a83de3ec915060240160a060405180830381865afa15801561093e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610962919061423c565b50606085015260408401819052602084019190915290825260808201511161099d57604051636e2b846160e11b815260040160405180910390fd5b6109c28160000151826020015183606001518460a001516109bd8d611ce8565b611d53565b60e0820181905260405163332c0e4360e01b815260048101919091526024810189905260448101889052606481018790526001600160a01b038b169063332c0e43906084016060604051808303816000875af1158015610a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4a919061427c565b5061012083015261010082015260018301610a65818a611d78565b610a82576040516313ec9d2d60e01b815260040160405180910390fd5b8161010001518260a0015114610aab576040516313ec9d2d60e01b815260040160405180910390fd5b6000898152600385016020526040812081815560010155610acc8189611d84565b5060008881526003850160205260409020600181015460c08401819052610af6908d908b90611af3565b15610b08576101208301518155610b27565b826101200151816000016000828254610b2191906142aa565b90915550505b6040516353a4f8d360e11b81526001600160a01b038d169063a749f1a690610b55908c9030906004016142bd565b6040805180830381865afa158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9591906142d4565b60c08501819052600183015550610bab8b610fd6565b610100840151610120850151604080518f8152602081018f90529081018d9052606081019290925260808201526001600160a01b0391909116907f058e57ed03c1990e8bce6b006244b2a30ce5537007aaa26523d5a621a38258c09060a00160405180910390a250505050505050610c236001600755565b5050505050565b6000610c368383611d90565b9392505050565b8383610c4881611b7e565b610c523382611c8a565b610c6f5760405163518d568f60e11b815260040160405180910390fd5b6000818152600860205260409020546001600160a01b03838116911614610ca9576040516369e489f560e11b815260040160405180910390fd5b60008581526008602052604081209060018201908890610cc889610fd6565b9050610cee60405180606001604052806000815260200160008152602001600081525090565b600088815b81811015610ec2578b8b82818110610d0d57610d0d6141bd565b905060200201359250610d298388611d8490919063ffffffff16565b506040516353a4f8d360e11b81526001600160a01b0387169063a749f1a690610d5890869089906004016142bd565b6040805180830381865afa158015610d74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9891906142d4565b6020860152845260405163483cd18760e01b81526001600160a01b0387169063483cd18790610dcf90869030908a906004016142f8565b602060405180830381865afa158015610dec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e109190614317565b6040850181905284511115610e385760405163175936bd60e31b815260040160405180910390fd5b60008381526003890160209081526040918290208251808401909352805483526001015490820181905215610e8057610e7687858360200151611af3565b15610e8057600081525b845181518290610e919083906142aa565b905250602080860151828201908152600086815260038c019092526040909120915182555160019182015501610cf3565b50846001600160a01b0316634efe8af785308e8e6040518563ffffffff1660e01b8152600401610ef59493929190614362565b600060405180830381600087803b158015610f0f57600080fd5b505af1158015610f23573d6000803e3d6000fd5b50505050836001600160a01b03167ff8f0adfd241239f9f7732e8d89fa383d35fc89770577f260b7df8fd81c0bcb518d8d8d604051610f649392919061438f565b60405180910390a250505050505050505050505050565b610f853382611c8a565b610fa15760405162461bcd60e51b81526004016106c1906143a9565b610762838383611fc2565b6000610fb6611fd6565b905090565b61'... 29016 more characters,
  deployedBytecode: '0x608060405234801561001057600080fd5b50600436106101755760003560e01c806301ffc9a71461017a57806305670774146101a257806306fdde03146101c2578063081812fc146101d7578063095ea7b314610202578063141a468c146102175780631a7d79dd146102385780631aef67701461024b578063228248321461025e57806323b872dd1461027157806330adf81f146102845780633644e5151461029957806342842e0e146102a15780636352211e146102b457806367e820ad146102c75780636827d465146102ef5780636901f7681461030257806370a082311461032b57806372512e261461033e578063745a41bc146103515780637d9202c314610364578063845197a11461037757806395d89b411461038a5780639dc29fac14610392578063a22cb465146103a5578063ac9650d8146103b8578063b4dc0aad146103d8578063b88d4fde146103eb578063c87b56dd146103fe578063e985e9c514610411578063ed513d3514610424575b600080fd5b61018d610188366004613cab565b610437565b60405190151581526020015b60405180910390f35b6101b56101b0366004613cc8565b610462565b6040516101999190613d1c565b6101ca610594565b6040516101999190613d7f565b6101ea6101e5366004613cc8565b610626565b6040516001600160a01b039091168152602001610199565b610215610210366004613da7565b61064d565b005b61022a610225366004613cc8565b610767565b604051908152602001610199565b610215610246366004613dd3565b6107a2565b61018d610259366004613da7565b610c2a565b61021561026c366004613e5b565b610c3d565b61021561027f366004613eb6565b610f7b565b61022a6000805160206147f483398151915281565b61022a610fac565b6102156102af366004613eb6565b610fbb565b6101ea6102c2366004613cc8565b610fd6565b6102da6102d5366004613ef7565b61100a565b60408051928352602083019190915201610199565b61022a6102fd366004613ef7565b61104a565b6101ea610310366004613cc8565b6000908152600860205260409020546001600160a01b031690565b61022a610339366004613f19565b6110ad565b61018d61034c366004613ef7565b611133565b61021561035f366004613ff9565b611178565b61018d610372366004613ef7565b611202565b6101b5610385366004613cc8565b61121d565b6101ca61123a565b6102156103a0366004613da7565b611249565b6102156103b336600461405b565b61136a565b6103cb6103c6366004614099565b611379565b60405161019991906140da565b6102156103e6366004613e5b565b61146d565b6102156103f936600461413c565b611782565b6101ca61040c366004613cc8565b6117ba565b61018d61041f36600461418f565b611996565b61022a610432366004613eb6565b6119c4565b60006001600160e01b03198216635604e22560e01b148061045c575061045c82611a96565b92915050565b600081815260086020526040812060609161047f60018301611ae6565b8051909150806001600160401b0381111561049c5761049c613f36565b6040519080825280602002602001820160405280156104c5578160200160208202803683370190505b5083549094506000906001600160a01b0316815b8381101561058757610536828683815181106104f7576104f76141bd565b6020026020010151886003016000898681518110610517576105176141bd565b6020026020010151815260200190815260200160002060010154611af3565b61057f5784818151811061054c5761054c6141bd565b6020026020010151878480610560906141e9565b955081518110610572576105726141bd565b6020026020010181815250505b6001016104d9565b5050845250919392505050565b6060600080546105a390614202565b80601f01602080910402602001604051908101604052809291908181526020018280546105cf90614202565b801561061c5780601f106105f15761010080835404028352916020019161061c565b820191906000526020600020905b8154815290600101906020018083116105ff57829003601f168201915b5050505050905090565b600061063182611b7e565b506000908152600460205260409020546001600160a01b031690565b600061065882610fd6565b9050806001600160a01b0316836001600160a01b0316036106ca5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806106e657506106e68133611996565b6107585760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016106c1565b6107628383611ba6565b505050565b600061077282611c14565b61078f57604051634a1850bf60e11b815260040160405180910390fd5b5060009081526006602052604090205490565b6107aa611c31565b84846107b581611b7e565b6107bf3382611c8a565b6107dc5760405163518d568f60e11b815260040160405180910390fd5b6000818152600860205260409020546001600160a01b03838116911614610816576040516369e489f560e11b815260040160405180910390fd5b60008681526008602090815260408083208884526003810183528184208251610140810184528581529384018590529183018490526060830184905260c0830184905260e0830184905261010083018490526101208301849052600182015460808401819052825460a08501529093919291036108a6576040516313ec9d2d60e01b815260040160405180910390fd5b896001600160a01b031663d14827916040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108e157600080fd5b505af11580156108f5573d6000803e3d6000fd5b5050604051632a0f78fb60e21b8152600481018b90526001600160a01b038d16925063a83de3ec915060240160a060405180830381865afa15801561093e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610962919061423c565b50606085015260408401819052602084019190915290825260808201511161099d57604051636e2b846160e11b815260040160405180910390fd5b6109c28160000151826020015183606001518460a001516109bd8d611ce8565b611d53565b60e0820181905260405163332c0e4360e01b815260048101919091526024810189905260448101889052606481018790526001600160a01b038b169063332c0e43906084016060604051808303816000875af1158015610a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4a919061427c565b5061012083015261010082015260018301610a65818a611d78565b610a82576040516313ec9d2d60e01b815260040160405180910390fd5b8161010001518260a0015114610aab576040516313ec9d2d60e01b815260040160405180910390fd5b6000898152600385016020526040812081815560010155610acc8189611d84565b5060008881526003850160205260409020600181015460c08401819052610af6908d908b90611af3565b15610b08576101208301518155610b27565b826101200151816000016000828254610b2191906142aa565b90915550505b6040516353a4f8d360e11b81526001600160a01b038d169063a749f1a690610b55908c9030906004016142bd565b6040805180830381865afa158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9591906142d4565b60c08501819052600183015550610bab8b610fd6565b610100840151610120850151604080518f8152602081018f90529081018d9052606081019290925260808201526001600160a01b0391909116907f058e57ed03c1990e8bce6b006244b2a30ce5537007aaa26523d5a621a38258c09060a00160405180910390a250505050505050610c236001600755565b5050505050565b6000610c368383611d90565b9392505050565b8383610c4881611b7e565b610c523382611c8a565b610c6f5760405163518d568f60e11b815260040160405180910390fd5b6000818152600860205260409020546001600160a01b03838116911614610ca9576040516369e489f560e11b815260040160405180910390fd5b60008581526008602052604081209060018201908890610cc889610fd6565b9050610cee60405180606001604052806000815260200160008152602001600081525090565b600088815b81811015610ec2578b8b82818110610d0d57610d0d6141bd565b905060200201359250610d298388611d8490919063ffffffff16565b506040516353a4f8d360e11b81526001600160a01b0387169063a749f1a690610d5890869089906004016142bd565b6040805180830381865afa158015610d74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9891906142d4565b6020860152845260405163483cd18760e01b81526001600160a01b0387169063483cd18790610dcf90869030908a906004016142f8565b602060405180830381865afa158015610dec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e109190614317565b6040850181905284511115610e385760405163175936bd60e31b815260040160405180910390fd5b60008381526003890160209081526040918290208251808401909352805483526001015490820181905215610e8057610e7687858360200151611af3565b15610e8057600081525b845181518290610e919083906142aa565b905250602080860151828201908152600086815260038c019092526040909120915182555160019182015501610cf3565b50846001600160a01b0316634efe8af785308e8e6040518563ffffffff1660e01b8152600401610ef59493929190614362565b600060405180830381600087803b158015610f0f57600080fd5b505af1158015610f23573d6000803e3d6000fd5b50505050836001600160a01b03167ff8f0adfd241239f9f7732e8d89fa383d35fc89770577f260b7df8fd81c0bcb518d8d8d604051610f649392919061438f565b60405180910390a250505050505050505050505050565b610f853382611c8a565b610fa15760405162461bcd60e51b81526004016106c1906143a9565b610762838383611fc2565b6000610fb6611fd6565b905090565b61076283838360405180602001604052806000815250611782565b600080610fe2836120c8565b90506001600160a01b03811661045c5760405162461bcd60e51b81526004016106c1906143f6565b60008281526008602090815260408083208484526003018252918290208251808401909352805480845260019091015492909101829052905b9250929050565b60008281526008602090815260408083208484526003810183528184208251808401909352805483526001015492820183905280549092611096916001600160a01b0316908690611af3565b6110a15780516110a4565b60005b95945050505050565b60006001600160a01b0382166111175760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016106c1565b506001600160a01b031660009081526003602052604090205490565b6000828152600860209081526040808320805485855260038201909352908320600101549091611170916001600160a01b03909116908590611af3565b949350505050565b814211156111995760405163068568f360e21b815260040160405180910390fd5b6000838152600660205260408120546111b69086908690866120e3565b905060006111c4828461217e565b5090506111d3828483886121c0565b6111f05760405163ea8e4eb560e01b815260040160405180910390fd5b6111fa8686611ba6565b505050505050565b6000828152600860205260408120610c36906001018361220a565b600081815260086020526040902060609061045c90600101611ae6565b6060600180546105a390614202565b818161125481611b7e565b61125e3382611c8a565b61127b5760405163518d568f60e11b815260040160405180910390fd5b6000818152600860205260409020546001600160a01b038381169116146112b5576040516369e489f560e11b815260040160405180910390fd5b60008381526008602052604090206112cf90600101612216565b156112ed5760405163617e154d60e11b815260040160405180910390fd5b60008381526006602090815260408083208390556008909152812080546001600160a01b031916815590600182018181816113288282613c63565b50505050505061133783612220565b604051839033907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca590600090a350505050565b6113753383836122a3565b5050565b6060816001600160401b038111'... 27076 more characters,
  linkReferences: {
    'src/libraries/external/PositionNFTSVG.sol': { PositionNFTSVG: [Array] }
  },
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: `{"language":"Solidity","sources":{"lib/base64/base64.sol":{"content":"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0;\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides functions for encoding/decoding base64\\nlibrary Base64 {\\n    string internal constant TABLE_ENCODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\n    bytes  internal constant TABLE_DECODE = hex\\"0000000000000000000000000000000000000000000000000000000000000000\\"\\n                                            hex\\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\\"\\n                                            hex\\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\\"\\n                                            hex\\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\\";\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return '';\\n\\n        // load the table into memory\\n        string memory table = TABLE_ENCODE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n                // read 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // write 4 characters\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n            }\\n\\n            // padding with '='\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n\\n        return result;\\n    }\\n\\n    function decode(string memory _data) internal pure returns (bytes memory) {\\n        bytes memory data = bytes(_data);\\n\\n        if (data.length == 0) return new bytes(0);\\n        require(data.length % 4 == 0, \\"invalid base64 decoder input\\");\\n\\n        // load the table into memory\\n        bytes memory table = TABLE_DECODE;\\n\\n        // every 4 characters represent 3 bytes\\n        uint256 decodedLen = (data.length / 4) * 3;\\n\\n        // add some extra buffer at the end required for the writing\\n        bytes memory result = new bytes(decodedLen + 32);\\n\\n        assembly {\\n            // padding with '='\\n            let lastBytes := mload(add(data, mload(data)))\\n            if eq(and(lastBytes, 0xFF), 0x3d) {\\n                decodedLen := sub(decodedLen, 1)\\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\\n                    decodedLen := sub(decodedLen, 1)\\n                }\\n            }\\n\\n            // set the actual output length\\n            mstore(result, decodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 4 characters at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               // read 4 characters\\n               dataPtr := add(dataPtr, 4)\\n               let input := mload(dataPtr)\\n\\n               // write 3 bytes\\n               let output := add(\\n                   add(\\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\\n                   add(\\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\\n                    )\\n                )\\n                mstore(resultPtr, shl(232, output))\\n                resultPtr := add(resultPtr, 3)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n"},"lib/clones-with-immutable-args/src/Clone.sol":{"content":"// SPDX-License-Identifier: BSD\\npragma solidity ^0.8.4;\\n\\n/// @title Clone\\n/// @author zefram.eth\\n/// @notice Provides helper functions for reading immutable args from calldata\\ncontract Clone {\\n    /// @notice Reads an immutable arg with type address\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgAddress(uint256 argOffset)\\n        internal\\n        pure\\n        returns (address arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0x60, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint256\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint256(uint256 argOffset)\\n        internal\\n        pure\\n        returns (uint256 arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := calldataload(add(offset, argOffset))\\n        }\\n    }\\n\\n    /// @notice Reads a uint256 array stored in the immutable args.\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @param arrLen Number of elements in the array\\n    /// @return arr The array\\n    function _getArgUint256Array(uint256 argOffset, uint64 arrLen)\\n        internal\\n        pure\\n      returns (uint256[] memory arr)\\n    {\\n      uint256 offset = _getImmutableArgsOffset();\\n      uint256 el;\\n      arr = new uint256[](arrLen);\\n      for (uint64 i = 0; i < arrLen; i++) {\\n        assembly {\\n          // solhint-disable-next-line no-inline-assembly\\n          el := calldataload(add(add(offset, argOffset), mul(i, 32)))\\n        }\\n        arr[i] = el;\\n      }\\n      return arr;\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint64\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint64(uint256 argOffset)\\n        internal\\n        pure\\n        returns (uint64 arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0xc0, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint8\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint8(uint256 argOffset) internal pure returns (uint8 arg) {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0xf8, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @return offset The offset of the packed immutable args in calldata\\n    function _getImmutableArgsOffset() internal pure returns (uint256 offset) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            offset := sub(\\n                calldatasize(),\\n                add(shr(240, calldataload(sub(calldatasize(), 2))), 2)\\n            )\\n        }\\n    }\\n}\\n"},"lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol":{"content":"// SPDX-License-Identifier: BSD\\n\\npragma solidity ^0.8.4;\\n\\n/// @title ClonesWithImmutableArgs\\n/// @author wighawag, zefram.eth\\n/// @notice Enables creating clone contracts with immutable args\\nlibrary ClonesWithImmutableArgs {\\n    error CreateFail();\\n\\n    /// @notice Creates a clone proxy of the implementation contract, with immutable args\\n    /// @dev data cannot exceed 65535 bytes, since 2 bytes are used to store the data length\\n    /// @param implementation The implementation contract to clone\\n    /// @param data Encoded immutable args\\n    /// @return instance The address of the created clone\\n    function clone(address implementation, bytes memory data)\\n        internal\\n        returns (address payable instance)\\n    {\\n        // unrealistic for memory ptr or data length to exceed 256 bits\\n        unchecked {\\n            uint256 extraLength = data.length + 2; // +2 bytes for telling how much data there is appended to the call\\n            uint256 creationSize = 0x41 + extraLength;\\n            uint256 runSize = creationSize - 10;\\n            uint256 dataPtr;\\n            uint256 ptr;\\n            // solhint-disable-next-line no-inline-assembly\\n            assembly {\\n                ptr := mload(0x40)\\n\\n                // -------------------------------------------------------------------------------------------------------------\\n                // CREATION (10 bytes)\\n                // -------------------------------------------------------------------------------------------------------------\\n\\n `... 715533 more characters
  }
}
2024-01-08T15:31:20.408Z cannon:builder:contract lib ref PositionNFTSVG 0x701ea8F0825E7B160c8C39160783eB45f8110424
2024-01-08T15:31:20.453Z cannon:cli:rpc eth_chainId

2024-01-08T15:31:20.457Z cannon:cli:rpc eth_getCode

2024-01-08T15:31:20.459Z cannon:builder:contract performing arachnid create2
2024-01-08T15:31:20.469Z cannon:builder:contract create2 address is 0xD019A7ca8d4F9a9f914a629f979e86cd0A6C04C1
2024-01-08T15:31:20.473Z cannon:cli:rpc eth_chainId

2024-01-08T15:31:20.476Z cannon:cli:rpc eth_getCode

2024-01-08T15:31:20.998Z cannon:cli:rpc anvil_impersonateAccount

2024-01-08T15:31:21.001Z cannon:cli:rpc anvil_setBalance

2024-01-08T15:31:21.005Z cannon:cli:rpc eth_blockNumber

2024-01-08T15:31:21.006Z cannon:cli:rpc eth_chainId

2024-01-08T15:31:21.010Z cannon:cli:rpc eth_chainId

2024-01-08T15:31:21.022Z cannon:cli:rpc eth_estimateGas

2024-01-08T15:31:21.048Z cannon:cli:rpc eth_sendTransaction

2024-01-08T15:31:21.051Z cannon:cli:rpc 
    Transaction: 0xb20deb6158dd992e0175db59956f1e7ecad5dd18e2139355612c7e914fae75b3
    Gas used: 4167330

    Block Number: 114564395
    Block Hash: 0x279d58a8ec2ef50aabbda09704b014d69196cbb4efee539c6ea48bebdfacb328
    Block Time: "Mon, 8 Jan 2024 15:31:19 +0000"


2024-01-08T15:31:21.053Z cannon:cli:rpc eth_chainId

2024-01-08T15:31:21.056Z cannon:cli:rpc eth_getTransactionByHash

2024-01-08T15:31:21.073Z cannon:cli:rpc eth_chainId

2024-01-08T15:31:21.075Z cannon:cli:rpc eth_getTransactionReceipt

2024-01-08T15:31:21.077Z cannon:builder:contract arachnid create2 complete {
  to: '0x4e59b44847b379578588920cA78FbF26c0B4956C',
  from: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
  contractAddress: null,
  transactionIndex: 0,
  gasUsed: BigNumber { _hex: '0x3f96a2', _isBigNumber: true },
  logsBloom: '0x
  blockHash: '0x279d58a8ec2ef50aabbda09704b014d69196cbb4efee539c6ea48bebdfacb328',
  transactionHash: '0xb20deb6158dd992e0175db59956f1e7ecad5dd18e2139355612c7e914fae75b3',
  logs: [],
  blockNumber: 114564395,
  confirmations: 1,
  cumulativeGasUsed: BigNumber { _hex: '0x3f96a2', _isBigNumber: true },
  effectiveGasPrice: BigNumber { _hex: '0x124794', _isBigNumber: true },
  status: 1,
  type: 2,
  byzantium: true
}
2024-01-08T15:31:21.077Z cannon:builder:contract contract deployed to address 0xD019A7ca8d4F9a9f914a629f979e86cd0A6C04C1
  ‚úî Successfully deployed PositionManager using CREATE2
  Contract Address: 0xD019A7ca8d4F9a9f914a629f979e86cd0A6C04C1
  Transaction Hash: 0xb20deb6158dd992e0175db59956f1e7ecad5dd18e2139355612c7e914fae75b3
  Transaction Cost: 0.00000499234465476 ETH (4,167,330 gas)

2024-01-08T15:31:21.084Z cannon:builder:runtime resolve artifact PositionManager
2024-01-08T15:31:21.084Z cannon:builder:runtime need to find artifact externally
2024-01-08T15:31:30.843Z cannon:cli:foundry detected foundry info {
  compiler: { version: '0.8.18+commit.87f61d96' },
  language: 'Solidity',
  output: {
    abi: [
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object],
      [Object], [Object], [Object], [Object], [Object]
    ],
    devdoc: { kind: 'dev', methods: [Object], version: 1 },
    userdoc: { kind: 'user', methods: [Object], version: 1 }
  },
  settings: {
    remappings: [
      '@base64-sol/=lib/base64/',
      '@clones/=lib/clones-with-immutable-args/src/',
      '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
      '@prb-math/=lib/prb-math/',
      '@solmate/=lib/solmate/src/',
      '@std/=lib/forge-std/src/',
      'base64/=lib/base64/',
      'clones-with-immutable-args/=lib/clones-with-immutable-args/src/',
      'ds-test/=lib/forge-std/lib/ds-test/src/',
      'forge-std/=lib/forge-std/src/',
      'openzeppelin-contracts/=lib/openzeppelin-contracts/',
      'prb-math/=lib/prb-math/contracts/',
      'src/=src/'
    ],
    optimizer: { enabled: true, runs: 0 },
    metadata: { bytecodeHash: 'ipfs' },
    compilationTarget: { 'src/PositionManager.sol': 'PositionManager' },
    evmVersion: 'paris',
    libraries: {}
  },
  sources: {
    'lib/base64/base64.sol': {
      keccak256: '0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf',
      urls: [Array],
      license: 'MIT'
    },
    'lib/clones-with-immutable-args/src/Clone.sol': {
      keccak256: '0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545',
      urls: [Array],
      license: 'BSD'
    },
    'lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol': {
      keccak256: '0xcb7cbb68b8a90e6eff9c7a29f5b7d5964e0cedc0ad8133f5bcb3ec3a9aeb391c',
      urls: [Array],
      license: 'BSD'
    },
    'lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol': {
      keccak256: '0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol': {
      keccak256: '0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol': {
      keccak256: '0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol': {
      keccak256: '0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol': {
      keccak256: '0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol': {
      keccak256: '0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol': {
      keccak256: '0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol': {
      keccak256: '0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol': {
      keccak256: '0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol': {
      keccak256: '0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol': {
      keccak256: '0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Address.sol': {
      keccak256: '0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Context.sol': {
      keccak256: '0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Multicall.sol': {
      keccak256: '0x35e30a35e23f856cbcee3558b7efdd83f6017a8f1b419710645143d98e892463',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/Strings.sol': {
      keccak256: '0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol': {
      keccak256: '0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol': {
      keccak256: '0xbc8d1f66b26e211a1f6f40a17453e9d5020ec96749014379205cff100809884c',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol': {
      keccak256: '0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol': {
      keccak256: '0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/Math.sol': {
      keccak256: '0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol': {
      keccak256: '0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad',
      urls: [Array],
      license: 'MIT'
    },
    'lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol': {
      keccak256: '0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961',
      urls: [Array],
      license: 'MIT'
    },
    'lib/prb-math/contracts/PRBMath.sol': {
      keccak256: '0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathSD59x18.sol': {
      keccak256: '0x1886d687eace717c05b7dcc20e43a088df0e549df86b453c2222961b520308f0',
      urls: [Array],
      license: 'Unlicense'
    },
    'lib/prb-math/contracts/PRBMathUD60x18.sol': {
      keccak256: '0x2180489de7680a79844dd5ef145f800e4f68e515e0e89409242f0187dbbd657b',
      urls: [Array],
      license: 'Unlicense'
    },
    'src/ERC20Pool.sol': {
      keccak256: '0xe372d950d3ace12bae8ee8a495a6f44c6521778ff56e9b25f3ccdbf266aea0d6',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/ERC20PoolFactory.sol': {
      keccak256: '0xdd7c1e42906f6a7693bf72014b39f36c692e0f4a17e7593d7f887ec84b697c85',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/ERC721Pool.sol': {
      keccak256: '0xce94095e9d2022c001506ef1901515d9adf7f639b3b01c14b6bc2de5633ea0e2',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/ERC721PoolFactory.sol': {
      keccak256: '0xa44628e67dfe4b35e7d73fbe30db5a09551196e4a3061087bacaee14fac87237',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/PositionManager.sol': {
      keccak256: '0x84090eb2a28d53e333d0da6684ed23e581ecff025a9f5d9eab4933206079e14a',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/FlashloanablePool.sol': {
      keccak256: '0x1f3767f4d27c13ef2c53bcf49c1d5917c77b2d3fb7a28576f0c2a131a8377f6f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/PermitERC721.sol': {
      keccak256: '0x65a60c2446ff63fa91bc3931e463f1a2d731060d70a8be0b1718fb25068d8dd1',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/Pool.sol': {
      keccak256: '0x87159e77eeee256f1501035738bb015a1d4d360fab31ea077f4ddcaff4e54d22',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/base/PoolDeployer.sol': {
      keccak256: '0x81b87acb71ecdbb00a37f4b0b23d21554692bde445fbc19871353bcce128d53e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/interfaces/pool/IERC3156FlashBorrower.sol': {
      keccak256: '0xe54e0814b31b1e7fb61abc9ee8c3e745ba612a32d70ec12244dd7ac6807fa045',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IERC3156FlashLender.sol': {
      keccak256: '0xe154bfa56d6514d6073de08f3416fd37b371bd750e98cc3f3aa904f8775095be',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPool.sol': {
      keccak256: '0x59c1c25083d2b7a95591d3fee849467fc623f435f247af79e66a1512afd03df3',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/IPoolFactory.sol': {
      keccak256: '0x53d72e58a4b0d6a5e8aeb23a2f40262636c823170037179220ec29ca403dae76',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolBorrowerActions.sol': {
      keccak256: '0xa9f61107bdbb71454456cc3fb6240c56ca126ac581fb8a9d9db124e6bfc47e9f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolDerivedState.sol': {
      keccak256: '0xfac6921fe28621946b8eecd236c2e2369df35bf86adc672628c867f0b34c4f87',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolErrors.sol': {
      keccak256: '0xfdda6d107dea98c826af9b0e25e7b26f9feb3860fcdc2cb56ed22d6f5f25716c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolEvents.sol': {
      keccak256: '0xc53d475059296f4d2a1b12231f58b7c9318a1bf182fdaac1c192db0944d552f7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolImmutables.sol': {
      keccak256: '0x137b9138f918d4aafd6dbce58d0588758006d9204d2908cc1b523f4c2116249a',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolInternals.sol': {
      keccak256: '0xe789b987f4433fa9f967a61cc4c04f89199eaa01d0b17aafec9066d5c0e294b0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolKickerActions.sol': {
      keccak256: '0x73130ded433e7a245dc8478688a92c6a8123f115467c0739422333363dde6fb9',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLPActions.sol': {
      keccak256: '0x5e834fd4bd9d5ea1af953f8e908dbe9ae1e8828dd3c38ed3089855cbd8f0f121',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolLenderActions.sol': {
      keccak256: '0x0f790d528e87ff40ee038bd6d27e5ace44bca05ba33c1fee6be0069b2529a40e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolSettlerActions.sol': {
      keccak256: '0x114cc4adf1e47d8d3cf444e7dd36911f8dc8a2e8954b57789879a964ebdbe5c0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolState.sol': {
      keccak256: '0x8edea5e0b57a066c64cce4d3738ae40647b4d0ffce0b45ee5eb0c40e8d201c82',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/commons/IPoolTakerActions.sol': {
      keccak256: '0x94adede143f919e276ba2aeef6c8dddd06c506fc4b7da85008ecc08d08e351d7',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20Pool.sol': {
      keccak256: '0xac0fc147804f48919ee17416dd6659eb77aed7d5c1b192f2e9f86862363346d4',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolBorrowerActions.sol': {
      keccak256: '0xe7bcfa2227cdb6249ad214d83a82935f0eb048472c277a599ba67c31f3d191b2',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolEvents.sol': {
      keccak256: '0xeccea62ed02e93376371d0ad723f0f94d390363fc836720170f018a5e928046c',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolFactory.sol': {
      keccak256: '0x010cb58b359152dea4534951089b55dad96f8e9bf4b2815ff33b73a38e62d5ef',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolImmutables.sol': {
      keccak256: '0x54c17faa7d4eccf84d8923d9531725e266d27b8a5ef2cbc59475749ad44a5834',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20PoolLenderActions.sol': {
      keccak256: '0xdf8d1b579da0ae2d47c938f5e262658ceb7d807d2e245b9a6e4a3f6febe9a0cc',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc20/IERC20Taker.sol': {
      keccak256: '0x3ddd154139854a83d3f46adb95dea763569f55dbf702cfcdc0abcc588bf7bea0',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721Pool.sol': {
      keccak256: '0x2873a73b910d1a1a2d403dac08ecec0afd1b58142185e27565edfa695d278b95',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolBorrowerActions.sol': {
      keccak256: '0x3c80e33d8fe71470d391af54e9a70c124e9677b9f8848a8d8d77ee1f6182ce21',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolErrors.sol': {
      keccak256: '0x896b15da426f1baa78d9d09aebe78d236011650b714e45f90e5c4bb096b481af',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolEvents.sol': {
      keccak256: '0xf5c0aaae515ed6e22b49b0a0f5b9d45f6cf2fad6fae83201893ba7907fc7d3bf',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolFactory.sol': {
      keccak256: '0x2bfafdc6ab11b11d75caa61441964799d7b780d93e3a1938b989a135a5070471',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolImmutables.sol': {
      keccak256: '0x5f8d672bad5dfae9556334a0ea5107452b02075502a1fb9ac7bc521c071310db',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolLenderActions.sol': {
      keccak256: '0xcff44a133099f3a1cd574f18e46f6c0076de2384a16df281bab2b9d627b5a42b',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721PoolState.sol': {
      keccak256: '0x2742176dd54be93117cdba89ad45d3a68f0d0fbf0d8e6f3decd7df4b81815cf6',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/pool/erc721/IERC721Taker.sol': {
      keccak256: '0x7c27a3083aeeaa008978dcba9f7454b9959a59e36c2559e0b1a251494e536488',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/position/IPositionManager.sol': {
      keccak256: '0xfa4f0d63758c67a29b4a44e8d30c5767471ba7a2e55dd65e3c524306cc50388f',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/position/IPositionManagerDerivedState.sol': {
      keccak256: '0x3fff099a0accb7dccead8abe09996917d2bf5448a1f6e3940be240b7866eeb78',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/position/IPositionManagerErrors.sol': {
      keccak256: '0x37c355d22bb30147327d65486905284a0ee73e23f802332479a7998fc24eb337',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/position/IPositionManagerEvents.sol': {
      keccak256: '0x7c4d6b36d6e3837eb0efe3ea82ac68d44006128378263b463669789e1611376e',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/position/IPositionManagerOwnerActions.sol': {
      keccak256: '0xdc673f85f09aa5c1a6f2172a5403c6f84de8c361a270dd5a9e6fb52ddbca8db5',
      urls: [Array],
      license: 'MIT'
    },
    'src/interfaces/position/IPositionManagerState.sol': {
      keccak256: '0x495951d7ba3ba905d045770bcea8516b400bb112409f9870d1e0d1893d1b4c1d',
      urls: [Array],
      license: 'MIT'
    },
    'src/libraries/external/BorrowerActions.sol': {
      keccak256: '0xecf8ce41a4034aa174c72bab7e558d788c1cc052ee77b2151f4acee4691be839',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/KickerActions.sol': {
      keccak256: '0xa486e9c9091c1cc8966f13b2b6bb9f9b7eeaf26d539b990c3904befd7a2a25fe',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/LPActions.sol': {
      keccak256: '0x4def554bc6414a7a4a575b8fced4fd334b28c484f09e5f616a0c228cbf875c85',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/LenderActions.sol': {
      keccak256: '0x04b37827f21db736b668fb27393b6c8b968b4cb24abf338b0a658090a173e0dd',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/PoolCommons.sol': {
      keccak256: '0x1dd40766b71468dade905c41a90783dad18761fe998f1a85acd79e8a0bb32ed3',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/PositionNFTSVG.sol': {
      keccak256: '0xc99cd282f520c3bdc84f4da0309ad36ff0bab58a4057247c3eb7ab905df681c5',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/SettlerActions.sol': {
      keccak256: '0x05edfe3f72323b7212fbb5134f76211f397138c2ed30ddf0f3683772213c831d',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/external/TakerActions.sol': {
      keccak256: '0x642ee2cabe710495ccc32c269750578cbfe924af26dcc73b8ce6cdf06adce68e',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/PoolHelper.sol': {
      keccak256: '0x444eeef2417eaf2796033f725da22ff2a09fc7bda9b1afadb1e826f8b803ea29',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/RevertsHelper.sol': {
      keccak256: '0xcaff095290172f1b5726d4e887ab9be5f524d9321e94ca0095f99b666381a6f4',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/helpers/SafeTokenNamer.sol': {
      keccak256: '0xf4b4f40f09ed8c6f801c17ada5619a8ebaf98c81c1da28e4ce9504d2feb7c127',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    },
    'src/libraries/internal/Buckets.sol': {
      keccak256: '0x6d081740b18f8027489f1157a01ed9ce3c56813d9f4720b51af0e7710abd6990',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Deposits.sol': {
      keccak256: '0x462dd0885f450d5f3c65452b44d3700f0d2ab57b6b07738ea62de88154aef21f',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Loans.sol': {
      keccak256: '0x148166c4de5e09daffc10cf71d00faa6a3ab87b4d9af84cd8f457b62bdae0e11',
      urls: [Array],
      license: 'BUSL-1.1'
    },
    'src/libraries/internal/Maths.sol': {
      keccak256: '0xd29d3c5627b7ffde31efa43d01a0066c7a5c99b793cfc4dc271cdf5a498e57af',
      urls: [Array],
      license: 'GPL-3.0-or-later'
    }
  },
  version: 1
}
2024-01-08T15:31:30.846Z cannon:cli:foundry evm version paris
2024-01-08T15:31:30.874Z cannon:builder:runtime reported contract artifact PositionManager {
  contractName: 'PositionManager',
  sourceName: 'src/PositionManager.sol',
  abi: [
    {
      type: 'constructor',
      inputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'DOMAIN_SEPARATOR',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'PERMIT_TYPEHASH',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'approve',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'balanceOf',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'burn',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'getApproved',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getLP',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getPositionIndexes',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getPositionIndexesFiltered',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'getPositionInfo',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'isAjnaPool',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'isApprovedForAll',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'isIndexInPosition',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'isPositionBucketBankrupt',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'memorializePositions',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'mint',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'moveLiquidity',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'multicall',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'name',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'nonces',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'ownerOf',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'permit',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'poolKey',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'redeemPositions',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'safeTransferFrom',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'safeTransferFrom',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'setApprovalForAll',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'function',
      name: 'supportsInterface',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'symbol',
      inputs: [],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'tokenURI',
      inputs: [Array],
      outputs: [Array],
      stateMutability: 'view'
    },
    {
      type: 'function',
      name: 'transferFrom',
      inputs: [Array],
      outputs: [],
      stateMutability: 'nonpayable'
    },
    {
      type: 'event',
      name: 'Approval',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'ApprovalForAll',
      inputs: [Array],
      anonymous: false
    },
    { type: 'event', name: 'Burn', inputs: [Array], anonymous: false },
    {
      type: 'event',
      name: 'MemorializePosition',
      inputs: [Array],
      anonymous: false
    },
    { type: 'event', name: 'Mint', inputs: [Array], anonymous: false },
    {
      type: 'event',
      name: 'MoveLiquidity',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'RedeemPosition',
      inputs: [Array],
      anonymous: false
    },
    {
      type: 'event',
      name: 'Transfer',
      inputs: [Array],
      anonymous: false
    },
    { type: 'error', name: 'AllowanceTooLow', inputs: [] },
    { type: 'error', name: 'BucketBankrupt', inputs: [] },
    { type: 'error', name: 'BucketIndexOutOfBounds', inputs: [] },
    { type: 'error', name: 'DeployWithZeroAddress', inputs: [] },
    { type: 'error', name: 'LiquidityNotRemoved', inputs: [] },
    { type: 'error', name: 'NoAuth', inputs: [] },
    { type: 'error', name: 'NoToken', inputs: [] },
    { type: 'error', name: 'NonExistentToken', inputs: [] },
    { type: 'error', name: 'NotAjnaPool', inputs: [] },
    { type: 'error', name: 'NotAuthorized', inputs: [] },
    {
      type: 'error',
      name: 'PRBMathSD59x18__Exp2InputTooBig',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__FromIntUnderflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__LogInputTooSmall',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulInputTooSmall',
      inputs: []
    },
    {
      type: 'error',
      name: 'PRBMathSD59x18__MulOverflow',
      inputs: [Array]
    },
    {
      type: 'error',
      name: 'PRBMath__MulDivFixedPointOverflow',
      inputs: [Array]
    },
    { type: 'error', name: 'PermitExpired', inputs: [] },
    { type: 'error', name: 'RemovePositionFailed', inputs: [] },
    { type: 'error', name: 'WrongPool', inputs: [] }
  ],
  bytecode: '0x61014060405260016009553480156200001757600080fd5b5060405162004c3338038062004c338339810160408190526200003a91620001ca565b6040518060400160405280601581526020017f416a6e6120506f736974696f6e73204e46542d563100000000000000000000008152506040518060400160405280600b81526020016a414a4e412d56312d504f5360a81b815250604051806040016040528060018152602001603160f81b81525082828160009081620000c19190620002ae565b506001620000d08282620002ae565b5050835160208086019190912060c081815284518584012060e08190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8189015280820196909652606086019390935260808501919091523084820152815180850390910181529290910190528051910120905060805250506001600755506001600160a01b03821615806200017857506001600160a01b038116155b15620001975760405163104aee1f60e01b815260040160405180910390fd5b6001600160a01b039182166101005216610120526200037a565b6001600160a01b0381168114620001c757600080fd5b50565b60008060408385031215620001de57600080fd5b8251620001eb81620001b1565b6020840151909250620001fe81620001b1565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200023457607f821691505b6020821081036200025557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002a957600081815260208120601f850160051c81016020861015620002845750805b601f850160051c820191505b81811015620002a55782815560010162000290565b5050505b505050565b81516001600160401b03811115620002ca57620002ca62000209565b620002e281620002db84546200021f565b846200025b565b602080601f8311600181146200031a5760008415620003015750858301515b600019600386901b1c1916600185901b178555620002a5565b600085815260208120601f198616915b828110156200034b578886015182559484019460019091019084016200032a565b50858210156200036a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e0516101005161012051614869620003ca6000396000611ef601526000611e61015260006120550152600061203001526000611fda015260006120a601526148696000f3fe608060405234801561001057600080fd5b50600436106101755760003560e01c806301ffc9a71461017a57806305670774146101a257806306fdde03146101c2578063081812fc146101d7578063095ea7b314610202578063141a468c146102175780631a7d79dd146102385780631aef67701461024b578063228248321461025e57806323b872dd1461027157806330adf81f146102845780633644e5151461029957806342842e0e146102a15780636352211e146102b457806367e820ad146102c75780636827d465146102ef5780636901f7681461030257806370a082311461032b57806372512e261461033e578063745a41bc146103515780637d9202c314610364578063845197a11461037757806395d89b411461038a5780639dc29fac14610392578063a22cb465146103a5578063ac9650d8146103b8578063b4dc0aad146103d8578063b88d4fde146103eb578063c87b56dd146103fe578063e985e9c514610411578063ed513d3514610424575b600080fd5b61018d610188366004613cab565b610437565b60405190151581526020015b60405180910390f35b6101b56101b0366004613cc8565b610462565b6040516101999190613d1c565b6101ca610594565b6040516101999190613d7f565b6101ea6101e5366004613cc8565b610626565b6040516001600160a01b039091168152602001610199565b610215610210366004613da7565b61064d565b005b61022a610225366004613cc8565b610767565b604051908152602001610199565b610215610246366004613dd3565b6107a2565b61018d610259366004613da7565b610c2a565b61021561026c366004613e5b565b610c3d565b61021561027f366004613eb6565b610f7b565b61022a6000805160206147f483398151915281565b61022a610fac565b6102156102af366004613eb6565b610fbb565b6101ea6102c2366004613cc8565b610fd6565b6102da6102d5366004613ef7565b61100a565b60408051928352602083019190915201610199565b61022a6102fd366004613ef7565b61104a565b6101ea610310366004613cc8565b6000908152600860205260409020546001600160a01b031690565b61022a610339366004613f19565b6110ad565b61018d61034c366004613ef7565b611133565b61021561035f366004613ff9565b611178565b61018d610372366004613ef7565b611202565b6101b5610385366004613cc8565b61121d565b6101ca61123a565b6102156103a0366004613da7565b611249565b6102156103b336600461405b565b61136a565b6103cb6103c6366004614099565b611379565b60405161019991906140da565b6102156103e6366004613e5b565b61146d565b6102156103f936600461413c565b611782565b6101ca61040c366004613cc8565b6117ba565b61018d61041f36600461418f565b611996565b61022a610432366004613eb6565b6119c4565b60006001600160e01b03198216635604e22560e01b148061045c575061045c82611a96565b92915050565b600081815260086020526040812060609161047f60018301611ae6565b8051909150806001600160401b0381111561049c5761049c613f36565b6040519080825280602002602001820160405280156104c5578160200160208202803683370190505b5083549094506000906001600160a01b0316815b8381101561058757610536828683815181106104f7576104f76141bd565b6020026020010151886003016000898681518110610517576105176141bd565b6020026020010151815260200190815260200160002060010154611af3565b61057f5784818151811061054c5761054c6141bd565b6020026020010151878480610560906141e9565b955081518110610572576105726141bd565b6020026020010181815250505b6001016104d9565b5050845250919392505050565b6060600080546105a390614202565b80601f01602080910402602001604051908101604052809291908181526020018280546105cf90614202565b801561061c5780601f106105f15761010080835404028352916020019161061c565b820191906000526020600020905b8154815290600101906020018083116105ff57829003601f168201915b5050505050905090565b600061063182611b7e565b506000908152600460205260409020546001600160a01b031690565b600061065882610fd6565b9050806001600160a01b0316836001600160a01b0316036106ca5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806106e657506106e68133611996565b6107585760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016106c1565b6107628383611ba6565b505050565b600061077282611c14565b61078f57604051634a1850bf60e11b815260040160405180910390fd5b5060009081526006602052604090205490565b6107aa611c31565b84846107b581611b7e565b6107bf3382611c8a565b6107dc5760405163518d568f60e11b815260040160405180910390fd5b6000818152600860205260409020546001600160a01b03838116911614610816576040516369e489f560e11b815260040160405180910390fd5b60008681526008602090815260408083208884526003810183528184208251610140810184528581529384018590529183018490526060830184905260c0830184905260e0830184905261010083018490526101208301849052600182015460808401819052825460a08501529093919291036108a6576040516313ec9d2d60e01b815260040160405180910390fd5b896001600160a01b031663d14827916040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108e157600080fd5b505af11580156108f5573d6000803e3d6000fd5b5050604051632a0f78fb60e21b8152600481018b90526001600160a01b038d16925063a83de3ec915060240160a060405180830381865afa15801561093e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610962919061423c565b50606085015260408401819052602084019190915290825260808201511161099d57604051636e2b846160e11b815260040160405180910390fd5b6109c28160000151826020015183606001518460a001516109bd8d611ce8565b611d53565b60e0820181905260405163332c0e4360e01b815260048101919091526024810189905260448101889052606481018790526001600160a01b038b169063332c0e43906084016060604051808303816000875af1158015610a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4a919061427c565b5061012083015261010082015260018301610a65818a611d78565b610a82576040516313ec9d2d60e01b815260040160405180910390fd5b8161010001518260a0015114610aab576040516313ec9d2d60e01b815260040160405180910390fd5b6000898152600385016020526040812081815560010155610acc8189611d84565b5060008881526003850160205260409020600181015460c08401819052610af6908d908b90611af3565b15610b08576101208301518155610b27565b826101200151816000016000828254610b2191906142aa565b90915550505b6040516353a4f8d360e11b81526001600160a01b038d169063a749f1a690610b55908c9030906004016142bd565b6040805180830381865afa158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9591906142d4565b60c08501819052600183015550610bab8b610fd6565b610100840151610120850151604080518f8152602081018f90529081018d9052606081019290925260808201526001600160a01b0391909116907f058e57ed03c1990e8bce6b006244b2a30ce5537007aaa26523d5a621a38258c09060a00160405180910390a250505050505050610c236001600755565b5050505050565b6000610c368383611d90565b9392505050565b8383610c4881611b7e565b610c523382611c8a565b610c6f5760405163518d568f60e11b815260040160405180910390fd5b6000818152600860205260409020546001600160a01b03838116911614610ca9576040516369e489f560e11b815260040160405180910390fd5b60008581526008602052604081209060018201908890610cc889610fd6565b9050610cee60405180606001604052806000815260200160008152602001600081525090565b600088815b81811015610ec2578b8b82818110610d0d57610d0d6141bd565b905060200201359250610d298388611d8490919063ffffffff16565b506040516353a4f8d360e11b81526001600160a01b0387169063a749f1a690610d5890869089906004016142bd565b6040805180830381865afa158015610d74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9891906142d4565b6020860152845260405163483cd18760e01b81526001600160a01b0387169063483cd18790610dcf90869030908a906004016142f8565b602060405180830381865afa158015610dec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e109190614317565b6040850181905284511115610e385760405163175936bd60e31b815260040160405180910390fd5b60008381526003890160209081526040918290208251808401909352805483526001015490820181905215610e8057610e7687858360200151611af3565b15610e8057600081525b845181518290610e919083906142aa565b905250602080860151828201908152600086815260038c019092526040909120915182555160019182015501610cf3565b50846001600160a01b0316634efe8af785308e8e6040518563ffffffff1660e01b8152600401610ef59493929190614362565b600060405180830381600087803b158015610f0f57600080fd5b505af1158015610f23573d6000803e3d6000fd5b50505050836001600160a01b03167ff8f0adfd241239f9f7732e8d89fa383d35fc89770577f260b7df8fd81c0bcb518d8d8d604051610f649392919061438f565b60405180910390a250505050505050505050505050565b610f853382611c8a565b610fa15760405162461bcd60e51b81526004016106c1906143a9565b610762838383611fc2565b6000610fb6611fd6565b905090565b61'... 29016 more characters,
  deployedBytecode: '0x608060405234801561001057600080fd5b50600436106101755760003560e01c806301ffc9a71461017a57806305670774146101a257806306fdde03146101c2578063081812fc146101d7578063095ea7b314610202578063141a468c146102175780631a7d79dd146102385780631aef67701461024b578063228248321461025e57806323b872dd1461027157806330adf81f146102845780633644e5151461029957806342842e0e146102a15780636352211e146102b457806367e820ad146102c75780636827d465146102ef5780636901f7681461030257806370a082311461032b57806372512e261461033e578063745a41bc146103515780637d9202c314610364578063845197a11461037757806395d89b411461038a5780639dc29fac14610392578063a22cb465146103a5578063ac9650d8146103b8578063b4dc0aad146103d8578063b88d4fde146103eb578063c87b56dd146103fe578063e985e9c514610411578063ed513d3514610424575b600080fd5b61018d610188366004613cab565b610437565b60405190151581526020015b60405180910390f35b6101b56101b0366004613cc8565b610462565b6040516101999190613d1c565b6101ca610594565b6040516101999190613d7f565b6101ea6101e5366004613cc8565b610626565b6040516001600160a01b039091168152602001610199565b610215610210366004613da7565b61064d565b005b61022a610225366004613cc8565b610767565b604051908152602001610199565b610215610246366004613dd3565b6107a2565b61018d610259366004613da7565b610c2a565b61021561026c366004613e5b565b610c3d565b61021561027f366004613eb6565b610f7b565b61022a6000805160206147f483398151915281565b61022a610fac565b6102156102af366004613eb6565b610fbb565b6101ea6102c2366004613cc8565b610fd6565b6102da6102d5366004613ef7565b61100a565b60408051928352602083019190915201610199565b61022a6102fd366004613ef7565b61104a565b6101ea610310366004613cc8565b6000908152600860205260409020546001600160a01b031690565b61022a610339366004613f19565b6110ad565b61018d61034c366004613ef7565b611133565b61021561035f366004613ff9565b611178565b61018d610372366004613ef7565b611202565b6101b5610385366004613cc8565b61121d565b6101ca61123a565b6102156103a0366004613da7565b611249565b6102156103b336600461405b565b61136a565b6103cb6103c6366004614099565b611379565b60405161019991906140da565b6102156103e6366004613e5b565b61146d565b6102156103f936600461413c565b611782565b6101ca61040c366004613cc8565b6117ba565b61018d61041f36600461418f565b611996565b61022a610432366004613eb6565b6119c4565b60006001600160e01b03198216635604e22560e01b148061045c575061045c82611a96565b92915050565b600081815260086020526040812060609161047f60018301611ae6565b8051909150806001600160401b0381111561049c5761049c613f36565b6040519080825280602002602001820160405280156104c5578160200160208202803683370190505b5083549094506000906001600160a01b0316815b8381101561058757610536828683815181106104f7576104f76141bd565b6020026020010151886003016000898681518110610517576105176141bd565b6020026020010151815260200190815260200160002060010154611af3565b61057f5784818151811061054c5761054c6141bd565b6020026020010151878480610560906141e9565b955081518110610572576105726141bd565b6020026020010181815250505b6001016104d9565b5050845250919392505050565b6060600080546105a390614202565b80601f01602080910402602001604051908101604052809291908181526020018280546105cf90614202565b801561061c5780601f106105f15761010080835404028352916020019161061c565b820191906000526020600020905b8154815290600101906020018083116105ff57829003601f168201915b5050505050905090565b600061063182611b7e565b506000908152600460205260409020546001600160a01b031690565b600061065882610fd6565b9050806001600160a01b0316836001600160a01b0316036106ca5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806106e657506106e68133611996565b6107585760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016106c1565b6107628383611ba6565b505050565b600061077282611c14565b61078f57604051634a1850bf60e11b815260040160405180910390fd5b5060009081526006602052604090205490565b6107aa611c31565b84846107b581611b7e565b6107bf3382611c8a565b6107dc5760405163518d568f60e11b815260040160405180910390fd5b6000818152600860205260409020546001600160a01b03838116911614610816576040516369e489f560e11b815260040160405180910390fd5b60008681526008602090815260408083208884526003810183528184208251610140810184528581529384018590529183018490526060830184905260c0830184905260e0830184905261010083018490526101208301849052600182015460808401819052825460a08501529093919291036108a6576040516313ec9d2d60e01b815260040160405180910390fd5b896001600160a01b031663d14827916040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108e157600080fd5b505af11580156108f5573d6000803e3d6000fd5b5050604051632a0f78fb60e21b8152600481018b90526001600160a01b038d16925063a83de3ec915060240160a060405180830381865afa15801561093e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610962919061423c565b50606085015260408401819052602084019190915290825260808201511161099d57604051636e2b846160e11b815260040160405180910390fd5b6109c28160000151826020015183606001518460a001516109bd8d611ce8565b611d53565b60e0820181905260405163332c0e4360e01b815260048101919091526024810189905260448101889052606481018790526001600160a01b038b169063332c0e43906084016060604051808303816000875af1158015610a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4a919061427c565b5061012083015261010082015260018301610a65818a611d78565b610a82576040516313ec9d2d60e01b815260040160405180910390fd5b8161010001518260a0015114610aab576040516313ec9d2d60e01b815260040160405180910390fd5b6000898152600385016020526040812081815560010155610acc8189611d84565b5060008881526003850160205260409020600181015460c08401819052610af6908d908b90611af3565b15610b08576101208301518155610b27565b826101200151816000016000828254610b2191906142aa565b90915550505b6040516353a4f8d360e11b81526001600160a01b038d169063a749f1a690610b55908c9030906004016142bd565b6040805180830381865afa158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9591906142d4565b60c08501819052600183015550610bab8b610fd6565b610100840151610120850151604080518f8152602081018f90529081018d9052606081019290925260808201526001600160a01b0391909116907f058e57ed03c1990e8bce6b006244b2a30ce5537007aaa26523d5a621a38258c09060a00160405180910390a250505050505050610c236001600755565b5050505050565b6000610c368383611d90565b9392505050565b8383610c4881611b7e565b610c523382611c8a565b610c6f5760405163518d568f60e11b815260040160405180910390fd5b6000818152600860205260409020546001600160a01b03838116911614610ca9576040516369e489f560e11b815260040160405180910390fd5b60008581526008602052604081209060018201908890610cc889610fd6565b9050610cee60405180606001604052806000815260200160008152602001600081525090565b600088815b81811015610ec2578b8b82818110610d0d57610d0d6141bd565b905060200201359250610d298388611d8490919063ffffffff16565b506040516353a4f8d360e11b81526001600160a01b0387169063a749f1a690610d5890869089906004016142bd565b6040805180830381865afa158015610d74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9891906142d4565b6020860152845260405163483cd18760e01b81526001600160a01b0387169063483cd18790610dcf90869030908a906004016142f8565b602060405180830381865afa158015610dec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e109190614317565b6040850181905284511115610e385760405163175936bd60e31b815260040160405180910390fd5b60008381526003890160209081526040918290208251808401909352805483526001015490820181905215610e8057610e7687858360200151611af3565b15610e8057600081525b845181518290610e919083906142aa565b905250602080860151828201908152600086815260038c019092526040909120915182555160019182015501610cf3565b50846001600160a01b0316634efe8af785308e8e6040518563ffffffff1660e01b8152600401610ef59493929190614362565b600060405180830381600087803b158015610f0f57600080fd5b505af1158015610f23573d6000803e3d6000fd5b50505050836001600160a01b03167ff8f0adfd241239f9f7732e8d89fa383d35fc89770577f260b7df8fd81c0bcb518d8d8d604051610f649392919061438f565b60405180910390a250505050505050505050505050565b610f853382611c8a565b610fa15760405162461bcd60e51b81526004016106c1906143a9565b610762838383611fc2565b6000610fb6611fd6565b905090565b61076283838360405180602001604052806000815250611782565b600080610fe2836120c8565b90506001600160a01b03811661045c5760405162461bcd60e51b81526004016106c1906143f6565b60008281526008602090815260408083208484526003018252918290208251808401909352805480845260019091015492909101829052905b9250929050565b60008281526008602090815260408083208484526003810183528184208251808401909352805483526001015492820183905280549092611096916001600160a01b0316908690611af3565b6110a15780516110a4565b60005b95945050505050565b60006001600160a01b0382166111175760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016106c1565b506001600160a01b031660009081526003602052604090205490565b6000828152600860209081526040808320805485855260038201909352908320600101549091611170916001600160a01b03909116908590611af3565b949350505050565b814211156111995760405163068568f360e21b815260040160405180910390fd5b6000838152600660205260408120546111b69086908690866120e3565b905060006111c4828461217e565b5090506111d3828483886121c0565b6111f05760405163ea8e4eb560e01b815260040160405180910390fd5b6111fa8686611ba6565b505050505050565b6000828152600860205260408120610c36906001018361220a565b600081815260086020526040902060609061045c90600101611ae6565b6060600180546105a390614202565b818161125481611b7e565b61125e3382611c8a565b61127b5760405163518d568f60e11b815260040160405180910390fd5b6000818152600860205260409020546001600160a01b038381169116146112b5576040516369e489f560e11b815260040160405180910390fd5b60008381526008602052604090206112cf90600101612216565b156112ed5760405163617e154d60e11b815260040160405180910390fd5b60008381526006602090815260408083208390556008909152812080546001600160a01b031916815590600182018181816113288282613c63565b50505050505061133783612220565b604051839033907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca590600090a350505050565b6113753383836122a3565b5050565b6060816001600160401b038111'... 27076 more characters,
  linkReferences: {
    'src/libraries/external/PositionNFTSVG.sol': { PositionNFTSVG: [Array] }
  },
  source: {
    solcVersion: '0.8.18+commit.87f61d96',
    input: `{"language":"Solidity","sources":{"lib/base64/base64.sol":{"content":"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0;\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides functions for encoding/decoding base64\\nlibrary Base64 {\\n    string internal constant TABLE_ENCODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\n    bytes  internal constant TABLE_DECODE = hex\\"0000000000000000000000000000000000000000000000000000000000000000\\"\\n                                            hex\\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\\"\\n                                            hex\\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\\"\\n                                            hex\\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\\";\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return '';\\n\\n        // load the table into memory\\n        string memory table = TABLE_ENCODE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n                // read 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // write 4 characters\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n            }\\n\\n            // padding with '='\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n\\n        return result;\\n    }\\n\\n    function decode(string memory _data) internal pure returns (bytes memory) {\\n        bytes memory data = bytes(_data);\\n\\n        if (data.length == 0) return new bytes(0);\\n        require(data.length % 4 == 0, \\"invalid base64 decoder input\\");\\n\\n        // load the table into memory\\n        bytes memory table = TABLE_DECODE;\\n\\n        // every 4 characters represent 3 bytes\\n        uint256 decodedLen = (data.length / 4) * 3;\\n\\n        // add some extra buffer at the end required for the writing\\n        bytes memory result = new bytes(decodedLen + 32);\\n\\n        assembly {\\n            // padding with '='\\n            let lastBytes := mload(add(data, mload(data)))\\n            if eq(and(lastBytes, 0xFF), 0x3d) {\\n                decodedLen := sub(decodedLen, 1)\\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\\n                    decodedLen := sub(decodedLen, 1)\\n                }\\n            }\\n\\n            // set the actual output length\\n            mstore(result, decodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 4 characters at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               // read 4 characters\\n               dataPtr := add(dataPtr, 4)\\n               let input := mload(dataPtr)\\n\\n               // write 3 bytes\\n               let output := add(\\n                   add(\\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\\n                   add(\\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\\n                    )\\n                )\\n                mstore(resultPtr, shl(232, output))\\n                resultPtr := add(resultPtr, 3)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n"},"lib/clones-with-immutable-args/src/Clone.sol":{"content":"// SPDX-License-Identifier: BSD\\npragma solidity ^0.8.4;\\n\\n/// @title Clone\\n/// @author zefram.eth\\n/// @notice Provides helper functions for reading immutable args from calldata\\ncontract Clone {\\n    /// @notice Reads an immutable arg with type address\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgAddress(uint256 argOffset)\\n        internal\\n        pure\\n        returns (address arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0x60, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint256\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint256(uint256 argOffset)\\n        internal\\n        pure\\n        returns (uint256 arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := calldataload(add(offset, argOffset))\\n        }\\n    }\\n\\n    /// @notice Reads a uint256 array stored in the immutable args.\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @param arrLen Number of elements in the array\\n    /// @return arr The array\\n    function _getArgUint256Array(uint256 argOffset, uint64 arrLen)\\n        internal\\n        pure\\n      returns (uint256[] memory arr)\\n    {\\n      uint256 offset = _getImmutableArgsOffset();\\n      uint256 el;\\n      arr = new uint256[](arrLen);\\n      for (uint64 i = 0; i < arrLen; i++) {\\n        assembly {\\n          // solhint-disable-next-line no-inline-assembly\\n          el := calldataload(add(add(offset, argOffset), mul(i, 32)))\\n        }\\n        arr[i] = el;\\n      }\\n      return arr;\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint64\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint64(uint256 argOffset)\\n        internal\\n        pure\\n        returns (uint64 arg)\\n    {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0xc0, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @notice Reads an immutable arg with type uint8\\n    /// @param argOffset The offset of the arg in the packed data\\n    /// @return arg The arg value\\n    function _getArgUint8(uint256 argOffset) internal pure returns (uint8 arg) {\\n        uint256 offset = _getImmutableArgsOffset();\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            arg := shr(0xf8, calldataload(add(offset, argOffset)))\\n        }\\n    }\\n\\n    /// @return offset The offset of the packed immutable args in calldata\\n    function _getImmutableArgsOffset() internal pure returns (uint256 offset) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            offset := sub(\\n                calldatasize(),\\n                add(shr(240, calldataload(sub(calldatasize(), 2))), 2)\\n            )\\n        }\\n    }\\n}\\n"},"lib/clones-with-immutable-args/src/ClonesWithImmutableArgs.sol":{"content":"// SPDX-License-Identifier: BSD\\n\\npragma solidity ^0.8.4;\\n\\n/// @title ClonesWithImmutableArgs\\n/// @author wighawag, zefram.eth\\n/// @notice Enables creating clone contracts with immutable args\\nlibrary ClonesWithImmutableArgs {\\n    error CreateFail();\\n\\n    /// @notice Creates a clone proxy of the implementation contract, with immutable args\\n    /// @dev data cannot exceed 65535 bytes, since 2 bytes are used to store the data length\\n    /// @param implementation The implementation contract to clone\\n    /// @param data Encoded immutable args\\n    /// @return instance The address of the created clone\\n    function clone(address implementation, bytes memory data)\\n        internal\\n        returns (address payable instance)\\n    {\\n        // unrealistic for memory ptr or data length to exceed 256 bits\\n        unchecked {\\n            uint256 extraLength = data.length + 2; // +2 bytes for telling how much data there is appended to the call\\n            uint256 creationSize = 0x41 + extraLength;\\n            uint256 runSize = creationSize - 10;\\n            uint256 dataPtr;\\n            uint256 ptr;\\n            // solhint-disable-next-line no-inline-assembly\\n            assembly {\\n                ptr := mload(0x40)\\n\\n                // -------------------------------------------------------------------------------------------------------------\\n                // CREATION (10 bytes)\\n                // -------------------------------------------------------------------------------------------------------------\\n\\n `... 715533 more characters
  }
}
2024-01-08T15:31:30.879Z cannon:builder:contract lib ref PositionNFTSVG 0x701ea8F0825E7B160c8C39160783eB45f8110424
2024-01-08T15:31:30.879Z cannon:verbose:builder:definition creating hash of {"bytecode":"","args":["0x7689dF0522143E657DF4df373542637aA52A001F","0x254f05996d0A3134c05a97cabfBF4628B45bE6E7"],"salt":"AJNA","value":[]}
2024-01-08T15:31:31.934Z cannon:cli:loader cli ipfs put ipfs://QmTxD1jfmqgSCapnhsguo9a8LqSQLPwqykkmSVMm9z871h
2024-01-08T15:31:31.980Z cannon:builder:ipfs is-gateway http://localhost:5001
2024-01-08T15:31:32.000Z cannon:builder:ipfs is-gateway http://localhost:5001 true
2024-01-08T15:31:32.001Z cannon:builder:loader ipfs put
Error: unable to upload to ipfs: the IPFS url you have configured is either read-only (ie a gateway), or invalid. please double check your configuration.
